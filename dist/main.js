/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/cells.geojson":
/*!***************************!*\
  !*** ./src/cells.geojson ***!
  \***************************/
/***/ ((module) => {

eval("module.exports = {\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.9,37.69],[11.81,38.17],[12.12,38.42],[12.6,38.08],[12.57,37.58],[12.18,37.44],[11.9,37.69]]]},\"properties\":{\"id\":72,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[145,71,73,147]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.57,37.58],[12.6,38.08],[13.22,38.36],[14.29,37.24],[13.92,37.27],[12.8,37.44],[12.57,37.58]]]},\"properties\":{\"id\":73,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[147,72,223,149]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.07,37.16],[12.18,37.44],[12.57,37.58],[12.8,37.44],[12.63,36.88],[12.09,36.99],[12.07,37.16]]]},\"properties\":{\"id\":147,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[146,145,72,73,149,148]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.01,36.8],[12.09,36.99],[12.63,36.88],[12.66,36.8],[12.68,36.55],[12.12,36.66],[12.04,36.71],[12.01,36.8]]]},\"properties\":{\"id\":148,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[221,146,147,149,223,222,298]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.63,36.88],[12.8,37.44],[13.92,37.27],[12.66,36.8],[12.63,36.88]]]},\"properties\":{\"id\":149,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[148,147,73,223]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.4,36.01],[12.35,36.04],[12.12,36.66],[12.68,36.55],[12.77,36.41],[12.4,36.01]]]},\"properties\":{\"id\":222,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[300,299,298,148,223]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.3,36.13],[12.77,36.41],[12.68,36.55],[12.66,36.8],[13.92,37.27],[14.29,37.24],[14.32,37.22],[15.3,36.13]]]},\"properties\":{\"id\":223,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[300,222,148,149,73]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.35,36.04],[12.01,36.15],[11.87,36.52],[12.04,36.71],[12.12,36.66],[12.35,36.04]]]},\"properties\":{\"id\":298,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[222,299,296,221,148]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.4,36.01],[12.43,35.57],[11.87,35.76],[11.76,36.04],[12.01,36.15],[12.35,36.04],[12.4,36.01]]]},\"properties\":{\"id\":299,\"height\":-12,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[222,300,374,297,296,298]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.51,34.73],[17.63,32.94],[17.92,32.32],[17.44,32.46],[13.95,34.03],[13.19,34.45],[12.77,34.81],[12.43,35.57],[12.4,36.01],[12.77,36.41],[15.3,36.13],[15.41,36.04],[16.51,34.73]]]},\"properties\":{\"id\":300,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[815,668,594,522,374,299,222,223]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.77,34.81],[12.15,34.92],[12.04,35.01],[11.56,35.59],[11.87,35.76],[12.43,35.57],[12.77,34.81]]]},\"properties\":{\"id\":374,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[300,522,448,375,297,299]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.28,35.45],[11.28,35.45],[11.45,35.62],[11.56,35.59],[12.04,35.01],[11.45,35.23],[11.28,35.45]]]},\"properties\":{\"id\":375,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[446,371,373,297,374,448]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.03,35.23],[11.05,35.29],[11.28,35.45],[11.45,35.23],[11.33,34.92],[11.08,34.92],[11.03,35.23]]]},\"properties\":{\"id\":446,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[372,370,371,375,448,447]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.05,34.89],[11.08,34.92],[11.33,34.92],[11.56,34.78],[11.39,34.47],[11.05,34.5],[11.05,34.89]]]},\"properties\":{\"id\":447,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[518,372,446,448,522,520]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.15,34.92],[11.56,34.78],[11.33,34.92],[11.45,35.23],[12.04,35.01],[12.15,34.92]]]},\"properties\":{\"id\":448,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[374,522,447,446,375]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.03,34.47],[11.05,34.5],[11.39,34.47],[11.53,34.19],[11.48,34.08],[11.14,34.03],[11.03,34.47]]]},\"properties\":{\"id\":520,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[593,518,447,522,594,521]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.88,33.64],[10.88,33.78],[11.14,34.03],[11.48,34.08],[11.56,33.75],[11.5,33.64],[10.91,33.55],[10.91,33.55],[10.88,33.64]]]},\"properties\":{\"id\":521,\"height\":1024,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[664,592,593,520,594,668,666,665]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.77,34.81],[13.19,34.45],[11.53,34.19],[11.39,34.47],[11.56,34.78],[12.15,34.92],[12.77,34.81]]]},\"properties\":{\"id\":522,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[374,300,594,520,447,448]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.95,34.03],[11.56,33.75],[11.48,34.08],[11.53,34.19],[13.19,34.45],[13.95,34.03]]]},\"properties\":{\"id\":594,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[300,668,521,520,522]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.91,33.52],[10.91,33.55],[11.5,33.64],[11.7,33.27],[11.45,33.19],[10.91,33.52]]]},\"properties\":{\"id\":666,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[667,665,521,668,742]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.31,32.91],[10.88,33.19],[10.91,33.52],[11.45,33.19],[11.31,32.91]]]},\"properties\":{\"id\":667,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[742,741,665,666]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[17.44,32.46],[13.13,32.8],[11.7,33.27],[11.5,33.64],[11.56,33.75],[13.95,34.03],[17.44,32.46]]]},\"properties\":{\"id\":668,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[300,815,742,666,521,594]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.86,32.77],[10.88,33.19],[10.88,33.19],[11.31,32.91],[11.31,32.82],[11.03,32.57],[10.86,32.77]]]},\"properties\":{\"id\":741,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[740,738,665,667,742,813]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.31,32.91],[11.45,33.19],[11.7,33.27],[13.13,32.8],[11.84,32.63],[11.31,32.82],[11.31,32.91]]]},\"properties\":{\"id\":742,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[741,667,666,668,815,813]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.03,32.57],[11.31,32.82],[11.84,32.63],[11.48,32.38],[11.03,32.46],[11.03,32.57]]]},\"properties\":{\"id\":813,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[740,741,742,815,814]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.03,32.43],[11.03,32.46],[11.48,32.38],[11.48,32.1],[11.36,32.01],[11.11,32.07],[11,32.21],[11.03,32.43]]]},\"properties\":{\"id\":814,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[812,740,813,815,889,888,886]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.16,31.01],[11.48,32.1],[11.48,32.38],[11.84,32.63],[13.13,32.8],[17.44,32.46],[17.92,32.32],[18.73,31.48],[18.96,31.23],[15.16,31.01]]]},\"properties\":{\"id\":815,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1253,889,814,813,742,668,300]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.69,31.76],[10.35,31.76],[10.29,31.98],[10.49,32.21],[10.77,32.07],[10.69,31.76]]]},\"properties\":{\"id\":885,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[886,887,884,811,812]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.69,31.76],[10.77,32.07],[11,32.21],[11.11,32.07],[11,31.54],[10.97,31.54],[10.69,31.76]]]},\"properties\":{\"id\":886,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[887,885,812,814,888,962]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.29,31.68],[10.35,31.76],[10.69,31.76],[10.97,31.54],[10.83,31.28],[10.35,31.28],[10.29,31.68]]]},\"properties\":{\"id\":887,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[959,884,885,886,962,960]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11,31.54],[11.11,32.07],[11.36,32.01],[11.45,31.48],[11,31.54]]]},\"properties\":{\"id\":888,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[962,886,814,889]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.36,32.01],[11.48,32.1],[15.16,31.01],[12.8,30.75],[11.45,31.48],[11.36,32.01]]]},\"properties\":{\"id\":889,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[888,814,815,1253,962]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.35,31.28],[10.35,31.28],[10.83,31.28],[10.88,30.98],[10.41,31.01],[10.35,31.28]]]},\"properties\":{\"id\":960,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[961,959,887,962,1034]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.35,30.67],[10.13,30.81],[10.04,31.17],[10.35,31.28],[10.41,31.01],[10.35,30.67]]]},\"properties\":{\"id\":961,\"height\":-6,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1034,1033,1032,959,960]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.88,30.98],[10.83,31.28],[10.97,31.54],[11,31.54],[11.45,31.48],[12.8,30.75],[12.35,30.56],[12.15,30.56],[11,30.64],[10.88,30.98]]]},\"properties\":{\"id\":962,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1034,960,887,886,888,889,1253,1180,1106]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.35,30.67],[10.41,31.01],[10.88,30.98],[11,30.64],[10.94,30.61],[10.49,30.5],[10.41,30.56],[10.35,30.67]]]},\"properties\":{\"id\":1034,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1033,961,960,962,1106,1105,1103]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.46,30.39],[10.49,30.5],[10.94,30.61],[10.88,29.8],[10.55,30],[10.46,30.39]]]},\"properties\":{\"id\":1105,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1104,1103,1034,1106,1178]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.88,29.8],[10.94,30.61],[11,30.64],[12.15,30.56],[10.91,29.75],[10.88,29.8]]]},\"properties\":{\"id\":1106,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1178,1105,1034,962,1180]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.24,29.77],[10.55,30],[10.88,29.8],[10.91,29.75],[10.91,29.75],[10.49,29.47],[10.24,29.77]]]},\"properties\":{\"id\":1178,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1176,1104,1105,1106,1180,1179]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.49,29.47],[10.91,29.75],[11.14,29.38],[10.74,29.13],[10.66,29.16],[10.46,29.47],[10.49,29.47]]]},\"properties\":{\"id\":1179,\"height\":16,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1176,1178,1180,1251,1250,1177]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.91,29.75],[10.91,29.75],[12.15,30.56],[12.35,30.56],[11.39,29.3],[11.31,29.3],[11.14,29.38],[10.91,29.75]]]},\"properties\":{\"id\":1180,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1179,1178,1106,962,1253,1252,1251]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.74,29.13],[11.14,29.38],[11.31,29.3],[11.08,28.82],[10.86,28.82],[10.74,29.13]]]},\"properties\":{\"id\":1251,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1250,1179,1180,1252,1324]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.08,28.82],[11.31,29.3],[11.39,29.3],[11.64,29.05],[11.36,28.46],[11.31,28.49],[11.08,28.82]]]},\"properties\":{\"id\":1252,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1324,1251,1180,1253,1326,1325]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.39,29.3],[12.35,30.56],[12.8,30.75],[15.16,31.01],[18.96,31.23],[19.55,30.75],[15.44,29.05],[13.22,28.85],[12.49,28.85],[11.64,29.05],[11.39,29.3]]]},\"properties\":{\"id\":1253,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1252,1180,962,889,815,1625,1399,1327,1326]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.36,28.46],[11.64,29.05],[12.49,28.85],[11.39,28.4],[11.36,28.46]]]},\"properties\":{\"id\":1326,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1325,1252,1253,1327]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.39,28.4],[12.49,28.85],[13.22,28.85],[11.56,28.15],[11.45,28.15],[11.39,28.4]]]},\"properties\":{\"id\":1327,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1325,1326,1253,1399,1400]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.56,28.15],[13.22,28.85],[15.44,29.05],[14.15,28.24],[12.6,27.48],[11.56,28.15]]]},\"properties\":{\"id\":1399,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1400,1327,1253,1625,1624]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.42,28.12],[11.45,28.15],[11.56,28.15],[12.6,27.48],[12.43,27.37],[11.9,27.45],[11.39,27.76],[11.42,28.12]]]},\"properties\":{\"id\":1400,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1398,1325,1327,1399,1624,1474,1473]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11,26.92],[11.11,27.03],[11.48,26.89],[11.53,26.67],[11.36,26.56],[11.22,26.58],[11,26.92]]]},\"properties\":{\"id\":1547,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1548,1472,1475,1549,1622,1621]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.97,26.92],[11,26.92],[11.22,26.58],[10.94,26.39],[10.8,26.64],[10.97,26.92]]]},\"properties\":{\"id\":1548,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1545,1472,1547,1621,1620]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.53,26.98],[12.4,27.34],[12.35,27.14],[11.76,26.61],[11.53,26.67],[11.48,26.89],[11.53,26.98]]]},\"properties\":{\"id\":1549,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1475,1474,1624,1550,1622,1547]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.76,26.61],[12.35,27.14],[12.38,26.53],[12.07,26.25],[11.81,26.39],[11.76,26.61]]]},\"properties\":{\"id\":1550,\"height\":-200,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1622,1549,1624,1623,1699]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.41,26.22],[10.55,26.61],[10.8,26.64],[10.94,26.39],[10.91,26.14],[10.8,26.11],[10.49,26.14],[10.41,26.22]]]},\"properties\":{\"id\":1620,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1694,1546,1545,1548,1621,1696,1695]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.91,26.14],[10.94,26.39],[11.22,26.58],[11.36,26.56],[11.39,26.16],[11.25,26.08],[11.08,26.05],[10.91,26.14]]]},\"properties\":{\"id\":1621,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1696,1620,1548,1547,1622,1698,1697]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.4,27.34],[12.43,27.37],[12.6,27.48],[14.15,28.24],[12.85,26.36],[12.57,26.33],[12.38,26.53],[12.35,27.14],[12.4,27.34]]]},\"properties\":{\"id\":1624,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1549,1474,1400,1399,1625,1702,1623,1550]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.44,29.05],[19.55,30.75],[19.63,30.7],[19.86,29.91],[20.11,28.82],[20.11,28.74],[14.29,25.86],[13.25,25.72],[13.08,25.86],[12.85,26.36],[14.15,28.24],[15.44,29.05]]]},\"properties\":{\"id\":1625,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1399,1253,1857,1779,1703,1702,1624]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.49,25.94],[12.57,26.33],[12.85,26.36],[13.08,25.86],[12.54,25.91],[12.49,25.94]]]},\"properties\":{\"id\":1702,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1701,1623,1624,1625,1703]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.46,25.52],[12.54,25.91],[13.08,25.86],[13.25,25.72],[12.94,25.38],[12.63,25.41],[12.46,25.52]]]},\"properties\":{\"id\":1703,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1776,1701,1702,1625,1779,1777]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.46,25.07],[12.63,25.41],[12.94,25.38],[12.94,25.3],[12.68,24.91],[12.54,24.96],[12.46,25.07]]]},\"properties\":{\"id\":1777,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1852,1776,1703,1779,1778,1853]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.68,24.91],[12.94,25.3],[13.16,24.99],[13.05,24.79],[12.8,24.74],[12.68,24.91]]]},\"properties\":{\"id\":1778,\"height\":4,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1853,1777,1779,1855,1854]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.94,25.38],[13.25,25.72],[14.29,25.86],[13.61,24.96],[13.16,24.99],[12.94,25.3],[12.94,25.38]]]},\"properties\":{\"id\":1779,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1777,1703,1625,1857,1855,1778]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.05,24.79],[13.16,24.99],[13.61,24.96],[13.58,24.77],[13.19,24.6],[13.05,24.79]]]},\"properties\":{\"id\":1855,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1854,1778,1779,1857,1856]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.11,24.26],[13.19,24.6],[13.58,24.77],[13.67,24.49],[13.11,24.26]]]},\"properties\":{\"id\":1856,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1933,1854,1855,1857]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.61,24.96],[14.29,25.86],[20.11,28.74],[20.39,27.73],[20.59,26.64],[20.7,25.61],[20.56,25.52],[17.8,24.49],[13.73,24.46],[13.67,24.49],[13.58,24.77],[13.61,24.96]]]},\"properties\":{\"id\":1857,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1855,1779,1625,2504,2334,1934,1933,1856]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.11,24.26],[13.67,24.49],[13.73,24.46],[13.67,24.18],[13.58,24.07],[13.13,23.98],[13.08,24.23],[13.11,24.26]]]},\"properties\":{\"id\":1933,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1854,1856,1857,1934,2015,2013,1932]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.41,23.42],[13.67,24.18],[13.73,24.46],[17.8,24.49],[15.41,23.42]]]},\"properties\":{\"id\":1934,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2334,2015,1933,1857]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.11,23.9],[13.13,23.98],[13.58,24.07],[13.78,23.7],[13.3,23.62],[13.11,23.87],[13.11,23.9]]]},\"properties\":{\"id\":2013,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2010,1932,1933,2015,2014,2011]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.3,23.62],[13.78,23.7],[14.26,23.48],[13.47,23.34],[13.33,23.42],[13.3,23.62]]]},\"properties\":{\"id\":2014,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2011,2013,2015,2100,2099]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.58,24.07],[13.67,24.18],[15.41,23.42],[15.27,23.34],[14.82,23.37],[14.26,23.48],[13.78,23.7],[13.58,24.07]]]},\"properties\":{\"id\":2015,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2013,1933,1934,2334,2101,2100,2014]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.47,23.34],[14.26,23.48],[14.82,23.37],[13.56,23],[13.47,23.34]]]},\"properties\":{\"id\":2100,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2099,2014,2015,2101]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.56,23],[14.82,23.37],[15.27,23.34],[14.96,23],[13.61,22.61],[13.42,22.78],[13.56,23]]]},\"properties\":{\"id\":2101,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2099,2100,2015,2334,2181,2180]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.8,22.89],[-8.04,21.88],[-8.63,21.86],[-8.8,21.91],[-8.83,21.94],[-8.89,22.02],[-9.03,22.78],[-8.8,22.89]]]},\"properties\":{\"id\":2136,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2050,2137,2368,2292,2216,2215,2135]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.68,22.19],[-7.68,21.94],[-7.96,21.86],[-8.04,21.88],[-8.8,22.89],[-8.72,23],[-8.61,23.03],[-7.68,22.19],[-7.68,22.19]]]},\"properties\":{\"id\":2137,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2055,2138,2370,2368,2136,2050,1970,2052]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.61,22.92],[-7,21.66],[-7.14,21.72],[-7.43,21.8],[-7.68,21.94],[-7.68,22.19],[-6.83,23.03],[-6.61,22.92]]]},\"properties\":{\"id\":2138,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2056,2139,2452,2371,2370,2137,2055]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.24,22.81],[-6.64,21.58],[-6.92,21.63],[-7,21.66],[-6.61,22.92],[-6.41,22.95],[-6.24,22.81]]]},\"properties\":{\"id\":2139,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2057,2140,2453,2452,2138,2056]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.1,21.72],[-6.22,21.58],[-6.47,21.52],[-6.64,21.58],[-6.24,22.81],[-6.1,22.81],[-5.91,22.36],[-6.1,21.72]]]},\"properties\":{\"id\":2140,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2142,2217,2456,2453,2139,2057,2141]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.61,22.61],[14.96,23],[14.43,22.08],[14.01,22.11],[13.61,22.39],[13.61,22.61]]]},\"properties\":{\"id\":2181,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2180,2101,2334,2333,2257]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.89,22.02],[-8.83,21.94],[-9.65,21.94],[-9.51,22.36],[-8.89,22.02]]]},\"properties\":{\"id\":2215,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2135,2136,2216,2213]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.8,21.91],[-9.17,21.6],[-9.73,21.6],[-9.67,21.88],[-9.65,21.94],[-8.83,21.94],[-8.8,21.91]]]},\"properties\":{\"id\":2216,\"height\":-9,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2136,2292,2291,2214,2213,2215]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.26,22.36],[-5.18,22.3],[-5.34,21.8],[-5.82,21.44],[-6.22,21.58],[-6.1,21.72],[-5.26,22.36]]]},\"properties\":{\"id\":2217,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2142,2144,2218,2219,2456,2140]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.91,21.97],[13.05,22.33],[13.36,22.19],[13.42,22],[13.13,21.8],[12.91,21.97]]]},\"properties\":{\"id\":2254,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2255,2253,2180,2257,2256]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.68,21.91],[12.91,21.97],[13.13,21.8],[13.13,21.66],[12.88,21.49],[12.57,21.72],[12.68,21.91]]]},\"properties\":{\"id\":2255,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2252,2253,2254,2256,2328,2327]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.13,21.8],[13.42,22],[13.58,21.86],[13.58,21.69],[13.33,21.52],[13.13,21.66],[13.13,21.8]]]},\"properties\":{\"id\":2256,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2255,2254,2257,2333,2329,2328]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.36,22.19],[13.61,22.39],[14.01,22.11],[13.58,21.86],[13.42,22],[13.36,22.19]]]},\"properties\":{\"id\":2257,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2254,2180,2181,2333,2256]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.73,21.6],[-4.73,21.38],[-4.75,21.35],[-5.34,21.13],[-5.65,21.27],[-5.79,21.41],[-4.73,21.6]]]},\"properties\":{\"id\":2293,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2219,2295,2375,2294,2374,2456]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.12,20.9],[-5.34,21.13],[-4.75,21.35],[-4.87,21.02],[-5.12,20.9]]]},\"properties\":{\"id\":2294,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2373,2374,2293,2375]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.35,21.63],[12.57,21.72],[12.88,21.49],[12.91,21.35],[12.8,21.24],[12.46,21.32],[12.32,21.55],[12.32,21.55],[12.35,21.63]]]},\"properties\":{\"id\":2327,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2326,2252,2255,2328,2410,2409,2408,2325]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.88,21.49],[13.13,21.66],[13.33,21.52],[13.33,21.49],[13.08,21.27],[12.91,21.35],[12.88,21.49]]]},\"properties\":{\"id\":2328,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2327,2255,2256,2329,2332,2410]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.33,21.52],[13.58,21.69],[13.75,21.55],[13.58,21.21],[13.42,21.32],[13.33,21.49],[13.33,21.52]]]},\"properties\":{\"id\":2329,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2328,2256,2333,2330,2331,2332]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.58,21.21],[13.75,21.55],[14.09,21.55],[13.78,21.02],[13.64,21.02],[13.58,21.21]]]},\"properties\":{\"id\":2330,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2331,2329,2333,2412,2496]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.13,21.13],[13.42,21.32],[13.58,21.21],[13.64,21.02],[13.53,20.9],[13.44,20.88],[13.16,21.07],[13.13,21.13]]]},\"properties\":{\"id\":2331,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2410,2332,2329,2330,2496,2495,2411]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.08,21.27],[13.33,21.49],[13.42,21.32],[13.13,21.13],[13.08,21.27]]]},\"properties\":{\"id\":2332,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2410,2328,2329,2331]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.58,21.86],[14.01,22.11],[14.43,22.08],[14.43,21.66],[14.09,21.55],[13.75,21.55],[13.58,21.69],[13.58,21.86]]]},\"properties\":{\"id\":2333,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2256,2257,2181,2334,2412,2330,2329]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.41,23.42],[17.8,24.49],[20.56,25.52],[19.32,24.43],[15.1,21.3],[14.51,21.49],[14.43,21.66],[14.43,22.08],[14.96,23],[15.27,23.34],[15.41,23.42]]]},\"properties\":{\"id\":2334,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2015,1934,1857,2504,2415,2414,2412,2333,2181,2101]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.7,20.88],[-4.75,20.65],[-5.09,20.79],[-5.12,20.9],[-4.87,21.02],[-4.7,20.88]]]},\"properties\":{\"id\":2373,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2375,2376,2458,2374,2294]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.65,21.27],[-5.34,21.13],[-5.12,20.9],[-5.09,20.79],[-5.18,20.65],[-5.57,20.79],[-5.65,21.27]]]},\"properties\":{\"id\":2374,\"height\":-33,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2456,2293,2294,2373,2458,2457]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.8,21.24],[12.91,21.35],[13.08,21.27],[13.13,21.13],[13.16,21.07],[12.77,20.82],[12.8,21.24]]]},\"properties\":{\"id\":2410,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2409,2327,2328,2332,2331,2411]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.77,20.82],[13.16,21.07],[13.44,20.88],[13.3,20.68],[12.94,20.62],[12.71,20.74],[12.77,20.82]]]},\"properties\":{\"id\":2411,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2409,2410,2331,2495,2494,2493]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.09,21.55],[14.43,21.66],[14.51,21.49],[14.48,21.35],[14.01,20.93],[13.78,21.02],[14.09,21.55]]]},\"properties\":{\"id\":2412,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2330,2333,2334,2414,2413,2496]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.01,20.93],[14.48,21.35],[14.51,20.76],[14.43,20.71],[14.06,20.82],[14.01,20.93]]]},\"properties\":{\"id\":2413,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2496,2412,2414,2498,2497]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.48,21.35],[14.51,21.49],[15.1,21.3],[15.13,21.07],[15.05,20.96],[14.63,20.71],[14.51,20.76],[14.48,21.35]]]},\"properties\":{\"id\":2414,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2413,2412,2334,2415,2501,2500,2498]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.1,21.3],[19.32,24.43],[15.83,20.85],[15.38,20.88],[15.13,21.07],[15.1,21.3]]]},\"properties\":{\"id\":2415,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2414,2334,2504,2502,2501]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.59,20.6],[-7.51,20.62],[-7.31,20.4],[-7.65,20.21],[-7.85,20.37],[-7.59,20.6]]]},\"properties\":{\"id\":2451,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2372,2371,2452,2542,2541]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.24,20.79],[-5.68,20.26],[-5.71,20.26],[-6.24,20.12],[-6.38,20.18],[-6.24,20.79]]]},\"properties\":{\"id\":2455,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2454,2456,2547,2546,2545]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.79,21.41],[-5.65,21.27],[-5.57,20.79],[-5.55,20.23],[-5.68,20.26],[-6.24,20.79],[-6.47,21.46],[-6.47,21.52],[-6.22,21.58],[-5.82,21.44],[-5.79,21.41]]]},\"properties\":{\"id\":2456,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2219,2293,2374,2457,2547,2455,2454,2453,2140,2217]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.57,20.79],[-5.18,20.65],[-5.23,20.26],[-5.43,20.21],[-5.55,20.23],[-5.57,20.79]]]},\"properties\":{\"id\":2457,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2456,2374,2458,2548,2547]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.63,20.71],[15.05,20.96],[15.02,20.43],[14.77,20.48],[14.63,20.71]]]},\"properties\":{\"id\":2500,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2498,2414,2501,2499]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.02,20.43],[15.05,20.96],[15.13,21.07],[15.38,20.88],[15.33,20.37],[15.27,20.32],[15.08,20.37],[15.02,20.43]]]},\"properties\":{\"id\":2501,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2499,2500,2414,2415,2502,2503,2586]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.38,20.88],[15.83,20.85],[15.78,20.48],[15.33,20.37],[15.38,20.88]]]},\"properties\":{\"id\":2502,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2501,2415,2504,2503]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.27,20.32],[15.33,20.37],[15.78,20.48],[15.97,20.23],[15.83,20.07],[15.5,19.98],[15.33,20.09],[15.27,20.32]]]},\"properties\":{\"id\":2503,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2586,2501,2502,2504,2589,2588,2587]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[20.56,25.52],[20.7,25.61],[20.7,25.58],[21.12,24.51],[21.46,23.42],[20.7,21.13],[17.97,20.07],[15.97,20.23],[15.78,20.48],[15.83,20.85],[19.32,24.43],[20.56,25.52]]]},\"properties\":{\"id\":2504,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2334,1857,2923,2840,2589,2503,2502,2415]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.5,19.98],[15.83,20.07],[15.89,19.81],[15.75,19.62],[15.52,19.7],[15.5,19.98]]]},\"properties\":{\"id\":2588,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2587,2503,2589,2670,2668]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.83,20.07],[15.97,20.23],[17.97,20.07],[16.9,19.42],[16.85,19.39],[15.89,19.81],[15.83,20.07]]]},\"properties\":{\"id\":2589,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2588,2503,2504,2840,2838,2670]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.75,19.62],[15.89,19.81],[16.85,19.39],[16.82,19.39],[16.73,19.37],[15.81,19.53],[15.75,19.62]]]},\"properties\":{\"id\":2670,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2668,2588,2589,2838,2753,2671]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.67,19.23],[15.67,19.23],[15.81,19.53],[16.73,19.37],[16.17,19.14],[15.67,19.23]]]},\"properties\":{\"id\":2671,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2752,2751,2668,2670,2753]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.85,19.39],[16.9,19.42],[16.62,18.44],[16.23,18.33],[16.17,18.67],[16.82,19.39],[16.85,19.39]]]},\"properties\":{\"id\":2838,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2670,2589,2840,2839,2835,2753]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.23,18.33],[16.62,18.44],[16.76,18.22],[16.65,18.02],[16.2,17.88],[16.14,17.97],[16.14,18.25],[16.23,18.33]]]},\"properties\":{\"id\":2839,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2835,2838,2840,2922,2921,2920,2836]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[17.97,20.07],[20.7,21.13],[20.53,18.72],[20.36,18.13],[18.76,18.05],[16.76,18.22],[16.62,18.44],[16.9,19.42],[17.97,20.07]]]},\"properties\":{\"id\":2840,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2589,2504,2923,3095,3008,2922,2839,2838]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.76,18.22],[18.76,18.05],[16.88,17.72],[16.65,18.02],[16.76,18.22]]]},\"properties\":{\"id\":2922,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2839,2840,3008,2921]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[20.7,21.13],[21.46,23.42],[21.49,23.42],[23.03,22.33],[24.24,21.27],[24.5,20.93],[24.36,17.55],[24.36,17.55],[24.16,17.49],[22.84,17.69],[20.53,18.72],[20.7,21.13]]]},\"properties\":{\"id\":2923,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2840,2504,2924,3010,3012,3009,3095]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.36,17.55],[24.5,20.93],[25.26,20.18],[25.93,19.09],[26.1,18.25],[25.28,17.55],[24.36,17.55]]]},\"properties\":{\"id\":2924,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3010,2923,3100]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.88,17.72],[18.76,18.05],[20.36,18.13],[20.22,17.16],[18.96,16.99],[17.21,17.07],[17.02,17.16],[16.73,17.55],[16.88,17.72]]]},\"properties\":{\"id\":3008,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2921,2922,2840,3095,3183,3094,3007,3006]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[22.84,17.69],[24.16,17.49],[24.13,17.1],[23.68,16.85],[22.84,17.69]]]},\"properties\":{\"id\":3009,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3095,2923,3012,3096]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.36,17.55],[24.36,17.55],[25.28,17.55],[25.23,17.3],[24.58,16.93],[24.36,17.55]]]},\"properties\":{\"id\":3010,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3012,2923,2924,3100,3011]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.58,16.93],[25.23,17.3],[25.23,16.93],[24.95,16.76],[24.55,16.74],[24.53,16.74],[24.58,16.93]]]},\"properties\":{\"id\":3011,\"height\":49,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3012,3010,3100,3099,3098,3187]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.16,17.49],[24.36,17.55],[24.58,16.93],[24.53,16.74],[24.38,16.68],[24.27,16.76],[24.13,17.1],[24.16,17.49]]]},\"properties\":{\"id\":3012,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3009,2923,3010,3011,3187,3097,3096]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.9,16.32],[16.85,16.82],[17.21,17.07],[18.96,16.99],[16.9,16.32]]]},\"properties\":{\"id\":3094,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3183,3093,3007,3008]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[20.36,18.13],[20.53,18.72],[22.84,17.69],[23.68,16.85],[23.74,16.74],[23.74,16.46],[20.31,16.29],[20.31,16.32],[20.22,17.16],[20.36,18.13]]]},\"properties\":{\"id\":3095,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3008,2840,2923,3009,3096,3097,3184,3277,3183]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[23.74,16.74],[23.68,16.85],[24.13,17.1],[24.27,16.76],[23.74,16.74]]]},\"properties\":{\"id\":3096,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3097,3095,3009,3012]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[23.74,16.74],[24.27,16.76],[24.38,16.68],[24.3,16.4],[23.77,16.37],[23.74,16.46],[23.74,16.74]]]},\"properties\":{\"id\":3097,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3095,3096,3012,3187,3185,3184]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.95,16.34],[24.95,16.76],[25.23,16.93],[25.34,16.68],[25.06,16.32],[24.95,16.34]]]},\"properties\":{\"id\":3099,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3188,3098,3011,3100,3190]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.9,16.32],[18.96,16.99],[20.22,17.16],[20.31,16.32],[17.1,15.73],[16.9,15.92],[16.88,16.29],[16.9,16.32]]]},\"properties\":{\"id\":3183,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3093,3094,3008,3095,3277,3275,3182]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[20.31,16.29],[23.74,16.46],[23.77,16.37],[23.74,16.04],[22.84,15.76],[20.36,15.9],[20.31,16.29]]]},\"properties\":{\"id\":3184,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3277,3095,3097,3185,3278,3365]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[23.77,16.37],[24.3,16.4],[24.38,16.12],[24.36,16.12],[23.77,16.01],[23.74,16.04],[23.77,16.37]]]},\"properties\":{\"id\":3185,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3184,3097,3187,3189,3186,3278]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[23.77,16.01],[24.36,16.12],[24.38,15.78],[23.91,15.7],[23.77,16.01]]]},\"properties\":{\"id\":3186,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3278,3185,3189,3279]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.06,16.32],[25.34,16.68],[25.73,16.54],[25.68,16.4],[25.26,16.04],[25.2,16.06],[25.06,16.32]]]},\"properties\":{\"id\":3190,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3188,3099,3100,3192,3191,3281]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.42,15.84],[25.26,16.04],[25.68,16.4],[25.73,16.04],[25.51,15.84],[25.42,15.84]]]},\"properties\":{\"id\":3191,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3283,3281,3190,3192,3282]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.73,16.54],[25.99,16.62],[26.13,15.95],[25.73,16.04],[25.68,16.4],[25.73,16.54]]]},\"properties\":{\"id\":3192,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3190,3100,3193,3282,3191]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[17.13,14.5],[16.93,15.25],[17.1,15.73],[20.31,16.32],[20.31,16.29],[20.36,15.9],[20.25,13.91],[17.72,13.91],[17.63,13.97],[17.32,14.19],[17.24,14.3],[17.13,14.5]]]},\"properties\":{\"id\":3277,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3364,3276,3275,3183,3095,3184,3365,3805,3547,3546,3456]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[22.84,15.76],[23.74,16.04],[23.77,16.01],[23.91,15.7],[23.85,15.28],[23.85,15.28],[22.84,15.76]]]},\"properties\":{\"id\":3278,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3365,3184,3185,3186,3279,3366]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[23.85,15.28],[23.91,15.7],[24.38,15.78],[24.47,15.67],[24.41,15.42],[24.38,15.39],[23.85,15.28]]]},\"properties\":{\"id\":3279,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3366,3278,3186,3189,3280,3367]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.9,15.59],[25.51,15.84],[25.73,16.04],[26.13,15.95],[26.18,15.87],[25.9,15.59]]]},\"properties\":{\"id\":3282,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3284,3283,3191,3192,3193]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.42,15.84],[25.51,15.84],[25.9,15.59],[25.9,15.56],[25.59,15.34],[25.31,15.53],[25.42,15.84]]]},\"properties\":{\"id\":3283,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3281,3191,3282,3284,3374,3372]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.9,15.59],[26.18,15.87],[26.92,15.76],[26.8,15.03],[26.18,15.03],[25.9,15.56],[25.9,15.59]]]},\"properties\":{\"id\":3284,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3283,3282,3193,3465,3374]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[20.25,13.91],[20.36,15.9],[22.84,15.76],[23.85,15.28],[23.82,15.17],[21.09,13.38],[20.92,13.43],[20.28,13.85],[20.25,13.91]]]},\"properties\":{\"id\":3365,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3805,3277,3184,3278,3366,3457]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[23.85,15.28],[24.38,15.39],[24.44,15.08],[24.1,14.75],[24.07,14.75],[23.82,15.17],[23.85,15.28],[23.85,15.28]]]},\"properties\":{\"id\":3366,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3278,3279,3367,3368,3458,3457,3365]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.38,15.39],[24.41,15.42],[24.72,15.28],[24.75,15.11],[24.64,15.03],[24.44,15.08],[24.38,15.39]]]},\"properties\":{\"id\":3367,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3366,3279,3280,3369,3371,3368]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.1,14.75],[24.44,15.08],[24.64,15.03],[24.67,14.83],[24.47,14.64],[24.1,14.75]]]},\"properties\":{\"id\":3368,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3458,3366,3367,3371,3459]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.72,15.28],[24.98,15.5],[25.12,15.42],[25.14,15.2],[25,15.06],[24.75,15.11],[24.72,15.28]]]},\"properties\":{\"id\":3369,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3367,3280,3281,3372,3370,3371]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25,14.86],[25,15.06],[25.14,15.2],[25.34,15.11],[25.34,14.81],[25.34,14.78],[25,14.86]]]},\"properties\":{\"id\":3370,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3460,3371,3369,3372,3373,3463]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.75,15.11],[25,15.06],[25,14.86],[24.92,14.78],[24.67,14.83],[24.64,15.03],[24.75,15.11]]]},\"properties\":{\"id\":3371,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3367,3369,3370,3460,3459,3368]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.12,15.42],[25.31,15.53],[25.59,15.34],[25.59,15.17],[25.34,15.11],[25.14,15.2],[25.12,15.42]]]},\"properties\":{\"id\":3372,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3369,3281,3283,3374,3373,3370]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.34,15.11],[25.59,15.17],[25.82,14.92],[25.34,14.81],[25.34,15.11]]]},\"properties\":{\"id\":3373,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3370,3372,3374,3463]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.59,15.34],[25.9,15.56],[26.18,15.03],[25.9,14.89],[25.82,14.92],[25.59,15.17],[25.59,15.34]]]},\"properties\":{\"id\":3374,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3372,3283,3284,3465,3463,3373]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[21.09,13.38],[23.82,15.17],[24.07,14.75],[23.96,14.53],[21.54,13.15],[21.09,13.38]]]},\"properties\":{\"id\":3457,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3365,3366,3458,3548]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.1,14.75],[24.47,14.64],[24.55,14.5],[24.55,14.22],[24.41,13.99],[23.96,14.53],[24.07,14.75],[24.1,14.75]]]},\"properties\":{\"id\":3458,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3366,3368,3459,3461,3549,3548,3457]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.55,14.5],[24.47,14.64],[24.67,14.83],[24.92,14.78],[24.95,14.55],[24.55,14.5]]]},\"properties\":{\"id\":3459,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3461,3458,3368,3371,3460]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25,14.86],[25.34,14.78],[25.34,14.55],[25,14.5],[24.95,14.55],[24.92,14.78],[25,14.86]]]},\"properties\":{\"id\":3460,\"height\":4,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3371,3370,3463,3462,3461,3459]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.55,14.5],[24.95,14.55],[25,14.5],[24.98,14.27],[24.55,14.22],[24.55,14.5]]]},\"properties\":{\"id\":3461,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3458,3459,3460,3462,3549]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.34,14.81],[25.82,14.92],[25.9,14.89],[25.85,14.61],[25.37,14.53],[25.34,14.55],[25.34,14.78],[25.34,14.81]]]},\"properties\":{\"id\":3463,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3370,3373,3374,3465,3464,3462,3460]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.37,14.53],[25.85,14.61],[25.93,14.36],[25.42,14.25],[25.37,14.53]]]},\"properties\":{\"id\":3464,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3462,3463,3465,3551]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.9,14.89],[26.18,15.03],[26.8,15.03],[26.94,14.81],[26.89,14.58],[26.02,14.25],[25.93,14.36],[25.85,14.61],[25.9,14.89]]]},\"properties\":{\"id\":3465,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3463,3374,3284,3552,3551,3464]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[21.54,13.15],[23.96,14.53],[24.41,13.99],[24.41,13.88],[23.26,12.37],[23.12,12.37],[22.02,12.82],[21.54,13.15]]]},\"properties\":{\"id\":3548,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3457,3458,3549,3636]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.55,14.22],[24.98,14.27],[25,14.22],[24.98,13.83],[24.41,13.88],[24.41,13.99],[24.55,14.22]]]},\"properties\":{\"id\":3549,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3458,3461,3462,3550,3636,3548]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25,14.22],[25.4,14.22],[25.48,13.71],[25.31,13.55],[24.98,13.83],[25,14.22]]]},\"properties\":{\"id\":3550,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3549,3462,3551,3637,3636]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.4,14.22],[25.42,14.25],[25.93,14.36],[26.02,14.25],[25.99,13.83],[25.48,13.71],[25.4,14.22]]]},\"properties\":{\"id\":3551,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3550,3462,3464,3465,3552,3637]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[26.02,14.25],[26.89,14.58],[27,13.71],[26.69,13.32],[25.99,13.83],[26.02,14.25]]]},\"properties\":{\"id\":3552,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3551,3465,3637]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.41,13.88],[24.98,13.83],[25.31,13.55],[25.06,12.04],[24.22,12.04],[23.26,12.37],[24.41,13.88]]]},\"properties\":{\"id\":3636,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3548,3549,3550,3637]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.48,13.71],[25.99,13.83],[26.69,13.32],[26.58,12.62],[26.04,11.95],[25.34,11.92],[25.06,12.04],[25.31,13.55],[25.48,13.71]]]},\"properties\":{\"id\":3637,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3550,3551,3552,3636]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.1,13.24],[15.5,13.24],[15.52,13.07],[15.55,12.82],[15.27,12.85],[15.08,13.07],[15.08,13.18],[15.1,13.24]]]},\"properties\":{\"id\":3717,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3631,3633,3635,3718,3716,3715,3632]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.52,13.07],[15.95,13.29],[16,13.13],[16.03,12.87],[15.81,12.76],[15.58,12.76],[15.55,12.82],[15.52,13.07]]]},\"properties\":{\"id\":3718,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3717,3635,3634,3719,3802,3800,3716]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16,13.13],[16.71,13.52],[17.32,13.69],[16.09,12.87],[16.03,12.87],[16,13.13]]]},\"properties\":{\"id\":3719,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3718,3634,3547,3720,3802]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.34,12.62],[16.09,12.87],[17.32,13.69],[17.63,13.83],[17.21,13.21],[16.34,12.62]]]},\"properties\":{\"id\":3720,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3803,3802,3719,3547,3805]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.34,12.62],[17.21,13.21],[16.88,12.34],[16.85,12.29],[16.37,12.51],[16.34,12.62]]]},\"properties\":{\"id\":3803,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3802,3720,3805,3888,3804]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.37,12.51],[16.85,12.29],[16.73,11.92],[16.34,12.09],[16.23,12.32],[16.37,12.51]]]},\"properties\":{\"id\":3804,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3802,3803,3888,3887,3885]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[17.72,13.91],[20.25,13.91],[20.28,13.85],[19.83,13.1],[18.73,11.92],[18.42,11.78],[16.88,12.34],[17.21,13.21],[17.63,13.83],[17.72,13.91]]]},\"properties\":{\"id\":3805,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3547,3277,3365,3888,3803,3720]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.85,12.29],[16.88,12.34],[18.42,11.78],[18.14,11.59],[16.82,11.67],[16.79,11.7],[16.73,11.92],[16.85,12.29]]]},\"properties\":{\"id\":3888,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3804,3803,3805,3970,3969,3887]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.4,11.64],[16.79,11.7],[16.82,11.67],[16.65,10.89],[16.51,10.78],[16.37,10.86],[16.26,11.56],[16.4,11.64]]]},\"properties\":{\"id\":3969,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3886,3887,3888,3970,3968]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.82,11.67],[18.14,11.59],[17.61,10.86],[16.65,10.89],[16.82,11.67]]]},\"properties\":{\"id\":3970,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3969,3888]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.01,21.21],[12.32,21.55],[12.46,21.32],[12.43,20.76],[12.07,20.96],[12.01,21.21]]]},\"properties\":{\"id\":2408,\"height\":-450,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2406,2325,2327,2409,2407]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.43,20.76],[12.46,21.32],[12.8,21.24],[12.77,20.82],[12.71,20.74],[12.68,20.71],[12.43,20.74],[12.43,20.76]]]},\"properties\":{\"id\":2409,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2407,2408,2327,2410,2411,2493,2492]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.92,21.63],[-7.17,20.4],[-7.31,20.4],[-7.51,20.62],[-7.14,21.72],[-7,21.66],[-6.92,21.63]]]},\"properties\":{\"id\":2452,\"height\":-450,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2139,2453,2542,2451,2371,2138]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.93,15.25],[16.4,15.64],[16.9,15.92],[17.1,15.73],[16.93,15.25]]]},\"properties\":{\"id\":3275,\"height\":-450,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3277,3276,3182,3183]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.31,15.67],[16.4,15.64],[16.93,15.25],[17.13,14.5],[16.14,15.28],[16.17,15.53],[16.26,15.64],[16.31,15.67]]]},\"properties\":{\"id\":3276,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3180,3182,3275,3277,3364,3274,3273]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.28,27.65],[11.39,27.76],[11.9,27.45],[11.48,27.28],[11.22,27.34],[11.28,27.65]]]},\"properties\":{\"id\":1473,\"height\":-200,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1471,1398,1400,1474,1475]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.53,26.98],[11.48,27.28],[11.9,27.45],[12.43,27.37],[12.4,27.34],[11.53,26.98]]]},\"properties\":{\"id\":1474,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1549,1475,1473,1400,1624]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.14,27.26],[11.22,27.34],[11.48,27.28],[11.53,26.98],[11.48,26.89],[11.11,27.03],[11.14,27.26]]]},\"properties\":{\"id\":1475,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1472,1471,1473,1474,1549,1547]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.07,26.25],[12.38,26.53],[12.57,26.33],[12.49,25.94],[12.29,25.97],[12.07,26.19],[12.07,26.25]]]},\"properties\":{\"id\":1623,\"height\":-200,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1699,1550,1624,1702,1701,1700]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[26.13,15.95],[25.99,16.62],[26.55,17.21],[26.83,16.96],[26.97,15.87],[26.92,15.76],[26.18,15.87],[26.13,15.95]]]},\"properties\":{\"id\":3193,\"height\":-200,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3282,3192,3100,3284]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.28,14.58],[15.97,15.08],[16.14,15.28],[17.13,14.5],[17.24,14.3],[16.28,14.58]]]},\"properties\":{\"id\":3364,\"height\":-200,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3456,3455,3274,3276,3277]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.47,18.69],[15.86,18.61],[15.89,18.39],[15.61,18.27],[15.41,18.3],[15.3,18.55],[15.47,18.69]]]},\"properties\":{\"id\":2834,\"height\":-117,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2750,2754,2835,2836,2837,2833]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.95,18.72],[16.17,18.67],[16.23,18.33],[16.14,18.25],[15.89,18.39],[15.86,18.61],[15.95,18.72]]]},\"properties\":{\"id\":2835,\"height\":4,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2754,2753,2838,2839,2836,2834]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.14,16.34],[16.43,16.74],[16.73,16.32],[16.45,16.15],[16.14,16.34]]]},\"properties\":{\"id\":3181,\"height\":-117,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3180,3092,3093,3182]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.31,15.67],[16.45,16.15],[16.73,16.32],[16.88,16.29],[16.9,15.92],[16.4,15.64],[16.31,15.67]]]},\"properties\":{\"id\":3182,\"height\":-117,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3276,3180,3181,3093,3183,3275]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.86,15.03],[15.97,15.08],[16.28,14.58],[15.86,14.55],[15.86,14.55],[15.86,15.03]]]},\"properties\":{\"id\":3455,\"height\":-117,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3453,3274,3364,3456,3454]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.86,14.55],[16.28,14.58],[17.24,14.3],[17.32,14.19],[15.83,14.08],[15.81,14.13],[15.86,14.55]]]},\"properties\":{\"id\":3456,\"height\":-117,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3454,3455,3364,3277,3546,3544]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.47,21.46],[-6.78,20.23],[-7.09,20.29],[-7.17,20.4],[-6.92,21.63],[-6.64,21.58],[-6.47,21.52],[-6.47,21.46]]]},\"properties\":{\"id\":2453,\"height\":-93,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2456,2454,2543,2542,2452,2139,2140]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.47,21.46],[-6.24,20.79],[-6.38,20.18],[-6.55,20.12],[-6.67,20.12],[-6.78,20.23],[-6.47,21.46]]]},\"properties\":{\"id\":2454,\"height\":-93,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2453,2456,2455,2545,2544,2543]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.36,26.56],[11.53,26.67],[11.76,26.61],[11.81,26.39],[11.59,26.16],[11.39,26.16],[11.36,26.56]]]},\"properties\":{\"id\":1622,\"height\":-75,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1621,1547,1549,1550,1699,1698]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.54,22.81],[-7.68,22.22],[-7.99,22.89],[-7.96,23.37],[-7.87,23.42],[-7.62,23.31],[-7.54,22.81]]]},\"properties\":{\"id\":2053,\"height\":-75,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2054,2055,2052,2051,1969,1971]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.43,23.48],[-7.23,23.39],[-7.54,22.81],[-7.62,23.31],[-7.43,23.48]]]},\"properties\":{\"id\":2054,\"height\":-75,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1971,1973,2055,2053]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.83,23.03],[-7.68,22.19],[-7.68,22.19],[-7.68,22.22],[-7.54,22.81],[-7.23,23.39],[-7.03,23.31],[-6.89,23.2],[-6.83,23.03]]]},\"properties\":{\"id\":2055,\"height\":-75,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2056,2138,2137,2052,2053,2054,1973,1974]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.85,22.61],[4.11,22.78],[4.36,22.36],[4.3,22.28],[3.94,22.25],[3.82,22.36],[3.85,22.61]]]},\"properties\":{\"id\":2161,\"height\":-41,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2160,2080,2162,2238,2237,2236]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.3,23],[4.44,23.06],[4.61,22.5],[4.58,22.44],[4.36,22.36],[4.11,22.78],[4.19,22.95],[4.3,23]]]},\"properties\":{\"id\":2162,\"height\":-41,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2078,2079,2163,2165,2238,2161,2080]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.58,23.12],[4.74,23],[4.89,22.89],[4.95,22.72],[4.92,22.7],[4.61,22.5],[4.44,23.06],[4.58,23.12]]]},\"properties\":{\"id\":2163,\"height\":-41,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2079,2081,2082,2083,2164,2165,2162]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.35,23.2],[-8.32,23.34],[-7.96,23.37],[-7.99,22.89],[-8.35,23.2]]]},\"properties\":{\"id\":2051,\"height\":-33,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2052,1970,1969,2053]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.35,23.2],[-7.99,22.89],[-7.68,22.22],[-7.68,22.19],[-8.61,23.03],[-8.35,23.2]]]},\"properties\":{\"id\":2052,\"height\":-33,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1970,2051,2053,2055,2137]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.54,22.64],[-5.91,22.36],[-6.1,22.81],[-5.91,22.92],[-5.65,22.89],[-5.57,22.78],[-5.54,22.64]]]},\"properties\":{\"id\":2141,\"height\":-33,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2143,2142,2140,2057,2058,2060]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.54,22.64],[-5.32,22.44],[-5.26,22.36],[-6.1,21.72],[-5.91,22.36],[-5.54,22.64]]]},\"properties\":{\"id\":2142,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2141,2143,2144,2217,2140]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.73,22],[-4.75,21.88],[-5.34,21.8],[-5.18,22.3],[-5.06,22.28],[-4.73,22]]]},\"properties\":{\"id\":2218,\"height\":-33,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2145,2221,2219,2217,2144]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.7,21.63],[-4.73,21.6],[-5.79,21.41],[-5.82,21.44],[-5.34,21.8],[-4.75,21.88],[-4.7,21.63]]]},\"properties\":{\"id\":2219,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2221,2295,2293,2456,2217,2218]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.18,21.02],[-8.02,20.57],[-8.04,20.43],[-8.1,20.37],[-8.58,20.48],[-8.63,20.57],[-8.18,21.02]]]},\"properties\":{\"id\":2450,\"height\":-33,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2369,2370,2372,2541,2539,2449]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.7,20.54],[-4.7,20.43],[-4.84,20.23],[-5.09,20.21],[-5.23,20.26],[-5.18,20.65],[-5.09,20.79],[-4.75,20.65],[-4.7,20.54]]]},\"properties\":{\"id\":2458,\"height\":-33,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2376,2459,2460,2549,2548,2457,2374,2373]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.28,17.44],[16.73,17.55],[17.02,17.16],[16.37,17.1],[16.28,17.32],[16.28,17.44]]]},\"properties\":{\"id\":3006,\"height\":-33,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3004,2921,3008,3007,3005]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.37,17.1],[17.02,17.16],[17.21,17.07],[16.85,16.82],[16.43,16.79],[16.37,16.9],[16.37,17.1]]]},\"properties\":{\"id\":3007,\"height\":-12,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3005,3006,3008,3094,3093,3092]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.83,14.08],[17.32,14.19],[17.63,13.97],[15.78,13.69],[15.75,13.74],[15.83,14.08]]]},\"properties\":{\"id\":3546,\"height\":-33,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3544,3456,3277,3547,3545]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.78,13.69],[17.63,13.97],[17.72,13.91],[17.63,13.83],[17.32,13.69],[16.71,13.52],[15.92,13.41],[15.75,13.6],[15.78,13.69]]]},\"properties\":{\"id\":3547,\"height\":-33,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3545,3546,3277,3805,3720,3719,3634,3635]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16,13.13],[15.95,13.29],[15.92,13.41],[16.71,13.52],[16,13.13]]]},\"properties\":{\"id\":3634,\"height\":-33,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3719,3718,3635,3547]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.52,13.07],[15.5,13.24],[15.55,13.43],[15.75,13.6],[15.92,13.41],[15.95,13.29],[15.52,13.07]]]},\"properties\":{\"id\":3635,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3718,3717,3633,3545,3547,3634]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.67,19.23],[16.17,19.14],[15.92,18.89],[15.78,18.92],[15.67,19.23]]]},\"properties\":{\"id\":2752,\"height\":-21,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2751,2671,2753,2754]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.73,19.37],[16.82,19.39],[16.17,18.67],[15.95,18.72],[15.92,18.89],[16.17,19.14],[16.73,19.37]]]},\"properties\":{\"id\":2753,\"height\":-21,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2671,2670,2838,2835,2754,2752]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.5,18.75],[15.78,18.92],[15.92,18.89],[15.95,18.72],[15.86,18.61],[15.47,18.69],[15.5,18.75]]]},\"properties\":{\"id\":2754,\"height\":-21,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2750,2751,2752,2753,2835,2834]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25.28,17.55],[26.1,18.25],[26.3,18.02],[26.55,17.21],[25.99,16.62],[25.73,16.54],[25.34,16.68],[25.23,16.93],[25.23,17.3],[25.28,17.55]]]},\"properties\":{\"id\":3100,\"height\":-21,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3010,2924,3193,3192,3190,3099,3011]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.39,35.93],[11.28,36.24],[11.62,36.38],[11.7,36.07],[11.42,35.9],[11.39,35.93]]]},\"properties\":{\"id\":295,\"height\":-12,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[373,294,220,296,297]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.7,36.07],[11.62,36.38],[11.64,36.41],[11.87,36.52],[12.01,36.15],[11.76,36.04],[11.7,36.07]]]},\"properties\":{\"id\":296,\"height\":-12,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[297,295,220,221,298,299]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.45,35.62],[11.42,35.9],[11.7,36.07],[11.76,36.04],[11.87,35.76],[11.56,35.59],[11.45,35.62]]]},\"properties\":{\"id\":297,\"height\":-990,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[375,373,295,296,299,374]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.03,22.78],[-8.89,22.02],[-9.51,22.36],[-9.55,22.43],[-9.59,22.5],[-9.31,22.84],[-9.03,22.78]]]},\"properties\":{\"id\":2135,\"height\":-12,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2050,2136,2215,2213,2133,2049]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.99,22.7],[13.25,22.81],[13.42,22.78],[13.61,22.61],[13.61,22.39],[13.36,22.19],[13.05,22.33],[12.97,22.56],[12.99,22.7]]]},\"properties\":{\"id\":2180,\"height\":-12,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2179,2098,2099,2101,2181,2257,2254,2253]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.17,17.69],[16.2,17.88],[16.65,18.02],[16.88,17.72],[16.73,17.55],[16.28,17.44],[16.17,17.69]]]},\"properties\":{\"id\":2921,\"height\":-12,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3004,2920,2839,2922,3008,3006]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.9,16.32],[16.88,16.29],[16.73,16.32],[16.43,16.74],[16.43,16.79],[16.85,16.82],[16.9,16.32]]]},\"properties\":{\"id\":3093,\"height\":-12,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3094,3183,3182,3181,3092,3007]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.34,12.09],[16.73,11.92],[16.79,11.7],[16.4,11.64],[16.14,11.9],[16.34,12.09]]]},\"properties\":{\"id\":3887,\"height\":-12,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3885,3804,3888,3969,3886]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.73,21.6],[-9.17,21.6],[-9.34,21.13],[-9.67,21.16],[-9.73,21.24],[-9.82,21.49],[-9.73,21.6]]]},\"properties\":{\"id\":2291,\"height\":-9,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2214,2216,2292,2367,2366,2290]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.63,21.86],[-9,20.9],[-9.23,21.02],[-9.34,21.13],[-9.17,21.6],[-8.8,21.91],[-8.63,21.86]]]},\"properties\":{\"id\":2292,\"height\":-9,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2136,2368,2448,2367,2291,2216]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.96,21.86],[-8.1,21.52],[-8.86,20.79],[-8.92,20.82],[-9,20.9],[-8.63,21.86],[-8.04,21.88],[-7.96,21.86]]]},\"properties\":{\"id\":2368,\"height\":-9,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2137,2370,2369,2449,2448,2292,2136]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.18,21.02],[-8.63,20.57],[-8.86,20.79],[-8.1,21.52],[-8.18,21.02]]]},\"properties\":{\"id\":2369,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2370,2450,2449,2368]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.43,21.8],[-7.79,20.79],[-8.02,20.57],[-8.18,21.02],[-8.1,21.52],[-7.96,21.86],[-7.68,21.94],[-7.43,21.8]]]},\"properties\":{\"id\":2370,\"height\":-9,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2138,2371,2372,2450,2369,2368,2137]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.14,21.72],[-7.51,20.62],[-7.59,20.6],[-7.79,20.79],[-7.43,21.8],[-7.14,21.72]]]},\"properties\":{\"id\":2371,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2138,2452,2451,2372,2370]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.59,20.6],[-7.85,20.37],[-8.04,20.43],[-8.02,20.57],[-7.79,20.79],[-7.59,20.6]]]},\"properties\":{\"id\":2372,\"height\":-990,\"biome\":0,\"type\":\"lake\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[2371,2451,2541,2450,2370]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.73,31.09],[9.73,31.12],[10.01,31.17],[10.04,31.17],[10.13,30.81],[9.9,30.75],[9.73,31.09]]]},\"properties\":{\"id\":1032,\"height\":-6,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1030,957,958,959,961,1033]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.79,30.59],[9.9,30.75],[10.13,30.81],[10.35,30.67],[10.41,30.56],[9.84,30.45],[9.79,30.59]]]},\"properties\":{\"id\":1033,\"height\":-6,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1031,1030,1032,961,1034,1103]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.82,30.14],[9.84,30.45],[10.41,30.56],[10.49,30.5],[10.46,30.39],[9.96,30.03],[9.82,30.14]]]},\"properties\":{\"id\":1103,\"height\":-6,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1174,1031,1033,1034,1105,1104]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.96,30.03],[10.46,30.39],[10.55,30],[10.24,29.77],[10.21,29.77],[9.98,29.97],[9.96,30.03]]]},\"properties\":{\"id\":1104,\"height\":-6,\"biome\":0,\"type\":\"ocean\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1174,1103,1105,1178,1176,1175]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.44,37.64],[-26.58,37.52],[-27.17,37.72],[-27.06,38.06],[-26.69,38.22],[-26.44,37.64]]]},\"properties\":{\"id\":0,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[1,75,74]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.1,37.64],[-26.44,37.64],[-26.69,38.22],[-26.44,38.48],[-25.99,38.14],[-26.1,37.64]]]},\"properties\":{\"id\":1,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":30315,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[2,75,0]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.73,37.41],[-25.96,37.47],[-26.1,37.64],[-25.99,38.14],[-25.65,38.2],[-25.45,37.72],[-25.73,37.41]]]},\"properties\":{\"id\":2,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":30052,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[77,76,75,1,3]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.97,37.66],[-25.45,37.72],[-25.65,38.2],[-25.34,38.53],[-24.95,38.17],[-24.97,37.66]]]},\"properties\":{\"id\":3,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":26000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[4,77,2]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.36,37.5],[-24.95,37.64],[-24.97,37.66],[-24.95,38.17],[-24.33,38.36],[-24.36,37.5]]]},\"properties\":{\"id\":4,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":28562,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[5,78,77,3]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.07,37.44],[-24.36,37.5],[-24.36,37.5],[-24.33,38.36],[-24.22,38.48],[-23.68,38.11],[-24.07,37.44]]]},\"properties\":{\"id\":5,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":25000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[6,79,78,4]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.23,37.64],[-24.02,37.38],[-24.07,37.44],[-23.68,38.11],[-23.15,38.11],[-23.23,37.64]]]},\"properties\":{\"id\":6,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":25000,\"state\":4,\"province\":44,\"culture\":1,\"religion\":1,\"neighbors\":[7,80,79,5]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.72,37.3],[-23.17,37.41],[-23.23,37.64],[-23.15,38.11],[-23.12,38.17],[-22.78,38.06],[-22.5,37.66],[-22.72,37.3]]]},\"properties\":{\"id\":7,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":25000,\"state\":4,\"province\":44,\"culture\":9,\"religion\":9,\"neighbors\":[82,81,80,6,8]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.25,37.58],[-22.5,37.66],[-22.78,38.06],[-22.02,38.45],[-21.8,38.17],[-22.05,37.64],[-22.25,37.58]]]},\"properties\":{\"id\":8,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":111460,\"state\":4,\"province\":25,\"culture\":1,\"religion\":1,\"neighbors\":[83,82,7,9]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.46,37.47],[-21.68,37.3],[-22.05,37.64],[-21.8,38.17],[-21.63,38.11],[-21.46,37.47]]]},\"properties\":{\"id\":9,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":29818,\"state\":4,\"province\":45,\"culture\":1,\"religion\":1,\"neighbors\":[10,84,83,8]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.18,37.5],[-21.46,37.47],[-21.63,38.11],[-21.15,38.17],[-21.18,37.5]]]},\"properties\":{\"id\":10,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":45,\"culture\":9,\"religion\":9,\"neighbors\":[11,84,9]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.81,37.75],[-12.35,37.55],[-12.6,38.11],[-12.12,38.39],[-11.84,38.11],[-11.81,37.75]]]},\"properties\":{\"id\":27,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":24000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[28,101,26]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.02,37.44],[-11.17,37.41],[-11.28,37.47],[-11.22,38.31],[-11.02,38.42],[-10.72,38.11],[-11.02,37.44]]]},\"properties\":{\"id\":29,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":20000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[30,103,102,28]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.32,37.61],[-10.88,37.36],[-11.02,37.44],[-10.72,38.11],[-10.27,38.06],[-10.32,37.61]]]},\"properties\":{\"id\":30,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":21661,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[31,104,103,29]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.14,37.58],[-9.62,37.58],[-9.76,38.08],[-8.92,38.22],[-8.86,38],[-8.97,37.66],[-9.14,37.58]]]},\"properties\":{\"id\":32,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":30991,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[107,106,31,34,33]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.32,37.61],[-8.69,37.22],[-8.97,37.66],[-8.86,38],[-8.32,37.61]]]},\"properties\":{\"id\":33,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":15000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[34,108,107,32]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.32,37.61],[-8.86,38],[-8.92,38.22],[-8.8,38.39],[-7.87,38.14],[-8.21,37.61],[-8.32,37.61]]]},\"properties\":{\"id\":34,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":29000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[108,33,32,35]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.68,37.52],[-3.71,37.55],[-3.66,38.2],[-3.29,38.45],[-3.01,38.17],[-3.15,37.58],[-3.68,37.52]]]},\"properties\":{\"id\":43,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":30857,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[117,116,42,44]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.17,37.41],[-2.59,37.58],[-2.39,38.14],[-2.22,38.22],[-2,37.72],[-2.17,37.41]]]},\"properties\":{\"id\":45,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":33147,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[120,119,44,46]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.74,37.61],[-2,37.72],[-2.22,38.22],[-2.19,38.25],[-1.27,38.17],[-1.74,37.61]]]},\"properties\":{\"id\":46,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":32027,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[47,120,45]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.87,37.33],[-1.07,37.75],[-1.04,38.14],[-0.82,38.11],[-0.34,37.38],[-0.42,37.3],[-0.87,37.33]]]},\"properties\":{\"id\":48,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":30817,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[122,121,47,49,123]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.72,37.69],[1.63,38.11],[2.19,38.42],[2.42,38.17],[2.28,37.47],[2.19,37.44],[1.72,37.69]]]},\"properties\":{\"id\":53,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":34045,\"state\":1,\"province\":4,\"culture\":3,\"religion\":12,\"neighbors\":[127,52,54,128]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.73,37.33],[2.28,37.47],[2.42,38.17],[2.95,38.14],[3.01,37.97],[2.84,37.41],[2.73,37.33]]]},\"properties\":{\"id\":54,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":35250,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[129,128,53,56,55]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.87,37.52],[4.56,37.24],[4.39,37.64],[4.64,38.08],[4.89,38.03],[4.87,37.52]]]},\"properties\":{\"id\":58,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":18703,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[59,132,131,57]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.12,37.27],[4.87,37.52],[4.89,38.03],[5.2,38.03],[5.51,37.44],[5.48,37.38],[5.12,37.27]]]},\"properties\":{\"id\":59,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":27330,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[133,132,58,60,134]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.51,37.44],[5.2,38.03],[5.51,38.42],[6.02,38.2],[6.02,37.61],[5.65,37.47],[5.51,37.44]]]},\"properties\":{\"id\":60,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":45921,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[134,59,61,135]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.02,37.61],[6.02,38.2],[6.61,38.39],[6.83,38.06],[6.27,37.52],[6.02,37.61]]]},\"properties\":{\"id\":61,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":39011,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[135,60,62]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.72,37.55],[8.49,37.92],[8.55,38.14],[8.8,38.31],[9.22,38.03],[9.03,37.52],[8.72,37.55]]]},\"properties\":{\"id\":66,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":31811,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[140,65,64,67]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.59,37.55],[11.48,37.61],[11.5,38.17],[11.81,38.17],[11.9,37.69],[11.59,37.55]]]},\"properties\":{\"id\":71,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":15000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[145,144,70,72]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.61,37.02],[-27.08,36.99],[-27.37,37.47],[-27.17,37.72],[-26.58,37.52],[-26.61,37.02]]]},\"properties\":{\"id\":74,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[75,150,0]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.24,37.02],[-26.58,37.02],[-26.61,37.02],[-26.58,37.52],[-26.44,37.64],[-26.1,37.64],[-25.96,37.47],[-26.24,37.02]]]},\"properties\":{\"id\":75,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":24635,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[76,151,150,74,0,1,2]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.42,36.91],[-25.93,36.66],[-26.24,37.02],[-25.96,37.47],[-25.73,37.41],[-25.4,36.94],[-25.42,36.91]]]},\"properties\":{\"id\":76,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":24968,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[153,152,151,75,2,77]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.23,37.02],[-25.4,36.94],[-25.73,37.41],[-25.45,37.72],[-24.97,37.66],[-24.95,37.64],[-25.23,37.02]]]},\"properties\":{\"id\":77,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":20000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[78,153,76,2,3,4]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.81,36.85],[-25.23,37.02],[-24.95,37.64],[-24.36,37.5],[-24.36,37.5],[-24.61,36.88],[-24.81,36.85]]]},\"properties\":{\"id\":78,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":26528,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[154,153,77,4,5,79]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.02,36.74],[-24.36,36.6],[-24.61,36.88],[-24.36,37.5],[-24.07,37.44],[-24.02,37.38],[-23.88,37.16],[-24.02,36.74]]]},\"properties\":{\"id\":79,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":25000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[156,155,154,78,5,6,80]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.34,37.02],[-23.88,37.16],[-24.02,37.38],[-23.23,37.64],[-23.17,37.41],[-23.34,37.02]]]},\"properties\":{\"id\":80,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":28425,\"state\":4,\"province\":44,\"culture\":1,\"religion\":1,\"neighbors\":[81,156,79,6,7]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.64,37.02],[-23.23,36.77],[-23.34,37.02],[-23.17,37.41],[-22.72,37.3],[-22.64,37.02]]]},\"properties\":{\"id\":81,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":44,\"culture\":9,\"religion\":9,\"neighbors\":[82,157,156,80,7]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.25,37.58],[-22.3,36.94],[-22.42,36.91],[-22.64,37.02],[-22.72,37.3],[-22.5,37.66],[-22.25,37.58]]]},\"properties\":{\"id\":82,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":16305,\"state\":4,\"province\":24,\"culture\":9,\"religion\":9,\"neighbors\":[8,83,158,157,81,7]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.68,37.22],[-22.08,36.91],[-22.3,36.94],[-22.25,37.58],[-22.05,37.64],[-21.68,37.3],[-21.68,37.22]]]},\"properties\":{\"id\":83,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":25471,\"state\":4,\"province\":24,\"culture\":1,\"religion\":1,\"neighbors\":[84,159,158,82,8,9]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.72,37.05],[-9.08,36.99],[-9.14,37.58],[-8.97,37.66],[-8.69,37.22],[-8.72,37.05]]]},\"properties\":{\"id\":107,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":12000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[108,183,106,32,33]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.87,37.33],[-1.1,36.96],[-1.57,37.16],[-1.57,37.27],[-1.07,37.75],[-0.87,37.33]]]},\"properties\":{\"id\":121,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":20000,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[48,122,197,120,47]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.96,36.66],[-1.1,36.96],[-0.87,37.33],[-0.42,37.3],[-0.39,36.96],[-0.96,36.66]]]},\"properties\":{\"id\":122,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":10000,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[198,197,121,48,123]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.73,36.77],[2.14,36.82],[1.97,36.91],[2.19,37.44],[2.28,37.47],[2.73,37.33],[2.73,36.77]]]},\"properties\":{\"id\":128,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":32921,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[129,204,203,127,53,54]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.75,36.94],[6.5,37.13],[7,37.58],[7.2,37.38],[6.98,36.94],[6.75,36.94]]]},\"properties\":{\"id\":136,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":15000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[212,211,62,63,137]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.08,36.94],[11.11,37.61],[11.48,37.61],[11.59,37.55],[11.56,37.22],[11.19,36.94],[11.08,36.94]]]},\"properties\":{\"id\":144,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":16725,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[220,143,70,71,145,146]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.58,36.38],[-27.31,36.38],[-27.08,36.99],[-26.61,37.02],[-26.58,37.02],[-26.58,36.38],[-26.58,36.38]]]},\"properties\":{\"id\":150,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":22000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[225,224,74,75,151]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.99,36.46],[-26.58,36.38],[-26.58,37.02],[-26.24,37.02],[-25.93,36.66],[-25.99,36.46]]]},\"properties\":{\"id\":151,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":18000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[152,225,150,75,76]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.23,36.29],[-25.45,36.13],[-25.99,36.43],[-25.99,36.46],[-25.93,36.66],[-25.42,36.91],[-25.23,36.29]]]},\"properties\":{\"id\":152,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":33271,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[153,227,226,225,151,76]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.81,36.85],[-24.95,36.38],[-25.06,36.27],[-25.23,36.29],[-25.42,36.91],[-25.4,36.94],[-25.23,37.02],[-24.81,36.85]]]},\"properties\":{\"id\":153,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[78,154,228,227,152,76,77]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.38,36.49],[-24.95,36.38],[-24.81,36.85],[-24.61,36.88],[-24.36,36.6],[-24.38,36.49]]]},\"properties\":{\"id\":154,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":11714,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[155,228,153,78,79]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.85,36.13],[-23.93,36.07],[-24.33,36.27],[-24.38,36.49],[-24.36,36.6],[-24.02,36.74],[-23.51,36.38],[-23.85,36.13]]]},\"properties\":{\"id\":155,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":38360,\"state\":4,\"province\":39,\"culture\":1,\"religion\":1,\"neighbors\":[230,307,229,228,154,79,156]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.34,36.38],[-23.51,36.38],[-24.02,36.74],[-23.88,37.16],[-23.34,37.02],[-23.23,36.77],[-23.26,36.55],[-23.34,36.38]]]},\"properties\":{\"id\":156,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":37,\"culture\":1,\"religion\":1,\"neighbors\":[231,230,155,79,80,81,157]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.53,36.49],[-23.26,36.55],[-23.23,36.77],[-22.64,37.02],[-22.42,36.91],[-22.53,36.49],[-22.53,36.49]]]},\"properties\":{\"id\":157,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":37,\"culture\":9,\"religion\":9,\"neighbors\":[232,231,156,81,82,158]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.8,36.43],[-21.8,36.43],[-22.3,36.27],[-22.53,36.49],[-22.42,36.91],[-22.3,36.94],[-22.08,36.91],[-21.82,36.52],[-21.8,36.43]]]},\"properties\":{\"id\":158,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":27808,\"state\":4,\"province\":24,\"culture\":1,\"religion\":1,\"neighbors\":[160,234,233,232,157,82,83,159]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.68,37.22],[-21.52,37.02],[-21.82,36.52],[-22.08,36.91],[-21.68,37.22]]]},\"properties\":{\"id\":159,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":10000,\"state\":4,\"province\":24,\"culture\":9,\"religion\":9,\"neighbors\":[83,84,160,158]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.12,36.57],[-21.8,36.43],[-21.82,36.52],[-21.52,37.02],[-21.12,36.85],[-21.12,36.57]]]},\"properties\":{\"id\":160,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":34729,\"state\":4,\"province\":45,\"culture\":1,\"religion\":1,\"neighbors\":[161,234,158,159,84]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.37,36.35],[-0.98,36.57],[-0.96,36.66],[-0.39,36.96],[-0.39,36.94],[-0.17,36.41],[-0.37,36.35]]]},\"properties\":{\"id\":198,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":8000,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[273,272,197,122,123,199]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.03,36.24],[-0.06,36.35],[0.22,36.88],[0.39,36.96],[0.59,36.85],[0.62,36.27],[0.59,36.27],[0.03,36.24]]]},\"properties\":{\"id\":200,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":7000,\"state\":1,\"province\":7,\"culture\":3,\"religion\":12,\"neighbors\":[274,273,199,124,125,201,275]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.16,36.1],[7.65,36.77],[7.79,36.94],[7.99,36.99],[8.27,36.21],[8.16,36.1]]]},\"properties\":{\"id\":214,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":16645,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[289,288,137,138,215]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.35,36.32],[10.24,36.63],[10.83,36.91],[10.94,36.85],[10.97,36.43],[10.8,36.18],[10.35,36.32]]]},\"properties\":{\"id\":219,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":22000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[293,292,142,143,220,294]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.97,36.43],[10.94,36.85],[11.08,36.94],[11.19,36.94],[11.31,36.88],[11.64,36.41],[11.62,36.38],[11.28,36.24],[10.97,36.43]]]},\"properties\":{\"id\":220,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":21000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[294,219,143,144,146,221,296,295]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.63,35.85],[-27.14,35.87],[-27.31,36.38],[-27.31,36.38],[-26.58,36.38],[-26.52,36.01],[-26.63,35.85]]]},\"properties\":{\"id\":224,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[302,301,150,225]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.07,35.9],[-26.52,36.01],[-26.58,36.38],[-26.58,36.38],[-25.99,36.46],[-25.99,36.43],[-26.07,35.9]]]},\"properties\":{\"id\":225,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":15769,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[226,302,224,150,151,152]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.51,35.87],[-25.96,35.71],[-26.07,35.9],[-25.99,36.43],[-25.45,36.13],[-25.51,35.87]]]},\"properties\":{\"id\":226,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[227,303,302,225,152]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.86,35.87],[-25.31,35.68],[-25.51,35.87],[-25.45,36.13],[-25.23,36.29],[-25.06,36.27],[-24.86,35.99],[-24.86,35.87]]]},\"properties\":{\"id\":227,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[305,304,303,226,152,153,228]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.47,36.13],[-24.86,35.99],[-25.06,36.27],[-24.95,36.38],[-24.38,36.49],[-24.33,36.27],[-24.47,36.13]]]},\"properties\":{\"id\":228,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[229,305,227,153,154,155]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.27,35.43],[-24.3,35.43],[-24.47,36.13],[-24.33,36.27],[-23.93,36.07],[-23.99,35.73],[-24.27,35.43]]]},\"properties\":{\"id\":229,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":39,\"culture\":1,\"religion\":1,\"neighbors\":[306,381,305,228,155,307]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.17,36.01],[-23.46,35.65],[-23.85,36.13],[-23.51,36.38],[-23.34,36.38],[-23.17,36.01]]]},\"properties\":{\"id\":230,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":37,\"culture\":1,\"religion\":1,\"neighbors\":[231,308,307,155,156]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.53,36.49],[-22.92,35.87],[-23.17,36.01],[-23.34,36.38],[-23.26,36.55],[-22.53,36.49]]]},\"properties\":{\"id\":231,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":29256,\"state\":4,\"province\":37,\"culture\":1,\"religion\":1,\"neighbors\":[157,232,308,230,156]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.36,35.76],[-22.78,35.73],[-22.92,35.87],[-22.53,36.49],[-22.53,36.49],[-22.3,36.27],[-22.36,35.76]]]},\"properties\":{\"id\":232,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":36,\"culture\":9,\"religion\":9,\"neighbors\":[233,309,308,231,157,158]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.68,35.99],[-22.27,35.71],[-22.36,35.76],[-22.3,36.27],[-21.8,36.43],[-21.68,35.99]]]},\"properties\":{\"id\":233,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":18000,\"state\":4,\"province\":36,\"culture\":1,\"religion\":1,\"neighbors\":[234,310,309,232,158]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.09,36.07],[-21.49,35.85],[-21.68,35.99],[-21.8,36.43],[-21.8,36.43],[-21.12,36.57],[-20.98,36.41],[-21.09,36.07]]]},\"properties\":{\"id\":234,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":24751,\"state\":4,\"province\":23,\"culture\":1,\"religion\":1,\"neighbors\":[235,311,310,233,158,160,161]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.42,35.73],[-20.81,35.76],[-21.09,36.07],[-20.98,36.41],[-20.67,36.41],[-20.48,36.24],[-20.42,35.73]]]},\"properties\":{\"id\":235,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":46,\"culture\":9,\"religion\":9,\"neighbors\":[236,312,311,234,161,162]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.03,35.85],[-0.62,35.9],[-0.37,36.35],[-0.17,36.41],[-0.06,36.35],[0.03,36.24],[0,35.9],[-0.03,35.85]]]},\"properties\":{\"id\":273,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":7000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[351,350,272,198,199,200,274]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.59,35.68],[0.56,35.65],[0,35.9],[0.03,36.24],[0.59,36.27],[0.59,35.68]]]},\"properties\":{\"id\":274,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":8000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[275,352,351,273,200]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.59,35.68],[0.59,36.27],[0.62,36.27],[0.9,36.27],[1.29,35.87],[1.29,35.87],[1.15,35.73],[0.59,35.68]]]},\"properties\":{\"id\":275,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":13202,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[352,274,200,201,276,354,353]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.29,35.87],[0.9,36.27],[1.07,36.49],[1.66,36.21],[1.29,35.87]]]},\"properties\":{\"id\":276,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":1,\"province\":7,\"culture\":3,\"religion\":12,\"neighbors\":[354,275,201,202]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.77,35.9],[10.8,36.18],[10.97,36.43],[11.28,36.24],[11.39,35.93],[10.91,35.85],[10.77,35.9]]]},\"properties\":{\"id\":294,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":18000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[371,293,219,220,295,373]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.52,35.43],[-27.25,35.48],[-27.14,35.87],[-26.63,35.85],[-26.52,35.43]]]},\"properties\":{\"id\":301,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":15826,\"state\":4,\"province\":32,\"culture\":1,\"religion\":1,\"neighbors\":[302,376,224]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.13,35.34],[-26.47,35.34],[-26.52,35.43],[-26.63,35.85],[-26.52,36.01],[-26.07,35.9],[-25.96,35.71],[-26.07,35.37],[-26.13,35.34]]]},\"properties\":{\"id\":302,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[378,377,376,301,224,225,226,303]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.31,35.57],[-25.57,35.17],[-26.07,35.37],[-25.96,35.71],[-25.51,35.87],[-25.31,35.68],[-25.31,35.57]]]},\"properties\":{\"id\":303,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":20544,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[304,379,378,302,226,227]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.58,35.34],[-24.83,35.23],[-25.31,35.57],[-25.31,35.68],[-24.86,35.87],[-24.58,35.34]]]},\"properties\":{\"id\":304,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":14000,\"state\":4,\"province\":33,\"culture\":1,\"religion\":1,\"neighbors\":[305,380,379,303,227]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.55,35.34],[-24.58,35.34],[-24.86,35.87],[-24.86,35.99],[-24.47,36.13],[-24.3,35.43],[-24.55,35.34]]]},\"properties\":{\"id\":305,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":25876,\"state\":4,\"province\":39,\"culture\":1,\"religion\":1,\"neighbors\":[381,380,304,227,228,229]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.48,35.43],[-23.74,34.98],[-24.27,35.43],[-23.99,35.73],[-23.51,35.57],[-23.48,35.43]]]},\"properties\":{\"id\":306,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":39,\"culture\":1,\"religion\":1,\"neighbors\":[308,382,381,229,307]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.51,35.57],[-23.99,35.73],[-23.93,36.07],[-23.85,36.13],[-23.46,35.65],[-23.51,35.57]]]},\"properties\":{\"id\":307,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":16872,\"state\":4,\"province\":39,\"culture\":1,\"religion\":1,\"neighbors\":[308,306,229,155,230]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.87,35.45],[-23.09,35.34],[-23.48,35.43],[-23.51,35.57],[-23.46,35.65],[-23.17,36.01],[-22.92,35.87],[-22.78,35.73],[-22.87,35.45]]]},\"properties\":{\"id\":308,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":18000,\"state\":4,\"province\":36,\"culture\":1,\"religion\":1,\"neighbors\":[309,383,382,306,307,230,231,232]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.11,35.29],[-22.78,35.29],[-22.87,35.45],[-22.78,35.73],[-22.36,35.76],[-22.27,35.71],[-22.11,35.29]]]},\"properties\":{\"id\":309,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":21147,\"state\":4,\"province\":36,\"culture\":9,\"religion\":9,\"neighbors\":[310,384,383,308,232,233]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.6,35.26],[-22.08,35.23],[-22.11,35.29],[-22.27,35.71],[-21.68,35.99],[-21.49,35.85],[-21.46,35.48],[-21.6,35.26]]]},\"properties\":{\"id\":310,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":27108,\"state\":4,\"province\":23,\"culture\":1,\"religion\":1,\"neighbors\":[386,385,384,309,233,234,311]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.01,35.43],[-21.46,35.48],[-21.49,35.85],[-21.09,36.07],[-20.81,35.76],[-21.01,35.43]]]},\"properties\":{\"id\":311,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[312,386,310,234,235]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.39,35.65],[-20.78,35.12],[-20.84,35.15],[-21.01,35.43],[-20.81,35.76],[-20.42,35.73],[-20.42,35.73],[-20.39,35.65]]]},\"properties\":{\"id\":312,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[313,388,387,386,311,235,236]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20,35.4],[-20.05,35.4],[-20.39,35.65],[-20.42,35.73],[-20.02,36.01],[-19.91,35.76],[-20,35.4]]]},\"properties\":{\"id\":313,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":11000,\"state\":4,\"province\":46,\"culture\":9,\"religion\":9,\"neighbors\":[314,389,388,312,236,237]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.8,35.29],[-4.27,35.23],[-4.33,35.87],[-3.88,35.82],[-3.8,35.68],[-3.8,35.29]]]},\"properties\":{\"id\":343,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":18000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[344,418,342,266,267]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.03,35.85],[-0.14,35.37],[-0.7,35.87],[-0.62,35.9],[-0.03,35.85]]]},\"properties\":{\"id\":350,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":3000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[273,351,349,272]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.67,35.2],[0.51,35.37],[0.56,35.65],[0.59,35.68],[1.15,35.73],[1.07,35.4],[0.9,35.2],[0.67,35.2]]]},\"properties\":{\"id\":352,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":16000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[427,426,351,274,275,353,428]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.6,35.23],[1.07,35.4],[1.15,35.73],[1.29,35.87],[1.69,35.4],[1.6,35.23]]]},\"properties\":{\"id\":353,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":8628,\"state\":10,\"province\":139,\"culture\":4,\"religion\":4,\"neighbors\":[429,428,352,275,354]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.29,35.17],[2.93,35.37],[2.84,35.79],[3.26,35.85],[3.66,35.34],[3.66,35.31],[3.29,35.17]]]},\"properties\":{\"id\":356,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":7000,\"state\":10,\"province\":134,\"culture\":3,\"religion\":3,\"neighbors\":[432,431,355,279,357,433]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.64,35.23],[4.47,35.06],[3.94,35.57],[4.05,35.82],[4.19,35.85],[4.39,35.79],[4.64,35.34],[4.64,35.23]]]},\"properties\":{\"id\":358,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":7000,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[360,434,433,357,281,282,359]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.64,35.34],[4.39,35.79],[4.87,36.01],[5.09,35.82],[5.12,35.76],[4.64,35.34]]]},\"properties\":{\"id\":359,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[360,358,282,283,361]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.09,35.12],[4.64,35.23],[4.64,35.34],[5.12,35.76],[5.23,35.59],[5.09,35.12]]]},\"properties\":{\"id\":360,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":7623,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[435,434,358,359,361]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.28,35.45],[10.91,35.85],[11.39,35.93],[11.42,35.9],[11.45,35.62],[11.28,35.45]]]},\"properties\":{\"id\":373,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":18647,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[375,371,294,295,297]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.75,34.95],[-27.22,35.03],[-27.42,35.29],[-27.25,35.48],[-26.52,35.43],[-26.47,35.34],[-26.75,34.95]]]},\"properties\":{\"id\":376,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":20000,\"state\":4,\"province\":32,\"culture\":1,\"religion\":1,\"neighbors\":[377,449,301,302]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.13,34.75],[-26.58,34.5],[-26.75,34.95],[-26.47,35.34],[-26.13,35.34],[-26.13,34.75]]]},\"properties\":{\"id\":377,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":21000,\"state\":4,\"province\":32,\"culture\":1,\"religion\":1,\"neighbors\":[378,450,449,376,302]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.4,34.84],[-25.96,34.67],[-26.13,34.75],[-26.13,35.34],[-26.07,35.37],[-25.57,35.17],[-25.4,34.84]]]},\"properties\":{\"id\":378,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":22766,\"state\":4,\"province\":32,\"culture\":1,\"religion\":1,\"neighbors\":[379,451,450,377,302,303]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.2,34.78],[-25.26,34.75],[-25.4,34.84],[-25.57,35.17],[-25.31,35.57],[-24.83,35.23],[-25.2,34.78]]]},\"properties\":{\"id\":379,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":32,\"culture\":1,\"religion\":1,\"neighbors\":[380,452,451,378,303,304]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.55,35.34],[-24.38,34.61],[-24.44,34.56],[-24.95,34.61],[-25.2,34.78],[-24.83,35.23],[-24.58,35.34],[-24.55,35.34]]]},\"properties\":{\"id\":380,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":39,\"culture\":1,\"religion\":1,\"neighbors\":[305,381,454,453,452,379,304]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.96,34.64],[-24.38,34.61],[-24.55,35.34],[-24.3,35.43],[-24.27,35.43],[-23.74,34.98],[-23.71,34.84],[-23.96,34.64]]]},\"properties\":{\"id\":381,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":25000,\"state\":4,\"province\":39,\"culture\":1,\"religion\":1,\"neighbors\":[455,454,380,305,229,306,382]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.15,34.84],[-23.43,34.73],[-23.71,34.84],[-23.74,34.98],[-23.48,35.43],[-23.09,35.34],[-23.15,34.84]]]},\"properties\":{\"id\":382,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":21962,\"state\":4,\"province\":36,\"culture\":1,\"religion\":1,\"neighbors\":[383,456,455,381,306,308]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.78,34.81],[-23.15,34.84],[-23.09,35.34],[-22.87,35.45],[-22.78,35.29],[-22.7,34.87],[-22.78,34.81]]]},\"properties\":{\"id\":383,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":36,\"culture\":1,\"religion\":1,\"neighbors\":[457,456,382,308,309,384]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.22,34.95],[-22.7,34.87],[-22.78,35.29],[-22.11,35.29],[-22.08,35.23],[-22.22,34.95]]]},\"properties\":{\"id\":384,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":14000,\"state\":4,\"province\":36,\"culture\":9,\"religion\":9,\"neighbors\":[385,457,383,309,310]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.6,34.53],[-21.68,34.5],[-22.13,34.75],[-22.22,34.95],[-22.08,35.23],[-21.6,35.26],[-21.37,34.87],[-21.6,34.53]]]},\"properties\":{\"id\":385,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":27000,\"state\":4,\"province\":34,\"culture\":1,\"religion\":1,\"neighbors\":[459,533,458,457,384,310,386]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.35,34.87],[-21.37,34.87],[-21.6,35.26],[-21.46,35.48],[-21.01,35.43],[-20.84,35.15],[-21.23,34.92],[-21.35,34.87]]]},\"properties\":{\"id\":386,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":23344,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[460,459,385,310,311,312,387]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.48,34.78],[-20.59,34.47],[-21.23,34.92],[-20.84,35.15],[-20.78,35.12],[-20.48,34.78]]]},\"properties\":{\"id\":387,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[388,461,460,386,312]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.33,34.84],[-20.48,34.78],[-20.78,35.12],[-20.39,35.65],[-20.05,35.4],[-20.33,34.84]]]},\"properties\":{\"id\":388,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":21000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[389,461,387,312,313]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.72,34.67],[-20.33,34.84],[-20.05,35.4],[-20,35.4],[-19.63,35.31],[-19.52,35.15],[-19.6,34.73],[-19.72,34.67]]]},\"properties\":{\"id\":389,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":32951,\"state\":4,\"province\":49,\"culture\":9,\"religion\":9,\"neighbors\":[462,461,388,313,314,315,390]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.93,34.87],[-19.46,34.61],[-19.6,34.73],[-19.52,35.15],[-18.82,35.09],[-18.82,35.06],[-18.93,34.87]]]},\"properties\":{\"id\":390,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":49,\"culture\":9,\"religion\":9,\"neighbors\":[464,463,462,389,315,391]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.38,34.87],[0.9,35.2],[1.07,35.4],[1.6,35.23],[1.49,34.87],[1.38,34.87]]]},\"properties\":{\"id\":428,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":13000,\"state\":10,\"province\":139,\"culture\":4,\"religion\":4,\"neighbors\":[501,427,352,353,429]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.69,34.67],[1.49,34.87],[1.6,35.23],[1.69,35.4],[2.11,35.51],[2.25,35.26],[2.14,34.73],[2.08,34.7],[1.69,34.67]]]},\"properties\":{\"id\":429,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":33000,\"state\":10,\"province\":136,\"culture\":4,\"religion\":4,\"neighbors\":[502,501,428,353,354,355,430,503]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.64,34.81],[2.14,34.73],[2.25,35.26],[2.7,35.12],[2.73,34.92],[2.64,34.81]]]},\"properties\":{\"id\":430,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":34617,\"state\":10,\"province\":136,\"culture\":4,\"religion\":4,\"neighbors\":[504,503,429,355,431]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.73,34.92],[2.7,35.12],[2.93,35.37],[3.29,35.17],[3.23,34.87],[3.15,34.78],[2.73,34.92]]]},\"properties\":{\"id\":431,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":22237,\"state\":10,\"province\":143,\"culture\":4,\"religion\":4,\"neighbors\":[504,430,355,356,432,505]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.23,34.87],[3.29,35.17],[3.66,35.31],[3.82,34.98],[3.68,34.73],[3.23,34.87]]]},\"properties\":{\"id\":432,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":28336,\"state\":10,\"province\":134,\"culture\":4,\"religion\":4,\"neighbors\":[505,431,356,433,506]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.45,34.75],[6.95,34.78],[7.14,35.23],[7.48,35.26],[7.45,34.75]]]},\"properties\":{\"id\":439,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":12000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[440,512,438,364]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.82,34.84],[10.07,35.31],[10.24,35.4],[10.46,35.17],[10.49,35.15],[10.35,34.53],[10.29,34.47],[9.82,34.84]]]},\"properties\":{\"id\":444,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":24940,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[517,443,369,370,372,445,519]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.63,34.28],[-27.2,34.14],[-27.31,34.19],[-27.22,35.03],[-26.75,34.95],[-26.58,34.5],[-26.63,34.28]]]},\"properties\":{\"id\":449,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":40111,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[450,523,376,377]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.9,34.36],[-25.96,34.31],[-26.58,34.22],[-26.63,34.28],[-26.58,34.5],[-26.13,34.75],[-25.96,34.67],[-25.9,34.36]]]},\"properties\":{\"id\":450,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":21616,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[451,525,524,523,449,377,378]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.42,34.22],[-25.9,34.36],[-25.96,34.67],[-25.4,34.84],[-25.26,34.75],[-25.42,34.22]]]},\"properties\":{\"id\":451,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[452,525,450,378,379]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.86,34.22],[-25.28,33.97],[-25.4,34.03],[-25.42,34.22],[-25.26,34.75],[-25.2,34.78],[-24.95,34.61],[-24.86,34.22]]]},\"properties\":{\"id\":452,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":23507,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[453,526,597,525,451,379,380]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.47,34.08],[-24.58,34.08],[-24.86,34.22],[-24.95,34.61],[-24.44,34.56],[-24.47,34.08]]]},\"properties\":{\"id\":453,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":11000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[454,527,526,452,380]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.93,34.25],[-24.44,34.05],[-24.47,34.08],[-24.44,34.56],[-24.38,34.61],[-23.96,34.64],[-23.93,34.25]]]},\"properties\":{\"id\":454,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":39,\"culture\":1,\"religion\":1,\"neighbors\":[455,528,527,453,380,381]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.43,34.08],[-23.82,34.08],[-23.93,34.25],[-23.96,34.64],[-23.71,34.84],[-23.43,34.73],[-23.32,34.31],[-23.43,34.08]]]},\"properties\":{\"id\":455,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":24000,\"state\":4,\"province\":36,\"culture\":1,\"religion\":1,\"neighbors\":[530,529,528,454,381,382,456]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.72,34.17],[-23.32,34.31],[-23.43,34.73],[-23.15,34.84],[-22.78,34.81],[-22.67,34.28],[-22.72,34.17]]]},\"properties\":{\"id\":456,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":36,\"culture\":1,\"religion\":1,\"neighbors\":[531,530,455,382,383,457]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.33,34.36],[-22.67,34.28],[-22.78,34.81],[-22.7,34.87],[-22.22,34.95],[-22.13,34.75],[-22.33,34.36]]]},\"properties\":{\"id\":457,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":25145,\"state\":4,\"province\":36,\"culture\":9,\"religion\":9,\"neighbors\":[458,531,456,383,384,385]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.82,34.11],[-22.05,34.08],[-22.33,34.36],[-22.13,34.75],[-21.68,34.5],[-21.82,34.11]]]},\"properties\":{\"id\":458,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[533,532,531,457,385]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.35,34.87],[-20.84,34.25],[-20.98,34.11],[-21.6,34.53],[-21.37,34.87],[-21.35,34.87]]]},\"properties\":{\"id\":459,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[386,460,534,533,385]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.59,34.39],[-20.84,34.25],[-21.35,34.87],[-21.23,34.92],[-20.59,34.47],[-20.59,34.39]]]},\"properties\":{\"id\":460,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":12000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[461,534,459,386,387]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.72,34.67],[-20.05,34.05],[-20.05,34.03],[-20.28,34.14],[-20.59,34.39],[-20.59,34.47],[-20.48,34.78],[-20.33,34.84],[-19.72,34.67]]]},\"properties\":{\"id\":461,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":27000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[389,462,536,535,534,460,387,388]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.93,34.87],[-18.98,34.33],[-19.32,34.39],[-19.46,34.61],[-18.93,34.87]]]},\"properties\":{\"id\":463,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":10000,\"state\":4,\"province\":49,\"culture\":9,\"religion\":9,\"neighbors\":[390,464,537,462]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.75,34.31],[8.89,34.67],[9.28,34.92],[9.39,34.87],[9.2,34.33],[9.06,34.19],[8.75,34.31]]]},\"properties\":{\"id\":515,\"height\":4,\"biome\":11,\"type\":\"island\",\"population\":15000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[589,514,442,443,516,590]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.2,34.33],[9.39,34.87],[9.7,34.78],[9.65,34.25],[9.2,34.33]]]},\"properties\":{\"id\":516,\"height\":4,\"biome\":10,\"type\":\"island\",\"population\":13000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[590,515,443,517]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.66,33.5],[-27.14,33.55],[-27.2,34.14],[-26.63,34.28],[-26.58,34.22],[-26.3,33.75],[-26.66,33.5]]]},\"properties\":{\"id\":523,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":39109,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[596,595,449,450,524]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.96,33.72],[-26.02,33.66],[-26.3,33.75],[-26.58,34.22],[-25.96,34.31],[-25.96,33.72]]]},\"properties\":{\"id\":524,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[525,597,596,523,450]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.4,34.03],[-25.96,33.72],[-25.96,34.31],[-25.9,34.36],[-25.42,34.22],[-25.4,34.03]]]},\"properties\":{\"id\":525,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[452,597,524,450,451]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.09,33.72],[-25.12,33.72],[-25.28,33.97],[-24.86,34.22],[-24.58,34.08],[-25.09,33.72]]]},\"properties\":{\"id\":526,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[527,598,597,452,453]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.36,33.66],[-25.03,33.69],[-25.09,33.72],[-24.58,34.08],[-24.47,34.08],[-24.44,34.05],[-24.3,33.75],[-24.36,33.66]]]},\"properties\":{\"id\":527,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":19546,\"state\":4,\"province\":35,\"culture\":9,\"religion\":9,\"neighbors\":[600,599,598,526,453,454,528]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.93,34.25],[-23.82,34.08],[-24.02,33.75],[-24.3,33.75],[-24.44,34.05],[-23.93,34.25]]]},\"properties\":{\"id\":528,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12000,\"state\":4,\"province\":35,\"culture\":1,\"religion\":1,\"neighbors\":[454,455,529,600,527]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.37,33.78],[-23.68,33.47],[-24.02,33.75],[-23.82,34.08],[-23.43,34.08],[-23.37,33.78]]]},\"properties\":{\"id\":529,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":35,\"culture\":1,\"religion\":1,\"neighbors\":[530,601,600,528,455]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.7,33.92],[-23.12,33.66],[-23.37,33.78],[-23.43,34.08],[-23.32,34.31],[-22.72,34.17],[-22.7,33.92]]]},\"properties\":{\"id\":530,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":21695,\"state\":4,\"province\":36,\"culture\":1,\"religion\":1,\"neighbors\":[531,602,601,529,455,456]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.33,34.36],[-22.05,34.08],[-22.3,33.72],[-22.7,33.92],[-22.7,33.92],[-22.72,34.17],[-22.67,34.28],[-22.33,34.36]]]},\"properties\":{\"id\":531,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":36,\"culture\":1,\"religion\":1,\"neighbors\":[457,458,532,603,602,530,456]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.49,33.64],[-22.19,33.52],[-22.3,33.72],[-22.05,34.08],[-21.82,34.11],[-21.46,33.66],[-21.49,33.64]]]},\"properties\":{\"id\":532,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":27,\"culture\":9,\"religion\":9,\"neighbors\":[605,604,603,531,458,533]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.21,33.72],[-21.46,33.66],[-21.82,34.11],[-21.68,34.5],[-21.6,34.53],[-20.98,34.11],[-21.12,33.8],[-21.21,33.72]]]},\"properties\":{\"id\":533,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":40677,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[606,605,532,458,385,459,534]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.64,33.64],[-21.12,33.8],[-20.98,34.11],[-20.84,34.25],[-20.59,34.39],[-20.28,34.14],[-20.64,33.64]]]},\"properties\":{\"id\":534,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":23945,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[535,606,533,459,460,461]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.14,33.58],[-20.48,33.44],[-20.64,33.64],[-20.28,34.14],[-20.05,34.03],[-19.97,33.8],[-20.14,33.58]]]},\"properties\":{\"id\":535,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[608,607,606,534,461,536]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.52,33.66],[-19.97,33.8],[-20.05,34.03],[-20.05,34.05],[-19.35,34.33],[-19.52,33.66]]]},\"properties\":{\"id\":536,\"height\":4,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[537,608,535,461,462]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.66,33.5],[-26.58,33.1],[-26.86,32.91],[-27.2,32.94],[-27.39,33.13],[-27.14,33.55],[-26.66,33.5]]]},\"properties\":{\"id\":595,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":30790,\"state\":4,\"province\":30,\"culture\":9,\"religion\":9,\"neighbors\":[523,596,669,743]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.93,33.36],[-26.44,33.05],[-26.58,33.1],[-26.66,33.5],[-26.3,33.75],[-26.02,33.66],[-25.93,33.36]]]},\"properties\":{\"id\":596,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":25231,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[597,670,669,595,523,524]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.26,33.38],[-25.48,33.3],[-25.85,33.3],[-25.93,33.36],[-26.02,33.66],[-25.96,33.72],[-25.4,34.03],[-25.28,33.97],[-25.12,33.72],[-25.26,33.38]]]},\"properties\":{\"id\":597,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":26000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[598,672,671,670,596,524,525,452,526]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.92,32.94],[-24.95,32.94],[-25.26,33.38],[-25.12,33.72],[-25.09,33.72],[-25.03,33.69],[-24.55,33.24],[-24.89,32.94],[-24.92,32.94]]]},\"properties\":{\"id\":598,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17589,\"state\":4,\"province\":35,\"culture\":9,\"religion\":9,\"neighbors\":[747,746,672,597,526,527,599,673]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.44,33.3],[-24.55,33.24],[-25.03,33.69],[-24.36,33.66],[-24.44,33.3]]]},\"properties\":{\"id\":599,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9000,\"state\":4,\"province\":35,\"culture\":9,\"religion\":9,\"neighbors\":[600,673,598,527]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.79,33.13],[-24.36,33.22],[-24.44,33.3],[-24.36,33.66],[-24.3,33.75],[-24.02,33.75],[-23.68,33.47],[-23.68,33.27],[-23.79,33.13]]]},\"properties\":{\"id\":600,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":24015,\"state\":4,\"province\":35,\"culture\":9,\"religion\":9,\"neighbors\":[675,674,673,599,527,528,529,601]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.03,33.22],[-23.2,33.08],[-23.68,33.27],[-23.68,33.47],[-23.37,33.78],[-23.12,33.66],[-23.03,33.22]]]},\"properties\":{\"id\":601,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20786,\"state\":4,\"province\":35,\"culture\":1,\"religion\":1,\"neighbors\":[602,676,675,600,529,530]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.75,33.24],[-23.03,33.22],[-23.12,33.66],[-22.7,33.92],[-22.7,33.92],[-22.7,33.27],[-22.75,33.24]]]},\"properties\":{\"id\":602,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":42,\"culture\":1,\"religion\":1,\"neighbors\":[677,676,601,530,531,603]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.25,33.38],[-22.7,33.27],[-22.7,33.92],[-22.3,33.72],[-22.19,33.52],[-22.25,33.38]]]},\"properties\":{\"id\":603,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":14000,\"state\":4,\"province\":42,\"culture\":9,\"religion\":9,\"neighbors\":[604,677,602,531,532]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.68,33.16],[-22.16,33.22],[-22.25,33.38],[-22.19,33.52],[-21.49,33.64],[-21.57,33.24],[-21.68,33.16]]]},\"properties\":{\"id\":604,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":27,\"culture\":9,\"religion\":9,\"neighbors\":[679,678,677,603,532,605]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.09,32.8],[-21.18,32.8],[-21.57,33.24],[-21.49,33.64],[-21.46,33.66],[-21.21,33.72],[-20.9,33.08],[-21.09,32.8]]]},\"properties\":{\"id\":605,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":31420,\"state\":4,\"province\":27,\"culture\":9,\"religion\":9,\"neighbors\":[680,753,679,604,532,533,606]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.59,33.13],[-20.9,33.08],[-21.21,33.72],[-21.12,33.8],[-20.64,33.64],[-20.48,33.44],[-20.59,33.13]]]},\"properties\":{\"id\":606,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":34,\"culture\":9,\"religion\":9,\"neighbors\":[607,680,605,533,534,535]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.05,33.13],[-20.5,33.05],[-20.59,33.13],[-20.48,33.44],[-20.14,33.58],[-20.05,33.13]]]},\"properties\":{\"id\":607,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12674,\"state\":4,\"province\":41,\"culture\":9,\"religion\":9,\"neighbors\":[608,681,680,606,535]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.52,33.41],[-19.72,33.02],[-19.83,32.94],[-20.05,33.13],[-20.14,33.58],[-19.97,33.8],[-19.52,33.66],[-19.49,33.64],[-19.52,33.41]]]},\"properties\":{\"id\":608,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[609,683,682,681,607,535,536,537]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.79,33.24],[-18.98,32.8],[-19.01,32.82],[-19.52,33.41],[-19.49,33.64],[-19.18,33.64],[-18.79,33.24]]]},\"properties\":{\"id\":609,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":20000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[610,684,682,683,608,537]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.3,32.74],[-26.58,32.52],[-26.86,32.91],[-26.58,33.1],[-26.44,33.05],[-26.3,32.74]]]},\"properties\":{\"id\":669,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":10000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[670,744,743,595,596]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.85,32.6],[-26.3,32.74],[-26.44,33.05],[-25.93,33.36],[-25.85,33.3],[-25.82,32.63],[-25.85,32.6]]]},\"properties\":{\"id\":670,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[745,744,669,596,597,671]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.48,33.3],[-25.37,32.71],[-25.54,32.57],[-25.82,32.63],[-25.85,33.3],[-25.48,33.3]]]},\"properties\":{\"id\":671,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[597,672,746,745,670]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.95,32.94],[-25.37,32.71],[-25.48,33.3],[-25.26,33.38],[-24.95,32.94]]]},\"properties\":{\"id\":672,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12900,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[598,746,671,597]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.27,32.77],[-24.44,32.63],[-24.89,32.94],[-24.55,33.24],[-24.44,33.3],[-24.36,33.22],[-24.27,32.77]]]},\"properties\":{\"id\":673,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":16681,\"state\":4,\"province\":35,\"culture\":9,\"religion\":9,\"neighbors\":[674,748,747,598,599,600]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.79,33.13],[-23.85,32.74],[-24.27,32.77],[-24.36,33.22],[-23.79,33.13]]]},\"properties\":{\"id\":674,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":22099,\"state\":4,\"province\":35,\"culture\":9,\"religion\":9,\"neighbors\":[600,675,748,673]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.17,32.8],[-23.77,32.54],[-23.85,32.74],[-23.79,33.13],[-23.68,33.27],[-23.2,33.08],[-23.17,32.8]]]},\"properties\":{\"id\":675,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20000,\"state\":4,\"province\":35,\"culture\":9,\"religion\":9,\"neighbors\":[676,749,748,674,600,601]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.56,32.85],[-23.01,32.6],[-23.17,32.8],[-23.2,33.08],[-23.03,33.22],[-22.75,33.24],[-22.56,32.85]]]},\"properties\":{\"id\":676,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":39991,\"state\":4,\"province\":42,\"culture\":1,\"religion\":1,\"neighbors\":[677,751,749,675,601,602]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.25,32.74],[-22.56,32.85],[-22.75,33.24],[-22.7,33.27],[-22.25,33.38],[-22.16,33.22],[-22.22,32.77],[-22.25,32.74]]]},\"properties\":{\"id\":677,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":42,\"culture\":9,\"religion\":9,\"neighbors\":[752,751,676,602,603,604,678]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.68,33.16],[-21.8,32.82],[-22.22,32.77],[-22.16,33.22],[-21.68,33.16]]]},\"properties\":{\"id\":678,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":11000,\"state\":4,\"province\":27,\"culture\":9,\"religion\":9,\"neighbors\":[604,679,752,677]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.18,32.8],[-21.49,32.54],[-21.8,32.82],[-21.68,33.16],[-21.57,33.24],[-21.18,32.8]]]},\"properties\":{\"id\":679,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":14000,\"state\":4,\"province\":27,\"culture\":9,\"religion\":9,\"neighbors\":[605,753,752,678,604]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.5,33.05],[-20.36,32.66],[-20.48,32.54],[-21.07,32.74],[-21.09,32.8],[-20.9,33.08],[-20.59,33.13],[-20.5,33.05]]]},\"properties\":{\"id\":680,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":41,\"culture\":9,\"religion\":9,\"neighbors\":[607,681,755,754,753,605,606]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.86,32.82],[-20,32.6],[-20.36,32.66],[-20.5,33.05],[-20.05,33.13],[-19.83,32.94],[-19.86,32.82]]]},\"properties\":{\"id\":681,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":16830,\"state\":4,\"province\":41,\"culture\":9,\"religion\":9,\"neighbors\":[682,756,755,680,607,608]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.01,32.82],[-19.72,33.02],[-19.52,33.41],[-19.01,32.82]]]},\"properties\":{\"id\":683,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":10000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[609,682,608]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.58,32.52],[-26.66,32.15],[-27.2,32.18],[-27.2,32.94],[-26.86,32.91],[-26.58,32.52]]]},\"properties\":{\"id\":743,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":22000,\"state\":4,\"province\":30,\"culture\":9,\"religion\":9,\"neighbors\":[669,744,816,595]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.07,32.18],[-26.66,32.15],[-26.66,32.15],[-26.58,32.52],[-26.3,32.74],[-25.85,32.6],[-26.07,32.18]]]},\"properties\":{\"id\":744,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":24402,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[745,817,816,743,669,670]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.37,32.29],[-25.42,32.01],[-25.93,31.9],[-26.07,32.18],[-25.85,32.6],[-25.82,32.63],[-25.54,32.57],[-25.37,32.29]]]},\"properties\":{\"id\":745,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[746,819,818,817,744,670,671]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.92,32.94],[-24.89,32.29],[-25.37,32.29],[-25.54,32.57],[-25.37,32.71],[-24.95,32.94],[-24.92,32.94]]]},\"properties\":{\"id\":746,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[598,747,819,745,671,672]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.41,32.1],[-24.64,32.1],[-24.89,32.29],[-24.92,32.94],[-24.89,32.94],[-24.44,32.63],[-24.41,32.1]]]},\"properties\":{\"id\":747,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":35,\"culture\":9,\"religion\":9,\"neighbors\":[748,820,819,746,598,673]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.79,32.29],[-24.33,32.04],[-24.41,32.1],[-24.44,32.63],[-24.27,32.77],[-23.85,32.74],[-23.77,32.54],[-23.79,32.29]]]},\"properties\":{\"id\":748,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":35,\"culture\":9,\"religion\":9,\"neighbors\":[749,821,820,747,673,674,675]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.98,32.49],[-23.4,32.12],[-23.71,32.24],[-23.79,32.29],[-23.77,32.54],[-23.17,32.8],[-23.01,32.6],[-22.98,32.49]]]},\"properties\":{\"id\":749,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":22772,\"state\":4,\"province\":42,\"culture\":9,\"religion\":9,\"neighbors\":[751,750,822,821,748,675,676]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.87,31.9],[-23.15,31.68],[-23.4,32.12],[-22.98,32.49],[-22.72,32.24],[-22.87,31.9]]]},\"properties\":{\"id\":750,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":23803,\"state\":4,\"province\":42,\"culture\":9,\"religion\":9,\"neighbors\":[824,823,822,749,751]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.25,32.29],[-22.72,32.24],[-22.98,32.49],[-23.01,32.6],[-22.56,32.85],[-22.25,32.74],[-22.25,32.29]]]},\"properties\":{\"id\":751,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":21000,\"state\":4,\"province\":42,\"culture\":9,\"religion\":9,\"neighbors\":[752,824,750,749,676,677]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.6,32.18],[-22.02,32.07],[-22.25,32.29],[-22.25,32.74],[-22.22,32.77],[-21.8,32.82],[-21.49,32.54],[-21.6,32.18]]]},\"properties\":{\"id\":752,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":38937,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[753,825,824,751,677,678,679]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.32,32.01],[-21.4,32.04],[-21.6,32.18],[-21.49,32.54],[-21.18,32.8],[-21.09,32.8],[-21.07,32.74],[-20.92,32.21],[-21.32,32.01]]]},\"properties\":{\"id\":753,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":21000,\"state\":4,\"province\":27,\"culture\":9,\"religion\":9,\"neighbors\":[827,826,825,752,679,605,680,754]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.64,32.12],[-20.92,32.21],[-21.07,32.74],[-20.48,32.54],[-20.64,32.12]]]},\"properties\":{\"id\":754,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":41,\"culture\":9,\"religion\":9,\"neighbors\":[755,827,753,680]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.88,32.15],[-20.05,32.01],[-20.56,32.04],[-20.64,32.12],[-20.48,32.54],[-20.36,32.66],[-20,32.6],[-19.88,32.15]]]},\"properties\":{\"id\":755,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":24755,\"state\":4,\"province\":41,\"culture\":9,\"religion\":9,\"neighbors\":[756,829,828,827,754,680,681]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.74,32.12],[-19.88,32.15],[-20,32.6],[-19.86,32.82],[-19.27,32.54],[-19.74,32.12]]]},\"properties\":{\"id\":756,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":25876,\"state\":4,\"province\":38,\"culture\":9,\"religion\":9,\"neighbors\":[757,829,755,681,682]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.66,32.15],[-26.52,31.56],[-27.2,31.59],[-27.37,32.07],[-27.2,32.18],[-26.66,32.15],[-26.66,32.15]]]},\"properties\":{\"id\":816,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":27602,\"state\":4,\"province\":30,\"culture\":9,\"religion\":9,\"neighbors\":[744,817,890,743]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.99,31.62],[-26.27,31.45],[-26.47,31.48],[-26.52,31.56],[-26.66,32.15],[-26.07,32.18],[-25.93,31.9],[-25.99,31.62]]]},\"properties\":{\"id\":817,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":25573,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[818,892,891,890,816,744,745]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.48,31.37],[-25.48,31.37],[-25.99,31.62],[-25.93,31.9],[-25.42,32.01],[-25.17,31.54],[-25.48,31.37]]]},\"properties\":{\"id\":818,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[893,965,892,817,745,819]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.64,32.1],[-25.17,31.54],[-25.17,31.54],[-25.42,32.01],[-25.37,32.29],[-24.89,32.29],[-24.64,32.1]]]},\"properties\":{\"id\":819,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20000,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[747,820,893,818,745,746]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.22,31.56],[-25.06,31.42],[-25.17,31.54],[-24.64,32.1],[-24.41,32.1],[-24.33,32.04],[-24.22,31.56],[-24.22,31.56]]]},\"properties\":{\"id\":820,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":22000,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[895,894,893,819,747,748,821]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.71,31.62],[-24.02,31.51],[-24.22,31.56],[-24.33,32.04],[-23.79,32.29],[-23.71,32.24],[-23.71,31.62]]]},\"properties\":{\"id\":821,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":22000,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[822,896,895,820,748,749]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.17,31.65],[-23.34,31.54],[-23.71,31.62],[-23.71,32.24],[-23.4,32.12],[-23.15,31.68],[-23.17,31.65]]]},\"properties\":{\"id\":822,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":42,\"culture\":9,\"religion\":9,\"neighbors\":[823,897,896,821,749,750]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.58,31.26],[-22.78,31.23],[-23.17,31.65],[-23.15,31.68],[-22.87,31.9],[-22.47,31.68],[-22.58,31.26]]]},\"properties\":{\"id\":823,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":33017,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[898,971,897,822,750,824]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.08,31.93],[-22.47,31.68],[-22.87,31.9],[-22.72,32.24],[-22.25,32.29],[-22.02,32.07],[-22.08,31.93]]]},\"properties\":{\"id\":824,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":21000,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[825,898,823,750,751,752]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.43,31.76],[-21.77,31.37],[-21.94,31.51],[-22.08,31.93],[-22.02,32.07],[-21.6,32.18],[-21.4,32.04],[-21.43,31.76]]]},\"properties\":{\"id\":825,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":22000,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[826,900,899,898,824,752,753]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.32,32.01],[-20.87,31.59],[-21.12,31.17],[-21.43,31.76],[-21.4,32.04],[-21.32,32.01]]]},\"properties\":{\"id\":826,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":15822,\"state\":4,\"province\":27,\"culture\":9,\"religion\":9,\"neighbors\":[753,827,901,900,825]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.73,31.65],[-20.87,31.59],[-21.32,32.01],[-20.92,32.21],[-20.64,32.12],[-20.56,32.04],[-20.64,31.73],[-20.73,31.65]]]},\"properties\":{\"id\":827,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":41,\"culture\":9,\"religion\":9,\"neighbors\":[902,901,826,753,754,755,828]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.05,32.01],[-20.05,31.45],[-20.64,31.73],[-20.56,32.04],[-20.05,32.01]]]},\"properties\":{\"id\":828,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":17006,\"state\":4,\"province\":41,\"culture\":9,\"religion\":9,\"neighbors\":[755,829,902,827]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.6,31.34],[-20.05,31.45],[-20.05,31.45],[-20.05,32.01],[-19.88,32.15],[-19.74,32.12],[-19.49,31.9],[-19.43,31.54],[-19.6,31.34]]]},\"properties\":{\"id\":829,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":24000,\"state\":4,\"province\":38,\"culture\":9,\"religion\":9,\"neighbors\":[904,903,902,828,755,756,757,830]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.47,31.48],[-26.72,31.15],[-27.28,30.98],[-27.28,30.98],[-27.2,31.59],[-26.52,31.56],[-26.47,31.48]]]},\"properties\":{\"id\":890,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":32,\"culture\":9,\"religion\":9,\"neighbors\":[817,891,963,816]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.1,31.03],[-26.61,31.01],[-26.72,31.15],[-26.47,31.48],[-26.27,31.45],[-26.1,31.03]]]},\"properties\":{\"id\":891,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":11000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[892,964,963,890,817]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.9,30.75],[-25.93,30.75],[-26.1,31.03],[-26.27,31.45],[-25.99,31.62],[-25.48,31.37],[-25.9,30.75]]]},\"properties\":{\"id\":892,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[965,1037,964,891,817,818]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.81,30.81],[-25.26,30.78],[-25.48,31.37],[-25.17,31.54],[-25.17,31.54],[-25.06,31.42],[-24.75,30.89],[-24.81,30.81]]]},\"properties\":{\"id\":893,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":25452,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[967,966,965,818,819,820,894]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.52,30.98],[-24.75,30.89],[-25.06,31.42],[-24.22,31.56],[-24.36,31.09],[-24.52,30.98]]]},\"properties\":{\"id\":894,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":37275,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[968,967,893,820,895]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.62,31.03],[-23.91,30.87],[-24.36,31.09],[-24.22,31.56],[-24.22,31.56],[-24.02,31.51],[-23.62,31.03]]]},\"properties\":{\"id\":895,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":18000,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[896,969,968,894,820,821]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.54,31.03],[-23.62,31.03],[-24.02,31.51],[-23.71,31.62],[-23.34,31.54],[-23.54,31.03]]]},\"properties\":{\"id\":896,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":16034,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[897,969,895,821,822]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.92,30.98],[-23.32,30.81],[-23.54,31.03],[-23.34,31.54],[-23.17,31.65],[-22.78,31.23],[-22.92,30.98]]]},\"properties\":{\"id\":897,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[971,970,969,896,822,823]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.94,31.51],[-22.42,31.17],[-22.58,31.26],[-22.47,31.68],[-22.08,31.93],[-21.94,31.51]]]},\"properties\":{\"id\":898,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[825,899,971,823,824]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.6,31.06],[-22.19,30.81],[-22.42,31.17],[-21.94,31.51],[-21.77,31.37],[-21.6,31.06]]]},\"properties\":{\"id\":899,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":51888,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[900,972,971,898,825]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.12,31.15],[-21.57,31.03],[-21.6,31.06],[-21.77,31.37],[-21.43,31.76],[-21.12,31.17],[-21.12,31.15]]]},\"properties\":{\"id\":900,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":36364,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[901,973,972,899,825,826]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.73,31.65],[-20.33,31.06],[-20.36,31.01],[-20.98,31.03],[-21.12,31.15],[-21.12,31.17],[-20.87,31.59],[-20.73,31.65]]]},\"properties\":{\"id\":901,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":20703,\"state\":4,\"province\":27,\"culture\":9,\"religion\":9,\"neighbors\":[827,902,903,974,973,900,826]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.05,31.45],[-20.33,31.06],[-20.73,31.65],[-20.64,31.73],[-20.05,31.45],[-20.05,31.45]]]},\"properties\":{\"id\":902,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12000,\"state\":4,\"province\":38,\"culture\":9,\"religion\":9,\"neighbors\":[829,903,901,827,828]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.6,31.34],[-19.86,30.59],[-20.31,30.92],[-20.36,31.01],[-20.33,31.06],[-20.05,31.45],[-19.6,31.34],[-19.6,31.34]]]},\"properties\":{\"id\":903,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":25897,\"state\":4,\"province\":38,\"culture\":9,\"religion\":9,\"neighbors\":[904,976,975,974,901,902,829]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.35,30.53],[-26.44,30.5],[-27.17,30.7],[-27.28,30.98],[-26.72,31.15],[-26.61,31.01],[-26.35,30.53]]]},\"properties\":{\"id\":963,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[964,1036,1035,890,891]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.07,30.56],[-26.35,30.53],[-26.61,31.01],[-26.1,31.03],[-25.93,30.75],[-26.07,30.56]]]},\"properties\":{\"id\":964,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1037,1036,963,891,892]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.4,30.67],[-25.9,30.75],[-25.48,31.37],[-25.48,31.37],[-25.26,30.78],[-25.4,30.67]]]},\"properties\":{\"id\":965,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":14000,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[966,1037,892,818,893]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.81,30.61],[-25.31,30.31],[-25.4,30.67],[-25.26,30.78],[-24.81,30.81],[-24.81,30.61]]]},\"properties\":{\"id\":966,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":11000,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[967,1038,1037,965,893]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.1,30.45],[-24.13,30.39],[-24.72,30.42],[-24.81,30.61],[-24.81,30.81],[-24.75,30.89],[-24.52,30.98],[-24.1,30.45]]]},\"properties\":{\"id\":967,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[968,1040,1039,1038,966,893,894]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.96,30.53],[-24.1,30.45],[-24.52,30.98],[-24.36,31.09],[-23.91,30.87],[-23.96,30.53]]]},\"properties\":{\"id\":968,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":14727,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[969,1040,967,894,895]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.34,30.61],[-23.68,30.42],[-23.96,30.53],[-23.91,30.87],[-23.62,31.03],[-23.54,31.03],[-23.32,30.81],[-23.34,30.61]]]},\"properties\":{\"id\":969,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":43,\"culture\":9,\"religion\":9,\"neighbors\":[970,1041,1040,968,895,896,897]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.67,30.31],[-22.72,30.31],[-23.23,30.45],[-23.34,30.61],[-23.32,30.81],[-22.92,30.98],[-22.61,30.47],[-22.67,30.31]]]},\"properties\":{\"id\":970,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20877,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[1043,1114,1042,1041,969,897,971]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.22,30.73],[-22.61,30.47],[-22.92,30.98],[-22.78,31.23],[-22.58,31.26],[-22.42,31.17],[-22.19,30.81],[-22.22,30.73]]]},\"properties\":{\"id\":971,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":28323,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[972,1043,970,897,823,898,899]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.52,30.42],[-21.57,30.33],[-22.22,30.73],[-22.22,30.73],[-22.19,30.81],[-21.6,31.06],[-21.57,31.03],[-21.52,30.42]]]},\"properties\":{\"id\":972,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":22818,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[973,1045,1044,1043,971,899,900]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.12,31.15],[-20.98,31.03],[-20.95,30.5],[-21.52,30.42],[-21.57,31.03],[-21.12,31.15]]]},\"properties\":{\"id\":973,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[900,901,974,1045,972]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.31,30.92],[-20.73,30.36],[-20.81,30.36],[-20.95,30.5],[-20.98,31.03],[-20.36,31.01],[-20.31,30.92]]]},\"properties\":{\"id\":974,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20759,\"state\":4,\"province\":27,\"culture\":9,\"religion\":9,\"neighbors\":[903,975,1046,1045,973,901]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.86,30.53],[-20.42,30.25],[-20.73,30.36],[-20.31,30.92],[-19.86,30.59],[-19.86,30.53]]]},\"properties\":{\"id\":975,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":18000,\"state\":4,\"province\":38,\"culture\":9,\"religion\":9,\"neighbors\":[976,1047,1046,974,903]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.27,30.64],[-19.63,30.5],[-19.83,30.53],[-19.86,30.53],[-19.86,30.59],[-19.6,31.34],[-19.27,30.98],[-19.27,30.64]]]},\"properties\":{\"id\":976,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[977,1049,1048,1047,975,903,904]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.63,30.14],[-27.2,30.03],[-27.17,30.7],[-26.44,30.5],[-26.63,30.14]]]},\"properties\":{\"id\":1035,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":21592,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1036,1107,963]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.93,30.17],[-26.41,29.8],[-26.63,30.14],[-26.44,30.5],[-26.35,30.53],[-26.07,30.56],[-25.9,30.22],[-25.93,30.17]]]},\"properties\":{\"id\":1036,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1109,1108,1107,1035,963,964,1037]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.31,30.31],[-25.37,30.08],[-25.9,30.22],[-26.07,30.56],[-25.93,30.75],[-25.9,30.75],[-25.4,30.67],[-25.31,30.31]]]},\"properties\":{\"id\":1037,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":22000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[966,1038,1109,1036,964,892,965]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.75,30.05],[-25.03,29.86],[-25.26,29.91],[-25.37,30.08],[-25.31,30.31],[-24.81,30.61],[-24.72,30.42],[-24.75,30.05]]]},\"properties\":{\"id\":1038,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":21986,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1039,1111,1110,1109,1037,966,967]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.13,30],[-24.24,29.86],[-24.75,30.05],[-24.72,30.42],[-24.13,30.39],[-24.13,30]]]},\"properties\":{\"id\":1039,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":23919,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1040,1112,1111,1038,967]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.65,30.05],[-24.13,30],[-24.13,30.39],[-24.1,30.45],[-23.96,30.53],[-23.68,30.42],[-23.65,30.05]]]},\"properties\":{\"id\":1040,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":14988,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1041,1112,1039,967,968,969]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.37,30],[-23.54,29.97],[-23.65,30.05],[-23.68,30.42],[-23.34,30.61],[-23.23,30.45],[-23.37,30]]]},\"properties\":{\"id\":1041,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12000,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1042,1113,1112,1040,969,970]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.72,30.31],[-23.15,29.89],[-23.37,30],[-23.23,30.45],[-22.72,30.31]]]},\"properties\":{\"id\":1042,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12000,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[970,1114,1113,1041]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.22,30.73],[-21.97,30],[-22.58,30.17],[-22.67,30.31],[-22.61,30.47],[-22.22,30.73],[-22.22,30.73]]]},\"properties\":{\"id\":1043,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[972,1044,1115,1114,970,971]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.71,29.94],[-21.88,29.94],[-21.97,30],[-22.22,30.73],[-21.57,30.33],[-21.66,29.97],[-21.71,29.94]]]},\"properties\":{\"id\":1044,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":18512,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[1117,1116,1115,1043,972,1045]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.95,29.94],[-21.66,29.97],[-21.57,30.33],[-21.52,30.42],[-20.95,30.5],[-20.81,30.36],[-20.95,29.94]]]},\"properties\":{\"id\":1045,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":25087,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[1046,1117,1044,972,973,974]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.39,30.03],[-20.64,29.83],[-20.9,29.86],[-20.95,29.94],[-20.81,30.36],[-20.73,30.36],[-20.42,30.25],[-20.39,30.03]]]},\"properties\":{\"id\":1046,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[1047,1119,1118,1117,1045,974,975]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.83,30.53],[-19.91,29.89],[-20.05,29.75],[-20.39,30.03],[-20.42,30.25],[-19.86,30.53],[-19.83,30.53]]]},\"properties\":{\"id\":1047,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12019,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[976,1048,1120,1119,1046,975]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.35,29.75],[-19.91,29.89],[-19.83,30.53],[-19.63,30.5],[-19.24,29.94],[-19.35,29.75]]]},\"properties\":{\"id\":1048,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[1121,1120,1047,976,1049]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.54,29.72],[7.26,29.97],[7.85,30.39],[7.96,30.33],[8.02,30.28],[7.54,29.72]]]},\"properties\":{\"id\":1099,\"height\":4,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":6,\"neighbors\":[1171,1170,1098,1027,1028]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.41,29.69],[-27.03,29.44],[-27.31,29.89],[-27.2,30.03],[-26.63,30.14],[-26.41,29.8],[-26.41,29.69]]]},\"properties\":{\"id\":1107,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":24603,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1108,1181,1035,1036]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.93,30.17],[-25.85,29.41],[-25.87,29.38],[-26.21,29.47],[-26.41,29.69],[-26.41,29.8],[-25.93,30.17]]]},\"properties\":{\"id\":1108,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1036,1109,1183,1182,1181,1107]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.26,29.91],[-25.73,29.44],[-25.85,29.41],[-25.93,30.17],[-25.9,30.22],[-25.37,30.08],[-25.26,29.91]]]},\"properties\":{\"id\":1109,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1038,1110,1183,1108,1036,1037]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25,29.66],[-25.2,29.16],[-25.73,29.44],[-25.26,29.91],[-25.03,29.86],[-25,29.66]]]},\"properties\":{\"id\":1110,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1111,1184,1183,1109,1038]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.19,29.63],[-24.64,29.38],[-25,29.66],[-25.03,29.86],[-24.75,30.05],[-24.24,29.86],[-24.19,29.63]]]},\"properties\":{\"id\":1111,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":23833,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1112,1185,1184,1110,1038,1039]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.65,30.05],[-23.54,29.97],[-23.65,29.52],[-24.16,29.58],[-24.19,29.63],[-24.24,29.86],[-24.13,30],[-23.65,30.05]]]},\"properties\":{\"id\":1112,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":18000,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1040,1041,1113,1186,1185,1111,1039]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.37,30],[-23.15,29.89],[-23.03,29.61],[-23.62,29.47],[-23.65,29.52],[-23.54,29.97],[-23.37,30]]]},\"properties\":{\"id\":1113,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1041,1042,1114,1187,1186,1112]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.58,30.17],[-22.64,29.47],[-22.72,29.41],[-22.89,29.49],[-23.03,29.61],[-23.15,29.89],[-22.72,30.31],[-22.67,30.31],[-22.58,30.17]]]},\"properties\":{\"id\":1114,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20000,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1043,1115,1189,1188,1187,1113,1042,970]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.47,29.49],[-22.64,29.47],[-22.58,30.17],[-21.97,30],[-21.88,29.94],[-22.47,29.49]]]},\"properties\":{\"id\":1115,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":18000,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[1116,1189,1114,1043,1044]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.77,29.38],[-22.08,29.3],[-22.47,29.49],[-21.88,29.94],[-21.71,29.94],[-21.66,29.63],[-21.77,29.38]]]},\"properties\":{\"id\":1116,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20886,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[1191,1190,1189,1115,1044,1117]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.92,29.61],[-21.26,29.38],[-21.66,29.63],[-21.71,29.94],[-21.66,29.97],[-20.95,29.94],[-20.9,29.86],[-20.92,29.61]]]},\"properties\":{\"id\":1117,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":34615,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[1118,1192,1191,1116,1044,1045,1046]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.5,29.19],[-20.56,29.19],[-20.92,29.61],[-20.9,29.86],[-20.64,29.83],[-20.33,29.49],[-20.5,29.19]]]},\"properties\":{\"id\":1118,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1193,1266,1192,1117,1046,1119]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.05,29.72],[-20.33,29.49],[-20.64,29.83],[-20.39,30.03],[-20.05,29.75],[-20.05,29.72]]]},\"properties\":{\"id\":1119,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1120,1193,1118,1046,1047]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.54,29.72],[7.65,29.49],[7.17,29.3],[6.86,29.89],[7.23,30],[7.26,29.97],[7.54,29.72]]]},\"properties\":{\"id\":1170,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1099,1171,1244,1169,1097,1098]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.21,29.47],[-26.69,28.91],[-27.03,28.99],[-27.03,29.44],[-26.41,29.69],[-26.21,29.47]]]},\"properties\":{\"id\":1181,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":25000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1108,1182,1254,1107]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.9,29.16],[-26.13,28.82],[-26.55,28.82],[-26.69,28.91],[-26.21,29.47],[-25.87,29.38],[-25.9,29.16]]]},\"properties\":{\"id\":1182,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1183,1256,1255,1254,1181,1108]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.12,28.93],[-25.37,28.65],[-25.9,29.16],[-25.87,29.38],[-25.85,29.41],[-25.73,29.44],[-25.2,29.16],[-25.12,28.93]]]},\"properties\":{\"id\":1183,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":26233,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1184,1257,1256,1182,1108,1109,1110]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.72,28.88],[-25.12,28.93],[-25.2,29.16],[-25,29.66],[-24.64,29.38],[-24.69,28.91],[-24.72,28.88]]]},\"properties\":{\"id\":1184,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":20970,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1258,1257,1183,1110,1111,1185]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.16,29.58],[-24.16,28.96],[-24.41,28.85],[-24.69,28.91],[-24.64,29.38],[-24.19,29.63],[-24.16,29.58]]]},\"properties\":{\"id\":1185,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":29866,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1112,1186,1259,1258,1184,1111]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.57,29.13],[-23.91,28.88],[-24.16,28.96],[-24.16,29.58],[-23.65,29.52],[-23.62,29.47],[-23.57,29.13]]]},\"properties\":{\"id\":1186,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":23201,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1187,1260,1259,1185,1112,1113]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.89,29.49],[-23.48,29.1],[-23.57,29.13],[-23.62,29.47],[-23.03,29.61],[-22.89,29.49]]]},\"properties\":{\"id\":1187,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":33422,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1114,1188,1260,1186,1113]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.72,29.27],[-23.12,28.77],[-23.48,29.1],[-22.89,29.49],[-22.72,29.41],[-22.72,29.27]]]},\"properties\":{\"id\":1188,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":47,\"culture\":9,\"religion\":9,\"neighbors\":[1189,1261,1260,1187,1114]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.08,29.3],[-22.19,28.82],[-22.42,28.91],[-22.72,29.27],[-22.72,29.41],[-22.64,29.47],[-22.47,29.49],[-22.08,29.3]]]},\"properties\":{\"id\":1189,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":26,\"culture\":9,\"religion\":9,\"neighbors\":[1116,1190,1262,1261,1188,1114,1115]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.77,29.38],[-21.68,28.96],[-22.13,28.77],[-22.19,28.82],[-22.08,29.3],[-21.77,29.38]]]},\"properties\":{\"id\":1190,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1116,1191,1263,1262,1189]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.35,28.82],[-21.4,28.82],[-21.68,28.96],[-21.77,29.38],[-21.66,29.63],[-21.26,29.38],[-21.18,29.02],[-21.35,28.82]]]},\"properties\":{\"id\":1191,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1265,1264,1263,1190,1116,1117,1192]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.64,29.07],[-21.18,29.02],[-21.26,29.38],[-20.92,29.61],[-20.56,29.19],[-20.64,29.07]]]},\"properties\":{\"id\":1192,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1266,1265,1191,1117,1118]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.48,28.77],[-0.03,29.02],[-0.03,29.05],[0.08,29.3],[0.56,29.3],[0.62,28.85],[0.48,28.77]]]},\"properties\":{\"id\":1231,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":9951,\"state\":5,\"province\":164,\"culture\":7,\"religion\":11,\"neighbors\":[1305,1304,1303,1230,1157,1232]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.93,28.82],[0.62,28.85],[0.56,29.3],[0.65,29.49],[1.04,29.58],[1.1,28.88],[0.93,28.82]]]},\"properties\":{\"id\":1232,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":9659,\"state\":5,\"province\":164,\"culture\":7,\"religion\":11,\"neighbors\":[1306,1305,1231,1157,1158,1233]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.48,28.74],[7.76,29.41],[8.04,29.41],[8.13,29.38],[8.1,28.96],[8.02,28.71],[7.65,28.6],[7.48,28.74]]]},\"properties\":{\"id\":1245,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1317,1244,1171,1172,1246,1319,1318]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.61,28.71],[8.1,28.96],[8.13,29.38],[8.58,29.41],[8.66,29.35],[8.83,28.99],[8.61,28.71]]]},\"properties\":{\"id\":1246,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":6,\"neighbors\":[1320,1319,1245,1172,1173,1247]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.44,28.21],[-27.11,28.18],[-27.22,28.82],[-27.03,28.99],[-26.69,28.91],[-26.55,28.82],[-26.44,28.21]]]},\"properties\":{\"id\":1254,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":31000,\"state\":4,\"province\":40,\"culture\":9,\"religion\":9,\"neighbors\":[1255,1328,1181,1182]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.85,28.38],[-26.41,28.15],[-26.44,28.21],[-26.55,28.82],[-26.13,28.82],[-25.85,28.38]]]},\"properties\":{\"id\":1255,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1256,1329,1328,1254,1182]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.42,28.54],[-25.79,28.38],[-25.85,28.38],[-26.13,28.82],[-25.9,29.16],[-25.37,28.65],[-25.42,28.54]]]},\"properties\":{\"id\":1256,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1257,1330,1329,1255,1182,1183]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.72,28.88],[-24.78,28.26],[-24.83,28.24],[-25.2,28.32],[-25.42,28.54],[-25.37,28.65],[-25.12,28.93],[-24.72,28.88]]]},\"properties\":{\"id\":1257,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1184,1258,1332,1331,1330,1256,1183]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.27,28.29],[-24.78,28.26],[-24.72,28.88],[-24.69,28.91],[-24.41,28.85],[-24.27,28.29]]]},\"properties\":{\"id\":1258,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":48,\"culture\":7,\"religion\":7,\"neighbors\":[1259,1332,1257,1184,1185]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.93,28.29],[-24.19,28.18],[-24.27,28.29],[-24.41,28.85],[-24.16,28.96],[-23.91,28.88],[-23.77,28.49],[-23.93,28.29]]]},\"properties\":{\"id\":1259,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":48,\"culture\":7,\"religion\":7,\"neighbors\":[1334,1333,1332,1258,1185,1186,1260]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.2,28.43],[-23.77,28.49],[-23.91,28.88],[-23.57,29.13],[-23.48,29.1],[-23.12,28.77],[-23.12,28.54],[-23.2,28.43]]]},\"properties\":{\"id\":1260,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":4,\"province\":48,\"culture\":7,\"religion\":7,\"neighbors\":[1335,1334,1259,1186,1187,1188,1261]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.42,28.91],[-22.75,28.52],[-23.12,28.54],[-23.12,28.77],[-22.72,29.27],[-22.42,28.91]]]},\"properties\":{\"id\":1261,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":7,\"religion\":7,\"neighbors\":[1189,1262,1335,1260,1188]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.16,28.24],[-22.5,28.29],[-22.75,28.52],[-22.42,28.91],[-22.19,28.82],[-22.13,28.77],[-22.11,28.4],[-22.16,28.24]]]},\"properties\":{\"id\":1262,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":7,\"religion\":7,\"neighbors\":[1337,1336,1335,1261,1189,1190,1263]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.71,28.49],[-22.11,28.4],[-22.13,28.77],[-21.68,28.96],[-21.4,28.82],[-21.71,28.49]]]},\"properties\":{\"id\":1263,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1264,1337,1262,1190,1191]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.07,28.24],[-21.4,28.12],[-21.71,28.49],[-21.4,28.82],[-21.35,28.82],[-21.04,28.29],[-21.07,28.24]]]},\"properties\":{\"id\":1264,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9678,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1339,1338,1337,1263,1191,1265]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.64,28.32],[-21.04,28.29],[-21.35,28.82],[-21.18,29.02],[-20.64,29.07],[-20.64,28.32]]]},\"properties\":{\"id\":1265,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1266,1339,1264,1191,1192]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.96,28.29],[-1.46,28.15],[-1.55,28.35],[-1.46,28.71],[-1.24,28.79],[-0.96,28.6],[-0.84,28.38],[-0.96,28.29]]]},\"properties\":{\"id\":1301,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1376,1375,1374,1300,1228,1229,1302]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.69,28.6],[1.69,28.68],[1.83,28.74],[2.5,28.43],[2.08,28.24],[1.69,28.6]]]},\"properties\":{\"id\":1307,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1381,1306,1234,1308,1382]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.05,28.49],[4.05,28.85],[4.36,29.1],[4.47,29.02],[4.5,28.46],[4.33,28.29],[4.05,28.49]]]},\"properties\":{\"id\":1311,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1385,1310,1238,1239,1312,1386]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.5,28.46],[4.47,29.02],[4.92,28.99],[5.01,28.91],[4.92,28.57],[4.5,28.46]]]},\"properties\":{\"id\":1312,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1386,1311,1239,1240,1313]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.03,28.18],[7.09,28.77],[7.48,28.74],[7.65,28.6],[7.65,28.54],[7.2,27.93],[7.2,27.93],[7.03,28.18]]]},\"properties\":{\"id\":1317,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1390,1316,1244,1245,1318,1391,1464]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.02,28.71],[8.1,28.96],[8.61,28.71],[8.44,28.38],[8.44,28.38],[8.02,28.71]]]},\"properties\":{\"id\":1319,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":6,\"neighbors\":[1318,1245,1246,1320,1393]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.27,28.46],[10.32,28.6],[10.74,28.71],[10.94,28.43],[10.91,28.4],[10.32,28.29],[10.27,28.46]]]},\"properties\":{\"id\":1323,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":10000,\"state\":2,\"province\":15,\"culture\":6,\"religion\":11,\"neighbors\":[1396,1322,1250,1324,1325,1397]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.38,27.84],[-27.25,27.76],[-27.11,28.18],[-26.44,28.21],[-26.41,28.15],[-26.38,27.84]]]},\"properties\":{\"id\":1328,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1329,1401,1254,1255]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.79,27.7],[-26.32,27.73],[-26.38,27.84],[-26.41,28.15],[-25.85,28.38],[-25.79,28.38],[-25.71,27.79],[-25.79,27.7]]]},\"properties\":{\"id\":1329,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1403,1402,1401,1328,1255,1256,1330]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.2,28.32],[-25.34,27.76],[-25.71,27.79],[-25.79,28.38],[-25.42,28.54],[-25.2,28.32]]]},\"properties\":{\"id\":1330,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7747,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1257,1331,1403,1329,1256]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.81,27.79],[-25.26,27.7],[-25.34,27.76],[-25.2,28.32],[-24.83,28.24],[-24.81,27.79]]]},\"properties\":{\"id\":1331,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1332,1404,1403,1330,1257]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.24,27.84],[-24.44,27.7],[-24.75,27.76],[-24.81,27.79],[-24.83,28.24],[-24.78,28.26],[-24.27,28.29],[-24.19,28.18],[-24.24,27.84]]]},\"properties\":{\"id\":1332,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9335,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1333,1406,1405,1404,1331,1257,1258,1259]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.54,27.82],[-23.68,27.56],[-24.24,27.84],[-24.19,28.18],[-23.93,28.29],[-23.54,27.82]]]},\"properties\":{\"id\":1333,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1334,1407,1406,1332,1259]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.2,28.07],[-23.26,28.01],[-23.54,27.82],[-23.93,28.29],[-23.77,28.49],[-23.2,28.43],[-23.2,28.07]]]},\"properties\":{\"id\":1334,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":7,\"religion\":7,\"neighbors\":[1335,1408,1407,1333,1259,1260]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.5,28.29],[-22.84,27.9],[-23.2,28.07],[-23.2,28.43],[-23.12,28.54],[-22.75,28.52],[-22.5,28.29]]]},\"properties\":{\"id\":1335,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":7,\"religion\":7,\"neighbors\":[1262,1336,1408,1334,1260,1261]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.13,27.93],[-22.64,27.59],[-22.84,27.9],[-22.5,28.29],[-22.16,28.24],[-22.08,28.04],[-22.13,27.93]]]},\"properties\":{\"id\":1336,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":7,\"religion\":7,\"neighbors\":[1410,1409,1408,1335,1262,1337]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.54,28.01],[-22.08,28.04],[-22.16,28.24],[-22.11,28.4],[-21.71,28.49],[-21.4,28.12],[-21.54,28.01]]]},\"properties\":{\"id\":1337,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":48,\"culture\":7,\"religion\":7,\"neighbors\":[1338,1410,1336,1262,1263,1264]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.07,27.76],[-21.21,27.56],[-21.49,27.7],[-21.54,28.01],[-21.4,28.12],[-21.07,28.24],[-21.07,27.76]]]},\"properties\":{\"id\":1338,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8226,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1339,1412,1411,1410,1337,1264]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.36,27.93],[-20.59,27.59],[-21.07,27.76],[-21.07,28.24],[-21.04,28.29],[-20.64,28.32],[-20.53,28.26],[-20.36,27.93]]]},\"properties\":{\"id\":1339,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1340,1413,1412,1338,1264,1265,1266]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.96,28.29],[-1.12,27.79],[-1.43,27.93],[-1.46,28.15],[-0.96,28.29]]]},\"properties\":{\"id\":1375,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1301,1376,1448,1374]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.84,27.96],[5.03,28.43],[5.48,28.24],[5.43,27.79],[5.43,27.76],[5.15,27.73],[4.84,27.96]]]},\"properties\":{\"id\":1387,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1459,1386,1313,1388,1461,1460]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.38,27.87],[10.32,28.29],[10.91,28.4],[10.88,28.01],[10.6,27.82],[10.57,27.79],[10.38,27.87]]]},\"properties\":{\"id\":1397,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1470,1396,1323,1325,1398,1471]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.32,27.73],[-26.52,27.23],[-26.63,27.17],[-27.03,27.28],[-27.28,27.73],[-27.25,27.76],[-26.38,27.84],[-26.32,27.73]]]},\"properties\":{\"id\":1401,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9000,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1329,1402,1477,1476,1328]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.79,27.26],[-25.93,27.17],[-26.52,27.23],[-26.32,27.73],[-25.79,27.7],[-25.79,27.26]]]},\"properties\":{\"id\":1402,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8504,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1403,1478,1477,1401,1329]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.26,27.7],[-25.23,27.23],[-25.34,27],[-25.79,27.26],[-25.79,27.7],[-25.71,27.79],[-25.34,27.76],[-25.26,27.7]]]},\"properties\":{\"id\":1403,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1331,1404,1479,1478,1402,1329,1330]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.83,27.34],[-25.23,27.23],[-25.26,27.7],[-24.81,27.79],[-24.75,27.76],[-24.83,27.34]]]},\"properties\":{\"id\":1404,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1405,1479,1403,1331,1332]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.33,27.26],[-24.78,27.26],[-24.83,27.34],[-24.75,27.76],[-24.44,27.7],[-24.33,27.26]]]},\"properties\":{\"id\":1405,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1406,1480,1479,1404,1332]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.68,27.42],[-24.24,27.14],[-24.33,27.26],[-24.44,27.7],[-24.24,27.84],[-23.68,27.56],[-23.68,27.42]]]},\"properties\":{\"id\":1406,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1407,1481,1480,1405,1332,1333]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.26,28.01],[-23.09,27.31],[-23.57,27.31],[-23.68,27.42],[-23.68,27.56],[-23.54,27.82],[-23.26,28.01]]]},\"properties\":{\"id\":1407,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1334,1408,1482,1481,1406,1333]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.67,27.45],[-23.01,27.28],[-23.09,27.31],[-23.26,28.01],[-23.2,28.07],[-22.84,27.9],[-22.64,27.59],[-22.67,27.45]]]},\"properties\":{\"id\":1408,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":7,\"religion\":7,\"neighbors\":[1409,1483,1482,1407,1334,1335,1336]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.85,27.37],[-22.02,27.14],[-22.56,27.34],[-22.67,27.45],[-22.64,27.59],[-22.13,27.93],[-21.85,27.37],[-21.85,27.37]]]},\"properties\":{\"id\":1409,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1411,1485,1484,1483,1408,1336,1410]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.49,27.7],[-21.85,27.37],[-22.13,27.93],[-22.08,28.04],[-21.54,28.01],[-21.49,27.7]]]},\"properties\":{\"id\":1410,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1338,1411,1409,1336,1337]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.15,27.26],[-21.4,27.17],[-21.85,27.37],[-21.85,27.37],[-21.49,27.7],[-21.21,27.56],[-21.15,27.26]]]},\"properties\":{\"id\":1411,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1412,1486,1485,1409,1410,1338]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.67,27.26],[-21.07,27.23],[-21.15,27.26],[-21.21,27.56],[-21.07,27.76],[-20.59,27.59],[-20.67,27.26]]]},\"properties\":{\"id\":1412,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1413,1487,1486,1411,1338,1339]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.7,27.4],[-9.98,27.17],[-10.27,27.31],[-10.41,27.79],[-10.24,27.82],[-9.76,27.51],[-9.7,27.4]]]},\"properties\":{\"id\":1432,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1433,1507,1506,1431,1358,1359]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.71,27.65],[-6.19,27.42],[-6.27,27.51],[-6.33,27.68],[-5.96,28.01],[-5.88,28.04],[-5.71,27.65]]]},\"properties\":{\"id\":1439,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1367,1440,1514,1438,1366,1292]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.03,27.31],[-0.11,27.56],[0.25,27.93],[0.51,27.87],[0.56,27.82],[0.45,27.48],[0.03,27.26],[-0.03,27.31]]]},\"properties\":{\"id\":1451,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5878,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1525,1450,1377,1378,1379,1452,1526]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.18,27.31],[0.82,27.82],[1.01,28.01],[1.52,27.98],[1.69,27.7],[1.66,27.54],[1.18,27.31]]]},\"properties\":{\"id\":1453,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1528,1452,1379,1380,1381,1454]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.25,27.65],[9.37,27.9],[9.93,27.62],[9.73,27.34],[9.31,27.4],[9.25,27.42],[9.25,27.65]]]},\"properties\":{\"id\":1468,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1467,1394,1395,1469,1543,1542]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.57,27.79],[10.6,27.82],[11.28,27.65],[11.22,27.34],[11.14,27.26],[10.72,27.45],[10.57,27.79]]]},\"properties\":{\"id\":1471,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":34544,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1470,1397,1398,1473,1475,1472]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.97,26.92],[10.57,27.09],[10.72,27.45],[11.14,27.26],[11.11,27.03],[11,26.92],[10.97,26.92]]]},\"properties\":{\"id\":1472,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":19847,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1548,1545,1470,1471,1475,1547]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.61,27.03],[-26.83,26.36],[-27.17,26.36],[-27.48,26.64],[-27.03,27.28],[-26.63,27.17],[-26.61,27.03]]]},\"properties\":{\"id\":1476,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":10000,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1477,1551,1626,1401]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.02,26.75],[-26.24,26.7],[-26.61,27.03],[-26.63,27.17],[-26.52,27.23],[-25.93,27.17],[-26.02,26.75]]]},\"properties\":{\"id\":1477,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1478,1552,1551,1476,1401,1402]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.48,26.67],[-25.71,26.56],[-26.02,26.75],[-25.93,27.17],[-25.79,27.26],[-25.34,27],[-25.34,26.92],[-25.48,26.67]]]},\"properties\":{\"id\":1478,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1554,1553,1552,1477,1402,1403,1479]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.83,27.34],[-24.78,27.26],[-24.81,26.75],[-25.34,26.92],[-25.34,27],[-25.23,27.23],[-24.83,27.34]]]},\"properties\":{\"id\":1479,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1404,1405,1480,1554,1478,1403]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.27,26.92],[-24.75,26.7],[-24.81,26.75],[-24.78,27.26],[-24.33,27.26],[-24.24,27.14],[-24.27,26.92]]]},\"properties\":{\"id\":1480,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1481,1555,1554,1479,1405,1406]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.6,26.72],[-23.68,26.64],[-24.02,26.67],[-24.27,26.92],[-24.24,27.14],[-23.68,27.42],[-23.57,27.31],[-23.6,26.72]]]},\"properties\":{\"id\":1481,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1482,1557,1556,1555,1480,1406,1407]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.12,26.72],[-23.6,26.72],[-23.57,27.31],[-23.09,27.31],[-23.01,27.28],[-23.01,26.81],[-23.12,26.72]]]},\"properties\":{\"id\":1482,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1558,1557,1481,1407,1408,1483]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.56,27.34],[-22.58,26.7],[-23.01,26.81],[-23.01,27.28],[-22.67,27.45],[-22.56,27.34]]]},\"properties\":{\"id\":1483,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6031,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1409,1484,1558,1482,1408]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.02,27],[-22.36,26.67],[-22.56,26.64],[-22.58,26.7],[-22.56,27.34],[-22.02,27.14],[-22.02,27]]]},\"properties\":{\"id\":1484,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":13266,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1485,1560,1559,1558,1483,1409]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.49,26.81],[-21.66,26.64],[-22.02,27],[-22.02,27.14],[-21.85,27.37],[-21.4,27.17],[-21.49,26.81]]]},\"properties\":{\"id\":1485,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":8543,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1486,1561,1560,1484,1409,1411]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.07,27.23],[-21.07,26.75],[-21.49,26.81],[-21.4,27.17],[-21.15,27.26],[-21.07,27.23]]]},\"properties\":{\"id\":1486,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1412,1487,1561,1485,1411]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.62,26.67],[-20.76,26.53],[-20.92,26.56],[-21.07,26.75],[-21.07,27.23],[-20.67,27.26],[-20.62,27.23],[-20.62,26.67]]]},\"properties\":{\"id\":1487,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9076,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1488,1563,1562,1561,1486,1412,1413]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.65,26.78],[-1.04,26.75],[-1.32,27.2],[-0.96,27.54],[-0.62,26.86],[-0.65,26.78]]]},\"properties\":{\"id\":1524,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1525,1599,1523,1448,1449]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.48,26.61],[-0.65,26.78],[-0.62,26.86],[-0.45,27.14],[-0.03,27.31],[0.03,27.26],[0.17,26.81],[-0.22,26.61],[-0.48,26.61]]]},\"properties\":{\"id\":1525,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1600,1599,1524,1449,1450,1451,1526,1601]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.17,26.81],[0.03,27.26],[0.45,27.48],[0.67,27.14],[0.37,26.72],[0.17,26.81]]]},\"properties\":{\"id\":1526,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1601,1525,1451,1452,1527]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.33,26.86],[1.97,27.31],[2.28,27.42],[2.59,27.03],[2.33,26.86]]]},\"properties\":{\"id\":1530,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1605,1529,1454,1455]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.73,27.03],[2.81,27.26],[3.26,27.51],[3.32,27.54],[3.35,27.51],[3.4,27.4],[3.23,26.81],[3.01,26.75],[2.73,27.03]]]},\"properties\":{\"id\":1531,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1605,1455,1456,1383,1384,1457,1532,1607]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.1,27.14],[6.58,27.4],[6.78,27.09],[6.61,26.78],[6.19,26.78],[6.05,26.92],[6.1,27.14]]]},\"properties\":{\"id\":1537,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":20767,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1461,1462,1463,1538,1612,1611]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.51,27.12],[7.71,27.28],[7.96,27.26],[8.16,26.81],[8.07,26.67],[7.59,26.61],[7.48,26.72],[7.51,27.12]]]},\"properties\":{\"id\":1540,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":21000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1539,1464,1465,1541,1616,1615,1614]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.96,27.26],[8.33,27.45],[8.75,27.17],[8.72,26.89],[8.66,26.86],[8.16,26.81],[7.96,27.26]]]},\"properties\":{\"id\":1541,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":21000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1540,1465,1466,1542,1617,1616]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.38,26.95],[10.41,27],[10.57,27.09],[10.97,26.92],[10.8,26.64],[10.55,26.61],[10.38,26.95]]]},\"properties\":{\"id\":1545,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":2,\"province\":14,\"culture\":6,\"religion\":11,\"neighbors\":[1546,1544,1470,1472,1548,1620]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.96,26.84],[10.38,26.95],[10.55,26.61],[10.41,26.22],[10.32,26.25],[9.96,26.84]]]},\"properties\":{\"id\":1546,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":18845,\"state\":2,\"province\":14,\"culture\":6,\"religion\":11,\"neighbors\":[1619,1544,1545,1620,1694]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.61,27.03],[-26.24,26.7],[-26.38,26.05],[-26.44,26.05],[-26.83,26.36],[-26.61,27.03]]]},\"properties\":{\"id\":1551,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1476,1477,1552,1627,1626]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.07,26.11],[-26.38,26.05],[-26.24,26.7],[-26.02,26.75],[-25.71,26.56],[-25.9,26.14],[-26.07,26.11]]]},\"properties\":{\"id\":1552,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1628,1627,1551,1477,1478,1553]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.48,26.67],[-25.17,26.14],[-25.51,25.88],[-25.9,26.14],[-25.71,26.56],[-25.48,26.67]]]},\"properties\":{\"id\":1553,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1478,1554,1629,1628,1552]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.86,26.14],[-25.17,26.14],[-25.48,26.67],[-25.34,26.92],[-24.81,26.75],[-24.75,26.7],[-24.75,26.3],[-24.86,26.14]]]},\"properties\":{\"id\":1554,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8999,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1630,1629,1553,1478,1479,1480,1555]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.24,26.25],[-24.3,26.22],[-24.75,26.3],[-24.75,26.7],[-24.27,26.92],[-24.02,26.67],[-24.24,26.25]]]},\"properties\":{\"id\":1555,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":11710,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1556,1631,1630,1554,1480,1481]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.62,26.39],[-23.79,25.97],[-24.24,26.25],[-24.02,26.67],[-23.68,26.64],[-23.62,26.39]]]},\"properties\":{\"id\":1556,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1557,1632,1631,1555,1481]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.12,26.72],[-23.06,26.3],[-23.26,26.19],[-23.62,26.39],[-23.68,26.64],[-23.6,26.72],[-23.12,26.72]]]},\"properties\":{\"id\":1557,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1482,1558,1633,1632,1556,1481]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.56,26.64],[-22.72,26.19],[-23.06,26.3],[-23.12,26.72],[-23.01,26.81],[-22.58,26.7],[-22.56,26.64]]]},\"properties\":{\"id\":1558,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1484,1559,1633,1557,1482,1483]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.39,25.97],[-22.61,25.94],[-22.61,25.94],[-22.72,26.19],[-22.56,26.64],[-22.36,26.67],[-22.05,26.3],[-22.39,25.97]]]},\"properties\":{\"id\":1559,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7720,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1635,1634,1712,1633,1558,1484,1560]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.63,26.28],[-21.66,26.28],[-22.05,26.3],[-22.36,26.67],[-22.02,27],[-21.66,26.64],[-21.63,26.28]]]},\"properties\":{\"id\":1560,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1561,1636,1635,1559,1484,1485]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.92,26.56],[-21.4,26.25],[-21.63,26.28],[-21.66,26.64],[-21.49,26.81],[-21.07,26.75],[-20.92,26.56]]]},\"properties\":{\"id\":1561,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1487,1562,1636,1560,1485,1486]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.64,26.22],[-21.18,25.97],[-21.4,26.25],[-20.92,26.56],[-20.76,26.53],[-20.64,26.22]]]},\"properties\":{\"id\":1562,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1563,1637,1636,1561,1487]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.02,26.33],[-20.59,26.16],[-20.64,26.22],[-20.76,26.53],[-20.62,26.67],[-20.08,26.67],[-20.02,26.33]]]},\"properties\":{\"id\":1563,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1564,1638,1637,1562,1487,1488]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,26.25],[-0.22,26.61],[0.17,26.81],[0.37,26.72],[0.45,26.61],[0.53,26.28],[0.51,26.19],[0.03,26.25],[0,26.25]]]},\"properties\":{\"id\":1601,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1675,1600,1525,1526,1527,1602,1677,1676]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.53,26.28],[0.45,26.61],[1.21,26.81],[1.27,26.75],[1.01,26.3],[0.53,26.28]]]},\"properties\":{\"id\":1602,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1677,1601,1527,1528,1603]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.84,26.33],[2.98,26.61],[3.54,26.3],[3.26,25.94],[2.93,26.19],[2.84,26.33]]]},\"properties\":{\"id\":1606,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1680,1605,1607,1682,1681]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.54,26.3],[2.98,26.61],[3.01,26.75],[3.23,26.81],[3.66,26.7],[3.6,26.33],[3.54,26.3]]]},\"properties\":{\"id\":1607,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1682,1606,1605,1531,1532,1608]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.48,26],[5.09,26.11],[5.12,26.61],[5.43,26.61],[5.63,26.22],[5.48,26]]]},\"properties\":{\"id\":1610,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1686,1685,1609,1535,1611]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.75,26.19],[6.75,26.64],[7.14,26.64],[7.14,26.16],[7.03,26],[6.75,26.19]]]},\"properties\":{\"id\":1613,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":13000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1688,1612,1538,1614,1689]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.76,26.72],[9.93,26.84],[9.96,26.84],[10.32,26.25],[9.76,26.02],[9.76,26.72]]]},\"properties\":{\"id\":1619,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":17000,\"state\":2,\"province\":14,\"culture\":6,\"religion\":11,\"neighbors\":[1618,1543,1544,1546,1694]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.52,25.69],[-27.14,25.44],[-27.39,25.58],[-27.17,26.36],[-26.83,26.36],[-26.44,26.05],[-26.52,25.69]]]},\"properties\":{\"id\":1626,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12000,\"state\":4,\"province\":40,\"culture\":5,\"religion\":5,\"neighbors\":[1627,1704,1476,1551]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.07,26.11],[-25.9,25.63],[-25.99,25.49],[-26.44,25.58],[-26.52,25.69],[-26.44,26.05],[-26.38,26.05],[-26.07,26.11]]]},\"properties\":{\"id\":1627,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1552,1628,1706,1705,1704,1626,1551]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.51,25.83],[-25.9,25.63],[-26.07,26.11],[-25.9,26.14],[-25.51,25.88],[-25.51,25.83]]]},\"properties\":{\"id\":1628,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1629,1706,1627,1552,1553]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.86,26.14],[-24.72,25.69],[-24.92,25.44],[-25.48,25.77],[-25.51,25.83],[-25.51,25.88],[-25.17,26.14],[-24.86,26.14]]]},\"properties\":{\"id\":1629,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":10318,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1554,1630,1708,1707,1706,1628,1553]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.86,26.14],[-24.75,26.3],[-24.3,26.22],[-24.33,25.63],[-24.72,25.69],[-24.86,26.14]]]},\"properties\":{\"id\":1630,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1629,1554,1555,1631,1708]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.79,25.61],[-24.19,25.55],[-24.33,25.63],[-24.3,26.22],[-24.24,26.25],[-23.79,25.97],[-23.74,25.66],[-23.79,25.61]]]},\"properties\":{\"id\":1631,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1710,1709,1708,1630,1555,1556,1632]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.29,25.69],[-23.74,25.66],[-23.79,25.97],[-23.62,26.39],[-23.26,26.19],[-23.29,25.69]]]},\"properties\":{\"id\":1632,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1633,1710,1631,1556,1557]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.95,25.63],[-23.06,25.58],[-23.29,25.69],[-23.26,26.19],[-23.06,26.3],[-22.72,26.19],[-22.61,25.94],[-22.95,25.63]]]},\"properties\":{\"id\":1633,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":87,\"culture\":5,\"religion\":5,\"neighbors\":[1712,1711,1710,1632,1557,1558,1559]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.39,25.97],[-22.05,25.72],[-22.19,25.24],[-22.19,25.24],[-22.61,25.94],[-22.39,25.97]]]},\"properties\":{\"id\":1634,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1559,1635,1713,1788,1712]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.77,25.86],[-22.05,25.72],[-22.39,25.97],[-22.05,26.3],[-21.66,26.28],[-21.77,25.86]]]},\"properties\":{\"id\":1635,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9847,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1636,1713,1634,1559,1560]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.15,25.52],[-21.52,25.44],[-21.77,25.86],[-21.66,26.28],[-21.63,26.28],[-21.4,26.25],[-21.18,25.97],[-21.07,25.61],[-21.15,25.52]]]},\"properties\":{\"id\":1636,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1715,1714,1713,1635,1560,1561,1562,1637]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.67,25.63],[-21.07,25.61],[-21.18,25.97],[-20.64,26.22],[-20.59,26.16],[-20.53,25.77],[-20.67,25.63]]]},\"properties\":{\"id\":1637,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":14658,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1716,1715,1636,1562,1563,1638]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.86,26.14],[-20.05,25.72],[-20.53,25.77],[-20.59,26.16],[-20.02,26.33],[-19.86,26.14]]]},\"properties\":{\"id\":1638,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1564,1639,1716,1637,1563]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.6,25.77],[-4.08,25.61],[-4.27,25.83],[-4.08,26.05],[-3.66,26.16],[-3.6,26.14],[-3.6,25.77]]]},\"properties\":{\"id\":1668,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1669,1746,1745,1592,1593,1594]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.15,25.58],[-3.43,25.61],[-3.6,25.77],[-3.6,26.14],[-3.07,26.22],[-2.92,26.11],[-3.04,25.66],[-3.15,25.58]]]},\"properties\":{\"id\":1669,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7919,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1748,1747,1746,1668,1594,1595,1670]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.36,25.66],[-2.56,25.55],[-3.04,25.66],[-2.92,26.11],[-2.62,26.16],[-2.36,25.66]]]},\"properties\":{\"id\":1670,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1671,1749,1748,1669,1595]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2,26.08],[-2.25,25.61],[-2.36,25.66],[-2.62,26.16],[-2.59,26.16],[-2,26.11],[-2,26.08]]]},\"properties\":{\"id\":1671,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1597,1672,1749,1670,1595,1596]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.39,25.72],[0.08,25.83],[0.03,26.25],[0.51,26.19],[0.48,25.75],[0.42,25.72],[0.39,25.72]]]},\"properties\":{\"id\":1676,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4823,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1754,1753,1675,1601,1677,1755]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.52,25.69],[1.66,25.97],[2.22,25.94],[2.33,25.69],[1.72,25.35],[1.52,25.69]]]},\"properties\":{\"id\":1679,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1756,1678,1604,1680,1757]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.7,25.41],[2.5,25.58],[2.93,26.19],[3.26,25.94],[3.32,25.66],[2.7,25.41]]]},\"properties\":{\"id\":1681,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1759,1758,1680,1606,1682]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.6,25.63],[3.91,26.16],[4.28,26.16],[4.3,25.77],[4.19,25.58],[3.8,25.52],[3.6,25.63]]]},\"properties\":{\"id\":1683,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":50,\"culture\":7,\"religion\":11,\"neighbors\":[1760,1682,1608,1684,1762,1761]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.28,26.16],[4.39,26.39],[4.95,26.02],[4.87,25.69],[4.3,25.77],[4.28,26.16]]]},\"properties\":{\"id\":1684,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1683,1608,1609,1685,1762]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.95,26.02],[5.09,26.11],[5.48,26],[5.51,25.69],[5.51,25.66],[5.03,25.47],[4.87,25.69],[4.95,26.02]]]},\"properties\":{\"id\":1685,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":14542,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1684,1609,1610,1686,1764,1763,1762]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.08,25.69],[6.19,26.11],[6.41,26.08],[6.69,25.63],[6.47,25.41],[6.1,25.66],[6.08,25.69]]]},\"properties\":{\"id\":1687,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":2,\"province\":13,\"culture\":6,\"religion\":11,\"neighbors\":[1764,1686,1612,1688,1766,1765]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.41,26.08],[6.75,26.19],[7.03,26],[7.12,25.77],[6.69,25.63],[6.41,26.08]]]},\"properties\":{\"id\":1688,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":18800,\"state\":2,\"province\":13,\"culture\":6,\"religion\":11,\"neighbors\":[1687,1612,1613,1689,1766]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.42,25.72],[9.03,26.19],[9.2,26.33],[9.73,26],[9.73,25.86],[9.42,25.72]]]},\"properties\":{\"id\":1693,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":14808,\"state\":2,\"province\":16,\"culture\":6,\"religion\":11,\"neighbors\":[1771,1692,1617,1618,1694]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.73,25.86],[9.73,26],[9.76,26.02],[10.32,26.25],[10.41,26.22],[10.49,26.14],[10.38,25.69],[9.82,25.72],[9.73,25.86]]]},\"properties\":{\"id\":1694,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":27000,\"state\":2,\"province\":16,\"culture\":6,\"religion\":11,\"neighbors\":[1771,1693,1618,1619,1546,1620,1695,1772]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.38,25.69],[10.49,26.14],[10.8,26.11],[10.77,25.63],[10.74,25.58],[10.43,25.55],[10.38,25.69]]]},\"properties\":{\"id\":1695,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11906,\"state\":3,\"province\":22,\"culture\":6,\"religion\":11,\"neighbors\":[1772,1694,1620,1696,1774,1773]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.8,26.11],[10.91,26.14],[11.08,26.05],[11.08,25.63],[10.77,25.63],[10.8,26.11]]]},\"properties\":{\"id\":1696,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":9000,\"state\":3,\"province\":22,\"culture\":6,\"religion\":11,\"neighbors\":[1695,1620,1621,1697,1774]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.08,25.63],[11.08,26.05],[11.25,26.08],[11.48,25.66],[11.33,25.38],[11.08,25.63]]]},\"properties\":{\"id\":1697,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":39829,\"state\":3,\"province\":22,\"culture\":8,\"religion\":11,\"neighbors\":[1774,1696,1621,1698,1775]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.25,26.08],[11.39,26.16],[11.59,26.16],[11.78,25.83],[11.78,25.8],[11.48,25.66],[11.25,26.08]]]},\"properties\":{\"id\":1698,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":9000,\"state\":3,\"province\":22,\"culture\":8,\"religion\":11,\"neighbors\":[1697,1621,1622,1699,1700,1775]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.59,26.16],[11.81,26.39],[12.07,26.25],[12.07,26.19],[11.78,25.83],[11.59,26.16]]]},\"properties\":{\"id\":1699,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":22701,\"state\":3,\"province\":22,\"culture\":8,\"religion\":11,\"neighbors\":[1698,1622,1550,1623,1700]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.78,25.83],[12.07,26.19],[12.29,25.97],[12.01,25.61],[11.78,25.8],[11.78,25.83]]]},\"properties\":{\"id\":1700,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":10000,\"state\":3,\"province\":22,\"culture\":8,\"religion\":11,\"neighbors\":[1698,1699,1623,1701,1775]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.01,25.61],[12.29,25.97],[12.49,25.94],[12.54,25.91],[12.46,25.52],[12.07,25.41],[12.01,25.61]]]},\"properties\":{\"id\":1701,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":11000,\"state\":3,\"province\":22,\"culture\":8,\"religion\":11,\"neighbors\":[1775,1700,1623,1702,1703,1776]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.49,25.02],[-26.94,24.91],[-27.08,24.93],[-27.14,25.44],[-26.52,25.69],[-26.44,25.58],[-26.35,25.16],[-26.49,25.02]]]},\"properties\":{\"id\":1704,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9000,\"state\":4,\"province\":162,\"culture\":5,\"religion\":5,\"neighbors\":[1781,1780,1858,1626,1627,1705]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.76,25.24],[-26.04,24.93],[-26.35,25.16],[-26.44,25.58],[-25.99,25.49],[-25.76,25.24]]]},\"properties\":{\"id\":1705,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1706,1782,1781,1704,1627]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.48,25.77],[-25.62,25.27],[-25.76,25.24],[-25.99,25.49],[-25.9,25.63],[-25.51,25.83],[-25.48,25.77]]]},\"properties\":{\"id\":1706,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1629,1707,1782,1705,1627,1628]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.95,25.19],[-25.4,25.1],[-25.62,25.27],[-25.48,25.77],[-24.92,25.44],[-24.95,25.19]]]},\"properties\":{\"id\":1707,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6923,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1708,1783,1782,1706,1629]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.19,25.55],[-24.24,25.3],[-24.81,25.02],[-24.95,25.19],[-24.92,25.44],[-24.72,25.69],[-24.33,25.63],[-24.19,25.55]]]},\"properties\":{\"id\":1708,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1631,1709,1784,1783,1707,1629,1630]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.88,24.93],[-24.13,24.91],[-24.24,25.3],[-24.19,25.55],[-23.79,25.61],[-23.74,25.35],[-23.88,24.93]]]},\"properties\":{\"id\":1709,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1786,1785,1784,1708,1631,1710]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.09,25.27],[-23.4,25.02],[-23.74,25.35],[-23.79,25.61],[-23.74,25.66],[-23.29,25.69],[-23.06,25.58],[-23.09,25.27]]]},\"properties\":{\"id\":1710,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1711,1787,1786,1709,1631,1632,1633]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.95,25.63],[-22.47,25.21],[-22.81,24.91],[-23.09,25.27],[-23.06,25.58],[-22.95,25.63]]]},\"properties\":{\"id\":1711,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5926,\"state\":6,\"province\":87,\"culture\":5,\"religion\":5,\"neighbors\":[1633,1712,1788,1787,1710]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.19,25.24],[-22.47,25.21],[-22.95,25.63],[-22.61,25.94],[-22.61,25.94],[-22.19,25.24]]]},\"properties\":{\"id\":1712,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":87,\"culture\":5,\"religion\":5,\"neighbors\":[1634,1788,1711,1633,1559]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.52,25.44],[-21.68,25.19],[-22.16,25.21],[-22.19,25.24],[-22.05,25.72],[-21.77,25.86],[-21.52,25.44]]]},\"properties\":{\"id\":1713,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1636,1714,1789,1788,1634,1635]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.04,25.05],[-21.07,24.99],[-21.66,25.1],[-21.68,25.19],[-21.52,25.44],[-21.15,25.52],[-21.04,25.05]]]},\"properties\":{\"id\":1714,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6553,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1715,1791,1790,1789,1713,1636]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.67,25.63],[-20.48,25.02],[-20.5,24.99],[-21.04,25.05],[-21.15,25.52],[-21.07,25.61],[-20.67,25.63]]]},\"properties\":{\"id\":1715,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1637,1716,1792,1791,1714,1636]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.02,25.16],[-20.25,25.02],[-20.48,25.02],[-20.67,25.63],[-20.53,25.77],[-20.05,25.72],[-19.94,25.52],[-20.02,25.16]]]},\"properties\":{\"id\":1716,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12393,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1717,1793,1792,1715,1637,1638,1639]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.52,25.52],[-19.38,25.44],[-19.49,24.82],[-20.02,25.16],[-19.94,25.52],[-19.52,25.52]]]},\"properties\":{\"id\":1717,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6868,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1639,1640,1718,1793,1716]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.87,25.16],[-19.43,24.77],[-19.49,24.82],[-19.38,25.44],[-19.07,25.52],[-18.87,25.16]]]},\"properties\":{\"id\":1718,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1719,1794,1793,1717,1640]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.38,25.13],[-17.41,25.13],[-17.75,25.13],[-17.97,25.66],[-17.75,25.88],[-17.41,25.41],[-17.38,25.13]]]},\"properties\":{\"id\":1721,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1722,1798,1797,1720,1642,1643]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.82,25.75],[-16.79,25.19],[-16.87,25.1],[-17.38,25.13],[-17.41,25.41],[-17.16,25.69],[-16.82,25.75]]]},\"properties\":{\"id\":1722,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1644,1723,1799,1798,1721,1643]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.75,25.02],[-16.23,24.96],[-16.4,25.19],[-16.06,25.61],[-15.72,25.55],[-15.64,25.47],[-15.58,25.24],[-15.75,25.02]]]},\"properties\":{\"id\":1724,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1801,1800,1799,1723,1646,1647,1725]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.82,25.16],[-15.16,24.93],[-15.58,25.24],[-15.64,25.47],[-15.07,25.66],[-14.99,25.61],[-14.82,25.16]]]},\"properties\":{\"id\":1725,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1726,1802,1801,1724,1647,1648]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.76,25.13],[-12.21,24.79],[-12.38,24.79],[-12.46,25.19],[-12.32,25.63],[-11.76,25.13]]]},\"properties\":{\"id\":1731,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1732,1807,1885,1806,1730]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.05,25.3],[-4.44,25.05],[-4.7,25.13],[-4.64,25.75],[-4.3,25.83],[-4.27,25.83],[-4.08,25.61],[-4.05,25.3]]]},\"properties\":{\"id\":1745,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1746,1822,1821,1744,1667,1592,1668]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.15,25.58],[-3.01,25.24],[-3.18,24.99],[-3.63,24.99],[-3.71,25.13],[-3.43,25.61],[-3.15,25.58]]]},\"properties\":{\"id\":1747,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16668,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1669,1748,1824,1823,1822,1746]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.56,25.55],[-2.76,25.21],[-3.01,25.24],[-3.15,25.58],[-3.04,25.66],[-2.56,25.55]]]},\"properties\":{\"id\":1748,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8471,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1670,1749,1824,1747,1669]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.19,25.55],[-2.31,24.96],[-2.5,24.96],[-2.76,25.21],[-2.56,25.55],[-2.36,25.66],[-2.25,25.61],[-2.19,25.55]]]},\"properties\":{\"id\":1749,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1672,1750,1825,1824,1748,1670,1671]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.21,25.05],[-1.46,24.88],[-1.69,25.07],[-1.8,25.52],[-1.66,25.63],[-1.07,25.55],[-1.15,25.1],[-1.21,25.05]]]},\"properties\":{\"id\":1751,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1828,1827,1826,1750,1672,1673,1752]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.17,25.19],[-0.31,25.19],[-0.45,25.47],[-0.28,25.88],[0.08,25.83],[0.39,25.72],[0.17,25.35],[-0.17,25.19]]]},\"properties\":{\"id\":1753,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1830,1829,1752,1674,1675,1676,1754]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.67,24.99],[0.42,25.72],[0.48,25.75],[0.96,25.61],[1.01,25.13],[0.67,24.99]]]},\"properties\":{\"id\":1755,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1831,1754,1676,1677,1756]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.69,25.19],[1.72,25.35],[2.33,25.69],[2.42,25.61],[2.02,24.99],[1.91,24.99],[1.69,25.19]]]},\"properties\":{\"id\":1757,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1832,1756,1679,1680,1758,1833]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.7,25.41],[3.32,25.66],[3.35,25.63],[3.38,24.93],[2.84,24.99],[2.7,25.35],[2.7,25.41]]]},\"properties\":{\"id\":1759,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1758,1681,1682,1760,1835,1834]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.38,24.93],[3.35,25.63],[3.6,25.63],[3.8,25.52],[3.8,24.91],[3.4,24.88],[3.38,24.93]]]},\"properties\":{\"id\":1760,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":50,\"culture\":7,\"religion\":11,\"neighbors\":[1835,1759,1682,1683,1761,1836]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.8,25.52],[4.19,25.58],[4.33,25.3],[3.88,24.85],[3.8,24.91],[3.8,25.52]]]},\"properties\":{\"id\":1761,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":50,\"culture\":7,\"religion\":11,\"neighbors\":[1760,1683,1762,1837,1836]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.19,25.58],[4.3,25.77],[4.87,25.69],[5.03,25.47],[5.01,25.3],[4.92,25.16],[4.47,25.19],[4.33,25.3],[4.19,25.58]]]},\"properties\":{\"id\":1762,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":50,\"culture\":7,\"religion\":11,\"neighbors\":[1761,1683,1684,1685,1763,1839,1838,1837]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.03,25.47],[5.51,25.66],[5.68,25.19],[5.63,25.1],[5.01,25.3],[5.03,25.47]]]},\"properties\":{\"id\":1763,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":51,\"culture\":7,\"religion\":11,\"neighbors\":[1762,1685,1764,1840,1839]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.16,25.02],[5.88,25.21],[6.1,25.66],[6.47,25.41],[6.5,25.16],[6.47,25.13],[6.16,25.02]]]},\"properties\":{\"id\":1765,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[1841,1840,1764,1687,1766,1842]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.07,24.99],[8.1,25.58],[8.1,25.61],[8.44,25.63],[8.63,25.19],[8.18,24.85],[8.07,24.99]]]},\"properties\":{\"id\":1769,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":19000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1844,1768,1690,1691,1770,1845]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.87,25.13],[9.82,25.72],[10.38,25.69],[10.43,25.55],[10.38,25.3],[10.07,25.1],[9.93,25.07],[9.87,25.13]]]},\"properties\":{\"id\":1772,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":27691,\"state\":2,\"province\":16,\"culture\":6,\"religion\":11,\"neighbors\":[1847,1771,1694,1695,1773,1849,1848]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11,25.05],[10.74,25.58],[10.77,25.63],[11.08,25.63],[11.33,25.38],[11.33,25.27],[11,25.05]]]},\"properties\":{\"id\":1774,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":13000,\"state\":3,\"province\":22,\"culture\":8,\"religion\":11,\"neighbors\":[1850,1773,1695,1696,1697,1775]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.33,25.38],[11.48,25.66],[11.78,25.8],[12.01,25.61],[12.07,25.41],[12.04,25.33],[11.5,25.19],[11.33,25.27],[11.33,25.38]]]},\"properties\":{\"id\":1775,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":25818,\"state\":3,\"province\":22,\"culture\":8,\"religion\":11,\"neighbors\":[1774,1697,1698,1700,1701,1776,1851,1850]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.04,25.33],[12.07,25.41],[12.46,25.52],[12.63,25.41],[12.46,25.07],[12.07,25.27],[12.04,25.33]]]},\"properties\":{\"id\":1776,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":9000,\"state\":3,\"province\":22,\"culture\":8,\"religion\":11,\"neighbors\":[1851,1775,1701,1703,1777,1852]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.49,25.02],[-26.41,24.46],[-26.41,24.46],[-26.94,24.91],[-26.49,25.02]]]},\"properties\":{\"id\":1780,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":2000,\"state\":4,\"province\":162,\"culture\":5,\"religion\":5,\"neighbors\":[1704,1781,1859,1858]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.49,25.02],[-26.35,25.16],[-26.04,24.93],[-26.02,24.65],[-26.41,24.46],[-26.49,25.02]]]},\"properties\":{\"id\":1781,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":162,\"culture\":5,\"religion\":5,\"neighbors\":[1780,1704,1705,1782,1859]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.51,24.65],[-25.9,24.57],[-26.02,24.65],[-26.04,24.93],[-25.76,25.24],[-25.62,25.27],[-25.4,25.1],[-25.51,24.65]]]},\"properties\":{\"id\":1782,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":48,\"culture\":5,\"religion\":5,\"neighbors\":[1783,1860,1859,1781,1705,1706,1707]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.75,24.71],[-25,24.46],[-25.26,24.46],[-25.51,24.65],[-25.4,25.1],[-24.95,25.19],[-24.81,25.02],[-24.75,24.71]]]},\"properties\":{\"id\":1783,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1784,1862,1861,1860,1782,1707,1708]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.13,24.91],[-24.36,24.6],[-24.75,24.71],[-24.81,25.02],[-24.24,25.3],[-24.13,24.91]]]},\"properties\":{\"id\":1784,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9402,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1709,1785,1862,1783,1708]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.88,24.93],[-23.54,24.65],[-23.68,24.4],[-24.19,24.32],[-24.36,24.6],[-24.13,24.91],[-23.88,24.93]]]},\"properties\":{\"id\":1785,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":11050,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1709,1786,1864,1863,1862,1784]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.43,24.71],[-23.54,24.65],[-23.88,24.93],[-23.74,25.35],[-23.4,25.02],[-23.43,24.71]]]},\"properties\":{\"id\":1786,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1787,1864,1785,1709,1710]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.84,24.57],[-22.89,24.54],[-23.43,24.71],[-23.4,25.02],[-23.09,25.27],[-22.81,24.91],[-22.81,24.57],[-22.84,24.57]]]},\"properties\":{\"id\":1787,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1866,1865,1864,1786,1710,1711,1788]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.16,25.21],[-22.25,24.71],[-22.81,24.57],[-22.81,24.91],[-22.47,25.21],[-22.19,25.24],[-22.19,25.24],[-22.16,25.21]]]},\"properties\":{\"id\":1788,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":87,\"culture\":5,\"religion\":5,\"neighbors\":[1713,1789,1866,1787,1711,1712,1634]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.66,25.1],[-21.57,24.6],[-21.68,24.46],[-22.11,24.57],[-22.25,24.71],[-22.16,25.21],[-21.68,25.19],[-21.66,25.1]]]},\"properties\":{\"id\":1789,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":87,\"culture\":7,\"religion\":7,\"neighbors\":[1714,1790,1868,1867,1866,1788,1713]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.21,24.6],[-21.57,24.6],[-21.66,25.1],[-21.07,24.99],[-21.21,24.6]]]},\"properties\":{\"id\":1790,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1791,1868,1789,1714]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.67,24.6],[-20.95,24.4],[-21.21,24.6],[-21.07,24.99],[-21.04,25.05],[-20.5,24.99],[-20.62,24.65],[-20.67,24.6]]]},\"properties\":{\"id\":1791,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":11796,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1870,1869,1868,1790,1714,1715,1792]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20,24.4],[-20.08,24.32],[-20.62,24.65],[-20.5,24.99],[-20.48,25.02],[-20.25,25.02],[-20,24.4]]]},\"properties\":{\"id\":1792,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1793,1871,1870,1791,1715,1716]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.43,24.77],[-19.43,24.49],[-20,24.4],[-20.25,25.02],[-20.02,25.16],[-19.49,24.82],[-19.43,24.77]]]},\"properties\":{\"id\":1793,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1718,1794,1871,1792,1716,1717]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.73,24.6],[-18.98,24.46],[-19.41,24.49],[-19.43,24.49],[-19.43,24.77],[-18.87,25.16],[-18.87,25.13],[-18.73,24.6]]]},\"properties\":{\"id\":1794,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1795,1873,1872,1871,1793,1718,1719]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.25,25.05],[-18.28,24.6],[-18.73,24.6],[-18.87,25.13],[-18.37,25.24],[-18.25,25.05]]]},\"properties\":{\"id\":1795,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1720,1796,1873,1794,1719]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.86,24.51],[-17.86,24.51],[-18.2,24.49],[-18.28,24.6],[-18.25,25.05],[-17.83,25.1],[-17.86,24.51]]]},\"properties\":{\"id\":1796,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1797,1875,1874,1873,1795,1720]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.47,24.82],[-17.86,24.51],[-17.83,25.1],[-17.75,25.13],[-17.41,25.13],[-17.47,24.82]]]},\"properties\":{\"id\":1797,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1798,1875,1796,1720,1721]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.85,24.68],[-17.18,24.35],[-17.47,24.82],[-17.41,25.13],[-17.38,25.13],[-16.87,25.1],[-16.85,24.68]]]},\"properties\":{\"id\":1798,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1799,1876,1875,1797,1721,1722]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.23,24.4],[-16.34,24.4],[-16.42,24.4],[-16.85,24.68],[-16.87,25.1],[-16.79,25.19],[-16.4,25.19],[-16.23,24.96],[-16.2,24.49],[-16.23,24.4]]]},\"properties\":{\"id\":1799,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1878,1954,1877,1876,1798,1722,1723,1724,1800]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.75,25.02],[-15.78,24.65],[-16.2,24.49],[-16.23,24.96],[-15.75,25.02]]]},\"properties\":{\"id\":1800,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1724,1801,1878,1799]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.46,24.63],[-14.65,24.4],[-15.02,24.49],[-15.19,24.74],[-15.16,24.93],[-14.82,25.16],[-14.6,25.13],[-14.6,25.13],[-14.46,24.63]]]},\"properties\":{\"id\":1802,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1803,1881,1880,1879,1801,1725,1726,1727]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.39,24.71],[-13.92,24.4],[-14.01,24.54],[-13.95,25.1],[-13.42,24.96],[-13.39,24.71]]]},\"properties\":{\"id\":1804,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1805,1882,1881,1803,1728]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.76,24.57],[-11.95,24.32],[-12.21,24.79],[-11.76,25.13],[-11.64,25.1],[-11.76,24.57]]]},\"properties\":{\"id\":1807,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1808,1886,1885,1731,1732]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.19,24.49],[-11.25,24.46],[-11.76,24.57],[-11.64,25.1],[-11.48,25.13],[-11.33,25.02],[-11.19,24.49]]]},\"properties\":{\"id\":1808,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[1809,1887,1886,1807,1732,1733]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.91,25.07],[-10.55,24.65],[-10.86,24.37],[-11.19,24.49],[-11.33,25.02],[-10.91,25.07]]]},\"properties\":{\"id\":1809,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[1733,1810,1888,1887,1808]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.98,25.19],[-9.42,24.93],[-9.93,24.54],[-10.27,24.77],[-10.18,25.07],[-9.98,25.19]]]},\"properties\":{\"id\":1811,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1735,1736,1812,1889,1810]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.69,24.74],[-9.11,24.54],[-9.34,24.68],[-9.42,24.93],[-9.31,25.07],[-8.77,24.91],[-8.69,24.74]]]},\"properties\":{\"id\":1813,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1814,1891,1890,1812,1736,1737]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.24,24.6],[-8.41,24.54],[-8.69,24.74],[-8.77,24.91],[-8.66,25.33],[-8.07,25.05],[-8.24,24.6]]]},\"properties\":{\"id\":1814,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1815,1892,1891,1813,1737,1738]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.51,24.54],[-7.59,24.46],[-8.21,24.57],[-8.24,24.6],[-8.07,25.05],[-7.99,25.16],[-7.62,25.21],[-7.4,25.1],[-7.51,24.54]]]},\"properties\":{\"id\":1815,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1816,1894,1893,1892,1814,1738,1739,1740]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.95,25.07],[-6.92,24.51],[-7.51,24.54],[-7.4,25.1],[-7.06,25.19],[-6.95,25.07]]]},\"properties\":{\"id\":1816,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1741,1817,1894,1815,1740]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.33,24.57],[-6.41,24.4],[-6.89,24.46],[-6.92,24.51],[-6.95,25.07],[-6.47,24.91],[-6.33,24.57]]]},\"properties\":{\"id\":1817,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1818,1896,1895,1894,1816,1741]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.88,24.68],[-6.33,24.57],[-6.47,24.91],[-6.24,25.19],[-5.85,25.13],[-5.71,25.02],[-5.88,24.68]]]},\"properties\":{\"id\":1818,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6877,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1819,1896,1817,1741,1742,1743]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.12,24.46],[-5.4,24.32],[-5.71,24.37],[-5.88,24.68],[-5.71,25.02],[-5.51,25.05],[-5.12,24.46]]]},\"properties\":{\"id\":1819,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1820,1898,1897,1896,1818,1743]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.63,24.99],[-3.77,24.54],[-4.25,24.57],[-4.44,25.05],[-4.05,25.3],[-3.71,25.13],[-3.63,24.99]]]},\"properties\":{\"id\":1822,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":7,\"neighbors\":[1747,1823,1900,1821,1745,1746]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.98,24.65],[-3.15,24.35],[-3.77,24.51],[-3.77,24.54],[-3.63,24.99],[-3.18,24.99],[-2.98,24.65]]]},\"properties\":{\"id\":1823,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1824,1902,1901,1900,1822,1747]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.5,24.96],[-2.78,24.68],[-2.98,24.65],[-3.18,24.99],[-3.01,25.24],[-2.76,25.21],[-2.5,24.96]]]},\"properties\":{\"id\":1824,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1749,1825,1902,1823,1747,1748]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.17,24.65],[-2.5,24.4],[-2.78,24.68],[-2.5,24.96],[-2.31,24.96],[-2.28,24.96],[-2.17,24.65]]]},\"properties\":{\"id\":1825,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8150,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1826,1903,1902,1824,1749,1750]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.69,25.07],[-1.46,24.88],[-1.52,24.54],[-1.94,24.46],[-2.17,24.65],[-2.28,24.96],[-1.69,25.07]]]},\"properties\":{\"id\":1826,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11121,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1750,1751,1827,1904,1903,1825]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.21,25.05],[-0.82,24.43],[-1.01,24.35],[-1.52,24.51],[-1.52,24.54],[-1.46,24.88],[-1.21,25.05]]]},\"properties\":{\"id\":1827,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11890,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1751,1828,1906,1905,1904,1826]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.53,24.77],[-0.7,24.49],[-0.82,24.43],[-1.21,25.05],[-1.15,25.1],[-0.53,24.85],[-0.53,24.77]]]},\"properties\":{\"id\":1828,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1829,1907,1906,1827,1751,1752]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.17,25.19],[0.17,25.35],[0.53,24.85],[0.45,24.65],[0.25,24.57],[-0.17,25.19]]]},\"properties\":{\"id\":1830,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1829,1753,1754,1831,1908]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.45,24.65],[0.53,24.85],[0.67,24.99],[1.01,25.13],[1.24,24.96],[1.21,24.68],[1.13,24.49],[0.56,24.6],[0.45,24.65]]]},\"properties\":{\"id\":1831,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1908,1830,1754,1755,1756,1832,1910,1909]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.24,24.96],[1.69,25.19],[1.91,24.99],[1.8,24.63],[1.21,24.68],[1.24,24.96]]]},\"properties\":{\"id\":1832,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1831,1756,1757,1833,1910]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.91,24.99],[2.02,24.99],[2.22,24.93],[2.42,24.63],[2.25,24.43],[1.86,24.49],[1.8,24.63],[1.91,24.99]]]},\"properties\":{\"id\":1833,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1832,1757,1758,1834,1912,1911,1910]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.22,24.93],[2.7,25.35],[2.84,24.99],[2.7,24.63],[2.42,24.63],[2.22,24.93]]]},\"properties\":{\"id\":1834,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":9000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1833,1758,1759,1835,1912]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.7,24.63],[2.84,24.99],[3.38,24.93],[3.4,24.88],[3.32,24.54],[3.18,24.4],[2.78,24.51],[2.7,24.63]]]},\"properties\":{\"id\":1835,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16631,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1912,1834,1759,1760,1836,1914,1913]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.4,24.88],[3.8,24.91],[3.88,24.85],[3.99,24.65],[3.94,24.29],[3.32,24.54],[3.4,24.88]]]},\"properties\":{\"id\":1836,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11320,\"state\":5,\"province\":50,\"culture\":7,\"religion\":11,\"neighbors\":[1835,1760,1761,1837,1915,1914]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.88,24.85],[4.33,25.3],[4.47,25.19],[4.39,24.74],[3.99,24.65],[3.88,24.85]]]},\"properties\":{\"id\":1837,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4824,\"state\":5,\"province\":50,\"culture\":7,\"religion\":11,\"neighbors\":[1836,1761,1762,1838,1915]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.67,24.54],[4.39,24.74],[4.47,25.19],[4.92,25.16],[4.98,24.91],[4.67,24.54]]]},\"properties\":{\"id\":1838,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":50,\"culture\":7,\"religion\":11,\"neighbors\":[1917,1915,1837,1762,1839]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.92,25.16],[5.01,25.3],[5.63,25.1],[5.57,24.77],[5.4,24.63],[4.98,24.91],[4.92,25.16]]]},\"properties\":{\"id\":1839,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":51,\"culture\":7,\"religion\":11,\"neighbors\":[1838,1762,1763,1840,1918,1917]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.68,25.19],[5.88,25.21],[6.16,25.02],[6.02,24.68],[5.57,24.77],[5.63,25.1],[5.68,25.19]]]},\"properties\":{\"id\":1840,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":51,\"culture\":7,\"religion\":11,\"neighbors\":[1763,1764,1765,1841,1918,1839]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.16,25.02],[6.47,25.13],[6.47,24.32],[6.16,24.43],[6.02,24.68],[6.16,25.02]]]},\"properties\":{\"id\":1841,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":2,\"province\":13,\"culture\":7,\"religion\":11,\"neighbors\":[1840,1765,1842,1919,1918]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.47,24.32],[6.47,25.13],[6.5,25.16],[6.89,25.02],[6.95,24.63],[6.92,24.57],[6.52,24.26],[6.47,24.32]]]},\"properties\":{\"id\":1842,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":12196,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[1919,1841,1765,1766,1843,1921,1920]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.89,25.02],[7.03,25.13],[7.54,25.1],[7.48,24.63],[6.95,24.63],[6.89,25.02]]]},\"properties\":{\"id\":1843,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":2,\"province\":13,\"culture\":6,\"religion\":11,\"neighbors\":[1842,1766,1767,1844,1921]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.54,25.1],[7.57,25.1],[8.07,24.99],[8.18,24.85],[8.21,24.63],[7.62,24.46],[7.48,24.63],[7.54,25.1]]]},\"properties\":{\"id\":1844,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":21000,\"state\":2,\"province\":13,\"culture\":6,\"religion\":11,\"neighbors\":[1843,1767,1768,1769,1845,1922,1921]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.18,24.85],[8.63,25.19],[9.03,25.1],[8.72,24.49],[8.33,24.49],[8.21,24.63],[8.18,24.85]]]},\"properties\":{\"id\":1845,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":31000,\"state\":2,\"province\":13,\"culture\":6,\"religion\":11,\"neighbors\":[1844,1769,1770,1846,1923,1922]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.03,25.1],[9.11,25.13],[9.34,24.63],[9.2,24.32],[8.83,24.4],[8.72,24.49],[9.03,25.1]]]},\"properties\":{\"id\":1846,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":29003,\"state\":2,\"province\":16,\"culture\":8,\"religion\":11,\"neighbors\":[1845,1770,1847,1925,1924,1923]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.72,24.57],[10.07,25.1],[10.38,25.3],[10.94,24.99],[10.88,24.65],[10.72,24.57]]]},\"properties\":{\"id\":1849,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":20000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[1928,1848,1772,1773,1850]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.5,25.19],[12.04,25.33],[12.07,25.27],[12.07,24.57],[11.92,24.54],[11.76,24.57],[11.5,25.19]]]},\"properties\":{\"id\":1851,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":18000,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[1850,1775,1776,1852,1930,1929]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.07,24.57],[12.07,25.27],[12.46,25.07],[12.54,24.96],[12.09,24.57],[12.07,24.57]]]},\"properties\":{\"id\":1852,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":17000,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[1930,1851,1776,1777,1853]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.09,24.57],[12.54,24.96],[12.68,24.91],[12.8,24.74],[12.77,24.68],[12.35,24.32],[12.09,24.57]]]},\"properties\":{\"id\":1853,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":19126,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[1930,1852,1777,1778,1854,1931]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.11,24.26],[13.08,24.23],[13.05,24.23],[12.77,24.68],[12.8,24.74],[13.05,24.79],[13.19,24.6],[13.11,24.26]]]},\"properties\":{\"id\":1854,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[1856,1933,1932,1931,1853,1778,1855]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.41,24.46],[-26.58,24.04],[-27.03,24.04],[-27.39,24.49],[-27.08,24.93],[-26.94,24.91],[-26.41,24.46]]]},\"properties\":{\"id\":1858,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":11000,\"state\":4,\"province\":162,\"culture\":5,\"religion\":5,\"neighbors\":[1780,1859,1935,1704]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.76,23.98],[-25.99,23.87],[-26.52,23.95],[-26.58,24.04],[-26.41,24.46],[-26.41,24.46],[-26.02,24.65],[-25.9,24.57],[-25.76,23.98]]]},\"properties\":{\"id\":1859,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[1860,1937,1936,1935,1858,1780,1781,1782]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.26,24.46],[-25.57,23.93],[-25.76,23.98],[-25.9,24.57],[-25.51,24.65],[-25.26,24.46]]]},\"properties\":{\"id\":1860,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1783,1861,1937,1859,1782]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.89,24.01],[-25.42,23.79],[-25.57,23.93],[-25.26,24.46],[-25,24.46],[-24.89,24.01]]]},\"properties\":{\"id\":1861,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6004,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1862,1938,1937,1860,1783]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.27,23.98],[-24.69,23.87],[-24.89,24.01],[-25,24.46],[-24.75,24.71],[-24.36,24.6],[-24.19,24.32],[-24.24,23.98],[-24.27,23.98]]]},\"properties\":{\"id\":1862,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1940,1939,1938,1861,1783,1784,1785,1863]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.48,24.04],[-23.62,23.76],[-24.24,23.98],[-24.19,24.32],[-23.68,24.4],[-23.48,24.04]]]},\"properties\":{\"id\":1863,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1864,1941,1940,1862,1785]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.23,24.07],[-23.48,24.04],[-23.68,24.4],[-23.54,24.65],[-23.43,24.71],[-22.89,24.54],[-23.23,24.07]]]},\"properties\":{\"id\":1864,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1865,1941,1863,1785,1786,1787]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.61,24.09],[-23.03,23.84],[-23.23,24.07],[-22.89,24.54],[-22.84,24.57],[-22.58,24.12],[-22.61,24.09]]]},\"properties\":{\"id\":1865,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7188,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1943,1942,1941,1864,1787,1866]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.11,24.57],[-22.33,24.15],[-22.58,24.12],[-22.84,24.57],[-22.81,24.57],[-22.25,24.71],[-22.11,24.57]]]},\"properties\":{\"id\":1866,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1789,1867,1943,1865,1787,1788]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.71,23.95],[-21.94,23.93],[-22.33,24.15],[-22.11,24.57],[-21.68,24.46],[-21.71,23.95]]]},\"properties\":{\"id\":1867,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1868,1944,1943,1866,1789]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.95,24.07],[-21.63,23.87],[-21.71,23.95],[-21.68,24.46],[-21.57,24.6],[-21.21,24.6],[-20.95,24.4],[-20.9,24.09],[-20.95,24.07]]]},\"properties\":{\"id\":1868,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":16403,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1946,1945,1944,1867,1789,1790,1791,1869]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.67,24.6],[-20.25,24.09],[-20.56,23.93],[-20.9,24.09],[-20.95,24.4],[-20.67,24.6]]]},\"properties\":{\"id\":1869,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1791,1870,1947,1946,1868]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.19,24.12],[-20.25,24.09],[-20.67,24.6],[-20.62,24.65],[-20.08,24.32],[-20.19,24.12]]]},\"properties\":{\"id\":1870,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1871,1947,1869,1791,1792]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.41,24.04],[-20,23.87],[-20.19,24.12],[-20.08,24.32],[-20,24.4],[-19.43,24.49],[-19.41,24.49],[-19.41,24.04]]]},\"properties\":{\"id\":1871,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":13267,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1872,1948,1947,1870,1792,1793,1794]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,23.93],[-19.38,23.9],[-19.41,24.04],[-19.41,24.49],[-18.98,24.46],[-18.7,23.95],[-18.76,23.93]]]},\"properties\":{\"id\":1872,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1950,1949,1948,1871,1794,1873]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.25,24.12],[-18.42,23.93],[-18.7,23.95],[-18.98,24.46],[-18.73,24.6],[-18.28,24.6],[-18.2,24.49],[-18.25,24.12]]]},\"properties\":{\"id\":1873,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1874,1951,1950,1872,1794,1795,1796]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.47,24.09],[-17.69,23.9],[-18.25,24.12],[-18.2,24.49],[-17.86,24.51],[-17.47,24.09]]]},\"properties\":{\"id\":1874,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1875,1952,1951,1873,1796]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.18,24.35],[-17.24,24.12],[-17.47,24.09],[-17.86,24.51],[-17.86,24.51],[-17.47,24.82],[-17.18,24.35]]]},\"properties\":{\"id\":1875,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1798,1876,1952,1874,1796,1797]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.42,24.4],[-16.34,24.4],[-16.57,23.67],[-16.93,24.01],[-16.42,24.4]]]},\"properties\":{\"id\":1877,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1876,1799,1954,1953]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.61,24.01],[-15.69,23.98],[-15.97,24.09],[-16.23,24.4],[-16.2,24.49],[-15.78,24.65],[-15.55,24.54],[-15.61,24.01]]]},\"properties\":{\"id\":1878,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1879,1956,1955,1954,1799,1800,1801]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.02,24.49],[-15.24,23.93],[-15.61,24.01],[-15.55,24.54],[-15.19,24.74],[-15.02,24.49]]]},\"properties\":{\"id\":1879,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1802,1880,1956,1878,1801]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.51,24.04],[-14.74,23.9],[-15.22,23.9],[-15.24,23.93],[-15.02,24.49],[-14.65,24.4],[-14.51,24.04]]]},\"properties\":{\"id\":1880,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1881,1958,1957,1956,1879,1802]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.92,24.09],[-14.2,23.95],[-14.51,24.04],[-14.65,24.4],[-14.46,24.63],[-14.01,24.54],[-13.92,24.4],[-13.92,24.09]]]},\"properties\":{\"id\":1881,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1882,1959,1958,1880,1802,1803,1804]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.25,24.6],[-13.33,24.15],[-13.75,23.98],[-13.92,24.09],[-13.92,24.4],[-13.39,24.71],[-13.25,24.6]]]},\"properties\":{\"id\":1882,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1805,1883,1960,1959,1881,1804]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.82,23.95],[-12.85,23.9],[-13.33,24.15],[-13.25,24.6],[-13.11,24.6],[-12.82,23.95]]]},\"properties\":{\"id\":1883,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1884,1961,1960,1882,1805]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.95,24.23],[-12.21,24.04],[-12.29,24.04],[-12.54,24.09],[-12.63,24.63],[-12.38,24.79],[-12.21,24.79],[-11.95,24.32],[-11.95,24.23]]]},\"properties\":{\"id\":1885,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1886,1963,1962,1961,1884,1806,1731,1807]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.76,24.57],[-11.25,24.46],[-11.5,24.12],[-11.95,24.23],[-11.95,24.32],[-11.76,24.57]]]},\"properties\":{\"id\":1886,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[1807,1808,1887,1963,1885]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.86,24.37],[-10.77,24.07],[-11.45,23.93],[-11.5,24.12],[-11.25,24.46],[-11.19,24.49],[-10.86,24.37]]]},\"properties\":{\"id\":1887,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[1809,1888,1964,1963,1886,1808]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.7,24.04],[-10.21,23.93],[-10.24,23.93],[-10.41,24.68],[-10.27,24.77],[-9.93,24.54],[-9.7,24.04],[-9.7,24.04]]]},\"properties\":{\"id\":1889,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[1967,1966,1965,1888,1810,1811,1812]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.34,24.68],[-9.11,24.54],[-9.11,24.21],[-9.53,24.04],[-9.7,24.04],[-9.34,24.68]]]},\"properties\":{\"id\":1890,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1812,1813,1891,1968,1967]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.21,24.57],[-8.02,24.09],[-8.18,23.81],[-8.49,23.79],[-8.61,23.84],[-8.63,24.04],[-8.41,24.54],[-8.24,24.6],[-8.21,24.57]]]},\"properties\":{\"id\":1892,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1815,1893,1972,1969,1970,1968,1891,1814]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.59,24.46],[-7.51,24.04],[-8.02,24.09],[-8.21,24.57],[-7.59,24.46]]]},\"properties\":{\"id\":1893,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1815,1894,1972,1892]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.89,24.46],[-7.12,23.98],[-7.45,23.98],[-7.48,23.98],[-7.51,24.04],[-7.59,24.46],[-7.51,24.54],[-6.92,24.51],[-6.89,24.46]]]},\"properties\":{\"id\":1894,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":19327,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1817,1895,1973,1971,1972,1893,1815,1816]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.38,24.21],[-6.55,23.84],[-6.95,23.84],[-7.12,23.98],[-6.89,24.46],[-6.41,24.4],[-6.38,24.21]]]},\"properties\":{\"id\":1895,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1896,1975,1974,1973,1894,1817]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.71,24.37],[-5.4,24.32],[-5.43,23.95],[-5.85,23.87],[-5.91,24.04],[-5.71,24.37]]]},\"properties\":{\"id\":1897,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[1896,1819,1898,1976,1975]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.84,24.26],[-5.32,23.84],[-5.43,23.95],[-5.4,24.32],[-5.12,24.46],[-5.01,24.46],[-4.84,24.26]]]},\"properties\":{\"id\":1898,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11016,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[1821,1977,1976,1897,1819,1820]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.77,24.51],[-3.83,23.93],[-4.19,23.98],[-4.33,24.49],[-4.25,24.57],[-3.77,24.54],[-3.77,24.51]]]},\"properties\":{\"id\":1900,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":69,\"culture\":7,\"religion\":7,\"neighbors\":[1823,1901,1979,1899,1821,1822]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.78,24.68],[-2.5,24.4],[-2.56,24.01],[-2.67,23.98],[-2.95,24.01],[-3.07,24.12],[-3.15,24.35],[-2.98,24.65],[-2.78,24.68]]]},\"properties\":{\"id\":1902,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":69,\"culture\":7,\"religion\":11,\"neighbors\":[1824,1825,1903,1982,1981,1980,1901,1823]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.05,24.21],[-2.39,23.98],[-2.56,24.01],[-2.5,24.4],[-2.17,24.65],[-1.94,24.46],[-2.05,24.21]]]},\"properties\":{\"id\":1903,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1904,1983,1982,1902,1825,1826]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.52,24.51],[-1.52,23.95],[-1.66,23.79],[-1.69,23.79],[-2.05,24.21],[-1.94,24.46],[-1.52,24.54],[-1.52,24.51]]]},\"properties\":{\"id\":1904,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[1827,1905,1984,2067,1983,1903,1826]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.01,24.35],[-0.98,23.9],[-1.52,23.95],[-1.52,24.51],[-1.01,24.35]]]},\"properties\":{\"id\":1905,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[1827,1906,1984,1904]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.7,24.49],[-0.37,24.04],[-0.98,23.9],[-0.98,23.9],[-1.01,24.35],[-0.82,24.43],[-0.7,24.49]]]},\"properties\":{\"id\":1906,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[1828,1907,1985,1984,1905,1827]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.45,24.65],[0.56,24.6],[0.7,24.09],[0.2,24.04],[0.06,24.21],[0.08,24.37],[0.25,24.57],[0.45,24.65]]]},\"properties\":{\"id\":1908,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1830,1831,1909,1987,1986,1907,1829]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.13,24.49],[1.21,24.68],[1.8,24.63],[1.86,24.49],[1.66,24.15],[1.21,24.26],[1.13,24.49]]]},\"properties\":{\"id\":1910,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16337,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1909,1831,1832,1833,1911,1989]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.25,24.43],[2.42,24.63],[2.7,24.63],[2.78,24.51],[2.64,24.04],[2.33,23.95],[2.25,24.43]]]},\"properties\":{\"id\":1912,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1911,1833,1834,1835,1913,1991]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.64,24.04],[2.78,24.51],[3.18,24.4],[3.23,24.12],[2.87,23.93],[2.64,24.04]]]},\"properties\":{\"id\":1913,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1991,1912,1835,1914,1992]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.94,24.29],[3.99,24.65],[4.39,24.74],[4.67,24.54],[4.67,24.43],[4.08,24.09],[3.97,24.15],[3.94,24.29]]]},\"properties\":{\"id\":1915,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":18548,\"state\":5,\"province\":50,\"culture\":8,\"religion\":11,\"neighbors\":[1914,1836,1837,1838,1917,1916,1994]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.08,24.09],[4.67,24.43],[4.98,24.04],[4.95,24.01],[4.22,23.93],[4.08,24.09]]]},\"properties\":{\"id\":1916,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":51,\"culture\":8,\"religion\":11,\"neighbors\":[1994,1915,1917,1996,1995]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.67,24.54],[4.98,24.91],[5.4,24.63],[5.37,24.07],[4.98,24.04],[4.67,24.43],[4.67,24.54]]]},\"properties\":{\"id\":1917,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":9000,\"state\":5,\"province\":51,\"culture\":7,\"religion\":11,\"neighbors\":[1915,1838,1839,1918,1996,1916]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.4,24.63],[5.57,24.77],[6.02,24.68],[6.16,24.43],[5.48,23.93],[5.37,24.07],[5.4,24.63]]]},\"properties\":{\"id\":1918,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":51,\"culture\":7,\"religion\":11,\"neighbors\":[1917,1839,1840,1841,1919,1996]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.48,23.93],[6.16,24.43],[6.47,24.32],[6.52,24.26],[6.55,24.15],[6.44,23.93],[6.19,23.79],[5.48,23.93],[5.48,23.93]]]},\"properties\":{\"id\":1919,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":13000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[1996,1918,1841,1842,1920,1999,1998,1997]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.37,24.01],[6.92,24.57],[6.95,24.63],[7.48,24.63],[7.62,24.46],[7.51,24.07],[7.37,24.01]]]},\"properties\":{\"id\":1921,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":10432,\"state\":2,\"province\":13,\"culture\":6,\"religion\":11,\"neighbors\":[2000,1920,1842,1843,1844,1922]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.62,24.46],[8.21,24.63],[8.33,24.49],[8.24,24.18],[7.71,23.93],[7.51,24.07],[7.62,24.46]]]},\"properties\":{\"id\":1922,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":28000,\"state\":2,\"province\":13,\"culture\":6,\"religion\":11,\"neighbors\":[1921,1844,1845,1923,2001,2000]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.24,24.18],[8.33,24.49],[8.72,24.49],[8.83,24.4],[8.77,23.93],[8.27,24.18],[8.24,24.18]]]},\"properties\":{\"id\":1923,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":28624,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2001,1922,1845,1846,1924,2002]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.34,24.63],[9.87,24.68],[9.96,24.46],[9.84,24.07],[9.39,24.04],[9.39,24.04],[9.2,24.32],[9.34,24.63]]]},\"properties\":{\"id\":1925,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":30000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[1846,1847,1848,1926,2004,2003,1924]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.96,24.46],[10.69,24.51],[10.52,24.07],[10.35,23.93],[9.96,23.93],[9.84,24.07],[9.96,24.46]]]},\"properties\":{\"id\":1926,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":30000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[1925,1848,1927,2006,2005,2004]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.69,24.51],[10.69,24.51],[10.94,24.01],[10.8,23.87],[10.52,24.07],[10.69,24.51]]]},\"properties\":{\"id\":1927,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":10000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[1926,1848,1928,2007,2006]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.39,24.37],[11.76,24.57],[11.92,24.54],[11.84,23.84],[11.45,23.79],[11.42,23.81],[11.36,23.95],[11.39,24.37]]]},\"properties\":{\"id\":1929,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":53830,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[1928,1850,1851,1930,2008,2095,2007]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.92,24.54],[12.07,24.57],[12.09,24.57],[12.35,24.32],[12.38,24.32],[12.35,23.95],[12.32,23.87],[12.04,23.79],[11.84,23.84],[11.92,24.54]]]},\"properties\":{\"id\":1930,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":34190,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[1929,1851,1852,1853,1931,1932,2010,2009,2008]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.35,24.32],[12.77,24.68],[13.05,24.23],[12.38,24.32],[12.35,24.32]]]},\"properties\":{\"id\":1931,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":15000,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[1930,1853,1854,1932]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.35,23.95],[12.38,24.32],[13.05,24.23],[13.08,24.23],[13.13,23.98],[13.11,23.9],[12.35,23.95]]]},\"properties\":{\"id\":1932,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":39469,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[2010,1930,1931,1854,1933,2013]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.58,23.51],[-27.14,23.14],[-27.39,23.42],[-27.03,24.04],[-26.58,24.04],[-26.52,23.95],[-26.49,23.7],[-26.58,23.51]]]},\"properties\":{\"id\":1935,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2017,2016,1858,1859,1936]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.93,23.28],[-25.96,23.25],[-26.49,23.7],[-26.52,23.95],[-25.99,23.87],[-25.93,23.28]]]},\"properties\":{\"id\":1936,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5346,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[1937,2018,2017,1935,1859]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.4,23.59],[-25.93,23.28],[-25.99,23.87],[-25.76,23.98],[-25.57,23.93],[-25.42,23.79],[-25.4,23.59]]]},\"properties\":{\"id\":1937,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[1938,2018,1936,1859,1860,1861]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.89,24.01],[-24.69,23.87],[-24.81,23.53],[-25.34,23.53],[-25.4,23.59],[-25.42,23.79],[-24.89,24.01]]]},\"properties\":{\"id\":1938,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[1861,1862,1939,2019,2018,1937]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.27,23.98],[-24.19,23.34],[-24.19,23.28],[-24.75,23.39],[-24.81,23.53],[-24.69,23.87],[-24.27,23.98]]]},\"properties\":{\"id\":1939,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[1862,1940,2021,2020,2019,1938]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.6,23.62],[-24.19,23.34],[-24.27,23.98],[-24.24,23.98],[-23.62,23.76],[-23.6,23.62]]]},\"properties\":{\"id\":1940,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1941,2021,1939,1862,1863]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.03,23.56],[-23.2,23.37],[-23.4,23.42],[-23.6,23.62],[-23.62,23.76],[-23.48,24.04],[-23.23,24.07],[-23.03,23.84],[-23.03,23.56]]]},\"properties\":{\"id\":1941,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1942,2023,2022,2021,1940,1863,1864,1865]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.61,24.09],[-22.47,23.59],[-23.03,23.56],[-23.03,23.84],[-22.61,24.09]]]},\"properties\":{\"id\":1942,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1865,1943,2023,1941]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.94,23.93],[-22.42,23.53],[-22.47,23.59],[-22.61,24.09],[-22.58,24.12],[-22.33,24.15],[-21.94,23.93]]]},\"properties\":{\"id\":1943,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1867,1944,2023,1942,1865,1866]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.57,23.51],[-22.27,23.37],[-22.42,23.51],[-22.42,23.53],[-21.94,23.93],[-21.71,23.95],[-21.63,23.87],[-21.57,23.51]]]},\"properties\":{\"id\":1944,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1945,2025,2024,2023,1943,1867,1868]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.95,24.07],[-21.09,23.42],[-21.49,23.37],[-21.57,23.51],[-21.63,23.87],[-20.95,24.07]]]},\"properties\":{\"id\":1945,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12039,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1868,1946,2026,2025,1944]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.56,23.93],[-20.56,23.45],[-20.9,23.34],[-21.09,23.42],[-20.95,24.07],[-20.9,24.09],[-20.56,23.93]]]},\"properties\":{\"id\":1946,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1869,1947,2027,2026,1945,1868]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.02,23.53],[-20.45,23.39],[-20.56,23.45],[-20.56,23.93],[-20.25,24.09],[-20.19,24.12],[-20,23.87],[-19.97,23.65],[-20.02,23.53]]]},\"properties\":{\"id\":1947,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2029,2028,2027,1946,1869,1870,1871,1948]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.41,24.04],[-19.38,23.9],[-19.38,23.56],[-19.97,23.65],[-20,23.87],[-19.41,24.04]]]},\"properties\":{\"id\":1948,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1871,1872,1949,2029,1947]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,23.93],[-18.96,23.53],[-19.35,23.51],[-19.38,23.56],[-19.38,23.9],[-18.76,23.93]]]},\"properties\":{\"id\":1949,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1872,1950,2030,2029,1948]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.34,23.59],[-18.34,23.56],[-18.65,23.34],[-18.96,23.53],[-18.76,23.93],[-18.7,23.95],[-18.42,23.93],[-18.34,23.59]]]},\"properties\":{\"id\":1950,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1951,2032,2031,2030,1949,1872,1873]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.25,24.12],[-17.69,23.9],[-17.77,23.62],[-18.34,23.59],[-18.42,23.93],[-18.25,24.12]]]},\"properties\":{\"id\":1951,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1873,1874,1952,2032,1950]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.16,24.04],[-17.21,23.42],[-17.44,23.31],[-17.58,23.34],[-17.77,23.62],[-17.69,23.9],[-17.47,24.09],[-17.24,24.12],[-17.16,24.04]]]},\"properties\":{\"id\":1952,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1876,1953,2034,2033,2032,1951,1874,1875]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.97,24.09],[-16.48,23.53],[-16.48,23.53],[-16.57,23.67],[-16.34,24.4],[-16.23,24.4],[-15.97,24.09]]]},\"properties\":{\"id\":1954,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1878,1955,2035,1953,1877,1799]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.83,23.51],[-16.28,23.39],[-16.48,23.53],[-15.97,24.09],[-15.69,23.98],[-15.83,23.51]]]},\"properties\":{\"id\":1955,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1956,2036,2035,1954,1878]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.68,23.59],[-15.13,23.31],[-15.19,23.39],[-15.22,23.9],[-14.74,23.9],[-14.68,23.59]]]},\"properties\":{\"id\":1957,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1958,2038,2037,1956,1880]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.29,24.04],[-12.43,23.37],[-12.91,23.67],[-12.85,23.9],[-12.82,23.95],[-12.54,24.09],[-12.29,24.04]]]},\"properties\":{\"id\":1961,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1885,1962,2042,1960,1883,1884]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.95,23.62],[-12.4,23.31],[-12.43,23.37],[-12.29,24.04],[-12.21,24.04],[-11.95,23.62]]]},\"properties\":{\"id\":1962,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6663,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1963,2043,2042,1961,1885]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.8,23.7],[-11.45,23.62],[-11.45,23.93],[-10.77,24.07],[-10.69,23.93],[-10.8,23.7]]]},\"properties\":{\"id\":1964,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[1965,2045,1963,1887,1888]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.24,23.53],[-10.43,23.25],[-10.69,23.31],[-10.8,23.7],[-10.69,23.93],[-10.24,23.93],[-10.21,23.93],[-10.24,23.53]]]},\"properties\":{\"id\":1965,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[1966,2047,2046,2045,1964,1888,1889]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.92,23.51],[-9.23,23.39],[-9.65,23.56],[-9.7,24.04],[-9.7,24.04],[-9.7,24.04],[-9.53,24.04],[-8.89,23.59],[-8.92,23.51]]]},\"properties\":{\"id\":1967,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6827,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1970,2050,2048,1966,1889,1812,1890,1968]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.61,23.84],[-8.89,23.59],[-9.53,24.04],[-9.11,24.21],[-8.63,24.04],[-8.61,23.84]]]},\"properties\":{\"id\":1968,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1892,1970,1967,1890,1891]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.87,23.42],[-7.96,23.37],[-8.32,23.34],[-8.49,23.79],[-8.18,23.81],[-7.9,23.7],[-7.87,23.42]]]},\"properties\":{\"id\":1969,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":9422,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1971,2053,2051,1970,1892,1972]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.35,23.2],[-8.61,23.03],[-8.72,23],[-8.92,23.51],[-8.89,23.59],[-8.61,23.84],[-8.49,23.79],[-8.32,23.34],[-8.35,23.2]]]},\"properties\":{\"id\":1970,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":12007,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[2051,2052,2137,2050,1967,1968,1892,1969]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.43,23.48],[-7.62,23.31],[-7.87,23.42],[-7.9,23.7],[-7.48,23.98],[-7.45,23.98],[-7.43,23.48]]]},\"properties\":{\"id\":1971,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1973,2054,2053,1969,1972,1894]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.48,23.98],[-7.9,23.7],[-8.18,23.81],[-8.02,24.09],[-7.51,24.04],[-7.48,23.98]]]},\"properties\":{\"id\":1972,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3795,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1894,1971,1969,1892,1893]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.95,23.84],[-7.03,23.31],[-7.23,23.39],[-7.43,23.48],[-7.45,23.98],[-7.12,23.98],[-6.95,23.84]]]},\"properties\":{\"id\":1973,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":11282,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1895,1974,2055,2054,1971,1894]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.41,23.56],[-6.89,23.2],[-7.03,23.31],[-6.95,23.84],[-6.55,23.84],[-6.41,23.56]]]},\"properties\":{\"id\":1974,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1975,2056,2055,1973,1895]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.85,23.87],[-5.88,23.59],[-6.07,23.48],[-6.27,23.48],[-6.41,23.56],[-6.55,23.84],[-6.38,24.21],[-5.91,24.04],[-5.85,23.87]]]},\"properties\":{\"id\":1975,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11963,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[1897,1976,2058,2057,2056,1974,1895,1896]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.7,23.95],[-4.87,23.65],[-5.12,23.48],[-5.23,23.56],[-5.32,23.84],[-4.84,24.26],[-4.81,24.23],[-4.7,23.95]]]},\"properties\":{\"id\":1977,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":78,\"culture\":7,\"religion\":11,\"neighbors\":[1899,1978,2062,2059,1976,1898,1821]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.19,23.37],[-4.3,23.23],[-4.87,23.65],[-4.7,23.95],[-4.42,23.84],[-4.19,23.37]]]},\"properties\":{\"id\":1978,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":69,\"culture\":7,\"religion\":7,\"neighbors\":[1979,2063,2062,1977,1899]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.77,23.81],[-3.74,23.53],[-4.19,23.37],[-4.42,23.84],[-4.19,23.98],[-3.83,23.93],[-3.77,23.81]]]},\"properties\":{\"id\":1979,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":69,\"culture\":7,\"religion\":11,\"neighbors\":[1901,1980,2063,1978,1899,1900]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.39,23.98],[-2.19,23.7],[-2.45,23.31],[-2.64,23.53],[-2.67,23.98],[-2.56,24.01],[-2.39,23.98]]]},\"properties\":{\"id\":1982,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":69,\"culture\":7,\"religion\":11,\"neighbors\":[1903,1983,2066,2065,1981,1902]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.05,24.21],[-1.69,23.79],[-2.02,23.65],[-2.19,23.7],[-2.39,23.98],[-2.05,24.21]]]},\"properties\":{\"id\":1983,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[1903,1904,2067,2066,1982]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.98,23.9],[-0.96,23.37],[-0.96,23.37],[-1.46,23.45],[-1.66,23.79],[-1.52,23.95],[-0.98,23.9],[-0.98,23.9]]]},\"properties\":{\"id\":1984,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[1906,1985,2069,2068,2067,1904,1905]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.98,23.9],[-0.37,24.04],[-0.34,24.01],[-0.37,23.56],[-0.62,23.39],[-0.96,23.37],[-0.98,23.9]]]},\"properties\":{\"id\":1985,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11290,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[1984,1906,1907,1986,2070,2069]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.06,24.21],[0.2,24.04],[0.34,23.48],[0.11,23.37],[-0.37,23.56],[-0.34,24.01],[0.06,24.21]]]},\"properties\":{\"id\":1986,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":20666,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1907,1908,1987,2071,2070,1985]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.7,24.09],[0.96,23.93],[0.79,23.7],[0.45,23.42],[0.34,23.48],[0.2,24.04],[0.7,24.09]]]},\"properties\":{\"id\":1987,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16746,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1908,1909,1988,2072,2071,1986]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.01,23.95],[1.43,23.53],[1.43,23.48],[1.24,23.23],[0.79,23.7],[0.96,23.93],[1.01,23.95]]]},\"properties\":{\"id\":1988,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":15154,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1909,1989,1990,2073,2072,1987]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.8,23.93],[2.19,23.79],[2.28,23.42],[2.25,23.37],[2.22,23.34],[1.49,23.45],[1.43,23.48],[1.43,23.53],[1.8,23.93]]]},\"properties\":{\"id\":1990,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1989,1911,1991,2075,2158,2074,2073,1988]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.33,23.95],[2.64,24.04],[2.87,23.93],[2.95,23.48],[2.9,23.42],[2.28,23.42],[2.19,23.79],[2.33,23.95]]]},\"properties\":{\"id\":1991,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1911,1912,1913,1992,2076,2075,1990]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.49,23.93],[3.68,23.95],[3.85,23.42],[3.77,23.31],[3.35,23.45],[3.29,23.51],[3.49,23.93]]]},\"properties\":{\"id\":1993,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5066,\"state\":5,\"province\":54,\"culture\":7,\"religion\":11,\"neighbors\":[1992,1914,1994,2078,2077,2076]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.85,23.42],[3.68,23.95],[3.97,24.15],[4.08,24.09],[4.22,23.93],[4.28,23.67],[4.16,23.53],[3.85,23.42]]]},\"properties\":{\"id\":1994,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":54,\"culture\":7,\"religion\":11,\"neighbors\":[2078,1993,1914,1915,1916,1995,2079]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.98,24.04],[5.37,24.07],[5.48,23.93],[5.48,23.93],[5.51,23.51],[5.29,23.34],[5.26,23.31],[4.87,23.42],[4.78,23.65],[4.95,24.01],[4.98,24.04]]]},\"properties\":{\"id\":1996,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":28511,\"state\":5,\"province\":51,\"culture\":8,\"religion\":11,\"neighbors\":[1916,1917,1918,1919,1997,2084,2083,2082,2081,1995]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.48,23.93],[6.19,23.79],[6.13,23.25],[5.93,23.17],[5.51,23.51],[5.48,23.93]]]},\"properties\":{\"id\":1997,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":51,\"culture\":8,\"religion\":11,\"neighbors\":[1996,1919,1998,2085,2084]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.44,23.93],[6.55,24.15],[7.17,23.87],[7.09,23.39],[6.95,23.34],[6.69,23.39],[6.44,23.93]]]},\"properties\":{\"id\":1999,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[1998,1919,1920,2000,2087,2086]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.37,24.01],[7.51,24.07],[7.71,23.93],[7.82,23.56],[7.51,23.23],[7.09,23.39],[7.17,23.87],[7.37,24.01]]]},\"properties\":{\"id\":2000,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[1920,1921,1922,2001,2088,2087,1999]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.71,23.93],[8.24,24.18],[8.27,24.18],[8.33,23.62],[8.18,23.51],[7.82,23.56],[7.71,23.93]]]},\"properties\":{\"id\":2001,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":35109,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2000,1922,1923,2002,2089,2088]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.39,24.04],[9.84,24.07],[9.96,23.93],[9.96,23.48],[9.84,23.34],[9.34,23.48],[9.34,23.48],[9.39,24.04]]]},\"properties\":{\"id\":2004,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":42486,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2003,1925,1926,2005,2092,2091,2090]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.35,23.93],[10.52,24.07],[10.8,23.87],[10.88,23.45],[10.83,23.39],[10.63,23.37],[10.35,23.93]]]},\"properties\":{\"id\":2006,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2005,1926,1927,2007,2094,2093]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.94,24.01],[11.36,23.95],[11.42,23.81],[11.11,23.51],[10.88,23.45],[10.8,23.87],[10.94,24.01]]]},\"properties\":{\"id\":2007,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":40979,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[1927,1928,1929,2095,2094,2006]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.45,23.79],[11.84,23.84],[12.04,23.79],[11.9,23.09],[11.45,23.79]]]},\"properties\":{\"id\":2008,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":21385,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[2095,1929,1930,2009]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.9,23.09],[12.04,23.79],[12.32,23.87],[12.4,23.65],[12.01,23],[11.98,23],[11.92,23.03],[11.9,23.09]]]},\"properties\":{\"id\":2009,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[2095,2008,1930,2010,2096,2178,2177]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.58,23.51],[-26.41,23.14],[-27.03,22.92],[-27.14,23.14],[-26.58,23.51]]]},\"properties\":{\"id\":2016,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[1935,2017,2102]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.99,23.09],[-26.13,23.03],[-26.41,23.14],[-26.58,23.51],[-26.49,23.7],[-25.96,23.25],[-25.99,23.09]]]},\"properties\":{\"id\":2017,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2018,2103,2102,2016,1935,1936]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.34,23.53],[-25.31,22.92],[-25.37,22.84],[-25.82,22.98],[-25.99,23.09],[-25.96,23.25],[-25.93,23.28],[-25.4,23.59],[-25.34,23.53]]]},\"properties\":{\"id\":2018,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":11856,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[1938,2019,2105,2104,2103,2017,1936,1937]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.89,23.06],[-25.31,22.92],[-25.34,23.53],[-24.81,23.53],[-24.75,23.39],[-24.89,23.06]]]},\"properties\":{\"id\":2019,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2020,2105,2018,1938,1939]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.19,23.14],[-24.69,22.92],[-24.89,23.06],[-24.75,23.39],[-24.19,23.28],[-24.16,23.17],[-24.19,23.14]]]},\"properties\":{\"id\":2020,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2107,2106,2105,2019,1939,2021]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.4,23.42],[-23.71,23.09],[-23.79,23.06],[-24.16,23.17],[-24.19,23.28],[-24.19,23.34],[-23.6,23.62],[-23.4,23.42]]]},\"properties\":{\"id\":2021,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[1941,2022,2108,2107,2020,1939,1940]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.01,23.03],[-23.37,22.64],[-23.71,23.09],[-23.4,23.42],[-23.2,23.37],[-23.01,23.03]]]},\"properties\":{\"id\":2022,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2023,2109,2108,2021,1941]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.42,23.51],[-22.84,22.98],[-23.01,23.03],[-23.2,23.37],[-23.03,23.56],[-22.47,23.59],[-22.42,23.53],[-22.42,23.51]]]},\"properties\":{\"id\":2023,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6776,\"state\":6,\"province\":98,\"culture\":5,\"religion\":5,\"neighbors\":[1944,2024,2109,2022,1941,1942,1943]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.27,23.37],[-22.13,22.92],[-22.16,22.86],[-22.67,22.81],[-22.84,22.98],[-22.42,23.51],[-22.27,23.37]]]},\"properties\":{\"id\":2024,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1944,2025,2111,2110,2109,2023]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.52,23.23],[-21.74,23],[-22.13,22.92],[-22.27,23.37],[-21.57,23.51],[-21.49,23.37],[-21.52,23.23]]]},\"properties\":{\"id\":2025,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2026,2112,2111,2024,1944,1945]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.45,23.39],[-20.33,23.09],[-20.62,22.72],[-20.9,22.89],[-20.9,23.34],[-20.56,23.45],[-20.45,23.39]]]},\"properties\":{\"id\":2027,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1947,2028,2114,2113,2026,1946]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.02,23.53],[-19.72,22.95],[-19.8,22.92],[-20.33,23.09],[-20.45,23.39],[-20.02,23.53]]]},\"properties\":{\"id\":2028,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1947,2029,2115,2114,2027]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.35,23.51],[-19.43,22.98],[-19.72,22.95],[-20.02,23.53],[-19.97,23.65],[-19.38,23.56],[-19.35,23.51]]]},\"properties\":{\"id\":2029,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1949,2030,2115,2028,1947,1948]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,22.92],[-18.87,22.89],[-19.35,22.89],[-19.43,22.98],[-19.35,23.51],[-18.96,23.53],[-18.65,23.34],[-18.76,22.92]]]},\"properties\":{\"id\":2030,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2031,2117,2116,2115,2029,1949,1950]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.44,23.31],[-17.38,23.03],[-17.75,22.7],[-18.03,22.95],[-18.03,23],[-17.58,23.34],[-17.44,23.31]]]},\"properties\":{\"id\":2033,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1952,2034,2119,2118,2031,2032]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.85,22.84],[-17.16,22.75],[-17.38,23.03],[-17.44,23.31],[-17.21,23.42],[-16.85,23.31],[-16.85,22.84]]]},\"properties\":{\"id\":2034,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[2035,2120,2119,2033,1952,1953]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.67,23.31],[-15.72,22.84],[-16,22.84],[-16.23,23.09],[-16.28,23.39],[-15.83,23.51],[-15.67,23.31]]]},\"properties\":{\"id\":2036,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1956,2037,2122,2121,2035,1955]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.99,23.03],[-15.33,22.78],[-15.58,22.72],[-15.72,22.84],[-15.67,23.31],[-15.19,23.39],[-15.13,23.31],[-14.99,23.03]]]},\"properties\":{\"id\":2037,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11837,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[2038,2124,2123,2122,2036,1956,1957]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.37,23.34],[-14.74,22.95],[-14.99,23.03],[-15.13,23.31],[-14.68,23.59],[-14.37,23.34]]]},\"properties\":{\"id\":2038,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1958,2039,2124,2037,1957]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.95,22.92],[-14.06,22.64],[-14.74,22.89],[-14.74,22.95],[-14.37,23.34],[-14.29,23.37],[-14.15,23.31],[-13.95,22.92]]]},\"properties\":{\"id\":2039,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2040,2126,2125,2124,2038,1958,1959]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.67,23.53],[-13.47,23.06],[-13.95,22.92],[-14.15,23.31],[-13.67,23.53]]]},\"properties\":{\"id\":2040,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1959,2041,2126,2039]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.67,23.53],[-13.61,23.67],[-12.97,23.62],[-13.13,22.95],[-13.22,22.95],[-13.47,23.06],[-13.67,23.53]]]},\"properties\":{\"id\":2041,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2040,1959,1960,2042,2127,2126]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.67,23.48],[-11.9,23.06],[-12.09,22.89],[-12.26,22.92],[-12.38,23],[-12.4,23.31],[-11.95,23.62],[-11.67,23.48]]]},\"properties\":{\"id\":2043,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1963,2044,2130,2129,2128,2042,1962]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.14,22.98],[-11.31,22.84],[-11.9,23.06],[-11.67,23.48],[-11.5,23.51],[-11.14,22.98]]]},\"properties\":{\"id\":2044,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[2045,2131,2130,2043,1963]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.8,23.7],[-10.69,23.31],[-11.05,22.98],[-11.14,22.98],[-11.5,23.51],[-11.45,23.62],[-10.8,23.7]]]},\"properties\":{\"id\":2045,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[1964,1965,2046,2131,2044,1963]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.15,22.86],[-10.15,22.84],[-11.02,22.95],[-11.05,22.98],[-10.69,23.31],[-10.43,23.25],[-10.15,22.92],[-10.15,22.86]]]},\"properties\":{\"id\":2046,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":60,\"culture\":7,\"religion\":7,\"neighbors\":[2049,2133,2132,2131,2045,1965,2047]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.79,23.17],[-10.15,22.92],[-10.43,23.25],[-10.24,23.53],[-9.76,23.34],[-9.79,23.17]]]},\"properties\":{\"id\":2047,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[2048,2049,2046,1965,1966]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.23,23.39],[-9.31,22.86],[-9.79,23.17],[-9.76,23.34],[-9.65,23.56],[-9.23,23.39]]]},\"properties\":{\"id\":2048,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11975,\"state\":6,\"province\":60,\"culture\":7,\"religion\":7,\"neighbors\":[1967,2050,2049,2047,1966]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.31,22.84],[-9.59,22.5],[-10.15,22.86],[-10.15,22.92],[-9.79,23.17],[-9.31,22.86],[-9.31,22.84]]]},\"properties\":{\"id\":2049,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11000,\"state\":6,\"province\":60,\"culture\":7,\"religion\":7,\"neighbors\":[2050,2135,2133,2046,2047,2048]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.8,22.89],[-9.03,22.78],[-9.31,22.84],[-9.31,22.86],[-9.23,23.39],[-8.92,23.51],[-8.72,23],[-8.8,22.89]]]},\"properties\":{\"id\":2050,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[2137,2136,2135,2049,2048,1967,1970]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.27,23.48],[-6.41,22.95],[-6.61,22.92],[-6.83,23.03],[-6.89,23.2],[-6.41,23.56],[-6.27,23.48]]]},\"properties\":{\"id\":2056,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":11792,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1975,2057,2139,2138,2055,1974]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.91,22.92],[-6.1,22.81],[-6.24,22.81],[-6.41,22.95],[-6.27,23.48],[-6.07,23.48],[-5.91,22.92]]]},\"properties\":{\"id\":2057,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[2058,2141,2140,2139,2056,1975]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.71,23.51],[-5.6,23.09],[-5.65,22.89],[-5.91,22.92],[-6.07,23.48],[-5.88,23.59],[-5.71,23.51]]]},\"properties\":{\"id\":2058,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[1976,2059,2060,2141,2057,1975]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.12,23.45],[-5.2,23.25],[-5.6,23.09],[-5.71,23.51],[-5.23,23.56],[-5.12,23.48],[-5.12,23.45]]]},\"properties\":{\"id\":2059,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[2062,2061,2060,2058,1976,1977]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.2,23.25],[-5.18,22.95],[-5.57,22.78],[-5.65,22.89],[-5.6,23.09],[-5.2,23.25]]]},\"properties\":{\"id\":2060,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":8609,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[2059,2061,2143,2141,2058]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.58,22.92],[-4.61,22.84],[-4.7,22.81],[-5.03,22.84],[-5.18,22.95],[-5.2,23.25],[-5.12,23.45],[-4.58,22.92]]]},\"properties\":{\"id\":2061,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[2062,2146,2145,2144,2143,2060,2059]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,23.17],[-4.58,22.92],[-5.12,23.45],[-5.12,23.48],[-4.87,23.65],[-4.3,23.23],[-4.3,23.17]]]},\"properties\":{\"id\":2062,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":78,\"culture\":7,\"religion\":11,\"neighbors\":[2063,2146,2061,2059,1977,1978]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.12,23.37],[-3.07,23.23],[-3.23,22.98],[-3.63,22.89],[-3.66,23.48],[-3.21,23.45],[-3.12,23.37]]]},\"properties\":{\"id\":2064,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":9232,\"state\":6,\"province\":69,\"culture\":7,\"religion\":11,\"neighbors\":[1981,2065,2148,2147,2063,1980]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.66,23.79],[-1.46,23.45],[-1.77,23.06],[-1.94,23.03],[-2.02,23.65],[-1.69,23.79],[-1.66,23.79]]]},\"properties\":{\"id\":2067,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[1904,1984,2068,2150,2066,1983]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.04,22.95],[-1.1,22.78],[-1.66,23],[-1.77,23.06],[-1.46,23.45],[-0.96,23.37],[-1.04,22.95]]]},\"properties\":{\"id\":2068,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[2069,2152,2151,2150,2067,1984]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.45,23.42],[0.62,23.17],[0.45,22.84],[-0.03,23.06],[0.11,23.37],[0.34,23.48],[0.45,23.42]]]},\"properties\":{\"id\":2071,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1987,2072,2155,2154,2070,1986]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.45,23.42],[0.79,23.7],[1.24,23.23],[1.21,23.12],[1.07,23.03],[0.62,23.17],[0.45,23.42]]]},\"properties\":{\"id\":2072,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2071,1987,1988,2073,2156,2155]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.43,23.48],[1.49,23.45],[1.86,22.98],[1.74,22.84],[1.21,23.12],[1.24,23.23],[1.43,23.48]]]},\"properties\":{\"id\":2073,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1988,1990,2074,2157,2156,2072]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.49,23.45],[2.22,23.34],[2.02,23.06],[1.86,22.98],[1.49,23.45]]]},\"properties\":{\"id\":2074,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[2073,1990,2158,2157]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.28,23.42],[2.9,23.42],[2.98,22.84],[2.67,22.75],[2.25,23.37],[2.28,23.42]]]},\"properties\":{\"id\":2075,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1990,1991,2076,2159,2158]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.95,23.48],[3.29,23.51],[3.35,23.45],[3.35,22.84],[3.18,22.72],[2.98,22.84],[2.9,23.42],[2.95,23.48]]]},\"properties\":{\"id\":2076,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1991,1992,1993,2077,2160,2159,2075]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.35,23.45],[3.77,23.31],[3.8,23.2],[3.49,22.84],[3.35,22.84],[3.35,23.45]]]},\"properties\":{\"id\":2077,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":5,\"province\":54,\"culture\":7,\"religion\":11,\"neighbors\":[2076,1993,2078,2080,2160]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.85,23.42],[4.16,23.53],[4.3,23],[4.19,22.95],[3.8,23.2],[3.77,23.31],[3.85,23.42]]]},\"properties\":{\"id\":2078,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":54,\"culture\":7,\"religion\":11,\"neighbors\":[1993,1994,2079,2162,2080,2077]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.3,23],[4.16,23.53],[4.28,23.67],[4.44,23.59],[4.58,23.12],[4.44,23.06],[4.3,23]]]},\"properties\":{\"id\":2079,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":9219,\"state\":5,\"province\":54,\"culture\":7,\"religion\":11,\"neighbors\":[2162,2078,1994,1995,2081,2163]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.49,22.84],[3.8,23.2],[4.19,22.95],[4.11,22.78],[3.85,22.61],[3.49,22.84]]]},\"properties\":{\"id\":2080,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":54,\"culture\":7,\"religion\":11,\"neighbors\":[2160,2077,2078,2162,2161]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.89,22.89],[5.26,23.31],[5.29,23.34],[5.37,22.89],[5.34,22.81],[4.95,22.72],[4.89,22.89]]]},\"properties\":{\"id\":2083,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":51,\"culture\":8,\"religion\":11,\"neighbors\":[2163,2082,1996,2084,2166,2164]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.29,23.34],[5.51,23.51],[5.93,23.17],[5.93,23.06],[5.91,22.98],[5.37,22.89],[5.29,23.34]]]},\"properties\":{\"id\":2084,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":13016,\"state\":5,\"province\":51,\"culture\":8,\"religion\":11,\"neighbors\":[2083,1996,1997,2085,2167,2166]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.13,23.25],[6.44,23.25],[6.52,22.72],[5.93,23.06],[5.93,23.17],[6.13,23.25]]]},\"properties\":{\"id\":2085,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3943,\"state\":5,\"province\":51,\"culture\":8,\"religion\":11,\"neighbors\":[1997,1998,2086,2167,2084]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.52,22.72],[6.44,23.25],[6.69,23.39],[6.95,23.34],[6.89,22.78],[6.55,22.67],[6.52,22.72]]]},\"properties\":{\"id\":2086,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6034,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2167,2085,1998,1999,2087,2168]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.95,23.34],[7.09,23.39],[7.51,23.23],[7.51,23.23],[7.31,22.67],[7.06,22.64],[6.89,22.78],[6.95,23.34]]]},\"properties\":{\"id\":2087,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2086,1999,2000,2088,2169,2243,2168]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.51,23.23],[7.82,23.56],[8.18,23.51],[8.21,23.09],[7.76,23],[7.51,23.23],[7.51,23.23]]]},\"properties\":{\"id\":2088,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2087,2000,2001,2089,2170,2169]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.33,23.62],[8.72,23.59],[8.8,23.03],[8.3,23.03],[8.21,23.09],[8.18,23.51],[8.33,23.62]]]},\"properties\":{\"id\":2089,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":20000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2001,2002,2090,2171,2170,2088]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.14,22.89],[9.34,23.48],[9.84,23.34],[9.84,23.12],[9.2,22.84],[9.14,22.89]]]},\"properties\":{\"id\":2091,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":17000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2172,2090,2004,2092,2173]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.84,23.34],[9.96,23.48],[10.57,23.37],[10.29,22.75],[9.87,23.09],[9.84,23.12],[9.84,23.34]]]},\"properties\":{\"id\":2092,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":20000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2091,2004,2005,2093,2174,2173]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.29,22.75],[10.57,23.37],[10.63,23.37],[10.83,23.39],[10.97,22.92],[10.72,22.72],[10.32,22.64],[10.29,22.75]]]},\"properties\":{\"id\":2093,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":38368,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2174,2092,2005,2006,2094,2176,2175]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.88,23.45],[11.11,23.51],[11.53,22.92],[11.36,22.75],[10.97,22.92],[10.83,23.39],[10.88,23.45]]]},\"properties\":{\"id\":2094,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":18000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2006,2007,2095,2177,2176,2093]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.53,22.92],[11.11,23.51],[11.42,23.81],[11.45,23.79],[11.9,23.09],[11.92,23.03],[11.53,22.92]]]},\"properties\":{\"id\":2095,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":22000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2177,2094,2007,1929,2008,2009]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.49,23],[12.63,23.23],[12.91,23.28],[12.94,23.25],[12.97,22.72],[12.52,22.98],[12.49,23]]]},\"properties\":{\"id\":2097,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":11000,\"state\":3,\"province\":21,\"culture\":8,\"religion\":11,\"neighbors\":[2178,2096,2012,2011,2098,2179]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.97,22.72],[12.94,23.25],[13.22,23.31],[13.25,22.81],[12.99,22.7],[12.97,22.72]]]},\"properties\":{\"id\":2098,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":11000,\"state\":3,\"province\":21,\"culture\":8,\"religion\":11,\"neighbors\":[2179,2097,2011,2099,2180]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.25,22.81],[13.22,23.31],[13.33,23.42],[13.47,23.34],[13.56,23],[13.42,22.78],[13.25,22.81]]]},\"properties\":{\"id\":2099,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":10621,\"state\":3,\"province\":21,\"culture\":8,\"religion\":11,\"neighbors\":[2180,2098,2011,2014,2100,2101]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.13,23.03],[-26.41,22.56],[-27.03,22.72],[-27.03,22.92],[-26.41,23.14],[-26.13,23.03]]]},\"properties\":{\"id\":2102,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2017,2103,2182,2016]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.99,23.09],[-25.82,22.98],[-25.99,22.25],[-26.04,22.19],[-26.32,22.36],[-26.41,22.56],[-26.13,23.03],[-25.99,23.09]]]},\"properties\":{\"id\":2103,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2017,2018,2104,2184,2183,2182,2102]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.37,22.84],[-25.34,22.67],[-25.99,22.25],[-25.82,22.98],[-25.37,22.84]]]},\"properties\":{\"id\":2104,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5765,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2018,2105,2184,2103]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.89,23.06],[-24.69,22.92],[-24.58,22.56],[-25.03,22.36],[-25.17,22.36],[-25.34,22.67],[-25.37,22.84],[-25.31,22.92],[-24.89,23.06]]]},\"properties\":{\"id\":2105,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2019,2020,2106,2186,2185,2184,2104,2018]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.19,22.42],[-24.22,22.42],[-24.58,22.56],[-24.69,22.92],[-24.19,23.14],[-24.19,22.42]]]},\"properties\":{\"id\":2106,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":10733,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2107,2187,2186,2105,2020]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.79,23.06],[-23.91,22.36],[-24.19,22.42],[-24.19,23.14],[-24.16,23.17],[-23.79,23.06]]]},\"properties\":{\"id\":2107,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2021,2108,2187,2106,2020]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.37,22.64],[-23.82,22.3],[-23.91,22.36],[-23.79,23.06],[-23.71,23.09],[-23.37,22.64],[-23.37,22.64]]]},\"properties\":{\"id\":2108,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4937,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2109,2188,2187,2107,2021,2022]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.67,22.81],[-22.72,22.33],[-22.98,22.3],[-23.37,22.64],[-23.37,22.64],[-23.01,23.03],[-22.84,22.98],[-22.67,22.81]]]},\"properties\":{\"id\":2109,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":74,\"culture\":7,\"religion\":7,\"neighbors\":[2024,2110,2189,2188,2108,2022,2023]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.08,22.44],[-22.25,22.25],[-22.64,22.22],[-22.72,22.33],[-22.67,22.81],[-22.16,22.86],[-22.08,22.44]]]},\"properties\":{\"id\":2110,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":74,\"culture\":7,\"religion\":7,\"neighbors\":[2111,2191,2190,2189,2109,2024]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.74,23],[-21.54,22.44],[-21.63,22.3],[-22.08,22.44],[-22.16,22.86],[-22.13,22.92],[-21.74,23]]]},\"properties\":{\"id\":2111,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2025,2112,2192,2191,2110,2024]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.26,22.64],[-21.54,22.44],[-21.74,23],[-21.52,23.23],[-21.18,22.81],[-21.26,22.64]]]},\"properties\":{\"id\":2112,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2113,2192,2111,2025,2026]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.62,22.72],[-20.53,22.39],[-20.95,22.39],[-21.26,22.64],[-21.18,22.81],[-20.9,22.89],[-20.62,22.72]]]},\"properties\":{\"id\":2113,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2027,2114,2193,2192,2112,2026]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.05,22.47],[-20.53,22.36],[-20.53,22.39],[-20.62,22.72],[-20.33,23.09],[-19.8,22.92],[-20.05,22.47]]]},\"properties\":{\"id\":2114,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2115,2194,2193,2113,2027,2028]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.82,22.44],[-18.9,22.22],[-19.35,22.44],[-19.35,22.89],[-18.87,22.89],[-18.82,22.44]]]},\"properties\":{\"id\":2116,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2117,2197,2196,2115,2030]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.31,22.47],[-18.39,22.36],[-18.82,22.44],[-18.87,22.89],[-18.76,22.92],[-18.31,22.75],[-18.31,22.47]]]},\"properties\":{\"id\":2117,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2118,2198,2197,2116,2030,2031]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.75,22.7],[-17.63,22.47],[-17.83,22.28],[-18.31,22.47],[-18.31,22.75],[-18.03,22.95],[-17.75,22.7]]]},\"properties\":{\"id\":2118,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2033,2119,2199,2198,2117,2031]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.65,22.3],[-17.18,22.14],[-17.35,22.42],[-17.16,22.75],[-16.85,22.84],[-16.71,22.75],[-16.54,22.39],[-16.65,22.3]]]},\"properties\":{\"id\":2120,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[2201,2200,2199,2119,2034,2035,2121]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.58,22.72],[-15.61,22.33],[-16.17,22.22],[-16.28,22.36],[-16,22.84],[-15.72,22.84],[-15.58,22.72]]]},\"properties\":{\"id\":2122,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[2037,2123,2202,2201,2121,2036]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.33,22.78],[-15.1,22.36],[-15.47,22.14],[-15.61,22.33],[-15.58,22.72],[-15.33,22.78]]]},\"properties\":{\"id\":2123,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[2037,2124,2203,2202,2122]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.77,22.44],[-14.85,22.3],[-15.1,22.36],[-15.33,22.78],[-14.99,23.03],[-14.74,22.95],[-14.74,22.89],[-14.77,22.44]]]},\"properties\":{\"id\":2124,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2125,2205,2203,2123,2037,2038,2039]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.03,22.58],[-14.15,22.36],[-14.77,22.44],[-14.74,22.89],[-14.06,22.64],[-14.03,22.58]]]},\"properties\":{\"id\":2125,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2126,2206,2205,2124,2039]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.22,22.95],[-13.61,22.44],[-14.03,22.58],[-14.06,22.64],[-13.95,22.92],[-13.47,23.06],[-13.22,22.95]]]},\"properties\":{\"id\":2126,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2041,2127,2206,2125,2039,2040]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.26,22.92],[-12.43,22.39],[-12.63,22.25],[-12.88,22.47],[-12.94,22.84],[-12.38,23],[-12.26,22.92]]]},\"properties\":{\"id\":2128,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2043,2129,2209,2208,2127,2042]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.78,22.39],[-11.78,22.36],[-12.43,22.39],[-12.26,22.92],[-12.09,22.89],[-11.78,22.39]]]},\"properties\":{\"id\":2129,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2130,2210,2209,2128,2043]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.15,22.84],[-10.35,22.5],[-10.86,22.61],[-11.02,22.95],[-10.15,22.84]]]},\"properties\":{\"id\":2132,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":60,\"culture\":7,\"religion\":7,\"neighbors\":[2046,2133,2212,2131]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.55,22.43],[-9.96,22.22],[-10.32,22.3],[-10.35,22.5],[-10.15,22.84],[-10.15,22.86],[-9.59,22.5],[-9.55,22.43]]]},\"properties\":{\"id\":2133,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":14000,\"state\":6,\"province\":103,\"culture\":7,\"religion\":7,\"neighbors\":[2135,2213,2134,2212,2132,2046,2049]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.96,22.22],[-9.87,22.02],[-10.21,21.77],[-10.46,21.83],[-10.49,21.86],[-10.52,21.94],[-10.32,22.3],[-9.96,22.22]]]},\"properties\":{\"id\":2134,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":14000,\"state\":6,\"province\":103,\"culture\":7,\"religion\":7,\"neighbors\":[2133,2213,2214,2289,2288,2287,2212]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.03,22.84],[-5.32,22.44],[-5.54,22.64],[-5.57,22.78],[-5.18,22.95],[-5.03,22.84]]]},\"properties\":{\"id\":2143,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[2061,2144,2142,2141,2060]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.03,22.84],[-4.7,22.81],[-5.06,22.28],[-5.18,22.3],[-5.26,22.36],[-5.32,22.44],[-5.03,22.84]]]},\"properties\":{\"id\":2144,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[2143,2061,2145,2218,2217,2142]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.44,22.56],[-4.67,22.05],[-4.73,22],[-5.06,22.28],[-4.7,22.81],[-4.61,22.84],[-4.44,22.56]]]},\"properties\":{\"id\":2145,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":11960,\"state\":6,\"province\":78,\"culture\":7,\"religion\":11,\"neighbors\":[2146,2220,2221,2218,2144,2061]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.77,22.67],[-4.08,22.47],[-4.44,22.56],[-4.61,22.84],[-4.58,22.92],[-4.3,23.17],[-3.77,22.7],[-3.77,22.67]]]},\"properties\":{\"id\":2146,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":78,\"culture\":7,\"religion\":11,\"neighbors\":[2147,2222,2220,2145,2061,2062,2063]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.63,22.89],[-3.23,22.98],[-3.07,22.44],[-3.29,22.33],[-3.52,22.42],[-3.77,22.67],[-3.77,22.7],[-3.63,22.89]]]},\"properties\":{\"id\":2147,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":13613,\"state\":6,\"province\":62,\"culture\":7,\"religion\":11,\"neighbors\":[2063,2064,2148,2224,2223,2222,2146]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.66,23],[-1.55,22.39],[-2.14,22.5],[-2.11,22.92],[-1.94,23.03],[-1.77,23.06],[-1.66,23]]]},\"properties\":{\"id\":2150,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":11,\"neighbors\":[2068,2151,2226,2149,2066,2067]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.66,23],[-1.1,22.78],[-1.04,22.5],[-1.24,22.36],[-1.41,22.3],[-1.55,22.39],[-1.66,23]]]},\"properties\":{\"id\":2151,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":11,\"neighbors\":[2150,2068,2152,2228,2227,2226]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.04,22.95],[-0.34,22.89],[-0.28,22.81],[-0.82,22.44],[-1.04,22.5],[-1.1,22.78],[-1.04,22.95]]]},\"properties\":{\"id\":2152,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[2068,2069,2070,2153,2228,2151]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.62,23.17],[1.07,23.03],[1.07,22.67],[0.84,22.42],[0.56,22.28],[0.48,22.33],[0.39,22.5],[0.45,22.84],[0.62,23.17]]]},\"properties\":{\"id\":2155,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2071,2072,2156,2232,2231,2230,2229,2154]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.22,23.34],[2.25,23.37],[2.67,22.75],[2.42,22.47],[2.02,23.06],[2.22,23.34]]]},\"properties\":{\"id\":2158,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5805,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[2074,1990,2075,2159,2157]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.42,22.47],[2.67,22.75],[2.98,22.84],[3.18,22.72],[3.21,22.58],[2.93,22.14],[2.45,22.3],[2.42,22.44],[2.42,22.47]]]},\"properties\":{\"id\":2159,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7893,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[2157,2158,2075,2076,2160,2235,2234,2233]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.35,22.84],[3.49,22.84],[3.85,22.61],[3.82,22.36],[3.49,22.28],[3.21,22.58],[3.18,22.72],[3.35,22.84]]]},\"properties\":{\"id\":2160,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":10000,\"state\":5,\"province\":54,\"culture\":7,\"religion\":11,\"neighbors\":[2076,2077,2080,2161,2236,2235,2159]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.95,22.72],[5.34,22.81],[5.65,22.39],[5.43,22.22],[5.4,22.19],[5.23,22.25],[4.92,22.7],[4.95,22.72]]]},\"properties\":{\"id\":2164,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":56,\"culture\":8,\"religion\":11,\"neighbors\":[2163,2083,2166,2240,2313,2239,2165]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.61,22.5],[4.92,22.7],[5.23,22.25],[4.84,22.08],[4.58,22.44],[4.61,22.5]]]},\"properties\":{\"id\":2165,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":56,\"culture\":8,\"religion\":11,\"neighbors\":[2162,2163,2164,2239,2238]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.34,22.81],[5.37,22.89],[5.91,22.98],[5.85,22.42],[5.65,22.39],[5.34,22.81]]]},\"properties\":{\"id\":2166,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":51,\"culture\":8,\"religion\":11,\"neighbors\":[2164,2083,2084,2167,2240]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.91,22.98],[5.93,23.06],[6.52,22.72],[6.55,22.67],[6.36,22.33],[6.13,22.28],[5.85,22.42],[5.91,22.98]]]},\"properties\":{\"id\":2167,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2166,2084,2085,2086,2168,2241,2240]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.31,22.67],[7.51,23.23],[7.76,23],[7.85,22.5],[7.65,22.39],[7.31,22.67]]]},\"properties\":{\"id\":2169,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2243,2087,2088,2170,2244]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.3,23.03],[8.8,23.03],[8.89,22.95],[8.58,22.56],[8.21,22.56],[8.3,23.03]]]},\"properties\":{\"id\":2171,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":15000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2170,2089,2090,2172,2245]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.83,22.14],[8.58,22.56],[8.89,22.95],[9.14,22.89],[9.2,22.84],[9.22,22.72],[9.06,22.28],[8.83,22.14]]]},\"properties\":{\"id\":2172,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":22441,\"state\":7,\"province\":108,\"culture\":8,\"religion\":11,\"neighbors\":[2246,2245,2171,2090,2091,2173,2247]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.2,22.84],[9.84,23.12],[9.87,23.09],[9.65,22.5],[9.22,22.72],[9.2,22.84]]]},\"properties\":{\"id\":2173,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":23852,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2172,2091,2092,2174,2247]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.32,22.64],[10.72,22.72],[11.08,22.39],[10.91,22],[10.32,22.61],[10.32,22.64]]]},\"properties\":{\"id\":2175,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2174,2093,2176,2250,2249]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.08,22.39],[10.72,22.72],[10.97,22.92],[11.36,22.75],[11.33,22.67],[11.08,22.39]]]},\"properties\":{\"id\":2176,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":26159,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2250,2175,2093,2094,2177]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.01,23],[12.49,23],[12.52,22.98],[12.46,22.33],[12.46,22.33],[12.12,22.33],[12.09,22.39],[11.98,23],[12.01,23]]]},\"properties\":{\"id\":2178,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":17000,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[2009,2096,2097,2179,2253,2252,2251,2177]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.46,22.33],[12.52,22.98],[12.97,22.72],[12.99,22.7],[12.97,22.56],[12.46,22.33]]]},\"properties\":{\"id\":2179,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":20493,\"state\":3,\"province\":21,\"culture\":8,\"religion\":11,\"neighbors\":[2253,2178,2097,2098,2180]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.32,22.36],[-26.89,21.88],[-27.03,21.91],[-27.28,22.36],[-27.03,22.72],[-26.41,22.56],[-26.32,22.36]]]},\"properties\":{\"id\":2182,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2103,2183,2258,2102]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.99,22.05],[-26.63,21.66],[-26.89,21.88],[-26.32,22.36],[-26.04,22.19],[-25.99,22.05]]]},\"properties\":{\"id\":2183,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2184,2259,2258,2182,2103]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.34,21.94],[-25.42,21.86],[-25.79,21.86],[-25.99,22.05],[-26.04,22.19],[-25.99,22.25],[-25.34,22.67],[-25.17,22.36],[-25.34,21.94]]]},\"properties\":{\"id\":2184,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2185,2261,2260,2259,2183,2103,2104,2105]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.61,21.97],[-24.72,21.86],[-25.34,21.94],[-25.17,22.36],[-25.03,22.36],[-24.61,21.97]]]},\"properties\":{\"id\":2185,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2186,2262,2261,2184,2105]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.44,22.02],[-24.61,21.97],[-25.03,22.36],[-24.58,22.56],[-24.22,22.42],[-24.44,22.02]]]},\"properties\":{\"id\":2186,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5876,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2187,2262,2185,2105,2106]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.68,22],[-23.85,21.69],[-24.24,21.63],[-24.44,22.02],[-24.22,22.42],[-24.19,22.42],[-23.91,22.36],[-23.82,22.3],[-23.68,22]]]},\"properties\":{\"id\":2187,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2188,2264,2263,2262,2186,2106,2107,2108]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.37,22.64],[-22.98,22.3],[-23.32,21.91],[-23.68,22],[-23.82,22.3],[-23.37,22.64]]]},\"properties\":{\"id\":2188,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2108,2109,2189,2264,2187]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.64,21.94],[-22.98,21.63],[-23.06,21.6],[-23.32,21.91],[-22.98,22.3],[-22.72,22.33],[-22.64,22.22],[-22.64,21.94]]]},\"properties\":{\"id\":2189,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":74,\"culture\":7,\"religion\":7,\"neighbors\":[2190,2266,2265,2264,2188,2109,2110]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.02,21.69],[-22.05,21.52],[-22.16,21.52],[-22.64,21.94],[-22.64,22.22],[-22.25,22.25],[-22.02,21.69]]]},\"properties\":{\"id\":2190,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":74,\"culture\":7,\"religion\":7,\"neighbors\":[2191,2267,2343,2266,2189,2110]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.6,22.22],[-22.02,21.69],[-22.25,22.25],[-22.08,22.44],[-21.63,22.3],[-21.6,22.22]]]},\"properties\":{\"id\":2191,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5854,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2192,2267,2190,2110,2111]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.95,22.39],[-21.32,22.02],[-21.32,22.02],[-21.6,22.22],[-21.63,22.3],[-21.54,22.44],[-21.26,22.64],[-20.95,22.39]]]},\"properties\":{\"id\":2192,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2113,2193,2269,2267,2191,2111,2112]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.86,22.28],[-20.19,21.8],[-20.48,21.8],[-20.5,21.88],[-20.53,22.36],[-20.05,22.47],[-19.86,22.28]]]},\"properties\":{\"id\":2194,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2115,2195,2270,2269,2193,2114]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.52,22.14],[-19.52,21.97],[-20.02,21.77],[-20.19,21.8],[-19.86,22.28],[-19.52,22.14]]]},\"properties\":{\"id\":2195,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":12506,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2115,2196,2271,2270,2194]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.35,22.44],[-18.9,22.22],[-18.82,22.02],[-19.38,21.83],[-19.52,21.97],[-19.52,22.14],[-19.35,22.44]]]},\"properties\":{\"id\":2196,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2115,2116,2197,2272,2271,2195]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.45,21.97],[-18.62,21.94],[-18.82,22.02],[-18.9,22.22],[-18.82,22.44],[-18.39,22.36],[-18.45,21.97]]]},\"properties\":{\"id\":2197,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":17635,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2198,2273,2272,2196,2116,2117]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.31,22.47],[-17.83,22.28],[-17.92,21.83],[-18.23,21.83],[-18.45,21.97],[-18.39,22.36],[-18.31,22.47]]]},\"properties\":{\"id\":2198,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":12451,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2117,2118,2199,2274,2273,2197]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.18,22.14],[-17.21,21.94],[-17.92,21.83],[-17.92,21.83],[-17.83,22.28],[-17.63,22.47],[-17.35,22.42],[-17.18,22.14]]]},\"properties\":{\"id\":2199,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2120,2200,2275,2274,2198,2118,2119]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.14,22],[-16.62,21.8],[-16.65,22.3],[-16.54,22.39],[-16.28,22.36],[-16.17,22.22],[-16.14,22]]]},\"properties\":{\"id\":2201,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4803,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[2202,2277,2200,2120,2121,2122]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.44,21.86],[-15.58,21.72],[-16.09,21.91],[-16.14,22],[-16.17,22.22],[-15.61,22.33],[-15.47,22.14],[-15.44,21.86]]]},\"properties\":{\"id\":2202,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[2203,2279,2278,2277,2201,2122,2123]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.82,22.25],[-15.27,21.86],[-15.44,21.86],[-15.47,22.14],[-15.1,22.36],[-14.85,22.3],[-14.82,22.25]]]},\"properties\":{\"id\":2203,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2205,2204,2279,2202,2123,2124]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.71,22.11],[-14.93,21.66],[-15.27,21.86],[-14.82,22.25],[-14.71,22.11]]]},\"properties\":{\"id\":2204,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2205,2280,2279,2203]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.56,22.33],[-13.58,21.8],[-13.87,21.8],[-14.2,21.94],[-14.15,22.36],[-14.03,22.58],[-13.61,22.44],[-13.56,22.33]]]},\"properties\":{\"id\":2206,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":12068,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2127,2207,2282,2281,2205,2125,2126]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.54,21.94],[-12.97,21.63],[-13.19,21.77],[-13.02,22.33],[-12.88,22.47],[-12.63,22.25],[-12.54,21.94]]]},\"properties\":{\"id\":2208,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2209,2284,2283,2207,2127,2128]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.9,21.94],[-11.92,21.88],[-12.43,21.91],[-12.54,21.94],[-12.63,22.25],[-12.43,22.39],[-11.78,22.36],[-11.9,21.94]]]},\"properties\":{\"id\":2209,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2210,2286,2285,2284,2208,2128,2129]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.11,21.94],[-11.14,21.88],[-11.9,21.94],[-11.78,22.36],[-11.78,22.39],[-11.59,22.44],[-11.28,22.28],[-11.11,21.94]]]},\"properties\":{\"id\":2210,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2211,2287,2286,2209,2129,2130,2131]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.91,22.44],[-10.74,22],[-11.11,21.94],[-11.28,22.28],[-10.91,22.44]]]},\"properties\":{\"id\":2211,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":60,\"culture\":7,\"religion\":7,\"neighbors\":[2131,2212,2287,2210]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.32,22.3],[-10.52,21.94],[-10.74,22],[-10.91,22.44],[-10.86,22.61],[-10.35,22.5],[-10.32,22.3]]]},\"properties\":{\"id\":2212,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":60,\"culture\":7,\"religion\":7,\"neighbors\":[2133,2134,2287,2211,2131,2132]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.51,22.36],[-9.65,21.94],[-9.67,21.88],[-9.87,22.02],[-9.96,22.22],[-9.55,22.43],[-9.51,22.36]]]},\"properties\":{\"id\":2213,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":39526,\"state\":6,\"province\":103,\"culture\":7,\"religion\":7,\"neighbors\":[2135,2215,2216,2214,2134,2133]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.73,21.6],[-9.82,21.49],[-9.82,21.49],[-10.21,21.77],[-9.87,22.02],[-9.67,21.88],[-9.73,21.6]]]},\"properties\":{\"id\":2214,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":12000,\"state\":6,\"province\":103,\"culture\":7,\"religion\":7,\"neighbors\":[2216,2291,2290,2289,2134,2213]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.08,22.47],[-4.05,22.02],[-4.67,22.05],[-4.44,22.56],[-4.08,22.47]]]},\"properties\":{\"id\":2220,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":13000,\"state\":6,\"province\":64,\"culture\":7,\"religion\":11,\"neighbors\":[2146,2222,2221,2145]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.97,21.91],[-3.91,21.77],[-3.94,21.72],[-4.3,21.6],[-4.7,21.63],[-4.75,21.88],[-4.73,22],[-4.67,22.05],[-4.05,22.02],[-3.97,21.91]]]},\"properties\":{\"id\":2221,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":27098,\"state\":6,\"province\":64,\"culture\":7,\"religion\":11,\"neighbors\":[2222,2223,2297,2296,2295,2219,2218,2145,2220]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.52,22.42],[-3.97,21.91],[-4.05,22.02],[-4.08,22.47],[-3.77,22.67],[-3.52,22.42]]]},\"properties\":{\"id\":2222,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":64,\"culture\":7,\"religion\":11,\"neighbors\":[2147,2223,2221,2220,2146]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.29,22.33],[-3.35,21.72],[-3.91,21.77],[-3.97,21.91],[-3.52,22.42],[-3.29,22.33]]]},\"properties\":{\"id\":2223,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":64,\"culture\":7,\"religion\":11,\"neighbors\":[2147,2224,2297,2221,2222]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.19,22.44],[-2.17,21.94],[-2.62,21.77],[-2.73,21.83],[-2.87,22.44],[-2.87,22.44],[-2.19,22.44]]]},\"properties\":{\"id\":2225,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2149,2226,2299,2298,2224,2148]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.55,22.39],[-1.41,22.3],[-1.55,22.02],[-1.74,21.83],[-1.97,21.77],[-2.17,21.94],[-2.19,22.44],[-2.14,22.5],[-1.55,22.39]]]},\"properties\":{\"id\":2226,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2150,2151,2227,2301,2300,2299,2225,2149]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.24,22.36],[-1.01,21.58],[-1.04,21.55],[-1.55,22.02],[-1.41,22.3],[-1.24,22.36]]]},\"properties\":{\"id\":2227,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2151,2228,2302,2301,2226]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.82,22.44],[-0.48,22],[-0.51,21.88],[-1.01,21.58],[-1.24,22.36],[-1.04,22.5],[-0.82,22.44]]]},\"properties\":{\"id\":2228,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[2152,2153,2303,2302,2227,2151]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.25,22.05],[0.48,22.33],[0.56,22.28],[0.56,22.14],[0.45,21.77],[0.03,21.77],[-0.25,22.05]]]},\"properties\":{\"id\":2230,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2303,2229,2155,2231,2305,2304]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.84,22.42],[1.41,22.08],[1.21,21.72],[0.56,22.14],[0.56,22.28],[0.84,22.42]]]},\"properties\":{\"id\":2231,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2155,2232,2306,2305,2230]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.01,21.97],[2.93,22.14],[3.21,22.58],[3.49,22.28],[3.4,21.91],[3.21,21.88],[3.01,21.97]]]},\"properties\":{\"id\":2235,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2309,2234,2159,2160,2236,2310]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.49,22.28],[3.82,22.36],[3.94,22.25],[3.85,21.72],[3.82,21.63],[3.4,21.91],[3.49,22.28]]]},\"properties\":{\"id\":2236,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":12000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2235,2160,2161,2237,2311,2310]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.94,22.25],[4.3,22.28],[4.36,22],[3.85,21.72],[3.94,22.25]]]},\"properties\":{\"id\":2237,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2236,2161,2238,2311]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.36,22.36],[4.58,22.44],[4.84,22.08],[4.75,21.88],[4.53,21.86],[4.36,22],[4.3,22.28],[4.36,22.36]]]},\"properties\":{\"id\":2238,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2161,2162,2165,2239,2312,2311,2237]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.84,22.08],[5.23,22.25],[5.4,22.19],[5.09,21.44],[4.75,21.88],[4.84,22.08]]]},\"properties\":{\"id\":2239,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":13681,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2238,2165,2164,2313,2312]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.13,22.28],[6.36,22.33],[6.72,22.11],[6.81,21.91],[6.78,21.77],[6.5,21.55],[6.13,21.8],[6.1,21.97],[6.13,22.28]]]},\"properties\":{\"id\":2241,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":13559,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2240,2167,2168,2242,2317,2316,2315,2314]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.72,22.11],[7.03,22.5],[7.26,22.02],[6.81,21.91],[6.72,22.11]]]},\"properties\":{\"id\":2242,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2241,2168,2243,2317]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.06,22.64],[7.31,22.67],[7.65,22.39],[7.48,22],[7.26,22.02],[7.03,22.5],[7.06,22.64]]]},\"properties\":{\"id\":2243,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":7,\"province\":109,\"culture\":8,\"religion\":11,\"neighbors\":[2168,2087,2169,2244,2317,2242]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.85,22.5],[8.1,22.47],[8.33,21.97],[7.54,21.91],[7.48,22],[7.65,22.39],[7.85,22.5]]]},\"properties\":{\"id\":2244,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":32215,\"state\":7,\"province\":109,\"culture\":8,\"religion\":11,\"neighbors\":[2169,2170,2245,2318,2317,2243]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.21,22.56],[8.58,22.56],[8.83,22.14],[8.66,21.83],[8.35,21.94],[8.33,21.97],[8.1,22.47],[8.21,22.56]]]},\"properties\":{\"id\":2245,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":22873,\"state\":7,\"province\":108,\"culture\":8,\"religion\":11,\"neighbors\":[2170,2171,2172,2246,2319,2318,2244]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.83,22.14],[9.06,22.28],[9.56,21.97],[9.53,21.83],[9.31,21.69],[8.72,21.72],[8.66,21.83],[8.83,22.14]]]},\"properties\":{\"id\":2246,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":26000,\"state\":7,\"province\":108,\"culture\":8,\"religion\":11,\"neighbors\":[2245,2172,2247,2322,2321,2320,2319]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.65,22.02],[9.56,21.97],[9.06,22.28],[9.22,22.72],[9.65,22.5],[9.65,22.47],[9.65,22.02]]]},\"properties\":{\"id\":2247,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":17000,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2248,2322,2246,2172,2173,2174]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.65,22.02],[9.65,22.47],[10.29,22.56],[10.13,22.05],[9.65,22.02]]]},\"properties\":{\"id\":2248,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2322,2247,2174,2249]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.29,22.56],[10.32,22.61],[10.91,22],[10.94,21.91],[10.91,21.88],[10.21,21.88],[10.13,22.05],[10.29,22.56]]]},\"properties\":{\"id\":2249,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":21000,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2248,2174,2175,2250,2324,2323,2322]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.91,22],[11.08,22.39],[11.33,22.67],[11.59,22.33],[11.42,21.83],[10.94,21.91],[10.91,22]]]},\"properties\":{\"id\":2250,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":24720,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2249,2175,2176,2177,2251,2324]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.59,22.33],[12.09,22.39],[12.12,22.33],[12.09,22.14],[11.56,21.72],[11.42,21.83],[11.59,22.33]]]},\"properties\":{\"id\":2251,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":21719,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2250,2177,2178,2252,2326,2324]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.12,22.33],[12.46,22.33],[12.68,21.91],[12.57,21.72],[12.35,21.63],[12.09,22.14],[12.12,22.33]]]},\"properties\":{\"id\":2252,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2251,2178,2253,2255,2327,2326]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.46,22.33],[12.97,22.56],[13.05,22.33],[12.91,21.97],[12.68,21.91],[12.46,22.33],[12.46,22.33]]]},\"properties\":{\"id\":2253,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":13000,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[2178,2179,2180,2254,2255,2252]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.52,21.38],[-27.14,20.99],[-27.48,21.27],[-27.03,21.91],[-26.89,21.88],[-26.63,21.66],[-26.52,21.38]]]},\"properties\":{\"id\":2258,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2259,2335,2182,2183]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.79,21.86],[-25.96,21.46],[-26.35,21.3],[-26.52,21.38],[-26.63,21.66],[-25.99,22.05],[-25.79,21.86]]]},\"properties\":{\"id\":2259,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":81,\"culture\":5,\"religion\":5,\"neighbors\":[2184,2260,2336,2335,2258,2183]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.28,21.6],[-25.42,21.35],[-25.85,21.32],[-25.96,21.46],[-25.79,21.86],[-25.42,21.86],[-25.28,21.6]]]},\"properties\":{\"id\":2260,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7180,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2261,2338,2337,2336,2259,2184]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.75,21.32],[-24.81,21.3],[-25.28,21.6],[-25.42,21.86],[-25.34,21.94],[-24.72,21.86],[-24.75,21.32]]]},\"properties\":{\"id\":2261,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2262,2339,2338,2260,2184,2185]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.24,21.63],[-24.47,21.35],[-24.75,21.32],[-24.72,21.86],[-24.61,21.97],[-24.44,22.02],[-24.24,21.63]]]},\"properties\":{\"id\":2262,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2187,2263,2339,2261,2185,2186]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.77,21.32],[-24.19,21.07],[-24.47,21.35],[-24.24,21.63],[-23.85,21.69],[-23.74,21.41],[-23.77,21.32]]]},\"properties\":{\"id\":2263,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9232,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2341,2340,2339,2262,2187,2264]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.06,21.6],[-23.09,21.49],[-23.29,21.35],[-23.74,21.41],[-23.85,21.69],[-23.68,22],[-23.32,21.91],[-23.06,21.6]]]},\"properties\":{\"id\":2264,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8590,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2189,2265,2342,2341,2263,2187,2188]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.98,21.63],[-22.39,21.41],[-22.72,20.99],[-23.09,21.49],[-23.06,21.6],[-22.98,21.63]]]},\"properties\":{\"id\":2265,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":74,\"culture\":7,\"religion\":7,\"neighbors\":[2189,2266,2343,2342,2264]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.16,21.52],[-22.39,21.41],[-22.98,21.63],[-22.64,21.94],[-22.16,21.52]]]},\"properties\":{\"id\":2266,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":74,\"culture\":7,\"religion\":7,\"neighbors\":[2190,2343,2265,2189]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.87,21.27],[-20.98,21.18],[-21.57,21.27],[-21.32,21.8],[-20.7,21.55],[-20.87,21.27]]]},\"properties\":{\"id\":2268,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2347,2346,2345,2267,2269]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.35,21.55],[-19.77,21.3],[-20.02,21.77],[-19.52,21.97],[-19.38,21.83],[-19.35,21.55]]]},\"properties\":{\"id\":2271,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2272,2348,2270,2195,2196]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.62,21.94],[-18.87,21.35],[-19.21,21.44],[-19.35,21.55],[-19.38,21.83],[-18.82,22.02],[-18.62,21.94]]]},\"properties\":{\"id\":2272,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2197,2273,2349,2348,2271,2196]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.23,21.83],[-18.37,21.3],[-18.82,21.32],[-18.87,21.35],[-18.62,21.94],[-18.45,21.97],[-18.23,21.83]]]},\"properties\":{\"id\":2273,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2198,2274,2350,2349,2272,2197]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.92,21.83],[-17.75,21.32],[-18.25,21.21],[-18.37,21.3],[-18.23,21.83],[-17.92,21.83],[-17.92,21.83]]]},\"properties\":{\"id\":2274,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2199,2275,2351,2350,2273,2198]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.1,21.72],[-17.24,21.24],[-17.63,21.24],[-17.75,21.32],[-17.92,21.83],[-17.21,21.94],[-17.1,21.72]]]},\"properties\":{\"id\":2275,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2200,2276,2352,2351,2274,2199]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.48,21.44],[-16.65,21.16],[-17.21,21.21],[-17.24,21.24],[-17.1,21.72],[-16.68,21.69],[-16.48,21.44]]]},\"properties\":{\"id\":2276,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2277,2354,2353,2352,2275,2200]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.09,21.91],[-16.31,21.46],[-16.48,21.44],[-16.68,21.69],[-16.62,21.8],[-16.14,22],[-16.09,21.91]]]},\"properties\":{\"id\":2277,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2202,2278,2354,2276,2200,2201]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.58,21.66],[-15.75,21.38],[-16.09,21.3],[-16.31,21.46],[-16.09,21.91],[-15.58,21.72],[-15.58,21.66]]]},\"properties\":{\"id\":2278,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":10376,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2279,2356,2355,2354,2277,2202]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.87,21.8],[-14.06,21.27],[-14.12,21.21],[-14.54,21.46],[-14.29,21.91],[-14.2,21.94],[-13.87,21.8]]]},\"properties\":{\"id\":2281,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2206,2282,2359,2358,2280,2205]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.56,21.8],[-13.58,21.21],[-14.06,21.27],[-13.87,21.8],[-13.58,21.8],[-13.56,21.8]]]},\"properties\":{\"id\":2282,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2207,2283,2359,2281,2206]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.91,21.35],[-12.99,21.13],[-13.56,21.16],[-13.58,21.21],[-13.56,21.8],[-13.19,21.77],[-12.97,21.63],[-12.91,21.35]]]},\"properties\":{\"id\":2283,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":15077,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2284,2361,2360,2359,2282,2207,2208]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.43,21.91],[-12.43,21.3],[-12.91,21.35],[-12.97,21.63],[-12.54,21.94],[-12.43,21.91]]]},\"properties\":{\"id\":2284,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2209,2285,2361,2283,2208]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.81,21.41],[-11.9,21.3],[-12.35,21.24],[-12.43,21.3],[-12.43,21.91],[-11.92,21.88],[-11.81,21.41]]]},\"properties\":{\"id\":2285,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7946,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2286,2363,2362,2361,2284,2209]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.22,21.49],[-11.45,21.38],[-11.81,21.41],[-11.92,21.88],[-11.9,21.94],[-11.14,21.88],[-11.22,21.49]]]},\"properties\":{\"id\":2286,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2287,2364,2363,2285,2209,2210]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.52,21.94],[-10.49,21.86],[-10.88,21.41],[-10.91,21.41],[-11.22,21.49],[-11.14,21.88],[-11.11,21.94],[-10.74,22],[-10.52,21.94]]]},\"properties\":{\"id\":2287,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2212,2134,2288,2365,2364,2286,2210,2211]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.82,21.49],[-10.38,21.3],[-10.46,21.83],[-10.21,21.77],[-9.82,21.49]]]},\"properties\":{\"id\":2289,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":14000,\"state\":6,\"province\":103,\"culture\":7,\"religion\":7,\"neighbors\":[2214,2290,2288,2134]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.82,21.49],[-9.73,21.24],[-10.38,20.99],[-10.38,21.24],[-10.38,21.3],[-9.82,21.49],[-9.82,21.49]]]},\"properties\":{\"id\":2290,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16966,\"state\":6,\"province\":103,\"culture\":7,\"religion\":7,\"neighbors\":[2214,2291,2366,2365,2288,2289]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.7,21.63],[-4.3,21.6],[-4.22,21.13],[-4.39,21.07],[-4.73,21.38],[-4.73,21.6],[-4.7,21.63]]]},\"properties\":{\"id\":2295,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":64,\"culture\":7,\"religion\":7,\"neighbors\":[2219,2221,2296,2377,2375,2293]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.62,21.77],[-2.62,21.18],[-3.18,21.24],[-3.29,21.46],[-3.35,21.69],[-2.73,21.83],[-2.62,21.77]]]},\"properties\":{\"id\":2298,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":17087,\"state\":6,\"province\":83,\"culture\":7,\"religion\":11,\"neighbors\":[2225,2299,2379,2378,2297,2224]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.97,21.77],[-1.97,21.32],[-2.28,21.18],[-2.56,21.16],[-2.62,21.18],[-2.62,21.77],[-2.17,21.94],[-1.97,21.77]]]},\"properties\":{\"id\":2299,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":17441,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2226,2300,2381,2380,2379,2298,2225]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.74,21.83],[-1.32,21.49],[-1.83,21.21],[-1.97,21.32],[-1.97,21.77],[-1.74,21.83]]]},\"properties\":{\"id\":2300,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2226,2301,2382,2381,2299]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.55,22.02],[-1.04,21.55],[-1.07,21.46],[-1.32,21.49],[-1.74,21.83],[-1.55,22.02]]]},\"properties\":{\"id\":2301,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2226,2227,2302,2382,2300]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.51,21.88],[-0.28,21.44],[-0.48,21.16],[-1.01,21.32],[-1.07,21.46],[-1.04,21.55],[-1.01,21.58],[-0.51,21.88]]]},\"properties\":{\"id\":2302,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7749,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2228,2303,2384,2383,2382,2301,2227]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.56,22.14],[1.21,21.72],[1.24,21.52],[1.01,21.27],[0.67,21.3],[0.48,21.46],[0.45,21.77],[0.56,22.14]]]},\"properties\":{\"id\":2305,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":19138,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2230,2231,2306,2387,2386,2385,2304]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.77,21.52],[1.86,22],[2.25,22],[2.08,21.52],[1.77,21.52]]]},\"properties\":{\"id\":2307,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2388,2306,2233,2308]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.08,21.52],[2.25,22],[2.33,22.02],[2.64,21.6],[2.64,21.44],[2.33,21.35],[2.08,21.52]]]},\"properties\":{\"id\":2308,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2388,2307,2233,2234,2309,2389]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.64,21.6],[3.01,21.97],[3.21,21.88],[3.12,21.24],[2.73,21.32],[2.64,21.44],[2.64,21.6]]]},\"properties\":{\"id\":2309,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":11606,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2308,2234,2235,2310,2390,2389]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.21,21.88],[3.4,21.91],[3.82,21.63],[3.85,21.46],[3.68,21.24],[3.18,21.21],[3.12,21.24],[3.21,21.88]]]},\"properties\":{\"id\":2310,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16966,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2309,2235,2236,2311,2392,2391,2390]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.53,21.86],[4.75,21.88],[5.09,21.44],[5.09,21.38],[5.09,21.38],[4.56,21.21],[4.28,21.44],[4.53,21.86]]]},\"properties\":{\"id\":2312,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2311,2238,2239,2313,2394,2393,2392]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.09,21.44],[5.4,22.19],[5.43,22.22],[5.63,21.8],[5.6,21.32],[5.54,21.3],[5.09,21.38],[5.09,21.44]]]},\"properties\":{\"id\":2313,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":56,\"culture\":8,\"religion\":11,\"neighbors\":[2312,2239,2164,2240,2314,2395,2394]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.74,21.35],[6.13,21.8],[6.5,21.55],[6.5,21.49],[6.16,21.18],[5.74,21.35]]]},\"properties\":{\"id\":2315,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2395,2314,2241,2316,2396]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.5,21.55],[6.78,21.77],[7.26,21.32],[7.23,21.3],[6.69,21.24],[6.5,21.49],[6.5,21.55]]]},\"properties\":{\"id\":2316,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2315,2241,2317,2398,2397,2396]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.81,21.91],[7.26,22.02],[7.48,22],[7.54,21.91],[7.57,21.49],[7.26,21.32],[6.78,21.77],[6.81,21.91]]]},\"properties\":{\"id\":2317,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":29642,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2241,2242,2243,2244,2318,2398,2316]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.54,21.91],[8.33,21.97],[8.35,21.94],[7.82,21.35],[7.57,21.49],[7.54,21.91]]]},\"properties\":{\"id\":2318,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":18000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2317,2244,2245,2319,2398]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.82,21.35],[8.35,21.94],[8.66,21.83],[8.72,21.72],[8.69,21.49],[8.52,21.21],[8.24,21.07],[7.9,21.27],[7.82,21.35]]]},\"properties\":{\"id\":2319,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":45067,\"state\":7,\"province\":108,\"culture\":8,\"religion\":11,\"neighbors\":[2398,2318,2245,2246,2320,2401,2400,2399]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.37,21.04],[9.31,21.69],[9.53,21.83],[9.76,21.55],[9.37,21.04]]]},\"properties\":{\"id\":2321,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":19641,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2402,2320,2246,2322]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.65,22.02],[10.13,22.05],[10.21,21.88],[10.13,21.55],[9.98,21.46],[9.76,21.55],[9.53,21.83],[9.56,21.97],[9.65,22.02]]]},\"properties\":{\"id\":2322,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":22948,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2247,2248,2249,2323,2403,2402,2321,2246]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.21,21.88],[10.91,21.88],[10.8,21.44],[10.69,21.32],[10.63,21.3],[10.13,21.55],[10.21,21.88]]]},\"properties\":{\"id\":2323,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":25000,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2322,2249,2324,2405,2404,2403]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.94,21.91],[11.42,21.83],[11.56,21.72],[11.56,21.72],[11.59,21.35],[11.39,21.1],[10.8,21.44],[10.91,21.88],[10.94,21.91]]]},\"properties\":{\"id\":2324,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":50511,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2249,2250,2251,2326,2325,2406,2405,2323]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.56,21.72],[12.32,21.55],[12.32,21.55],[12.01,21.21],[11.59,21.35],[11.56,21.72]]]},\"properties\":{\"id\":2325,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":17000,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2324,2326,2327,2408,2406]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.56,21.72],[12.09,22.14],[12.35,21.63],[12.32,21.55],[11.56,21.72],[11.56,21.72]]]},\"properties\":{\"id\":2326,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2324,2251,2252,2327,2325]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.27,20.74],[-26.44,20.6],[-27.11,20.9],[-27.14,20.99],[-26.52,21.38],[-26.35,21.3],[-26.27,20.74],[-26.27,20.74]]]},\"properties\":{\"id\":2335,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9803,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2418,2417,2416,2258,2259,2336]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.68,20.85],[-26.27,20.74],[-26.35,21.3],[-25.96,21.46],[-25.85,21.32],[-25.68,20.85]]]},\"properties\":{\"id\":2336,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2337,2418,2335,2259,2260]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.68,20.85],[-25.85,21.32],[-25.42,21.35],[-25.48,20.79],[-25.68,20.85]]]},\"properties\":{\"id\":2337,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2418,2336,2260,2338]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.28,21.6],[-24.81,21.3],[-24.95,20.88],[-25.42,20.74],[-25.48,20.79],[-25.42,21.35],[-25.28,21.6]]]},\"properties\":{\"id\":2338,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2260,2261,2339,2419,2418,2337]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.19,21.07],[-24.16,20.85],[-24.89,20.82],[-24.95,20.88],[-24.81,21.3],[-24.75,21.32],[-24.47,21.35],[-24.19,21.07]]]},\"properties\":{\"id\":2339,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8282,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2263,2340,2420,2419,2338,2261,2262]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.77,21.32],[-23.6,20.85],[-23.74,20.65],[-24.13,20.79],[-24.16,20.85],[-24.19,21.07],[-23.77,21.32]]]},\"properties\":{\"id\":2340,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2263,2341,2422,2421,2420,2339]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.32,20.93],[-23.6,20.85],[-23.77,21.32],[-23.74,21.41],[-23.29,21.35],[-23.32,20.93]]]},\"properties\":{\"id\":2341,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2342,2422,2340,2263,2264]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.72,20.93],[-22.98,20.76],[-23.32,20.93],[-23.29,21.35],[-23.09,21.49],[-22.72,20.99],[-22.72,20.93]]]},\"properties\":{\"id\":2342,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2343,2423,2422,2341,2264,2265]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.94,21.41],[-22.33,20.79],[-22.56,20.79],[-22.72,20.93],[-22.72,20.99],[-22.39,21.41],[-22.16,21.52],[-22.05,21.52],[-21.94,21.41]]]},\"properties\":{\"id\":2343,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":74,\"culture\":7,\"religion\":7,\"neighbors\":[2267,2344,2424,2423,2342,2265,2266,2190]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.66,20.76],[-21.99,20.6],[-22.33,20.79],[-21.94,21.41],[-21.63,21.27],[-21.66,20.76]]]},\"properties\":{\"id\":2344,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2345,2425,2424,2343,2267]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.92,20.82],[-21.01,20.62],[-21.57,20.65],[-21.66,20.76],[-21.63,21.27],[-21.57,21.27],[-20.98,21.18],[-20.92,20.82]]]},\"properties\":{\"id\":2345,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2346,2427,2426,2425,2344,2267,2268]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.87,21.27],[-20.22,20.9],[-20.53,20.74],[-20.92,20.82],[-20.98,21.18],[-20.87,21.27]]]},\"properties\":{\"id\":2346,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9616,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2268,2347,2428,2427,2345]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.5,21.74],[-20.05,20.93],[-20.22,20.9],[-20.87,21.27],[-20.7,21.55],[-20.5,21.74]]]},\"properties\":{\"id\":2347,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2269,2270,2428,2346,2268]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.35,21.55],[-19.21,21.44],[-19.38,20.85],[-19.94,20.85],[-19.97,20.9],[-19.77,21.3],[-19.35,21.55]]]},\"properties\":{\"id\":2348,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2271,2272,2349,2429,2428,2270]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.82,21.32],[-18.82,20.88],[-18.96,20.71],[-19.15,20.68],[-19.38,20.85],[-19.21,21.44],[-18.87,21.35],[-18.82,21.32]]]},\"properties\":{\"id\":2349,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6925,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2273,2350,2431,2430,2429,2348,2272]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.25,21.21],[-18.25,20.82],[-18.31,20.79],[-18.82,20.88],[-18.82,21.32],[-18.37,21.3],[-18.25,21.21]]]},\"properties\":{\"id\":2350,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2274,2351,2432,2431,2349,2273]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.18,21.07],[-17.35,20.4],[-17.41,20.43],[-17.75,20.96],[-17.63,21.24],[-17.24,21.24],[-17.21,21.21],[-17.18,21.07]]]},\"properties\":{\"id\":2352,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2353,2434,2522,2433,2351,2275,2276]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.57,20.93],[-16.79,20.71],[-17.18,21.07],[-17.21,21.21],[-16.65,21.16],[-16.57,20.93]]]},\"properties\":{\"id\":2353,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2354,2435,2434,2352,2276]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.14,20.82],[-16.17,20.79],[-16.57,20.93],[-16.65,21.16],[-16.48,21.44],[-16.31,21.46],[-16.09,21.3],[-16.14,20.82]]]},\"properties\":{\"id\":2354,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5910,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2355,2436,2435,2353,2276,2277,2278]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.47,20.82],[-15.58,20.76],[-16.14,20.82],[-16.09,21.3],[-15.75,21.38],[-15.47,20.82]]]},\"properties\":{\"id\":2355,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6874,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2356,2437,2436,2354,2278]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.58,21.66],[-15.1,21.21],[-15.41,20.82],[-15.47,20.82],[-15.75,21.38],[-15.58,21.66]]]},\"properties\":{\"id\":2356,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2278,2279,2357,2437,2355]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.91,20.71],[-12.91,20.68],[-13.56,20.57],[-13.7,20.76],[-13.56,21.16],[-12.99,21.13],[-12.91,20.71]]]},\"properties\":{\"id\":2360,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2361,2442,2441,2440,2359,2283]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.17,20.76],[-11.31,20.6],[-11.9,20.99],[-11.9,21.3],[-11.81,21.41],[-11.45,21.38],[-11.17,20.76]]]},\"properties\":{\"id\":2363,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2364,2445,2444,2362,2285,2286]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.22,21.49],[-10.91,21.41],[-10.83,20.85],[-10.88,20.82],[-11.17,20.76],[-11.45,21.38],[-11.22,21.49]]]},\"properties\":{\"id\":2364,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2286,2287,2365,2446,2445,2363]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.38,20.99],[-10.43,20.82],[-10.83,20.85],[-10.91,21.41],[-10.88,21.41],[-10.38,21.24],[-10.38,20.99]]]},\"properties\":{\"id\":2365,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2290,2366,2446,2364,2287,2288]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.67,21.16],[-9.82,20.71],[-10.15,20.57],[-10.24,20.57],[-10.43,20.82],[-10.38,20.99],[-9.73,21.24],[-9.67,21.16]]]},\"properties\":{\"id\":2366,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":12000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2291,2367,2447,2536,2446,2365,2290]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.67,21.16],[-9.34,21.13],[-9.23,21.02],[-9.56,20.6],[-9.82,20.71],[-9.67,21.16]]]},\"properties\":{\"id\":2367,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":18240,\"state\":6,\"province\":68,\"culture\":7,\"religion\":7,\"neighbors\":[2366,2291,2292,2448,2447]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.39,21.07],[-4.42,21.04],[-4.7,20.88],[-4.87,21.02],[-4.75,21.35],[-4.73,21.38],[-4.39,21.07]]]},\"properties\":{\"id\":2375,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2295,2377,2376,2373,2294,2293]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.42,21.04],[-4.36,20.74],[-4.7,20.54],[-4.75,20.65],[-4.7,20.88],[-4.42,21.04]]]},\"properties\":{\"id\":2376,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2375,2377,2459,2458,2373]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.56,21.16],[-2.59,20.88],[-2.76,20.68],[-3.35,20.79],[-3.37,20.82],[-3.18,21.24],[-2.62,21.18],[-2.56,21.16]]]},\"properties\":{\"id\":2379,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2299,2380,2464,2463,2462,2378,2298]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.28,21.18],[-2,20.65],[-2.19,20.51],[-2.59,20.88],[-2.56,21.16],[-2.28,21.18]]]},\"properties\":{\"id\":2380,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2299,2381,2465,2464,2379]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.83,21.21],[-1.6,20.79],[-2,20.65],[-2.28,21.18],[-1.97,21.32],[-1.83,21.21]]]},\"properties\":{\"id\":2381,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2300,2382,2465,2380,2299]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.07,21.46],[-1.01,21.32],[-1.15,20.99],[-1.46,20.71],[-1.6,20.79],[-1.83,21.21],[-1.32,21.49],[-1.07,21.46]]]},\"properties\":{\"id\":2382,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2301,2302,2383,2467,2465,2381,2300]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.48,21.46],[0.67,21.3],[0.45,20.9],[0.11,20.88],[0.06,20.88],[0.06,21.35],[0.48,21.46]]]},\"properties\":{\"id\":2385,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[2304,2305,2386,2469,2468,2384]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.45,20.9],[0.67,21.3],[1.01,21.27],[1.18,20.76],[0.59,20.68],[0.45,20.9]]]},\"properties\":{\"id\":2386,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":7,\"neighbors\":[2469,2385,2305,2387,2470]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.24,21.52],[1.66,21.41],[1.86,20.82],[1.77,20.74],[1.24,20.68],[1.18,20.76],[1.01,21.27],[1.24,21.52]]]},\"properties\":{\"id\":2387,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2305,2306,2388,2472,2471,2470,2386]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.12,21.24],[3.18,21.21],[3.09,20.71],[2.76,20.62],[2.59,20.88],[2.73,21.32],[3.12,21.24]]]},\"properties\":{\"id\":2390,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2309,2310,2391,2474,2473,2389]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.56,21.21],[5.09,21.38],[5.01,20.85],[4.84,20.62],[4.47,20.85],[4.56,21.21]]]},\"properties\":{\"id\":2393,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2392,2312,2394,2478,2477]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.09,21.38],[5.54,21.3],[5.6,20.71],[5.54,20.65],[5.01,20.85],[5.09,21.38],[5.09,21.38]]]},\"properties\":{\"id\":2394,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2312,2313,2395,2479,2478,2393]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.16,21.18],[6.5,21.49],[6.69,21.24],[6.64,20.68],[6.58,20.65],[6.24,20.93],[6.16,21.18]]]},\"properties\":{\"id\":2396,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":18804,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2395,2315,2316,2397,2481,2480]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.69,21.24],[7.23,21.3],[7.17,20.76],[7.12,20.71],[6.64,20.68],[6.69,21.24]]]},\"properties\":{\"id\":2397,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":19000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2396,2316,2398,2482,2481]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.26,21.32],[7.57,21.49],[7.82,21.35],[7.9,21.27],[7.68,20.88],[7.17,20.76],[7.23,21.3],[7.26,21.32]]]},\"properties\":{\"id\":2398,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":28657,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2316,2317,2318,2319,2399,2482,2397]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.24,21.07],[8.52,21.21],[8.89,20.74],[8.52,20.54],[8.3,20.71],[8.21,20.88],[8.24,21.07]]]},\"properties\":{\"id\":2400,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":7,\"province\":108,\"culture\":8,\"religion\":11,\"neighbors\":[2399,2319,2401,2485,2484,2483]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.89,20.74],[8.52,21.21],[8.69,21.49],[9.34,21.02],[9.37,20.85],[9.17,20.68],[8.89,20.74]]]},\"properties\":{\"id\":2401,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":23000,\"state\":7,\"province\":108,\"culture\":8,\"religion\":11,\"neighbors\":[2485,2400,2319,2320,2402,2486]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.37,21.04],[9.76,21.55],[9.98,21.46],[9.98,20.82],[9.84,20.74],[9.37,20.85],[9.34,21.02],[9.37,21.04]]]},\"properties\":{\"id\":2402,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":31800,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2320,2321,2322,2403,2487,2486,2401]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.98,20.82],[9.98,21.46],[10.13,21.55],[10.63,21.3],[10.29,20.82],[9.98,20.82]]]},\"properties\":{\"id\":2403,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":20000,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2487,2402,2322,2323,2404]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.63,21.3],[10.69,21.32],[10.97,20.82],[10.49,20.68],[10.29,20.82],[10.63,21.3]]]},\"properties\":{\"id\":2404,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":26823,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2403,2323,2405,2488,2487]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.44,20.6],[-26.52,20.35],[-27.34,20.26],[-27.11,20.9],[-26.44,20.6]]]},\"properties\":{\"id\":2416,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":14545,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2335,2417,2505]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.79,20.15],[-26.07,19.95],[-26.1,19.95],[-26.47,20.18],[-26.52,20.35],[-26.44,20.6],[-26.27,20.74],[-25.79,20.15]]]},\"properties\":{\"id\":2417,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2418,2507,2591,2506,2505,2416,2335]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.42,20.74],[-25.45,20.18],[-25.79,20.15],[-26.27,20.74],[-26.27,20.74],[-25.68,20.85],[-25.48,20.79],[-25.42,20.74]]]},\"properties\":{\"id\":2418,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2338,2419,2507,2417,2335,2336,2337]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.67,20.37],[-25.37,20.07],[-25.45,20.18],[-25.42,20.74],[-24.95,20.88],[-24.89,20.82],[-24.67,20.37]]]},\"properties\":{\"id\":2419,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2420,2508,2507,2418,2338,2339]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.13,20.79],[-24.47,20.26],[-24.47,20.26],[-24.67,20.37],[-24.89,20.82],[-24.16,20.85],[-24.13,20.79]]]},\"properties\":{\"id\":2420,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2340,2421,2509,2508,2419,2339]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.68,20.21],[-24.27,20.07],[-24.47,20.26],[-24.13,20.79],[-23.74,20.65],[-23.62,20.37],[-23.68,20.21]]]},\"properties\":{\"id\":2421,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2511,2510,2509,2420,2340,2422]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.98,20.76],[-23.09,20.43],[-23.62,20.37],[-23.74,20.65],[-23.6,20.85],[-23.32,20.93],[-22.98,20.76]]]},\"properties\":{\"id\":2422,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":74,\"culture\":5,\"religion\":5,\"neighbors\":[2342,2423,2511,2421,2340,2341]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.56,20.79],[-22.53,20.32],[-22.64,20.12],[-22.95,20.23],[-23.09,20.43],[-22.98,20.76],[-22.72,20.93],[-22.56,20.79]]]},\"properties\":{\"id\":2423,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":74,\"culture\":7,\"religion\":7,\"neighbors\":[2343,2424,2513,2512,2511,2422,2342]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.99,20.6],[-22.08,20.4],[-22.53,20.32],[-22.56,20.79],[-22.33,20.79],[-21.99,20.6]]]},\"properties\":{\"id\":2424,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2344,2425,2513,2423,2343]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.57,20.65],[-21.49,20.12],[-21.68,19.98],[-22.05,20.37],[-22.08,20.4],[-21.99,20.6],[-21.66,20.76],[-21.57,20.65]]]},\"properties\":{\"id\":2425,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2345,2426,2515,2514,2513,2424,2344]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.53,20.74],[-20.56,20.35],[-20.95,20.37],[-21.01,20.62],[-20.92,20.82],[-20.53,20.74]]]},\"properties\":{\"id\":2427,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2346,2428,2516,2426,2345]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.94,20.85],[-19.94,20.29],[-20.02,20.15],[-20.33,20.12],[-20.56,20.35],[-20.53,20.74],[-20.22,20.9],[-20.05,20.93],[-19.97,20.9],[-19.94,20.85]]]},\"properties\":{\"id\":2428,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2348,2429,2518,2517,2516,2427,2346,2347,2270]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.7,20.26],[-19.07,20.04],[-19.21,20.07],[-19.32,20.26],[-19.15,20.68],[-18.96,20.71],[-18.7,20.26]]]},\"properties\":{\"id\":2430,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2431,2520,2519,2518,2429,2349]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.2,20.32],[-18.37,20.15],[-18.7,20.26],[-18.96,20.71],[-18.82,20.88],[-18.31,20.79],[-18.2,20.32]]]},\"properties\":{\"id\":2431,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":22671,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2432,2521,2520,2430,2349,2350]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.86,20.43],[-18.17,20.32],[-18.2,20.32],[-18.31,20.79],[-18.25,20.82],[-17.83,20.9],[-17.86,20.43]]]},\"properties\":{\"id\":2432,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2433,2522,2521,2431,2350,2351]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.18,21.07],[-16.79,20.71],[-16.85,20.29],[-17.35,20.4],[-17.35,20.4],[-17.18,21.07]]]},\"properties\":{\"id\":2434,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2352,2353,2435,2523,2522]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.26,20.43],[-16.42,20.26],[-16.71,20.15],[-16.85,20.29],[-16.79,20.71],[-16.57,20.93],[-16.17,20.79],[-16.26,20.43]]]},\"properties\":{\"id\":2435,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2436,2525,2524,2523,2434,2353,2354]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.14,20.82],[-15.58,20.76],[-15.75,20.29],[-16.26,20.43],[-16.17,20.79],[-16.14,20.82]]]},\"properties\":{\"id\":2436,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2354,2355,2437,2525,2435]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.19,20.23],[-15.67,20.07],[-15.75,20.29],[-15.58,20.76],[-15.47,20.82],[-15.41,20.82],[-15.13,20.57],[-15.19,20.23]]]},\"properties\":{\"id\":2437,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":13050,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2438,2526,2525,2436,2355,2356,2357]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.71,20.62],[-14.54,20.18],[-15.02,20.01],[-15.19,20.23],[-15.13,20.57],[-14.71,20.62]]]},\"properties\":{\"id\":2438,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2357,2439,2527,2526,2437]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.12,20.79],[-14.17,20.12],[-14.46,20.15],[-14.54,20.18],[-14.71,20.62],[-14.62,20.79],[-14.15,20.82],[-14.12,20.79]]]},\"properties\":{\"id\":2439,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2359,2440,2528,2527,2438,2357,2358]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.7,20.18],[-13.98,20.07],[-14.09,20.07],[-14.17,20.12],[-14.12,20.79],[-13.7,20.76],[-13.56,20.57],[-13.61,20.23],[-13.7,20.18]]]},\"properties\":{\"id\":2440,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2530,2529,2614,2528,2439,2359,2360,2441]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.91,20.12],[-12.99,19.98],[-13.61,20.23],[-13.56,20.57],[-12.91,20.68],[-12.91,20.12]]]},\"properties\":{\"id\":2441,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2442,2531,2530,2440,2360]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.21,20.32],[-12.26,20.26],[-12.91,20.12],[-12.91,20.68],[-12.91,20.71],[-12.57,20.68],[-12.21,20.32]]]},\"properties\":{\"id\":2442,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2443,2532,2531,2441,2360,2361]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.49,20.79],[-11.92,20.9],[-12.04,20.35],[-12.21,20.32],[-12.57,20.68],[-12.49,20.79]]]},\"properties\":{\"id\":2443,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2361,2362,2444,2532,2442]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.31,20.6],[-11.42,20.23],[-11.78,20.21],[-12.04,20.35],[-11.92,20.9],[-11.9,20.99],[-11.31,20.6]]]},\"properties\":{\"id\":2444,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2363,2445,2533,2532,2443,2362]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.88,20.82],[-10.77,20.12],[-11.22,20.04],[-11.42,20.23],[-11.31,20.6],[-11.17,20.76],[-10.88,20.82]]]},\"properties\":{\"id\":2445,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2364,2446,2534,2533,2444,2363]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.32,20.37],[-10.63,20.09],[-10.77,20.12],[-10.88,20.82],[-10.83,20.85],[-10.43,20.82],[-10.24,20.57],[-10.32,20.37]]]},\"properties\":{\"id\":2446,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":10734,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2536,2535,2534,2445,2364,2365,2366]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.56,20.6],[-9.34,20.35],[-9.34,20.26],[-9.76,20.15],[-10.15,20.57],[-9.82,20.71],[-9.56,20.6]]]},\"properties\":{\"id\":2447,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":9867,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2367,2448,2449,2537,2536,2366]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.92,20.82],[-9.34,20.35],[-9.56,20.6],[-9.23,21.02],[-9,20.9],[-8.92,20.82]]]},\"properties\":{\"id\":2448,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":17000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2368,2449,2447,2367,2292]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.58,20.48],[-8.61,20.43],[-9.25,20.12],[-9.34,20.26],[-9.34,20.35],[-8.92,20.82],[-8.86,20.79],[-8.63,20.57],[-8.58,20.48]]]},\"properties\":{\"id\":2449,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2450,2539,2538,2537,2447,2448,2368,2369]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.35,20.79],[-3.37,20.51],[-3.63,20.21],[-3.99,20.6],[-3.83,20.9],[-3.37,20.82],[-3.35,20.79]]]},\"properties\":{\"id\":2462,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2379,2463,2552,2461,2377,2378]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.76,20.68],[-2.78,20.46],[-3.01,20.29],[-3.37,20.51],[-3.35,20.79],[-2.76,20.68]]]},\"properties\":{\"id\":2463,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2379,2464,2553,2552,2462]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.19,20.51],[-2.22,20.35],[-2.56,20.29],[-2.78,20.46],[-2.76,20.68],[-2.59,20.88],[-2.19,20.51]]]},\"properties\":{\"id\":2464,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":12860,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2380,2465,2554,2553,2463,2379]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.43,20.65],[-0.76,20.37],[-1.01,20.07],[-1.46,20.07],[-1.49,20.29],[-1.43,20.65]]]},\"properties\":{\"id\":2466,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2465,2467,2557,2556,2555]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.11,20.88],[0.17,20.18],[-0.51,20.4],[-0.51,20.43],[-0.51,20.57],[-0.37,20.82],[0.06,20.88],[0.11,20.88]]]},\"properties\":{\"id\":2468,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2385,2469,2558,2557,2467,2383,2384]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.45,20.9],[0.59,20.68],[0.53,20.23],[0.17,20.18],[0.17,20.18],[0.11,20.88],[0.45,20.9]]]},\"properties\":{\"id\":2469,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2385,2386,2470,2559,2558,2468]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.18,20.76],[1.24,20.68],[1.15,20.46],[0.9,20.12],[0.73,20.09],[0.53,20.23],[0.59,20.68],[1.18,20.76]]]},\"properties\":{\"id\":2470,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":7,\"neighbors\":[2386,2387,2471,2561,2560,2559,2469]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.15,20.46],[1.24,20.68],[1.77,20.74],[1.86,20.23],[1.72,19.95],[1.15,20.46]]]},\"properties\":{\"id\":2471,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":7,\"neighbors\":[2561,2470,2387,2472,2562]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.77,20.04],[3.91,20.76],[4.22,20.71],[4.33,20.23],[4.3,20.21],[3.77,20.04],[3.77,20.04]]]},\"properties\":{\"id\":2476,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2565,2475,2392,2477,2567,2566]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.22,20.71],[4.47,20.85],[4.84,20.62],[4.89,20.46],[4.33,20.23],[4.22,20.71]]]},\"properties\":{\"id\":2477,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2476,2392,2393,2478,2567]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.01,20.85],[5.54,20.65],[5.46,20.35],[4.92,20.4],[4.89,20.46],[4.84,20.62],[5.01,20.85]]]},\"properties\":{\"id\":2478,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2393,2394,2479,2568,2567,2477]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.82,20.71],[6.24,20.93],[6.58,20.65],[6.44,20.4],[6.33,20.29],[5.82,20.71]]]},\"properties\":{\"id\":2480,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":20074,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2479,2395,2396,2481,2571]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.64,20.68],[7.12,20.71],[7.2,20.57],[6.98,20.01],[6.44,20.4],[6.58,20.65],[6.64,20.68]]]},\"properties\":{\"id\":2481,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":20000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2396,2397,2482,2572,2571,2480]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.12,20.71],[7.17,20.76],[7.68,20.88],[7.79,20.62],[7.76,20.46],[7.48,20.37],[7.2,20.57],[7.12,20.71]]]},\"properties\":{\"id\":2482,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2481,2397,2398,2399,2483,2573,2572]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.02,20.32],[8.3,20.71],[8.52,20.54],[8.55,20.15],[8.16,20.04],[8.02,20.32]]]},\"properties\":{\"id\":2484,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":14000,\"state\":7,\"province\":108,\"culture\":8,\"religion\":11,\"neighbors\":[2573,2483,2400,2485,2574]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.55,20.15],[8.52,20.54],[8.89,20.74],[9.17,20.68],[9.08,20.15],[8.72,20.07],[8.55,20.15]]]},\"properties\":{\"id\":2485,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":21000,\"state\":7,\"province\":108,\"culture\":8,\"religion\":11,\"neighbors\":[2574,2484,2400,2401,2486,2575]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.37,20.85],[9.84,20.74],[9.87,20.48],[9.31,19.95],[9.08,20.15],[9.17,20.68],[9.37,20.85]]]},\"properties\":{\"id\":2486,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":51299,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2401,2402,2487,2576,2575,2485]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.97,20.82],[11,20.82],[11.08,20.43],[10.63,20.37],[10.6,20.37],[10.49,20.68],[10.97,20.82]]]},\"properties\":{\"id\":2488,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":11000,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2404,2405,2489,2579,2578,2487]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11,20.82],[11.39,21.02],[11.62,20.71],[11.62,20.65],[11.33,20.29],[11.08,20.43],[11,20.82]]]},\"properties\":{\"id\":2489,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":110,\"culture\":8,\"religion\":11,\"neighbors\":[2488,2405,2406,2407,2490,2579]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.33,20.29],[11.62,20.65],[11.98,20.43],[12.01,19.84],[11.33,20.18],[11.33,20.29]]]},\"properties\":{\"id\":2490,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":18000,\"state\":8,\"province\":110,\"culture\":8,\"religion\":11,\"neighbors\":[2579,2489,2407,2491,2580]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.98,20.43],[12.38,20.62],[12.38,20.35],[12.07,19.81],[12.01,19.81],[12.01,19.84],[11.98,20.43]]]},\"properties\":{\"id\":2491,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":19716,\"state\":8,\"province\":110,\"culture\":8,\"religion\":11,\"neighbors\":[2490,2407,2492,2581,2661,2580]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.43,20.74],[12.68,20.71],[12.68,20.23],[12.54,20.18],[12.38,20.35],[12.38,20.62],[12.43,20.74]]]},\"properties\":{\"id\":2492,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":17221,\"state\":8,\"province\":110,\"culture\":8,\"religion\":11,\"neighbors\":[2407,2409,2493,2582,2581,2491]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.68,20.71],[12.71,20.74],[12.94,20.62],[13.11,20.12],[12.94,20.04],[12.68,20.23],[12.68,20.71]]]},\"properties\":{\"id\":2493,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":118,\"culture\":8,\"religion\":11,\"neighbors\":[2492,2409,2411,2494,2583,2582]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.11,20.12],[12.94,20.62],[13.3,20.68],[13.5,20.12],[13.5,20.09],[13.11,20.12]]]},\"properties\":{\"id\":2494,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":17536,\"state\":8,\"province\":118,\"culture\":8,\"religion\":11,\"neighbors\":[2583,2493,2411,2495,2584]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.44,20.88],[13.53,20.9],[13.84,20.43],[13.5,20.12],[13.3,20.68],[13.44,20.88]]]},\"properties\":{\"id\":2495,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":8,\"province\":118,\"culture\":8,\"religion\":8,\"neighbors\":[2411,2331,2496,2584,2494]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.26,20.29],[14.43,20.71],[14.51,20.76],[14.63,20.71],[14.77,20.48],[14.54,20.23],[14.26,20.29]]]},\"properties\":{\"id\":2498,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":8,\"neighbors\":[2585,2497,2413,2414,2500,2499]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.74,19.98],[14.54,20.23],[14.77,20.48],[15.02,20.43],[15.08,20.37],[14.74,19.98]]]},\"properties\":{\"id\":2499,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":8,\"neighbors\":[2586,2585,2498,2500,2501]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.47,20.18],[-26.69,19.87],[-27.17,19.81],[-27.42,20.18],[-27.34,20.26],[-26.52,20.35],[-26.47,20.18]]]},\"properties\":{\"id\":2505,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2417,2506,2590,2416]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.47,20.18],[-26.1,19.95],[-26.52,19.53],[-26.69,19.87],[-26.47,20.18]]]},\"properties\":{\"id\":2506,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3854,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2505,2417,2591,2590]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.34,20.01],[-25.93,19.45],[-26.07,19.95],[-25.79,20.15],[-25.45,20.18],[-25.37,20.07],[-25.34,20.01]]]},\"properties\":{\"id\":2507,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2508,2592,2591,2417,2418,2419]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.67,20.37],[-24.47,20.26],[-24.95,19.7],[-25.06,19.65],[-25.09,19.65],[-25.34,20.01],[-25.37,20.07],[-24.67,20.37]]]},\"properties\":{\"id\":2508,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2419,2420,2509,2594,2593,2592,2507]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.24,19.7],[-24.27,19.7],[-24.95,19.7],[-24.47,20.26],[-24.47,20.26],[-24.27,20.07],[-24.24,19.7]]]},\"properties\":{\"id\":2509,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2510,2595,2594,2508,2420,2421]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.68,20.21],[-23.46,19.7],[-23.46,19.7],[-23.48,19.67],[-24.24,19.7],[-24.27,20.07],[-23.68,20.21]]]},\"properties\":{\"id\":2510,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2421,2511,2597,2596,2595,2509]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.95,20.23],[-23.37,19.76],[-23.46,19.7],[-23.68,20.21],[-23.62,20.37],[-23.09,20.43],[-22.95,20.23]]]},\"properties\":{\"id\":2511,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8843,\"state\":6,\"province\":74,\"culture\":7,\"religion\":7,\"neighbors\":[2423,2512,2597,2510,2421,2422]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.64,20.12],[-22.53,19.81],[-23.37,19.76],[-22.95,20.23],[-22.64,20.12]]]},\"properties\":{\"id\":2512,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":74,\"culture\":7,\"religion\":7,\"neighbors\":[2423,2513,2597,2511]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.05,20.37],[-22.33,19.73],[-22.36,19.73],[-22.44,19.73],[-22.53,19.81],[-22.64,20.12],[-22.53,20.32],[-22.08,20.4],[-22.05,20.37]]]},\"properties\":{\"id\":2513,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2425,2514,2599,2598,2597,2512,2423,2424]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.68,19.98],[-21.77,19.76],[-22.33,19.73],[-22.05,20.37],[-21.68,19.98]]]},\"properties\":{\"id\":2514,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2425,2515,2599,2513]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.04,19.95],[-21.29,19.42],[-21.66,19.59],[-21.77,19.76],[-21.68,19.98],[-21.49,20.12],[-21.12,20.07],[-21.04,19.95]]]},\"properties\":{\"id\":2515,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":9819,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2516,2601,2600,2599,2514,2425,2426]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.33,20.12],[-20.67,19.79],[-21.04,19.95],[-21.12,20.07],[-20.95,20.37],[-20.56,20.35],[-20.33,20.12]]]},\"properties\":{\"id\":2516,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2428,2517,2601,2515,2426,2427]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.94,19.95],[-19.97,19.65],[-20.64,19.76],[-20.67,19.79],[-20.33,20.12],[-20.02,20.15],[-19.94,19.95]]]},\"properties\":{\"id\":2517,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2518,2603,2602,2601,2516,2428]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.21,20.07],[-19.38,19.79],[-19.94,19.95],[-20.02,20.15],[-19.94,20.29],[-19.32,20.26],[-19.21,20.07]]]},\"properties\":{\"id\":2518,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2430,2519,2603,2517,2428,2429]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,19.59],[-18.79,19.51],[-19.38,19.76],[-19.38,19.79],[-19.21,20.07],[-19.07,20.04],[-18.76,19.59]]]},\"properties\":{\"id\":2519,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2520,2605,2604,2603,2518,2430]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.55,19.7],[-17.72,19.53],[-18.2,19.79],[-18.37,20.01],[-18.37,20.15],[-18.2,20.32],[-18.17,20.32],[-17.55,19.81],[-17.55,19.7]]]},\"properties\":{\"id\":2521,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2523,2607,2606,2605,2520,2431,2432,2522]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.35,20.4],[-17.55,19.81],[-18.17,20.32],[-17.86,20.43],[-17.41,20.43],[-17.35,20.4],[-17.35,20.4]]]},\"properties\":{\"id\":2522,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5889,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2434,2523,2521,2432,2433,2352]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.46,20.15],[-14.65,19.59],[-15.02,19.93],[-15.02,20.01],[-14.54,20.18],[-14.46,20.15]]]},\"properties\":{\"id\":2527,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2439,2528,2612,2526,2438]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.09,20.07],[-14.23,19.56],[-14.62,19.51],[-14.65,19.59],[-14.46,20.15],[-14.17,20.12],[-14.09,20.07]]]},\"properties\":{\"id\":2528,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2440,2614,2613,2612,2527,2439]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.7,20.18],[-13.47,19.67],[-13.7,19.45],[-13.98,20.07],[-13.7,20.18]]]},\"properties\":{\"id\":2529,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2440,2530,2615,2614]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.94,19.76],[-12.97,19.7],[-13.47,19.67],[-13.7,20.18],[-13.61,20.23],[-12.99,19.98],[-12.94,19.76]]]},\"properties\":{\"id\":2530,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2531,2616,2615,2529,2440,2441]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.78,20.21],[-11.9,19.84],[-12.32,19.7],[-12.43,19.79],[-12.26,20.26],[-12.21,20.32],[-12.04,20.35],[-11.78,20.21]]]},\"properties\":{\"id\":2532,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5989,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2444,2533,2617,2616,2531,2442,2443]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.22,19.87],[-11.78,19.56],[-11.9,19.84],[-11.78,20.21],[-11.42,20.23],[-11.22,20.04],[-11.22,19.87]]]},\"properties\":{\"id\":2533,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2534,2618,2617,2532,2444,2445]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.63,20.09],[-10.46,19.65],[-10.83,19.53],[-11.17,19.65],[-11.22,19.87],[-11.22,20.04],[-10.77,20.12],[-10.63,20.09]]]},\"properties\":{\"id\":2534,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2446,2535,2620,2619,2618,2533,2445]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.32,20.37],[-10.24,20.57],[-10.15,20.57],[-9.76,20.15],[-9.9,19.81],[-9.96,19.79],[-9.98,19.79],[-10.32,20.37]]]},\"properties\":{\"id\":2536,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2535,2446,2366,2447,2537,2622,2621]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.61,20.43],[-8.66,19.81],[-9.2,19.93],[-9.25,20.12],[-8.61,20.43]]]},\"properties\":{\"id\":2538,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2449,2539,2623,2537]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.1,20.37],[-8.13,19.98],[-8.63,19.81],[-8.66,19.81],[-8.61,20.43],[-8.58,20.48],[-8.1,20.37]]]},\"properties\":{\"id\":2539,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":10000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2450,2541,2540,2623,2538,2449]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.65,20.21],[-7.59,19.9],[-7.99,19.81],[-8.13,19.98],[-8.1,20.37],[-8.04,20.43],[-7.85,20.37],[-7.65,20.21]]]},\"properties\":{\"id\":2541,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":14166,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2451,2542,2625,2540,2539,2450,2372]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.24,20.12],[-5.71,20.26],[-5.85,19.76],[-6.13,19.79],[-6.24,20.12]]]},\"properties\":{\"id\":2546,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2545,2455,2547,2628]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.25,19.81],[-4.36,19.65],[-4.7,19.7],[-4.73,20.09],[-4.39,20.04],[-4.25,19.81]]]},\"properties\":{\"id\":2550,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2551,2632,2631,2549,2460]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.25,20.35],[-3.77,19.9],[-4.25,19.81],[-4.39,20.04],[-4.25,20.35],[-4.25,20.35]]]},\"properties\":{\"id\":2551,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2459,2461,2632,2550,2460]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.01,20.29],[-3.01,19.87],[-3.32,19.76],[-3.66,19.9],[-3.66,19.9],[-3.63,20.21],[-3.37,20.51],[-3.01,20.29]]]},\"properties\":{\"id\":2552,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2463,2553,2634,2633,2632,2461,2462]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.19,20.29],[-2.14,19.87],[-2.73,19.9],[-2.56,20.29],[-2.22,20.35],[-2.19,20.29]]]},\"properties\":{\"id\":2554,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":8556,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2465,2555,2635,2553,2464]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.49,20.29],[-1.46,20.07],[-1.57,19.81],[-1.6,19.79],[-2.02,19.73],[-2.14,19.87],[-2.19,20.29],[-1.49,20.29]]]},\"properties\":{\"id\":2555,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2465,2466,2556,2637,2636,2635,2554]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.01,20.07],[-0.79,19.7],[-1.07,19.53],[-1.57,19.81],[-1.46,20.07],[-1.01,20.07]]]},\"properties\":{\"id\":2556,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2466,2557,2638,2637,2555]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.51,20.4],[-0.51,19.9],[-0.76,19.7],[-0.79,19.7],[-1.01,20.07],[-0.76,20.37],[-0.51,20.43],[-0.51,20.4]]]},\"properties\":{\"id\":2557,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":5865,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2468,2558,2639,2638,2556,2466,2467]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.53,20.23],[0.73,20.09],[0.73,19.9],[0.59,19.62],[0,19.59],[0,19.65],[0.17,20.18],[0.53,20.23]]]},\"properties\":{\"id\":2559,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2469,2470,2560,2641,2640,2639,2558]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.9,20.12],[1.27,19.9],[1.07,19.53],[0.73,19.9],[0.73,20.09],[0.9,20.12]]]},\"properties\":{\"id\":2560,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":7,\"neighbors\":[2470,2561,2642,2641,2559]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.15,20.46],[1.72,19.95],[1.69,19.84],[1.27,19.9],[0.9,20.12],[1.15,20.46]]]},\"properties\":{\"id\":2561,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":7,\"neighbors\":[2470,2471,2562,2642,2560]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.86,20.23],[2.36,20.18],[2.36,19.67],[2.28,19.59],[1.74,19.67],[1.69,19.84],[1.72,19.95],[1.86,20.23]]]},\"properties\":{\"id\":2562,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":7,\"neighbors\":[2471,2472,2563,2644,2643,2642,2561]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.64,20.35],[2.67,20.29],[2.87,19.76],[2.81,19.7],[2.36,19.67],[2.36,20.18],[2.53,20.32],[2.64,20.35]]]},\"properties\":{\"id\":2563,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2473,2474,2564,2645,2644,2562,2472]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.77,20.04],[3.77,20.04],[3.8,19.9],[3.35,19.56],[3.09,19.81],[3.35,20.21],[3.77,20.04]]]},\"properties\":{\"id\":2565,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2475,2476,2566,2646,2645,2564]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.33,20.23],[4.89,20.46],[4.92,20.4],[4.81,19.93],[4.5,19.87],[4.3,20.21],[4.33,20.23]]]},\"properties\":{\"id\":2567,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2476,2477,2478,2568,2648,2566]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.81,19.93],[4.92,20.4],[5.46,20.35],[5.54,20.18],[5.48,19.79],[5.09,19.7],[4.81,19.93]]]},\"properties\":{\"id\":2568,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16157,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2648,2567,2478,2479,2569,2649]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.54,20.18],[6.3,20.23],[6.3,20.12],[6.22,19.81],[6.05,19.59],[5.65,19.59],[5.48,19.79],[5.54,20.18]]]},\"properties\":{\"id\":2569,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":27000,\"state\":11,\"province\":149,\"culture\":8,\"religion\":11,\"neighbors\":[2568,2479,2571,2570,2651,2650,2649]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.33,20.29],[6.44,20.4],[6.98,20.01],[7.06,19.79],[6.89,19.65],[6.3,20.12],[6.3,20.23],[6.33,20.29]]]},\"properties\":{\"id\":2571,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":149,\"culture\":8,\"religion\":11,\"neighbors\":[2479,2480,2481,2572,2653,2570,2569]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.06,19.79],[6.98,20.01],[7.2,20.57],[7.48,20.37],[7.51,19.95],[7.31,19.79],[7.06,19.79]]]},\"properties\":{\"id\":2572,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":19000,\"state\":11,\"province\":149,\"culture\":8,\"religion\":11,\"neighbors\":[2653,2571,2481,2482,2573,2654]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.76,20.46],[8.02,20.32],[8.16,20.04],[8.04,19.87],[7.51,19.95],[7.48,20.37],[7.76,20.46]]]},\"properties\":{\"id\":2573,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":20289,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2482,2483,2484,2574,2654,2572]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.55,20.15],[8.72,20.07],[8.69,19.7],[8.66,19.59],[8.13,19.39],[8.04,19.87],[8.16,20.04],[8.55,20.15]]]},\"properties\":{\"id\":2574,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":30654,\"state\":11,\"province\":150,\"culture\":8,\"religion\":11,\"neighbors\":[2484,2485,2575,2656,2655,2654,2573]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.31,19.95],[9.87,20.48],[9.98,20.23],[9.84,19.84],[9.37,19.84],[9.31,19.95]]]},\"properties\":{\"id\":2576,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2575,2486,2487,2577,2657]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.84,19.84],[9.98,20.23],[10.43,20.12],[10.49,19.73],[10.49,19.7],[9.96,19.7],[9.84,19.84]]]},\"properties\":{\"id\":2577,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":17000,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2657,2576,2487,2578,2659,2658]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.6,20.37],[10.63,20.37],[11.08,19.87],[10.69,19.7],[10.49,19.73],[10.43,20.12],[10.6,20.37]]]},\"properties\":{\"id\":2578,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":20150,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2487,2488,2579,2660,2659,2577]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.07,19.81],[12.38,20.35],[12.54,20.18],[12.29,19.73],[12.21,19.73],[12.07,19.81]]]},\"properties\":{\"id\":2581,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":8,\"province\":110,\"culture\":8,\"religion\":11,\"neighbors\":[2661,2491,2492,2582,2662]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.54,20.18],[12.68,20.23],[12.94,20.04],[12.71,19.62],[12.29,19.73],[12.54,20.18]]]},\"properties\":{\"id\":2582,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":8,\"province\":110,\"culture\":8,\"religion\":11,\"neighbors\":[2581,2492,2493,2583,2662]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.11,20.12],[13.5,20.09],[13.61,19.84],[13.56,19.76],[12.77,19.62],[12.74,19.62],[12.71,19.62],[12.94,20.04],[13.11,20.12]]]},\"properties\":{\"id\":2583,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":11,\"neighbors\":[2493,2494,2584,2665,2664,2663,2662,2582]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.26,20.29],[14.54,20.23],[14.74,19.98],[14.74,19.95],[14.4,19.65],[14.32,19.65],[14.15,19.79],[14.23,20.29],[14.26,20.29]]]},\"properties\":{\"id\":2585,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":17693,\"state\":8,\"province\":117,\"culture\":8,\"religion\":11,\"neighbors\":[2497,2498,2499,2586,2667,2666,2665,2584]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.74,19.98],[15.08,20.37],[15.27,20.32],[15.33,20.09],[15.05,19.79],[14.74,19.95],[14.74,19.98]]]},\"properties\":{\"id\":2586,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":125,\"culture\":8,\"religion\":8,\"neighbors\":[2585,2499,2501,2503,2587,2667]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.1,19.48],[15.05,19.79],[15.33,20.09],[15.5,19.98],[15.52,19.7],[15.33,19.48],[15.1,19.48]]]},\"properties\":{\"id\":2587,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":125,\"culture\":8,\"religion\":8,\"neighbors\":[2669,2667,2586,2503,2588,2668]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.49,19.39],[-26.69,19.25],[-27.2,19.14],[-27.17,19.81],[-26.69,19.87],[-26.52,19.53],[-26.49,19.39]]]},\"properties\":{\"id\":2590,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2591,2673,2672,2505,2506]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.93,19.34],[-26.02,19.25],[-26.49,19.39],[-26.52,19.53],[-26.1,19.95],[-26.07,19.95],[-25.93,19.45],[-25.93,19.34]]]},\"properties\":{\"id\":2591,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2592,2674,2673,2590,2506,2417,2507]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.09,19.65],[-25.26,19.37],[-25.93,19.34],[-25.93,19.45],[-25.34,20.01],[-25.09,19.65]]]},\"properties\":{\"id\":2592,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2508,2593,2674,2591,2507]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.44,19.17],[-24.95,18.86],[-25.23,19.14],[-25.26,19.37],[-25.09,19.65],[-25.06,19.65],[-24.44,19.17]]]},\"properties\":{\"id\":2593,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2594,2676,2675,2674,2592,2508]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.27,19.23],[-24.36,19.17],[-24.44,19.17],[-25.06,19.65],[-24.95,19.7],[-24.27,19.7],[-24.27,19.23]]]},\"properties\":{\"id\":2594,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6073,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2595,2677,2676,2593,2508,2509]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.48,19.67],[-23.93,19.23],[-24.27,19.23],[-24.27,19.7],[-24.24,19.7],[-23.48,19.67]]]},\"properties\":{\"id\":2595,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":11666,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2510,2596,2677,2594,2509]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.26,19.42],[-23.26,19.39],[-23.6,18.86],[-23.93,19.23],[-23.48,19.67],[-23.46,19.7],[-23.26,19.42]]]},\"properties\":{\"id\":2596,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2597,2679,2678,2677,2595,2510]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.44,19.73],[-22.67,19.37],[-22.75,19.31],[-23.26,19.42],[-23.46,19.7],[-23.46,19.7],[-23.37,19.76],[-22.53,19.81],[-22.44,19.73]]]},\"properties\":{\"id\":2597,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2513,2598,2680,2679,2596,2510,2511,2512]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.97,18.95],[-22.11,18.81],[-22.11,18.81],[-22.67,19.37],[-22.44,19.73],[-22.36,19.73],[-21.97,18.97],[-21.97,18.95]]]},\"properties\":{\"id\":2598,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2682,2681,2764,2680,2597,2513,2599]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.66,19.59],[-21.85,19.14],[-21.97,18.97],[-22.36,19.73],[-22.33,19.73],[-21.77,19.76],[-21.66,19.59]]]},\"properties\":{\"id\":2599,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2515,2600,2682,2598,2513,2514]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.21,19.31],[-21.26,19.17],[-21.85,19.14],[-21.66,19.59],[-21.29,19.42],[-21.21,19.31]]]},\"properties\":{\"id\":2600,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2601,2683,2682,2599,2515]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.64,19.76],[-20.64,19.34],[-21.21,19.31],[-21.29,19.42],[-21.04,19.95],[-20.67,19.79],[-20.64,19.76]]]},\"properties\":{\"id\":2601,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2517,2602,2683,2600,2515,2516]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.97,19.51],[-20.33,19.17],[-20.48,19.17],[-20.64,19.34],[-20.64,19.76],[-19.97,19.65],[-19.97,19.51]]]},\"properties\":{\"id\":2602,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2603,2685,2684,2683,2601,2517]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.38,19.76],[-19.49,19.28],[-19.97,19.51],[-19.97,19.65],[-19.94,19.95],[-19.38,19.79],[-19.38,19.76]]]},\"properties\":{\"id\":2603,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2519,2604,2685,2602,2517,2518]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.38,19.76],[-18.79,19.51],[-18.79,19.42],[-19.46,19.25],[-19.49,19.28],[-19.38,19.76]]]},\"properties\":{\"id\":2604,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2603,2519,2605,2686,2685]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.2,19.79],[-18.37,19.23],[-18.45,19.17],[-18.65,19.23],[-18.79,19.42],[-18.79,19.51],[-18.76,19.59],[-18.37,20.01],[-18.2,19.79]]]},\"properties\":{\"id\":2605,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2521,2606,2688,2687,2686,2604,2519,2520]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.72,19.53],[-17.77,19.37],[-18.37,19.23],[-18.2,19.79],[-17.72,19.53]]]},\"properties\":{\"id\":2606,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2521,2607,2688,2605]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.9,19.23],[-16.96,19.06],[-17.75,19.34],[-17.77,19.37],[-17.72,19.53],[-17.55,19.7],[-17.21,19.65],[-16.9,19.23]]]},\"properties\":{\"id\":2607,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2608,2691,2689,2688,2606,2521,2523]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.3,19.56],[-15.16,19.37],[-15.69,18.97],[-15.75,19.09],[-15.47,19.62],[-15.3,19.56]]]},\"properties\":{\"id\":2611,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2526,2612,2693,2692,2610]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.62,19.51],[-14.71,19.39],[-15.05,19.28],[-15.16,19.37],[-15.3,19.56],[-15.02,19.93],[-14.65,19.59],[-14.62,19.51]]]},\"properties\":{\"id\":2612,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2528,2613,2694,2693,2611,2526,2527]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.95,19.25],[-14.09,19.06],[-14.46,19.06],[-14.71,19.39],[-14.62,19.51],[-14.23,19.56],[-13.95,19.25]]]},\"properties\":{\"id\":2613,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2614,2696,2695,2694,2612,2528]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.7,19.45],[-13.75,19.28],[-13.95,19.25],[-14.23,19.56],[-14.09,20.07],[-13.98,20.07],[-13.7,19.45]]]},\"properties\":{\"id\":2614,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5209,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2529,2615,2696,2613,2528,2440]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.32,19.7],[-12.18,19.11],[-12.18,19.09],[-12.94,19.28],[-12.97,19.7],[-12.94,19.76],[-12.43,19.79],[-12.32,19.7]]]},\"properties\":{\"id\":2616,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2532,2617,2699,2698,2615,2530,2531]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.81,19.17],[-11.81,19.17],[-12.18,19.11],[-12.32,19.7],[-11.9,19.84],[-11.78,19.56],[-11.81,19.17]]]},\"properties\":{\"id\":2617,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2618,2700,2699,2616,2532,2533]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.22,19.87],[-11.17,19.65],[-11.36,19.2],[-11.81,19.17],[-11.78,19.56],[-11.22,19.87]]]},\"properties\":{\"id\":2618,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2533,2534,2619,2700,2617]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.83,19.53],[-10.83,19.09],[-11.19,19.03],[-11.36,19.2],[-11.17,19.65],[-10.83,19.53]]]},\"properties\":{\"id\":2619,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2534,2620,2701,2700,2618]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.29,19.2],[-10.58,18.97],[-10.83,19.09],[-10.83,19.53],[-10.46,19.65],[-10.32,19.56],[-10.29,19.23],[-10.29,19.2]]]},\"properties\":{\"id\":2620,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2703,2702,2701,2619,2534,2535,2621]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.96,19.79],[-9.62,19.28],[-10.29,19.23],[-10.32,19.56],[-9.98,19.79],[-9.96,19.79]]]},\"properties\":{\"id\":2621,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2536,2622,2703,2620,2535]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.9,19.81],[-9.31,19.76],[-9.34,19.28],[-9.45,19.23],[-9.62,19.28],[-9.96,19.79],[-9.9,19.81]]]},\"properties\":{\"id\":2622,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2536,2537,2623,2704,2703,2621]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.58,19.45],[-8.69,19.14],[-8.8,19.14],[-9.34,19.28],[-9.31,19.76],[-9.2,19.93],[-8.66,19.81],[-8.63,19.81],[-8.58,19.45]]]},\"properties\":{\"id\":2623,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2540,2624,2705,2704,2622,2537,2538,2539]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.58,19.45],[-8.07,19.53],[-7.76,19.2],[-8.27,19.03],[-8.49,19],[-8.66,19.11],[-8.69,19.14],[-8.58,19.45]]]},\"properties\":{\"id\":2624,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2623,2540,2625,2707,2706,2789,2705]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.4,19.76],[-7.65,19.17],[-7.76,19.2],[-8.07,19.53],[-7.99,19.81],[-7.59,19.9],[-7.4,19.76]]]},\"properties\":{\"id\":2625,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2542,2626,2707,2624,2540,2541]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.4,19.76],[-7.37,19.76],[-6.97,19.62],[-7.03,19.06],[-7.65,19.14],[-7.65,19.17],[-7.4,19.76]]]},\"properties\":{\"id\":2626,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2625,2542,2543,2627,2708,2707]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.36,19.28],[-6.38,19.25],[-6.89,18.92],[-7.03,19.06],[-6.97,19.62],[-6.92,19.65],[-6.41,19.42],[-6.36,19.28]]]},\"properties\":{\"id\":2627,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2628,2710,2709,2708,2626,2543,2544]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.85,19.76],[-5.77,19.56],[-6.07,19.28],[-6.36,19.28],[-6.41,19.42],[-6.38,19.53],[-6.13,19.79],[-5.85,19.76]]]},\"properties\":{\"id\":2628,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2546,2547,2629,2710,2627,2544,2545]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.51,19.31],[-5.71,18.89],[-6.07,19.28],[-5.77,19.56],[-5.62,19.53],[-5.51,19.31]]]},\"properties\":{\"id\":2629,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3826,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2630,2711,2710,2628,2547]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.95,19.51],[-4.95,19.37],[-5.18,19.25],[-5.51,19.31],[-5.62,19.53],[-5.43,19.67],[-5.03,19.59],[-4.95,19.51]]]},\"properties\":{\"id\":2630,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2549,2631,2712,2711,2629,2547,2548]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.27,19.34],[-4.33,19.28],[-4.78,19.17],[-4.95,19.37],[-4.95,19.51],[-4.7,19.7],[-4.36,19.65],[-4.27,19.34]]]},\"properties\":{\"id\":2631,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2632,2714,2713,2712,2630,2549,2550]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.66,19.9],[-3.88,19.37],[-4.27,19.34],[-4.36,19.65],[-4.25,19.81],[-3.77,19.9],[-3.66,19.9],[-3.66,19.9]]]},\"properties\":{\"id\":2632,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2552,2633,2714,2631,2550,2551,2461]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.6,19.79],[-1.49,19.23],[-1.66,19.11],[-2.14,19.14],[-2.22,19.23],[-2.02,19.73],[-1.6,19.79]]]},\"properties\":{\"id\":2636,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2555,2637,2719,2718,2717,2635]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.07,19.53],[-1.1,19.11],[-1.15,19.09],[-1.49,19.23],[-1.6,19.79],[-1.57,19.81],[-1.07,19.53]]]},\"properties\":{\"id\":2637,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2556,2638,2720,2719,2636,2555]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,19.65],[0,19.59],[-0.03,19.45],[-0.45,19.14],[-0.76,19.7],[-0.51,19.9],[0,19.65]]]},\"properties\":{\"id\":2639,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2558,2559,2640,2721,2638,2557]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.59,19.62],[0.7,19.25],[0.56,19.14],[0.06,19.34],[-0.03,19.45],[0,19.59],[0.59,19.62]]]},\"properties\":{\"id\":2640,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2559,2641,2723,2722,2721,2639]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.69,19.84],[1.74,19.67],[1.52,19.14],[1.21,19.14],[1.1,19.23],[1.07,19.53],[1.27,19.9],[1.69,19.84]]]},\"properties\":{\"id\":2642,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":7,\"neighbors\":[2561,2562,2643,2724,2723,2641,2560]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.36,19.67],[2.81,19.7],[2.9,19.2],[2.36,19.17],[2.28,19.59],[2.36,19.67]]]},\"properties\":{\"id\":2644,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4836,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2562,2563,2645,2726,2643]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.87,19.76],[3.09,19.81],[3.35,19.56],[3.4,19.25],[3.18,19.11],[2.9,19.2],[2.9,19.2],[2.81,19.7],[2.87,19.76]]]},\"properties\":{\"id\":2645,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2563,2564,2565,2646,2728,2727,2726,2644]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.4,19.25],[3.35,19.56],[3.8,19.9],[3.99,19.56],[3.77,19.28],[3.66,19.2],[3.4,19.25]]]},\"properties\":{\"id\":2646,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":7,\"neighbors\":[2728,2645,2565,2566,2647,2729]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.99,19.56],[4.33,19.53],[4.53,19.28],[4.3,18.89],[3.77,19.28],[3.99,19.56]]]},\"properties\":{\"id\":2647,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":7,\"neighbors\":[2646,2566,2648,2730,2729]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.65,19.59],[6.05,19.59],[6.27,19.31],[6.27,19.23],[6.13,19],[5.63,19.34],[5.65,19.59]]]},\"properties\":{\"id\":2650,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":149,\"culture\":7,\"religion\":11,\"neighbors\":[2649,2569,2651,2652,2733,2732]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.05,19.59],[6.22,19.81],[6.69,19.56],[6.27,19.31],[6.05,19.59]]]},\"properties\":{\"id\":2651,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":11,\"province\":149,\"culture\":8,\"religion\":11,\"neighbors\":[2650,2569,2570,2652]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.27,19.31],[6.69,19.56],[6.86,19.59],[6.89,19.48],[6.61,19.03],[6.27,19.23],[6.27,19.31]]]},\"properties\":{\"id\":2652,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":13000,\"state\":11,\"province\":149,\"culture\":8,\"religion\":11,\"neighbors\":[2650,2651,2570,2653,2734,2733]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.06,19.79],[7.31,19.79],[7.65,19.2],[7.54,19.09],[7.12,19.14],[6.89,19.48],[6.86,19.59],[6.89,19.65],[7.06,19.79]]]},\"properties\":{\"id\":2653,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":25000,\"state\":11,\"province\":149,\"culture\":8,\"religion\":11,\"neighbors\":[2571,2572,2654,2736,2735,2734,2652,2570]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.51,19.95],[8.04,19.87],[8.13,19.39],[8.07,19.28],[7.65,19.2],[7.31,19.79],[7.51,19.95]]]},\"properties\":{\"id\":2654,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":27000,\"state\":11,\"province\":150,\"culture\":8,\"religion\":11,\"neighbors\":[2572,2573,2574,2655,2736,2653]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.13,19.39],[8.66,19.59],[9.03,19.23],[8.89,19.11],[8.27,19.03],[8.07,19.28],[8.13,19.39]]]},\"properties\":{\"id\":2655,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":21000,\"state\":11,\"province\":150,\"culture\":8,\"religion\":11,\"neighbors\":[2654,2574,2656,2738,2737,2736]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.37,19.84],[9.84,19.84],[9.96,19.7],[9.84,19.25],[9.28,19.37],[9.31,19.67],[9.37,19.84]]]},\"properties\":{\"id\":2657,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":20000,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2575,2576,2577,2658,2739,2656]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.96,19.7],[10.49,19.7],[10.38,19.09],[9.87,19.23],[9.84,19.25],[9.96,19.7]]]},\"properties\":{\"id\":2658,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":27245,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2657,2577,2659,2740,2739]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.39,19.37],[12.01,19.81],[12.07,19.81],[12.21,19.73],[12.15,19.34],[11.92,18.95],[11.87,18.95],[11.59,19.03],[11.39,19.34],[11.39,19.37]]]},\"properties\":{\"id\":2661,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":47809,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2660,2580,2491,2581,2662,2744,2827,2743,2742]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.29,19.73],[12.71,19.62],[12.74,19.62],[12.68,19.09],[12.6,19.03],[12.15,19.34],[12.21,19.73],[12.29,19.73]]]},\"properties\":{\"id\":2662,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2581,2582,2583,2663,2745,2744,2661]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.74,19.62],[12.77,19.62],[13.42,19.14],[13.42,19.14],[12.99,18.86],[12.68,19.09],[12.74,19.62]]]},\"properties\":{\"id\":2663,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":8,\"neighbors\":[2662,2583,2664,2747,2746,2745]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.42,19.14],[12.77,19.62],[13.56,19.76],[13.53,19.25],[13.42,19.14]]]},\"properties\":{\"id\":2664,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":8,\"neighbors\":[2747,2663,2583,2665]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.32,19.65],[14.4,19.65],[14.99,19.34],[14.99,19.28],[14.77,19.03],[14.26,19.42],[14.32,19.65]]]},\"properties\":{\"id\":2666,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":25768,\"state\":8,\"province\":117,\"culture\":8,\"religion\":11,\"neighbors\":[2665,2585,2667,2669,2749,2748]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.52,19.7],[15.75,19.62],[15.81,19.53],[15.67,19.23],[15.58,19.23],[15.33,19.48],[15.52,19.7]]]},\"properties\":{\"id\":2668,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":125,\"culture\":8,\"religion\":8,\"neighbors\":[2587,2588,2670,2671,2751,2669]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.1,19.48],[15.33,19.48],[15.58,19.23],[15.47,19.09],[15.19,19.09],[14.99,19.28],[14.99,19.34],[15.1,19.48]]]},\"properties\":{\"id\":2669,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":125,\"culture\":8,\"religion\":8,\"neighbors\":[2667,2587,2668,2751,2750,2749,2666]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.69,19.25],[-26.35,18.61],[-27.03,18.5],[-27.25,19.09],[-27.2,19.14],[-26.69,19.25]]]},\"properties\":{\"id\":2672,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2590,2673,2755]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.02,19.25],[-25.96,18.67],[-26.27,18.58],[-26.35,18.61],[-26.69,19.25],[-26.49,19.39],[-26.02,19.25]]]},\"properties\":{\"id\":2673,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2591,2674,2756,2755,2672,2590]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.23,19.14],[-25.76,18.64],[-25.9,18.64],[-25.96,18.67],[-26.02,19.25],[-25.93,19.34],[-25.26,19.37],[-25.23,19.14]]]},\"properties\":{\"id\":2674,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2593,2675,2757,2756,2673,2591,2592]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.23,19.14],[-24.95,18.86],[-24.97,18.72],[-25.31,18.41],[-25.42,18.41],[-25.76,18.64],[-25.23,19.14]]]},\"properties\":{\"id\":2675,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2674,2593,2676,2758,2844,2757]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.27,18.69],[-24.47,18.44],[-24.61,18.44],[-24.97,18.72],[-24.95,18.86],[-24.44,19.17],[-24.36,19.17],[-24.27,18.69]]]},\"properties\":{\"id\":2676,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2677,2760,2759,2758,2675,2593,2594]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.57,18.67],[-23.77,18.55],[-24.27,18.69],[-24.36,19.17],[-24.27,19.23],[-23.93,19.23],[-23.6,18.86],[-23.57,18.67]]]},\"properties\":{\"id\":2677,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2678,2761,2760,2676,2594,2595,2596]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.26,19.39],[-23.06,18.67],[-23.4,18.61],[-23.57,18.67],[-23.6,18.86],[-23.26,19.39]]]},\"properties\":{\"id\":2678,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2596,2679,2762,2761,2677]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.75,19.31],[-22.87,18.67],[-23.06,18.67],[-23.26,19.39],[-23.26,19.42],[-22.75,19.31]]]},\"properties\":{\"id\":2679,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2597,2680,2762,2678,2596]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.11,18.81],[-22.33,18.61],[-22.72,18.55],[-22.87,18.67],[-22.75,19.31],[-22.67,19.37],[-22.11,18.81]]]},\"properties\":{\"id\":2680,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2598,2764,2763,2762,2679,2597]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.26,18.75],[-21.57,18.27],[-22.11,18.81],[-21.97,18.95],[-21.29,18.83],[-21.26,18.75]]]},\"properties\":{\"id\":2681,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2683,2765,2764,2598,2682]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.97,18.95],[-21.97,18.97],[-21.85,19.14],[-21.26,19.17],[-21.29,18.83],[-21.97,18.95]]]},\"properties\":{\"id\":2682,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2681,2598,2599,2600,2683]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.48,19.17],[-20.59,18.97],[-21.07,18.69],[-21.26,18.75],[-21.29,18.83],[-21.26,19.17],[-21.21,19.31],[-20.64,19.34],[-20.48,19.17]]]},\"properties\":{\"id\":2683,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2602,2684,2766,2765,2681,2682,2600,2601]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.46,19.25],[-19.49,18.75],[-19.55,18.69],[-19.74,18.64],[-20.33,19.17],[-19.97,19.51],[-19.49,19.28],[-19.46,19.25]]]},\"properties\":{\"id\":2685,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2604,2686,2769,2768,2684,2602,2603]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.65,19.23],[-18.98,18.67],[-19.49,18.75],[-19.46,19.25],[-18.79,19.42],[-18.65,19.23]]]},\"properties\":{\"id\":2686,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2605,2687,2769,2685,2604]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.45,19.17],[-18.17,18.61],[-18.9,18.55],[-18.98,18.67],[-18.65,19.23],[-18.45,19.17]]]},\"properties\":{\"id\":2687,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":8335,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2605,2688,2770,2769,2686]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.75,19.34],[-17.75,18.67],[-17.92,18.58],[-18.11,18.58],[-18.17,18.61],[-18.45,19.17],[-18.37,19.23],[-17.77,19.37],[-17.75,19.34]]]},\"properties\":{\"id\":2688,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2607,2689,2772,2771,2770,2687,2605,2606]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.96,19.06],[-16.96,19.06],[-17.66,18.64],[-17.75,18.67],[-17.75,19.34],[-16.96,19.06]]]},\"properties\":{\"id\":2689,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2607,2691,2690,2772,2688]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.79,18.78],[-17.18,18.25],[-17.66,18.64],[-16.96,19.06],[-16.79,18.78]]]},\"properties\":{\"id\":2690,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2691,2773,2772,2689]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.34,18.61],[-16.37,18.61],[-16.4,18.61],[-16.79,18.78],[-16.96,19.06],[-16.96,19.06],[-16.9,19.23],[-16.68,19.37],[-16.2,19.2],[-16.34,18.61]]]},\"properties\":{\"id\":2691,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2692,2775,2774,2773,2690,2689,2607,2608,2609]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.69,18.97],[-15.64,18.75],[-16.34,18.61],[-16.2,19.2],[-16.09,19.28],[-15.75,19.09],[-15.69,18.97]]]},\"properties\":{\"id\":2692,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2611,2693,2775,2691,2609,2610]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.05,19.28],[-15.07,18.83],[-15.55,18.67],[-15.64,18.75],[-15.69,18.97],[-15.16,19.37],[-15.05,19.28]]]},\"properties\":{\"id\":2693,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2612,2694,2776,2775,2692,2611]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.46,19.06],[-14.71,18.58],[-15.07,18.83],[-15.05,19.28],[-14.71,19.39],[-14.46,19.06]]]},\"properties\":{\"id\":2694,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2613,2695,2776,2693,2612]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.42,19.06],[-13.7,18.47],[-13.84,18.53],[-14.03,18.75],[-14.09,19.06],[-13.95,19.25],[-13.75,19.28],[-13.42,19.06]]]},\"properties\":{\"id\":2696,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2615,2697,2779,2778,2695,2613,2614]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.05,18.55],[-13.36,18.3],[-13.61,18.36],[-13.7,18.47],[-13.42,19.06],[-13.11,19.06],[-12.99,18.72],[-13.05,18.55]]]},\"properties\":{\"id\":2697,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5919,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2781,2780,2865,2779,2696,2615,2698]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.18,19.09],[-12.35,18.64],[-12.99,18.72],[-13.11,19.06],[-12.94,19.28],[-12.18,19.09]]]},\"properties\":{\"id\":2698,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2616,2699,2781,2697,2615]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.62,18.47],[-11.7,18.41],[-12.32,18.53],[-12.35,18.64],[-12.18,19.09],[-12.18,19.11],[-11.81,19.17],[-11.62,18.47]]]},\"properties\":{\"id\":2699,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":7194,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2700,2783,2782,2781,2698,2616,2617]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.19,19.03],[-11.19,18.61],[-11.33,18.47],[-11.62,18.47],[-11.81,19.17],[-11.81,19.17],[-11.36,19.2],[-11.19,19.03]]]},\"properties\":{\"id\":2700,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2619,2701,2784,2783,2699,2617,2618]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.58,18.97],[-10.6,18.67],[-10.77,18.53],[-11.19,18.61],[-11.19,19.03],[-10.83,19.09],[-10.58,18.97]]]},\"properties\":{\"id\":2701,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2620,2702,2785,2784,2700,2619]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.29,19.2],[-9.96,18.78],[-10.24,18.47],[-10.6,18.67],[-10.58,18.97],[-10.29,19.2]]]},\"properties\":{\"id\":2702,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2620,2703,2786,2785,2701]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.45,19.23],[-9.62,18.75],[-9.96,18.78],[-10.29,19.2],[-10.29,19.23],[-9.62,19.28],[-9.45,19.23]]]},\"properties\":{\"id\":2703,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2622,2704,2786,2702,2620,2621]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.8,19.14],[-9.17,18.67],[-9.62,18.72],[-9.62,18.75],[-9.45,19.23],[-9.34,19.28],[-8.8,19.14]]]},\"properties\":{\"id\":2704,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2623,2705,2787,2786,2703,2622]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.75,18.75],[-9,18.41],[-9.17,18.67],[-8.8,19.14],[-8.69,19.14],[-8.66,19.11],[-8.75,18.75]]]},\"properties\":{\"id\":2705,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2789,2788,2787,2704,2623,2624]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.27,19.03],[-7.99,18.67],[-8.24,18.36],[-8.49,19],[-8.27,19.03]]]},\"properties\":{\"id\":2706,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2624,2707,2790,2789]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.65,19.14],[-7.68,18.81],[-7.99,18.67],[-8.27,19.03],[-7.76,19.2],[-7.65,19.17],[-7.65,19.14]]]},\"properties\":{\"id\":2707,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2626,2708,2790,2706,2624,2625]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.89,18.89],[-7.09,18.64],[-7.54,18.55],[-7.68,18.81],[-7.65,19.14],[-7.03,19.06],[-6.89,18.92],[-6.89,18.89]]]},\"properties\":{\"id\":2708,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2709,2792,2791,2790,2707,2626,2627]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.53,18.5],[-6.89,18.89],[-6.89,18.92],[-6.38,19.25],[-6.22,18.69],[-6.53,18.5]]]},\"properties\":{\"id\":2709,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2793,2792,2708,2627,2710]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.07,19.28],[-5.71,18.89],[-5.68,18.67],[-5.77,18.58],[-6.22,18.69],[-6.38,19.25],[-6.36,19.28],[-6.07,19.28]]]},\"properties\":{\"id\":2710,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2628,2629,2711,2794,2793,2709,2627]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.51,19.31],[-5.18,19.25],[-5.34,18.72],[-5.48,18.64],[-5.68,18.67],[-5.71,18.89],[-5.51,19.31]]]},\"properties\":{\"id\":2711,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3816,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2629,2630,2712,2795,2794,2710]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.78,19.17],[-4.78,18.78],[-5.34,18.72],[-5.18,19.25],[-4.95,19.37],[-4.78,19.17]]]},\"properties\":{\"id\":2712,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2631,2713,2795,2711,2630]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.78,19.17],[-4.33,19.28],[-4.19,18.83],[-4.27,18.72],[-4.67,18.64],[-4.78,18.78],[-4.78,19.17]]]},\"properties\":{\"id\":2713,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2712,2631,2714,2797,2796,2795]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.71,19.06],[-3.85,18.83],[-4.19,18.83],[-4.33,19.28],[-4.27,19.34],[-3.88,19.37],[-3.71,19.06]]]},\"properties\":{\"id\":2714,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2633,2715,2797,2713,2631,2632]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.71,19.06],[-3.23,19.14],[-3.35,18.44],[-3.68,18.58],[-3.85,18.83],[-3.71,19.06]]]},\"properties\":{\"id\":2715,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2714,2633,2716,2798,2797]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.64,19.06],[-2.64,19.03],[-3.26,18.36],[-3.35,18.44],[-3.23,19.14],[-3.21,19.14],[-2.64,19.06]]]},\"properties\":{\"id\":2716,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4794,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2634,2717,2799,2798,2715,2633]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.14,19.14],[-1.94,18.64],[-2.17,18.33],[-2.62,18.86],[-2.64,19.03],[-2.64,19.06],[-2.56,19.14],[-2.22,19.23],[-2.14,19.14]]]},\"properties\":{\"id\":2717,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":9810,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2636,2718,2801,2800,2799,2716,2634,2635]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.06,19.34],[0.14,18.72],[-0.28,18.61],[-0.39,18.67],[-0.48,19.09],[-0.45,19.14],[-0.03,19.45],[0.06,19.34]]]},\"properties\":{\"id\":2721,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2640,2722,2805,2804,2720,2638,2639]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.06,19.34],[0.56,19.14],[0.48,18.78],[0.39,18.69],[0.14,18.72],[0.06,19.34]]]},\"properties\":{\"id\":2722,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2721,2640,2723,2806,2805]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.52,19.14],[1.55,19.11],[1.27,18.27],[1.07,18.36],[0.98,18.72],[1.21,19.14],[1.52,19.14]]]},\"properties\":{\"id\":2724,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2642,2643,2807,2892,2806,2723]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.31,19.03],[2.45,18.67],[2.42,18.64],[1.86,18.55],[1.74,18.97],[2.31,19.03]]]},\"properties\":{\"id\":2725,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2643,2726,2809,2808,2807]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.9,19.2],[2.9,19.2],[2.64,18.58],[2.45,18.67],[2.31,19.03],[2.36,19.17],[2.9,19.2]]]},\"properties\":{\"id\":2726,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2644,2645,2727,2809,2725,2643]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.64,18.58],[2.9,19.2],[3.18,19.11],[3.21,18.75],[2.78,18.47],[2.64,18.58]]]},\"properties\":{\"id\":2727,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2809,2726,2645,2728,2810]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.4,19.25],[3.66,19.2],[3.74,18.69],[3.49,18.55],[3.21,18.75],[3.18,19.11],[3.4,19.25]]]},\"properties\":{\"id\":2728,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2645,2646,2729,2811,2810,2727]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.77,19.28],[4.3,18.89],[4.28,18.86],[3.77,18.69],[3.74,18.69],[3.66,19.2],[3.77,19.28]]]},\"properties\":{\"id\":2729,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":7,\"neighbors\":[2646,2647,2730,2812,2811,2728]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.95,19.11],[5.48,19.09],[5.6,18.72],[5.4,18.39],[4.89,18.58],[4.95,19.11]]]},\"properties\":{\"id\":2731,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":9000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2730,2649,2732,2815,2814]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.6,18.72],[5.48,19.09],[5.63,19.34],[6.13,19],[6.08,18.78],[5.99,18.72],[5.6,18.72]]]},\"properties\":{\"id\":2732,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2815,2731,2649,2650,2733,2816]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.27,19.23],[6.61,19.03],[6.75,18.69],[6.75,18.67],[6.64,18.58],[6.08,18.78],[6.13,19],[6.27,19.23]]]},\"properties\":{\"id\":2733,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":20018,\"state\":11,\"province\":149,\"culture\":8,\"religion\":11,\"neighbors\":[2650,2652,2734,2735,2817,2816,2732]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.75,18.69],[7.12,19.14],[7.54,19.09],[7.51,18.64],[7.03,18.5],[6.75,18.67],[6.75,18.69]]]},\"properties\":{\"id\":2735,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":32048,\"state\":11,\"province\":149,\"culture\":8,\"religion\":11,\"neighbors\":[2733,2734,2653,2736,2818,2817]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.27,19.03],[8.89,19.11],[8.86,18.72],[8.58,18.44],[8.3,18.61],[8.27,19.03]]]},\"properties\":{\"id\":2737,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":29600,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2736,2655,2738,2821,2820]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.03,19.23],[9.2,19.25],[9.45,18.61],[9.42,18.58],[8.86,18.72],[8.89,19.11],[9.03,19.23]]]},\"properties\":{\"id\":2738,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2655,2656,2739,2822,2821,2737]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.28,19.37],[9.84,19.25],[9.87,19.23],[9.68,18.67],[9.45,18.61],[9.2,19.25],[9.28,19.37]]]},\"properties\":{\"id\":2739,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":32723,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2656,2657,2658,2740,2822,2738]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.68,18.67],[9.87,19.23],[10.38,19.09],[10.43,19.03],[10.35,18.81],[10.1,18.58],[9.9,18.55],[9.68,18.67]]]},\"properties\":{\"id\":2740,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":23021,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2822,2739,2658,2659,2741,2824,2823]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.43,19.03],[10.88,19],[11.03,18.67],[10.8,18.33],[10.74,18.33],[10.35,18.81],[10.43,19.03]]]},\"properties\":{\"id\":2741,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":19000,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2740,2659,2742,2825,2910,2824]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11,19.17],[11.39,19.34],[11.59,19.03],[11.28,18.64],[11.03,18.67],[10.88,19],[11,19.17]]]},\"properties\":{\"id\":2742,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":30230,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2659,2660,2661,2743,2825,2741]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.59,19.03],[11.87,18.95],[11.78,18.55],[11.5,18.33],[11.28,18.64],[11.59,19.03]]]},\"properties\":{\"id\":2743,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":25052,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2742,2661,2827,2826,2825]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.6,19.03],[12.68,19.09],[12.99,18.86],[12.97,18.67],[12.4,18.5],[12.29,18.75],[12.6,19.03]]]},\"properties\":{\"id\":2745,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":25379,\"state\":8,\"province\":120,\"culture\":8,\"religion\":11,\"neighbors\":[2744,2662,2663,2746,2828,2827]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.42,19.14],[13.53,19.25],[14.06,19.14],[14.23,18.69],[14.23,18.67],[13.87,18.55],[13.56,18.78],[13.42,19.14],[13.42,19.14]]]},\"properties\":{\"id\":2747,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":21000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":8,\"neighbors\":[2663,2664,2665,2748,2831,2830,2829,2746]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.06,19.14],[14.26,19.42],[14.77,19.03],[14.71,18.89],[14.37,18.69],[14.23,18.69],[14.06,19.14]]]},\"properties\":{\"id\":2748,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":18546,\"state\":8,\"province\":117,\"culture\":8,\"religion\":11,\"neighbors\":[2747,2665,2666,2749,2832,2831]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.58,19.23],[15.67,19.23],[15.67,19.23],[15.78,18.92],[15.5,18.75],[15.47,19.09],[15.58,19.23]]]},\"properties\":{\"id\":2751,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":125,\"culture\":8,\"religion\":8,\"neighbors\":[2669,2668,2671,2752,2754,2750]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.41,17.94],[-26.47,17.83],[-26.55,17.8],[-27.03,18.44],[-27.03,18.5],[-26.35,18.61],[-26.27,18.58],[-26.41,17.94]]]},\"properties\":{\"id\":2755,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":8424,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2756,2842,2926,2841,2672,2673]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.93,18.08],[-26.41,17.94],[-26.27,18.58],[-25.96,18.67],[-25.9,18.64],[-25.93,18.08]]]},\"properties\":{\"id\":2756,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2757,2842,2755,2673,2674]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.42,18.33],[-25.79,17.83],[-25.93,18.08],[-25.9,18.64],[-25.76,18.64],[-25.42,18.41],[-25.42,18.33]]]},\"properties\":{\"id\":2757,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2844,2843,2842,2756,2674,2675]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.61,18.44],[-24.95,18.08],[-25.31,18.41],[-24.97,18.72],[-24.61,18.44]]]},\"properties\":{\"id\":2758,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2676,2759,2844,2675]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.3,18.08],[-24.33,17.94],[-24.92,17.97],[-24.95,18.08],[-24.61,18.44],[-24.47,18.44],[-24.3,18.08]]]},\"properties\":{\"id\":2759,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2760,2846,2845,2844,2758,2676]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.85,18.27],[-24.3,18.08],[-24.47,18.44],[-24.27,18.69],[-23.77,18.55],[-23.85,18.27]]]},\"properties\":{\"id\":2760,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2761,2846,2759,2676,2677]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.4,18.61],[-23.34,18.13],[-23.68,17.97],[-23.85,18.27],[-23.77,18.55],[-23.57,18.67],[-23.4,18.61]]]},\"properties\":{\"id\":2761,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3898,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2678,2762,2847,2846,2760,2677]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.81,18.19],[-23.12,17.97],[-23.34,18.13],[-23.4,18.61],[-23.06,18.67],[-22.87,18.67],[-22.72,18.55],[-22.75,18.3],[-22.81,18.19]]]},\"properties\":{\"id\":2762,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2849,2848,2847,2761,2678,2679,2680,2763]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.13,18.13],[-22.33,17.91],[-22.75,18.3],[-22.72,18.55],[-22.33,18.61],[-22.13,18.13]]]},\"properties\":{\"id\":2763,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2764,2850,2849,2762,2680]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.57,18.25],[-21.66,18.05],[-22.13,18.13],[-22.33,18.61],[-22.11,18.81],[-22.11,18.81],[-21.57,18.27],[-21.57,18.25]]]},\"properties\":{\"id\":2764,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2765,2851,2850,2763,2680,2598,2681]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.81,18.22],[-20.87,18.16],[-21.57,18.25],[-21.57,18.27],[-21.26,18.75],[-21.07,18.69],[-20.81,18.22]]]},\"properties\":{\"id\":2765,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2766,2852,2851,2764,2681,2683]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.45,18.47],[-20.78,18.22],[-20.81,18.22],[-21.07,18.69],[-20.59,18.97],[-20.45,18.47]]]},\"properties\":{\"id\":2766,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2684,2767,2852,2765,2683]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.08,18.19],[-20.42,17.99],[-20.78,18.22],[-20.45,18.47],[-20.05,18.33],[-20.08,18.19]]]},\"properties\":{\"id\":2767,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2854,2853,2852,2766,2684]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.29,17.99],[-19.35,17.85],[-19.52,17.8],[-19.91,18.41],[-19.74,18.64],[-19.55,18.69],[-19.29,17.99]]]},\"properties\":{\"id\":2768,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2769,2855,2939,2854,2684,2685]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.87,18.27],[-19.29,17.99],[-19.55,18.69],[-19.49,18.75],[-18.98,18.67],[-18.9,18.55],[-18.87,18.27]]]},\"properties\":{\"id\":2769,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2770,2855,2768,2685,2686,2687]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.11,18.58],[-18.48,18.02],[-18.53,17.99],[-18.62,17.99],[-18.87,18.27],[-18.9,18.55],[-18.17,18.61],[-18.11,18.58]]]},\"properties\":{\"id\":2770,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2688,2771,2857,2856,2855,2769,2687]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.92,18.58],[-17.89,17.94],[-18.48,18.02],[-18.11,18.58],[-17.92,18.58]]]},\"properties\":{\"id\":2771,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2688,2772,2857,2770]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.18,18.25],[-17.18,18.22],[-17.69,17.83],[-17.8,17.8],[-17.89,17.94],[-17.92,18.58],[-17.75,18.67],[-17.66,18.64],[-17.18,18.25]]]},\"properties\":{\"id\":2772,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2690,2773,2858,2942,2857,2771,2688,2689]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.4,18.61],[-16.9,18.05],[-17.13,18.16],[-17.18,18.22],[-17.18,18.25],[-16.79,18.78],[-16.4,18.61]]]},\"properties\":{\"id\":2773,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2691,2774,2859,2858,2772,2690]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.28,18.05],[-16.68,17.8],[-16.9,18.05],[-16.4,18.61],[-16.37,18.61],[-16.2,18.16],[-16.28,18.05]]]},\"properties\":{\"id\":2774,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2861,2860,2859,2773,2691,2775]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.55,18.67],[-15.52,18.19],[-15.75,18.05],[-16.2,18.16],[-16.37,18.61],[-16.34,18.61],[-15.64,18.75],[-15.55,18.67]]]},\"properties\":{\"id\":2775,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2693,2776,2862,2861,2774,2691,2692]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.05,18.55],[-12.71,18.13],[-12.91,17.8],[-13.22,17.97],[-13.36,18.3],[-13.05,18.55]]]},\"properties\":{\"id\":2780,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2697,2781,2867,2866,2865]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.32,18.53],[-12.38,18.33],[-12.71,18.13],[-13.05,18.55],[-12.99,18.72],[-12.35,18.64],[-12.32,18.53]]]},\"properties\":{\"id\":2781,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2699,2782,2867,2780,2697,2698]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.73,18.27],[-11.92,17.88],[-12.18,18.05],[-12.38,18.33],[-12.32,18.53],[-11.7,18.41],[-11.73,18.27]]]},\"properties\":{\"id\":2782,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2783,2869,2868,2867,2781,2699]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.33,18.47],[-11.19,18.02],[-11.31,17.91],[-11.73,18.27],[-11.7,18.41],[-11.62,18.47],[-11.33,18.47]]]},\"properties\":{\"id\":2783,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2700,2784,2870,2869,2782,2699]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.24,18.47],[-10.15,18.11],[-10.77,18.08],[-10.77,18.53],[-10.6,18.67],[-10.24,18.47]]]},\"properties\":{\"id\":2785,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2702,2786,2871,2784,2701]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.62,18.72],[-9.56,18.27],[-10.15,18.11],[-10.15,18.11],[-10.24,18.47],[-9.96,18.78],[-9.62,18.75],[-9.62,18.72]]]},\"properties\":{\"id\":2786,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2704,2787,2872,2871,2785,2702,2703]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9,18.22],[-9.17,18.08],[-9.37,18.08],[-9.56,18.27],[-9.62,18.72],[-9.17,18.67],[-9,18.41],[-9,18.22]]]},\"properties\":{\"id\":2787,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2788,2874,2873,2872,2786,2704,2705]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.54,18.55],[-7.59,18.16],[-8.1,18.11],[-8.24,18.13],[-8.24,18.36],[-7.99,18.67],[-7.68,18.81],[-7.54,18.55]]]},\"properties\":{\"id\":2790,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2708,2791,2876,2875,2789,2706,2707]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.09,18.64],[-6.97,18.11],[-7.59,18.13],[-7.59,18.16],[-7.54,18.55],[-7.09,18.64]]]},\"properties\":{\"id\":2791,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2708,2792,2877,2876,2790]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.53,18.5],[-6.58,18.08],[-6.83,18.02],[-6.97,18.11],[-7.09,18.64],[-6.89,18.89],[-6.53,18.5]]]},\"properties\":{\"id\":2792,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2709,2793,2878,2877,2791,2708]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.82,18.33],[-6.05,17.99],[-6.58,18.08],[-6.58,18.08],[-6.53,18.5],[-6.22,18.69],[-5.77,18.58],[-5.82,18.33]]]},\"properties\":{\"id\":2793,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2794,2880,2879,2878,2792,2709,2710]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.48,18.64],[-5.18,18.19],[-5.26,17.91],[-5.82,18.33],[-5.77,18.58],[-5.68,18.67],[-5.48,18.64]]]},\"properties\":{\"id\":2794,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2711,2795,2881,2880,2793,2710]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.27,18.72],[-4.08,18.19],[-4.64,18.22],[-4.73,18.3],[-4.67,18.64],[-4.27,18.72]]]},\"properties\":{\"id\":2796,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2713,2797,2882,2881,2795]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.26,18.36],[-3.21,18.22],[-3.37,17.99],[-3.63,17.91],[-4.02,18.08],[-4.05,18.16],[-3.68,18.58],[-3.35,18.44],[-3.26,18.36]]]},\"properties\":{\"id\":2798,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6303,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2716,2799,2885,2884,2883,2882,2797,2715]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.17,18.33],[-1.94,18.64],[-1.57,18.61],[-1.57,18.61],[-1.69,18.02],[-1.74,17.97],[-1.86,17.97],[-2.17,18.3],[-2.17,18.33]]]},\"properties\":{\"id\":2801,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2800,2717,2718,2719,2802,2888,2887,2886]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.12,18.47],[-1.12,18.19],[-1.69,18.02],[-1.57,18.61],[-1.24,18.61],[-1.12,18.47]]]},\"properties\":{\"id\":2802,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2720,2803,2888,2801,2719]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.12,18.47],[-0.51,18.61],[-0.68,17.97],[-0.98,17.94],[-1.12,18.19],[-1.12,18.47]]]},\"properties\":{\"id\":2803,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2802,2720,2804,2889,2888]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.28,18.61],[-0.11,18.13],[-0.45,17.83],[-0.68,17.97],[-0.51,18.61],[-0.39,18.67],[-0.28,18.61]]]},\"properties\":{\"id\":2804,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6826,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2721,2805,2890,2889,2803,2720]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.39,18.69],[0.53,18.19],[0.53,18.16],[-0.03,18.11],[-0.11,18.13],[-0.28,18.61],[0.14,18.72],[0.39,18.69]]]},\"properties\":{\"id\":2805,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2722,2806,2892,2891,2890,2804,2721]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.48,18.78],[0.98,18.72],[1.07,18.36],[0.53,18.19],[0.39,18.69],[0.48,18.78]]]},\"properties\":{\"id\":2806,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2722,2723,2724,2892,2805]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.77,18.22],[1.86,18.55],[2.42,18.64],[2.11,18.02],[1.77,18.22]]]},\"properties\":{\"id\":2808,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":11,\"neighbors\":[2894,2807,2725,2809]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.64,18.58],[2.78,18.47],[2.87,18.13],[2.28,17.85],[2.19,17.88],[2.11,18.02],[2.42,18.64],[2.45,18.67],[2.64,18.58]]]},\"properties\":{\"id\":2809,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":12090,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2726,2727,2810,2895,2978,2894,2808,2725]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.21,18.75],[3.49,18.55],[3.4,18.08],[3.23,17.99],[2.87,18.13],[2.87,18.13],[2.78,18.47],[3.21,18.75]]]},\"properties\":{\"id\":2810,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2727,2728,2811,2897,2896,2895,2809]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.77,18.69],[4.13,18.13],[3.94,17.94],[3.4,18.08],[3.49,18.55],[3.74,18.69],[3.77,18.69]]]},\"properties\":{\"id\":2811,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2729,2812,2898,2897,2810,2728]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.77,18.69],[4.28,18.86],[4.36,18.69],[4.16,18.13],[4.13,18.13],[3.77,18.69]]]},\"properties\":{\"id\":2812,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2811,2729,2730,2813,2898]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.36,18.69],[4.87,18.55],[4.61,18.05],[4.16,18.13],[4.36,18.69]]]},\"properties\":{\"id\":2813,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2812,2730,2814,2898]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.89,18.58],[5.4,18.39],[5.43,18.19],[4.73,17.97],[4.61,18.02],[4.61,18.05],[4.87,18.55],[4.89,18.58]]]},\"properties\":{\"id\":2814,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8044,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2730,2731,2815,2900,2899,2898,2813]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.08,18.78],[6.64,18.58],[6.5,18.27],[6.1,18.16],[5.99,18.72],[6.08,18.78]]]},\"properties\":{\"id\":2816,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2732,2733,2817,2902,2815]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.75,18.67],[7.03,18.5],[7.06,18.16],[6.67,17.97],[6.5,18.27],[6.64,18.58],[6.75,18.67]]]},\"properties\":{\"id\":2817,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2733,2735,2818,2903,2902,2816]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.59,18.55],[8.13,18.53],[7.96,17.91],[7.68,17.99],[7.59,18.08],[7.59,18.55]]]},\"properties\":{\"id\":2819,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2818,2736,2820,2905,2904]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.63,18.36],[8.58,18.44],[8.86,18.72],[9.42,18.58],[9.25,18.11],[9.2,18.08],[8.94,18.13],[8.63,18.36]]]},\"properties\":{\"id\":2821,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":25505,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2906,2820,2737,2738,2822,2908,2907]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.9,18.55],[10.1,18.58],[10.35,18.11],[10.24,17.85],[10.07,17.91],[9.87,18.11],[9.9,18.55]]]},\"properties\":{\"id\":2823,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":20326,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2822,2740,2824,2910,2909,2908]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.1,18.58],[10.35,18.81],[10.74,18.33],[10.35,18.11],[10.1,18.58]]]},\"properties\":{\"id\":2824,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":14000,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2823,2740,2741,2910]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.03,18.67],[11.28,18.64],[11.5,18.33],[11.48,18.08],[11.08,17.97],[10.8,18.33],[11.03,18.67]]]},\"properties\":{\"id\":2825,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":23847,\"state\":8,\"province\":123,\"culture\":8,\"religion\":11,\"neighbors\":[2741,2742,2743,2826,2911,2910]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.5,18.33],[11.78,18.55],[12.23,18.22],[12.09,18.02],[11.62,17.97],[11.48,18.08],[11.5,18.33]]]},\"properties\":{\"id\":2826,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":18000,\"state\":8,\"province\":123,\"culture\":8,\"religion\":11,\"neighbors\":[2825,2743,2827,2913,2912,2911]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.87,18.95],[11.92,18.95],[12.29,18.75],[12.4,18.5],[12.35,18.27],[12.23,18.22],[11.78,18.55],[11.87,18.95]]]},\"properties\":{\"id\":2827,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":18918,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2743,2661,2744,2745,2828,2913,2826]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.4,18.5],[12.97,18.67],[13.16,18.3],[13.19,18.22],[12.88,18.05],[12.71,18.05],[12.35,18.27],[12.4,18.5]]]},\"properties\":{\"id\":2828,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":19000,\"state\":8,\"province\":120,\"culture\":8,\"religion\":11,\"neighbors\":[2827,2745,2746,2829,2915,2914,2913]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.16,18.3],[13.56,18.78],[13.87,18.55],[13.73,18.33],[13.39,18.13],[13.19,18.22],[13.16,18.3]]]},\"properties\":{\"id\":2829,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":8,\"neighbors\":[2828,2746,2747,2830,2916,2915]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.87,18.55],[14.23,18.67],[14.23,17.88],[14.2,17.85],[13.73,18.33],[13.87,18.55]]]},\"properties\":{\"id\":2830,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":8,\"neighbors\":[2829,2747,2831,2917,2916]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.23,17.88],[14.23,18.67],[14.23,18.69],[14.37,18.69],[14.77,18.22],[14.77,18.19],[14.23,17.88]]]},\"properties\":{\"id\":2831,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":15568,\"state\":8,\"province\":122,\"culture\":8,\"religion\":11,\"neighbors\":[2917,2830,2747,2748,2832,2833]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.77,18.22],[14.37,18.69],[14.71,18.89],[15.16,18.58],[14.77,18.22]]]},\"properties\":{\"id\":2832,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":21000,\"state\":8,\"province\":122,\"culture\":8,\"religion\":11,\"neighbors\":[2833,2831,2748,2749]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.77,18.22],[15.16,18.58],[15.22,18.58],[15.3,18.55],[15.41,18.3],[15.36,18.16],[15.1,17.94],[14.91,18.02],[14.77,18.19],[14.77,18.22]]]},\"properties\":{\"id\":2833,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":49001,\"state\":8,\"province\":122,\"culture\":8,\"religion\":11,\"neighbors\":[2831,2832,2749,2750,2834,2837,2919,2918,2917]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.75,18.02],[15.61,18.27],[15.89,18.39],[16.14,18.25],[16.14,17.97],[15.75,18.02]]]},\"properties\":{\"id\":2836,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":122,\"culture\":8,\"religion\":8,\"neighbors\":[2920,2837,2834,2835,2839]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.41,18.3],[15.61,18.27],[15.75,18.02],[15.58,17.83],[15.36,18.16],[15.41,18.3]]]},\"properties\":{\"id\":2837,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":3255,\"state\":8,\"province\":122,\"culture\":8,\"religion\":8,\"neighbors\":[2833,2834,2836,2920,2919]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.55,17.8],[-26.8,17.49],[-27.03,17.41],[-27.51,18.02],[-27.03,18.44],[-26.55,17.8]]]},\"properties\":{\"id\":2841,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2755,2926,2925]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.93,18.08],[-25.79,17.83],[-25.76,17.69],[-25.93,17.52],[-26.47,17.83],[-26.41,17.94],[-25.93,18.08]]]},\"properties\":{\"id\":2842,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2756,2757,2843,2927,2926,2755]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.42,18.33],[-25.34,17.69],[-25.76,17.69],[-25.79,17.83],[-25.42,18.33]]]},\"properties\":{\"id\":2843,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2757,2844,2927,2842]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.92,17.97],[-25.06,17.69],[-25.31,17.69],[-25.34,17.69],[-25.42,18.33],[-25.42,18.41],[-25.31,18.41],[-24.95,18.08],[-24.92,17.97]]]},\"properties\":{\"id\":2844,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2759,2845,2928,2927,2843,2757,2675,2758]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.24,17.74],[-24.41,17.55],[-24.78,17.38],[-25.06,17.69],[-24.92,17.97],[-24.33,17.94],[-24.24,17.74]]]},\"properties\":{\"id\":2845,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2846,2930,2929,2928,2844,2759]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.74,17.83],[-24.02,17.69],[-24.24,17.74],[-24.33,17.94],[-24.3,18.08],[-23.85,18.27],[-23.68,17.97],[-23.74,17.83]]]},\"properties\":{\"id\":2846,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2847,2931,2930,2845,2759,2760,2761]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.12,17.58],[-23.32,17.49],[-23.74,17.83],[-23.68,17.97],[-23.34,18.13],[-23.12,17.97],[-23.12,17.58]]]},\"properties\":{\"id\":2847,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2848,2932,2931,2846,2761,2762]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.81,18.19],[-22.61,17.63],[-22.78,17.46],[-23.12,17.58],[-23.12,17.97],[-22.81,18.19]]]},\"properties\":{\"id\":2848,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2762,2849,2933,2932,2847]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.81,18.19],[-22.75,18.3],[-22.33,17.91],[-22.39,17.72],[-22.61,17.63],[-22.81,18.19]]]},\"properties\":{\"id\":2849,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2848,2762,2763,2850,2933]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.57,17.74],[-21.6,17.72],[-22.19,17.6],[-22.39,17.72],[-22.33,17.91],[-22.13,18.13],[-21.66,18.05],[-21.57,17.74]]]},\"properties\":{\"id\":2850,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2851,2935,2934,2933,2849,2763,2764]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.95,17.69],[-21.07,17.63],[-21.57,17.74],[-21.66,18.05],[-21.57,18.25],[-20.87,18.16],[-20.95,17.69]]]},\"properties\":{\"id\":2851,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2852,2936,2935,2850,2764,2765]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.42,17.99],[-20.48,17.55],[-20.95,17.69],[-20.87,18.16],[-20.81,18.22],[-20.78,18.22],[-20.42,17.99]]]},\"properties\":{\"id\":2852,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2767,2853,2936,2851,2765,2766]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.02,17.66],[-20.45,17.49],[-20.48,17.55],[-20.42,17.99],[-20.08,18.19],[-20.02,17.66]]]},\"properties\":{\"id\":2853,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2854,2937,2936,2852,2767]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.52,17.8],[-19.77,17.58],[-20.02,17.66],[-20.08,18.19],[-20.05,18.33],[-19.91,18.41],[-19.52,17.8]]]},\"properties\":{\"id\":2854,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2768,2939,2937,2853,2767,2684]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.87,18.27],[-18.62,17.99],[-18.84,17.6],[-18.96,17.55],[-19.35,17.85],[-19.29,17.99],[-18.87,18.27]]]},\"properties\":{\"id\":2855,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2769,2770,2856,2940,2939,2768]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.2,17.58],[-18.37,17.38],[-18.84,17.6],[-18.62,17.99],[-18.53,17.99],[-18.2,17.58]]]},\"properties\":{\"id\":2856,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2857,2941,2940,2855,2770]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.13,18.16],[-17.27,17.58],[-17.69,17.83],[-17.18,18.22],[-17.13,18.16]]]},\"properties\":{\"id\":2858,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2773,2859,2942,2772]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.68,17.69],[-16.93,17.46],[-17.21,17.49],[-17.27,17.58],[-17.13,18.16],[-16.9,18.05],[-16.68,17.8],[-16.68,17.69]]]},\"properties\":{\"id\":2859,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2860,2944,2943,2942,2858,2773,2774]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.81,17.8],[-16.12,17.58],[-16.28,18.05],[-16.2,18.16],[-15.75,18.05],[-15.81,17.8]]]},\"properties\":{\"id\":2861,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2862,2945,2860,2774,2775]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.31,17.91],[-11.48,17.66],[-11.67,17.58],[-11.84,17.66],[-11.92,17.88],[-11.73,18.27],[-11.31,17.91]]]},\"properties\":{\"id\":2869,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2783,2870,2954,2952,2868,2782]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.03,17.74],[-9.17,17.41],[-9.62,17.38],[-9.73,17.49],[-9.37,18.08],[-9.17,18.08],[-9.03,17.74]]]},\"properties\":{\"id\":2873,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2874,2958,2957,2956,2872,2787]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.3,18.13],[-8.47,17.74],[-8.58,17.6],[-9.03,17.74],[-9.17,18.08],[-9,18.22],[-8.52,18.19],[-8.3,18.13]]]},\"properties\":{\"id\":2874,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2789,2875,2959,2958,2873,2787,2788]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.82,18.33],[-5.26,17.91],[-5.29,17.58],[-5.34,17.55],[-5.82,17.58],[-6.05,17.99],[-5.82,18.33]]]},\"properties\":{\"id\":2880,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16616,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2793,2794,2881,2965,2964,2879]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.64,18.22],[-4.64,17.83],[-5.12,17.58],[-5.29,17.58],[-5.26,17.91],[-5.18,18.19],[-4.73,18.3],[-4.64,18.22]]]},\"properties\":{\"id\":2881,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2796,2882,2966,2965,2880,2794,2795]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.05,18.16],[-4.02,18.08],[-4.3,17.63],[-4.64,17.83],[-4.64,18.22],[-4.08,18.19],[-4.05,18.16]]]},\"properties\":{\"id\":2882,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2797,2798,2883,2966,2881,2796]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.63,17.91],[-3.77,17.44],[-3.88,17.35],[-4.27,17.55],[-4.3,17.63],[-4.02,18.08],[-3.63,17.91]]]},\"properties\":{\"id\":2883,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":9357,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2798,2884,2968,2967,2966,2882]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.37,17.99],[-3.12,17.46],[-3.26,17.32],[-3.77,17.44],[-3.63,17.91],[-3.37,17.99]]]},\"properties\":{\"id\":2884,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2798,2885,2969,2968,2883]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.64,18.08],[-2.59,17.74],[-2.87,17.44],[-3.12,17.46],[-3.37,17.99],[-3.21,18.22],[-2.78,18.16],[-2.64,18.08]]]},\"properties\":{\"id\":2885,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2800,2886,2970,2969,2884,2798,2799]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.17,18.3],[-1.86,17.97],[-2.14,17.52],[-2.59,17.74],[-2.64,18.08],[-2.17,18.3]]]},\"properties\":{\"id\":2886,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2800,2801,2887,2970,2885]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.74,17.97],[-1.46,17.66],[-1.55,17.35],[-2.05,17.3],[-2.14,17.52],[-1.86,17.97],[-1.74,17.97]]]},\"properties\":{\"id\":2887,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2801,2888,2972,2971,2970,2886]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.69,18.02],[-1.12,18.19],[-0.98,17.94],[-1.07,17.72],[-1.46,17.66],[-1.74,17.97],[-1.69,18.02]]]},\"properties\":{\"id\":2888,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2801,2802,2803,2889,2972,2887]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.68,17.97],[-0.45,17.83],[-0.39,17.6],[-0.98,17.49],[-1.07,17.72],[-0.98,17.94],[-0.68,17.97]]]},\"properties\":{\"id\":2889,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2803,2804,2890,2973,2972,2888]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.11,18.13],[-0.03,18.11],[0.08,17.63],[-0.34,17.49],[-0.39,17.6],[-0.45,17.83],[-0.11,18.13]]]},\"properties\":{\"id\":2890,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2804,2805,2891,2974,2973,2889]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.53,18.16],[0.65,17.66],[0.62,17.63],[0.25,17.58],[0.08,17.63],[-0.03,18.11],[0.53,18.16]]]},\"properties\":{\"id\":2891,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2805,2892,2976,2975,2974,2890]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.46,18.13],[1.77,17.49],[1.74,17.44],[1.29,17.55],[1.18,17.72],[1.41,18.13],[1.46,18.13]]]},\"properties\":{\"id\":2893,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":11,\"neighbors\":[2807,2894,2978,2977,2976,2892]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.77,18.22],[2.11,18.02],[2.19,17.88],[1.77,17.49],[1.46,18.13],[1.77,18.22]]]},\"properties\":{\"id\":2894,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":18000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":11,\"neighbors\":[2807,2808,2809,2978,2893]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.87,18.13],[2.87,18.13],[2.76,17.3],[2.7,17.24],[2.45,17.44],[2.28,17.85],[2.87,18.13]]]},\"properties\":{\"id\":2895,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2809,2810,2896,2980,2979,2978]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.4,18.08],[3.94,17.94],[3.97,17.83],[3.6,17.32],[3.46,17.35],[3.23,17.6],[3.23,17.99],[3.4,18.08]]]},\"properties\":{\"id\":2897,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2810,2811,2898,2982,2981,2980,2896]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.16,18.13],[4.61,18.05],[4.61,18.02],[4.47,17.44],[4.3,17.38],[3.97,17.83],[3.94,17.94],[4.13,18.13],[4.16,18.13]]]},\"properties\":{\"id\":2898,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2812,2813,2814,2899,2983,2982,2897,2811]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.63,18.36],[8.94,18.13],[8.55,17.69],[8.27,17.63],[8.16,17.69],[8.16,17.72],[8.63,18.36]]]},\"properties\":{\"id\":2906,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2820,2821,2907,2990,2989,2905]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.94,18.13],[9.2,18.08],[9.25,17.83],[8.92,17.49],[8.55,17.69],[8.94,18.13]]]},\"properties\":{\"id\":2907,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":17790,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2906,2821,2908,2991,2990]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.25,18.11],[9.87,18.11],[10.07,17.91],[9.45,17.66],[9.25,17.83],[9.2,18.08],[9.25,18.11]]]},\"properties\":{\"id\":2908,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2821,2822,2823,2909,2991,2907]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.45,17.66],[10.07,17.91],[10.24,17.85],[10.27,17.77],[10.13,17.49],[9.62,17.44],[9.51,17.49],[9.45,17.66]]]},\"properties\":{\"id\":2909,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":15000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2991,2908,2823,2910,2994,2993,2992]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.08,17.97],[11.48,18.08],[11.62,17.97],[11.64,17.49],[11.33,17.32],[11,17.77],[11.08,17.97]]]},\"properties\":{\"id\":2911,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":24012,\"state\":8,\"province\":123,\"culture\":8,\"religion\":11,\"neighbors\":[2910,2825,2826,2912,2996,2995]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.62,17.97],[12.09,18.02],[12.21,17.66],[11.9,17.38],[11.64,17.49],[11.62,17.97]]]},\"properties\":{\"id\":2912,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":21629,\"state\":8,\"province\":123,\"culture\":8,\"religion\":11,\"neighbors\":[2911,2826,2913,2997,2996]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.23,18.22],[12.35,18.27],[12.71,18.05],[12.4,17.58],[12.21,17.66],[12.09,18.02],[12.23,18.22]]]},\"properties\":{\"id\":2913,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":123,\"culture\":8,\"religion\":11,\"neighbors\":[2826,2827,2828,2914,2997,2912]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.71,18.05],[12.88,18.05],[12.94,17.52],[12.49,17.49],[12.4,17.58],[12.71,18.05]]]},\"properties\":{\"id\":2914,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":11000,\"state\":8,\"province\":116,\"culture\":8,\"religion\":8,\"neighbors\":[2913,2828,2915,2998,2997]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.19,18.22],[13.39,18.13],[13.58,17.63],[13.42,17.41],[13.05,17.41],[12.94,17.52],[12.88,18.05],[13.19,18.22]]]},\"properties\":{\"id\":2915,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":39800,\"state\":8,\"province\":116,\"culture\":8,\"religion\":11,\"neighbors\":[2828,2829,2916,3000,2999,2998,2914]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.39,18.13],[13.73,18.33],[14.2,17.85],[14.17,17.66],[13.58,17.63],[13.39,18.13]]]},\"properties\":{\"id\":2916,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":20000,\"state\":8,\"province\":116,\"culture\":8,\"religion\":8,\"neighbors\":[2915,2829,2830,2917,3000]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.23,17.88],[14.77,18.19],[14.91,18.02],[14.65,17.55],[14.17,17.63],[14.17,17.66],[14.2,17.85],[14.23,17.88]]]},\"properties\":{\"id\":2917,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":18000,\"state\":8,\"province\":122,\"culture\":8,\"religion\":8,\"neighbors\":[2830,2831,2833,2918,3001,3000,2916]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.1,17.94],[15.36,18.16],[15.58,17.83],[15.58,17.74],[15.3,17.6],[15.22,17.66],[15.1,17.94]]]},\"properties\":{\"id\":2919,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":122,\"culture\":8,\"religion\":8,\"neighbors\":[2918,2833,2837,2920,3003,3002]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.58,17.83],[15.75,18.02],[16.14,17.97],[16.2,17.88],[16.17,17.69],[15.78,17.63],[15.58,17.74],[15.58,17.83]]]},\"properties\":{\"id\":2920,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":122,\"culture\":8,\"religion\":8,\"neighbors\":[2919,2837,2836,2839,2921,3004,3003]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.35,17.13],[-26.49,16.85],[-27.17,17.1],[-27.03,17.41],[-26.8,17.49],[-26.35,17.13]]]},\"properties\":{\"id\":2925,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2926,3014,3013,2841]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.93,17.52],[-25.96,17.21],[-26.35,17.13],[-26.8,17.49],[-26.55,17.8],[-26.47,17.83],[-25.93,17.52]]]},\"properties\":{\"id\":2926,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2842,2927,3014,2925,2841,2755]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.31,17.69],[-25.4,17.1],[-25.71,16.96],[-25.76,16.96],[-25.96,17.21],[-25.93,17.52],[-25.76,17.69],[-25.34,17.69],[-25.31,17.69]]]},\"properties\":{\"id\":2927,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2844,2928,3016,3015,3014,2926,2842,2843]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.19,17.1],[-24.36,17.02],[-24.81,17.13],[-24.78,17.38],[-24.41,17.55],[-24.19,17.1]]]},\"properties\":{\"id\":2929,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2930,3018,3017,2928,2845]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.02,17.69],[-23.82,17.07],[-24.19,17.1],[-24.41,17.55],[-24.24,17.74],[-24.02,17.69]]]},\"properties\":{\"id\":2930,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2846,2931,3018,2929,2845]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.32,17.49],[-23.57,17.04],[-23.77,17.02],[-23.82,17.07],[-24.02,17.69],[-23.74,17.83],[-23.32,17.49]]]},\"properties\":{\"id\":2931,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2847,2932,3019,3018,2930,2846]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.7,17.04],[-22.81,16.96],[-23.37,16.9],[-23.57,17.04],[-23.32,17.49],[-23.12,17.58],[-22.78,17.46],[-22.7,17.04]]]},\"properties\":{\"id\":2932,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2933,3021,3020,3019,2931,2847,2848]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.19,17.6],[-22.11,17.07],[-22.25,16.88],[-22.7,17.04],[-22.78,17.46],[-22.61,17.63],[-22.39,17.72],[-22.19,17.6]]]},\"properties\":{\"id\":2933,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2850,2934,3022,3021,2932,2848,2849]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.68,17.24],[-22.11,17.07],[-22.19,17.6],[-21.6,17.72],[-21.68,17.24]]]},\"properties\":{\"id\":2934,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2935,3022,2933,2850]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.07,17.63],[-21.09,17.02],[-21.43,16.99],[-21.68,17.24],[-21.6,17.72],[-21.57,17.74],[-21.07,17.63]]]},\"properties\":{\"id\":2935,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":11430,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2851,2936,3023,3022,2934,2850]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.45,17.49],[-20.42,17.16],[-20.98,16.9],[-21.09,17.02],[-21.07,17.63],[-20.95,17.69],[-20.48,17.55],[-20.45,17.49]]]},\"properties\":{\"id\":2936,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2853,2937,3024,3023,2935,2851,2852]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.77,17.55],[-19.86,17.1],[-20.08,16.93],[-20.42,17.13],[-20.42,17.16],[-20.45,17.49],[-20.02,17.66],[-19.77,17.58],[-19.77,17.55]]]},\"properties\":{\"id\":2937,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2939,2938,3026,3025,3024,2936,2853,2854]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.96,17.55],[-19.1,17.07],[-19.77,17.55],[-19.77,17.58],[-19.52,17.8],[-19.35,17.85],[-18.96,17.55]]]},\"properties\":{\"id\":2939,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2855,2940,2938,2937,2854,2768]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.21,17.49],[-17.52,17.1],[-17.66,17.07],[-17.86,17.69],[-17.8,17.8],[-17.69,17.83],[-17.27,17.58],[-17.21,17.49]]]},\"properties\":{\"id\":2942,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2859,2943,3030,2941,2857,2772,2858]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.77,17.35],[-10.77,17.3],[-11.31,17.1],[-11.64,17.44],[-11.67,17.58],[-11.48,17.66],[-10.77,17.35]]]},\"properties\":{\"id\":2954,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2870,2955,3042,2953,2952,2869]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,17.63],[-4.27,17.55],[-4.56,17.18],[-5.12,17.58],[-4.64,17.83],[-4.3,17.63]]]},\"properties\":{\"id\":2966,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2882,2883,2967,2965,2881]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.88,17.35],[-3.88,17.02],[-4.05,16.9],[-4.56,17.1],[-4.56,17.18],[-4.27,17.55],[-3.88,17.35]]]},\"properties\":{\"id\":2967,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2883,2968,3055,3054,2965,2966]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.14,17.52],[-2.05,17.3],[-2.08,17.24],[-2.67,17.07],[-2.87,17.44],[-2.59,17.74],[-2.14,17.52]]]},\"properties\":{\"id\":2970,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5875,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2886,2887,2971,3058,2969,2885]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.98,17.49],[-1.01,17.13],[-1.01,17.13],[-1.41,17.21],[-1.55,17.35],[-1.46,17.66],[-1.07,17.72],[-0.98,17.49]]]},\"properties\":{\"id\":2972,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4765,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2889,2973,3061,3060,2971,2887,2888]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.98,17.49],[-0.39,17.6],[-0.34,17.49],[-0.34,17.04],[-0.62,16.96],[-1.01,17.13],[-0.98,17.49]]]},\"properties\":{\"id\":2973,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2972,2889,2890,2974,3062,3061]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.08,17.63],[0.25,17.58],[-0.03,16.96],[-0.08,16.9],[-0.34,17.04],[-0.34,17.49],[0.08,17.63]]]},\"properties\":{\"id\":2974,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2890,2891,2975,3063,3062,2973]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.03,16.96],[0.25,17.58],[0.62,17.63],[0.65,17.35],[0.39,17.02],[-0.03,16.96]]]},\"properties\":{\"id\":2975,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":8103,\"state\":9,\"province\":130,\"culture\":7,\"religion\":11,\"neighbors\":[3063,2974,2891,2976,3064]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.18,17.72],[1.29,17.55],[1.18,17.07],[1.04,17.04],[0.65,17.35],[0.62,17.63],[0.65,17.66],[1.18,17.72]]]},\"properties\":{\"id\":2976,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":11,\"neighbors\":[2892,2893,2977,3065,3064,2975,2891]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.29,17.55],[1.74,17.44],[1.83,17.02],[1.83,16.96],[1.69,16.85],[1.18,17.07],[1.29,17.55]]]},\"properties\":{\"id\":2977,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":130,\"culture\":8,\"religion\":8,\"neighbors\":[2976,2893,2978,2979,3066,3065]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.28,17.85],[2.45,17.44],[1.83,17.02],[1.74,17.44],[1.77,17.49],[2.19,17.88],[2.28,17.85]]]},\"properties\":{\"id\":2978,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2809,2895,2979,2977,2893,2894]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.27,17.63],[8.55,17.69],[8.92,17.49],[8.89,17.04],[8.8,17.04],[8.49,17.07],[8.27,17.63]]]},\"properties\":{\"id\":2990,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":18000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2989,2906,2907,2991,3079,3078]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.92,17.49],[9.25,17.83],[9.45,17.66],[9.51,17.49],[9.14,16.93],[8.89,17.04],[8.92,17.49]]]},\"properties\":{\"id\":2991,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":21000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2990,2907,2908,2909,2992,3079]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.51,17.49],[9.62,17.44],[9.76,17.1],[9.68,16.93],[9.28,16.74],[9.14,16.93],[9.51,17.49]]]},\"properties\":{\"id\":2992,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2991,2909,2993,3081,3080,3079]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.76,17.1],[9.62,17.44],[10.13,17.49],[10.18,17.13],[9.76,17.1]]]},\"properties\":{\"id\":2993,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11696,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[3081,2992,2909,2994]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.13,17.49],[10.27,17.77],[10.69,17.63],[10.72,17.24],[10.29,17.02],[10.18,17.13],[10.13,17.49]]]},\"properties\":{\"id\":2994,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":21000,\"state\":8,\"province\":113,\"culture\":8,\"religion\":11,\"neighbors\":[2993,2909,2910,2995,3082,3081]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.69,17.63],[11,17.77],[11.33,17.32],[11.33,17.3],[10.97,17.04],[10.72,17.24],[10.69,17.63]]]},\"properties\":{\"id\":2995,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":19000,\"state\":8,\"province\":113,\"culture\":8,\"religion\":11,\"neighbors\":[2994,2910,2911,2996,3083,3082]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.9,17.38],[12.21,17.66],[12.4,17.58],[12.49,17.49],[12.43,17.07],[12.12,16.96],[11.98,17.16],[11.9,17.38]]]},\"properties\":{\"id\":2997,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":19931,\"state\":8,\"province\":123,\"culture\":8,\"religion\":11,\"neighbors\":[2996,2912,2913,2914,2998,3085,3084]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.05,17.41],[13.42,17.41],[13.47,17.18],[13.16,16.74],[12.8,16.96],[13.05,17.41]]]},\"properties\":{\"id\":2999,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":116,\"culture\":8,\"religion\":8,\"neighbors\":[2998,2915,3000,3087,3086]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.58,17.63],[14.17,17.66],[14.17,17.63],[14.2,17.07],[14.15,16.99],[13.7,16.96],[13.47,17.18],[13.42,17.41],[13.58,17.63]]]},\"properties\":{\"id\":3000,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":35722,\"state\":8,\"province\":116,\"culture\":8,\"religion\":11,\"neighbors\":[2915,2916,2917,3001,3089,3088,3087,2999]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.3,17.6],[15.58,17.74],[15.78,17.63],[15.61,17.18],[15.38,17.24],[15.3,17.6]]]},\"properties\":{\"id\":3003,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":10534,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3002,2919,2920,3004,3091]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.78,17.63],[16.17,17.69],[16.28,17.44],[16.28,17.32],[15.67,17.13],[15.61,17.18],[15.78,17.63]]]},\"properties\":{\"id\":3004,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3003,2920,2921,3006,3005,3091]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.67,17.13],[16.28,17.32],[16.37,17.1],[16.37,16.9],[15.75,16.71],[15.67,17.13]]]},\"properties\":{\"id\":3005,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3091,3004,3006,3007,3092]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.47,16.68],[-27.08,16.46],[-27.31,16.93],[-27.17,17.1],[-26.49,16.85],[-26.47,16.68]]]},\"properties\":{\"id\":3013,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[3014,3101,2925]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.76,16.96],[-25.93,16.48],[-26.18,16.43],[-26.47,16.68],[-26.49,16.85],[-26.35,17.13],[-25.96,17.21],[-25.76,16.96]]]},\"properties\":{\"id\":3014,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2927,3015,3102,3101,3013,2925,2926]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.89,16.6],[-24.95,16.51],[-25.12,16.48],[-25.71,16.96],[-25.4,17.1],[-24.89,17.02],[-24.89,16.6]]]},\"properties\":{\"id\":3016,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[3017,3105,3104,3015,2927,2928]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.77,17.02],[-23.96,16.54],[-24.38,16.57],[-24.36,17.02],[-24.19,17.1],[-23.82,17.07],[-23.77,17.02]]]},\"properties\":{\"id\":3018,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2931,3019,3106,3017,2929,2930]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.32,16.57],[-23.82,16.2],[-23.96,16.54],[-23.77,17.02],[-23.57,17.04],[-23.37,16.9],[-23.32,16.57]]]},\"properties\":{\"id\":3019,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[3020,3107,3106,3018,2931,2932]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.13,16.54],[-22.58,16.32],[-22.87,16.48],[-22.81,16.96],[-22.7,17.04],[-22.25,16.88],[-22.11,16.57],[-22.13,16.54]]]},\"properties\":{\"id\":3021,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[3110,3109,3108,3020,2932,2933,3022]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.43,16.99],[-21.66,16.6],[-22.11,16.57],[-22.25,16.88],[-22.11,17.07],[-21.68,17.24],[-21.43,16.99]]]},\"properties\":{\"id\":3022,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2935,3023,3110,3021,2933,2934]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.92,16.57],[-20.98,16.46],[-21.43,16.37],[-21.66,16.6],[-21.43,16.99],[-21.09,17.02],[-20.98,16.9],[-20.92,16.57]]]},\"properties\":{\"id\":3023,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5822,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3024,3112,3111,3110,3022,2935,2936]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.42,17.16],[-20.42,17.13],[-20.53,16.51],[-20.92,16.57],[-20.98,16.9],[-20.42,17.16]]]},\"properties\":{\"id\":3024,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[2936,2937,3025,3112,3023]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.05,16.65],[-20.48,16.46],[-20.53,16.51],[-20.42,17.13],[-20.08,16.93],[-20.05,16.65]]]},\"properties\":{\"id\":3025,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3026,3113,3112,3024,2937]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.05,16.9],[-3.88,17.02],[-3.63,16.85],[-3.6,16.65],[-3.99,16.4],[-4.22,16.4],[-4.05,16.9]]]},\"properties\":{\"id\":3055,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3054,2967,2968,3056,3144,3143]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.01,16.76],[-3.07,16.51],[-3.32,16.29],[-3.6,16.65],[-3.63,16.85],[-3.29,16.99],[-3.01,16.76]]]},\"properties\":{\"id\":3056,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2969,3057,3145,3144,3055,2968]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.08,17.24],[-1.94,16.76],[-2.08,16.51],[-2.14,16.48],[-2.39,16.57],[-2.73,16.88],[-2.67,17.07],[-2.08,17.24]]]},\"properties\":{\"id\":3058,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":13176,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2970,2971,3059,3147,3146,3057,2969]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.66,16.79],[-1.32,16.62],[-1.27,16.43],[-1.43,16.23],[-2.08,16.51],[-1.94,16.76],[-1.66,16.79]]]},\"properties\":{\"id\":3059,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2971,3060,3061,3148,3147,3058]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.66,16.79],[-1.41,17.21],[-1.01,17.13],[-1.32,16.62],[-1.66,16.79]]]},\"properties\":{\"id\":3060,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3059,2971,2972,3061]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.01,17.13],[-0.62,16.96],[-0.73,16.48],[-1.01,16.4],[-1.27,16.43],[-1.32,16.62],[-1.01,17.13],[-1.01,17.13]]]},\"properties\":{\"id\":3061,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2972,2973,3062,3149,3148,3059,3060]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.08,16.9],[0.06,16.34],[0.06,16.34],[-0.62,16.34],[-0.73,16.48],[-0.62,16.96],[-0.34,17.04],[-0.08,16.9]]]},\"properties\":{\"id\":3062,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2974,3063,3151,3150,3149,3061,2973]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.03,16.96],[0.39,17.02],[0.67,16.68],[0.06,16.34],[-0.08,16.9],[-0.03,16.96]]]},\"properties\":{\"id\":3063,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6977,\"state\":9,\"province\":128,\"culture\":7,\"religion\":11,\"neighbors\":[2974,2975,3064,3151,3062]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.39,17.02],[0.65,17.35],[1.04,17.04],[0.87,16.62],[0.67,16.68],[0.39,17.02]]]},\"properties\":{\"id\":3064,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3063,2975,2976,3065,3151]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.28,16.74],[9.68,16.93],[10.07,16.65],[9.79,16.48],[9.28,16.71],[9.28,16.74],[9.28,16.74]]]},\"properties\":{\"id\":3080,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":11000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[3079,2992,3081,3169,3168,3167]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.76,17.1],[10.18,17.13],[10.29,17.02],[10.29,16.68],[10.07,16.65],[9.68,16.93],[9.76,17.1]]]},\"properties\":{\"id\":3081,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":14000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2992,2993,2994,3082,3169,3080]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.97,17.04],[11.33,17.3],[11.53,16.99],[11.5,16.65],[11.33,16.51],[10.97,16.68],[10.97,17.04]]]},\"properties\":{\"id\":3083,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":20000,\"state\":8,\"province\":113,\"culture\":8,\"religion\":8,\"neighbors\":[3082,2995,2996,3084,3172,3171]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.53,16.99],[11.98,17.16],[12.12,16.96],[12.04,16.62],[11.5,16.65],[11.53,16.99]]]},\"properties\":{\"id\":3084,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":16800,\"state\":8,\"province\":113,\"culture\":8,\"religion\":11,\"neighbors\":[3083,2996,2997,3085,3172]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.16,16.74],[13.47,17.18],[13.7,16.96],[13.61,16.62],[13.42,16.51],[13.16,16.68],[13.16,16.74]]]},\"properties\":{\"id\":3087,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":20999,\"state\":8,\"province\":116,\"culture\":8,\"religion\":11,\"neighbors\":[3086,2999,3000,3088,3176,3175]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.91,17.04],[15.05,16.99],[15.3,16.4],[15.24,16.32],[14.68,16.37],[14.57,16.54],[14.82,17.02],[14.91,17.04]]]},\"properties\":{\"id\":3090,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":25871,\"state\":8,\"province\":121,\"culture\":8,\"religion\":11,\"neighbors\":[3001,3002,3091,3179,3178,3177,3089]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.18,16.43],[-26.47,16.04],[-27.08,16.12],[-27.08,16.46],[-26.47,16.68],[-26.18,16.43]]]},\"properties\":{\"id\":3101,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[3014,3102,3194,3013]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.82,16.37],[-25.82,16.01],[-26.04,15.81],[-26.35,15.81],[-26.47,16.04],[-26.18,16.43],[-25.93,16.48],[-25.82,16.37]]]},\"properties\":{\"id\":3102,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[3015,3103,3196,3195,3194,3101,3014]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.34,15.81],[-25.4,15.64],[-25.82,16.01],[-25.82,16.37],[-25.4,16.26],[-25.34,15.81]]]},\"properties\":{\"id\":3103,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[3104,3197,3196,3102,3015]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.41,16.57],[-24.38,15.87],[-24.61,15.9],[-24.81,16.12],[-24.95,16.51],[-24.89,16.6],[-24.41,16.57]]]},\"properties\":{\"id\":3105,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[3017,3106,3198,3197,3104,3016]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.82,16.2],[-23.82,16.09],[-23.96,15.9],[-24.33,15.84],[-24.38,15.87],[-24.41,16.57],[-24.38,16.57],[-23.96,16.54],[-23.82,16.2]]]},\"properties\":{\"id\":3106,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[3019,3107,3200,3199,3198,3105,3017,3018]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.32,16.57],[-23.12,16.4],[-23.17,16.04],[-23.2,16.01],[-23.82,16.09],[-23.82,16.2],[-23.32,16.57]]]},\"properties\":{\"id\":3107,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[3019,3020,3108,3201,3200,3106]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.13,16.54],[-21.99,15.98],[-22.3,15.76],[-22.64,15.98],[-22.67,16.01],[-22.58,16.32],[-22.13,16.54]]]},\"properties\":{\"id\":3109,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[3021,3110,3203,3202,3201,3108]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.43,16.37],[-21.52,15.9],[-21.66,15.81],[-21.99,15.98],[-22.13,16.54],[-22.11,16.57],[-21.66,16.6],[-21.43,16.37]]]},\"properties\":{\"id\":3110,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3023,3111,3204,3203,3109,3021,3022]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.43,16.37],[-20.98,16.46],[-20.9,15.9],[-21.09,15.84],[-21.52,15.9],[-21.43,16.37]]]},\"properties\":{\"id\":3111,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3110,3023,3112,3205,3204]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.88,16.54],[-19.94,15.95],[-20.02,15.9],[-20.33,15.9],[-20.48,16.46],[-20.05,16.65],[-19.88,16.54]]]},\"properties\":{\"id\":3113,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3026,3114,3207,3206,3112,3025]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.32,16.29],[-3.35,16.15],[-3.57,16.12],[-3.99,16.4],[-3.6,16.65],[-3.32,16.29]]]},\"properties\":{\"id\":3144,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":2000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3056,3145,3237,3143,3055]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.39,16.57],[-2.14,16.48],[-2.19,15.98],[-2.62,15.92],[-2.73,16.04],[-2.76,16.32],[-2.39,16.57]]]},\"properties\":{\"id\":3146,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3057,3058,3147,3239,3238,3145]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.62,16.34],[-0.62,16.04],[-0.93,15.95],[-1.01,16.4],[-0.73,16.48],[-0.62,16.34]]]},\"properties\":{\"id\":3149,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":2000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3062,3150,3242,3148,3061]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.62,16.34],[0.06,16.34],[0.11,16.15],[-0.45,15.87],[-0.62,16.04],[-0.62,16.34]]]},\"properties\":{\"id\":3150,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3149,3062,3151,3243,3242]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.87,16.62],[0.98,16.4],[0.45,16.01],[0.25,16.01],[0.11,16.15],[0.06,16.34],[0.06,16.34],[0.67,16.68],[0.87,16.62]]]},\"properties\":{\"id\":3151,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6809,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3064,3065,3152,3244,3243,3150,3062,3063]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.28,16.71],[9.79,16.48],[9.79,16.06],[9.48,16.04],[9.28,16.71]]]},\"properties\":{\"id\":3168,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":13000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":8,\"neighbors\":[3167,3080,3169,3261]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.07,16.65],[10.29,16.68],[10.29,16.68],[10.15,16.01],[10.01,15.98],[9.79,16.06],[9.79,16.48],[10.07,16.65]]]},\"properties\":{\"id\":3169,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":22376,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[3080,3081,3082,3170,3262,3261,3168]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.61,16.62],[14.06,16.4],[14.06,16.15],[13.7,16.04],[13.42,16.2],[13.42,16.51],[13.61,16.62]]]},\"properties\":{\"id\":3176,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":17667,\"state\":8,\"province\":114,\"culture\":8,\"religion\":11,\"neighbors\":[3087,3088,3177,3269,3268,3175]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.97,16.32],[16.14,16.34],[16.45,16.15],[16.31,15.67],[16.26,15.64],[15.97,16.06],[15.97,16.32]]]},\"properties\":{\"id\":3180,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":3351,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3179,3092,3181,3182,3276,3273]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.35,15.81],[-26.44,15.31],[-26.44,15.31],[-27.14,15.56],[-27.31,15.87],[-27.08,16.12],[-26.47,16.04],[-26.35,15.81]]]},\"properties\":{\"id\":3194,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":166,\"culture\":5,\"religion\":5,\"neighbors\":[3102,3195,3286,3285,3101]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.35,15.81],[-26.04,15.81],[-25.68,15.5],[-26.13,15.31],[-26.44,15.31],[-26.35,15.81]]]},\"properties\":{\"id\":3195,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":5,\"religion\":5,\"neighbors\":[3194,3102,3196,3287,3286]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.37,15.5],[-25.4,15.5],[-25.68,15.5],[-26.04,15.81],[-25.82,16.01],[-25.4,15.64],[-25.37,15.5]]]},\"properties\":{\"id\":3196,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":5,\"religion\":5,\"neighbors\":[3197,3288,3287,3195,3102,3103]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.61,15.9],[-25.09,15.45],[-25.37,15.5],[-25.4,15.64],[-25.34,15.81],[-24.81,16.12],[-24.61,15.9]]]},\"properties\":{\"id\":3197,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":5,\"religion\":5,\"neighbors\":[3105,3198,3288,3196,3103,3104]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.33,15.84],[-24.44,15.31],[-25,15.34],[-25.09,15.45],[-24.61,15.9],[-24.38,15.87],[-24.33,15.84]]]},\"properties\":{\"id\":3198,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3106,3199,3289,3288,3197,3105]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.88,15.7],[-24.22,14.95],[-24.44,15.31],[-24.33,15.84],[-23.96,15.9],[-23.88,15.7]]]},\"properties\":{\"id\":3199,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3200,3290,3289,3198,3106]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.17,15.62],[-23.4,15.39],[-23.51,15.39],[-23.88,15.7],[-23.96,15.9],[-23.82,16.09],[-23.2,16.01],[-23.17,15.62]]]},\"properties\":{\"id\":3200,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3201,3292,3291,3290,3199,3106,3107]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.64,15.98],[-22.89,15.56],[-23.17,15.62],[-23.2,16.01],[-23.17,16.04],[-22.67,16.01],[-22.64,15.98]]]},\"properties\":{\"id\":3201,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3109,3202,3292,3200,3107,3108]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.33,15.56],[-22.67,15.36],[-22.89,15.56],[-22.64,15.98],[-22.3,15.76],[-22.33,15.56]]]},\"properties\":{\"id\":3202,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3203,3293,3292,3201,3109]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.66,15.62],[-21.82,15.34],[-22.22,15.42],[-22.33,15.56],[-22.3,15.76],[-21.99,15.98],[-21.66,15.81],[-21.66,15.62]]]},\"properties\":{\"id\":3203,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3204,3295,3294,3293,3202,3109,3110]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.53,15.76],[-20.56,15.31],[-20.67,15.2],[-21.18,15.25],[-21.09,15.84],[-20.9,15.9],[-20.53,15.76]]]},\"properties\":{\"id\":3205,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3112,3206,3297,3296,3204,3111]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.8,15.45],[-19.97,15.11],[-20,15.08],[-20.56,15.31],[-20.53,15.76],[-20.33,15.9],[-20.02,15.9],[-19.8,15.45]]]},\"properties\":{\"id\":3206,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3207,3298,3388,3297,3205,3112,3113]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.88,15.87],[-3.88,15.56],[-4.36,15.53],[-4.47,15.95],[-4.27,16.23],[-3.88,15.87]]]},\"properties\":{\"id\":3236,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3143,3237,3327,3235,3142]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.17,15.95],[-2.28,15.34],[-2.62,15.22],[-2.9,15.39],[-2.62,15.92],[-2.19,15.98],[-2.17,15.95]]]},\"properties\":{\"id\":3239,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3147,3240,3330,3329,3238,3146]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.62,16.04],[-0.45,15.87],[-0.53,15.42],[-1.04,15.64],[-1.1,15.76],[-0.93,15.95],[-0.62,16.04]]]},\"properties\":{\"id\":3242,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3149,3150,3243,3333,3241,3148]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.45,16.01],[0.73,15.78],[0.96,15.48],[0.53,15.22],[0.34,15.28],[0.17,15.59],[0.25,16.01],[0.45,16.01]]]},\"properties\":{\"id\":3244,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":7000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3151,3152,3245,3336,3335,3334,3243]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.46,15.36],[10.18,15.98],[10.74,16.04],[10.91,15.87],[10.57,15.36],[10.46,15.36]]]},\"properties\":{\"id\":3263,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":54949,\"state\":8,\"province\":124,\"culture\":8,\"religion\":11,\"neighbors\":[3354,3262,3170,3171,3264]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.91,15.87],[11.42,15.84],[11.45,15.62],[11.33,15.36],[10.63,15.28],[10.57,15.36],[10.91,15.87]]]},\"properties\":{\"id\":3264,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":23000,\"state\":8,\"province\":124,\"culture\":8,\"religion\":11,\"neighbors\":[3263,3171,3265,3356,3355,3354]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.42,16.2],[13.7,16.04],[13.58,15.48],[13.56,15.48],[13.27,15.62],[13.08,16.01],[13.42,16.2]]]},\"properties\":{\"id\":3268,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":25754,\"state\":8,\"province\":114,\"culture\":8,\"religion\":11,\"neighbors\":[3175,3176,3269,3360,3359,3267]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.67,15.59],[15.44,15.42],[15.1,15.92],[15.24,16.2],[15.61,15.92],[15.67,15.59]]]},\"properties\":{\"id\":3272,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3273,3274,3271,3178,3179]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.67,15.59],[15.61,15.92],[15.97,16.06],[16.26,15.64],[16.17,15.53],[15.67,15.59]]]},\"properties\":{\"id\":3273,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":9019,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3274,3272,3179,3180,3276]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.67,15.59],[16.17,15.53],[16.14,15.28],[15.97,15.08],[15.86,15.03],[15.61,15.06],[15.38,15.28],[15.44,15.42],[15.67,15.59]]]},\"properties\":{\"id\":3274,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":10634,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3272,3273,3276,3364,3455,3453,3363,3271]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.47,15.67],[24.83,15.73],[24.98,15.5],[24.72,15.28],[24.41,15.42],[24.47,15.67]]]},\"properties\":{\"id\":3280,\"height\":4,\"biome\":8,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3279,3189,3281,3369,3367]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.47,15.17],[-27.11,14.64],[-27.34,14.78],[-27.14,15.56],[-26.44,15.31],[-26.47,15.17]]]},\"properties\":{\"id\":3285,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":166,\"culture\":5,\"religion\":5,\"neighbors\":[3286,3375,3194]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.79,14.92],[-26.07,14.61],[-26.24,14.69],[-26.47,15.17],[-26.44,15.31],[-26.44,15.31],[-26.13,15.31],[-25.79,14.92]]]},\"properties\":{\"id\":3286,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":5,\"religion\":5,\"neighbors\":[3287,3377,3376,3375,3285,3194,3195]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.4,15.5],[-25.54,14.97],[-25.79,14.92],[-26.13,15.31],[-25.68,15.5],[-25.4,15.5]]]},\"properties\":{\"id\":3287,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":5,\"religion\":5,\"neighbors\":[3196,3288,3377,3286,3195]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25,15.34],[-24.89,14.92],[-25,14.75],[-25.34,14.69],[-25.54,14.97],[-25.4,15.5],[-25.37,15.5],[-25.09,15.45],[-25,15.34]]]},\"properties\":{\"id\":3288,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3198,3289,3379,3378,3377,3287,3196,3197]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.22,14.95],[-24.22,14.95],[-24.89,14.92],[-25,15.34],[-24.44,15.31],[-24.22,14.95]]]},\"properties\":{\"id\":3289,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":7343,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3199,3290,3379,3288,3198]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.51,15.39],[-24.07,14.83],[-24.16,14.83],[-24.22,14.95],[-24.22,14.95],[-23.88,15.7],[-23.51,15.39]]]},\"properties\":{\"id\":3290,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4859,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3200,3291,3380,3379,3289,3199]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.67,15.36],[-22.75,14.86],[-22.81,14.86],[-23.23,15.03],[-23.4,15.39],[-23.17,15.62],[-22.89,15.56],[-22.67,15.36]]]},\"properties\":{\"id\":3292,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3202,3293,3382,3381,3291,3200,3201]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.22,15.42],[-22.27,14.92],[-22.44,14.81],[-22.7,14.83],[-22.75,14.86],[-22.67,15.36],[-22.33,15.56],[-22.22,15.42]]]},\"properties\":{\"id\":3293,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3203,3294,3384,3383,3382,3292,3202]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.82,15.34],[-21.77,14.97],[-22.27,14.92],[-22.22,15.42],[-21.82,15.34]]]},\"properties\":{\"id\":3294,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3203,3295,3384,3293]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.18,15.22],[-21.4,14.92],[-21.66,14.89],[-21.77,14.97],[-21.82,15.34],[-21.66,15.62],[-21.18,15.22]]]},\"properties\":{\"id\":3295,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3204,3296,3385,3384,3294,3203]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.67,14.92],[-21.07,14.55],[-21.4,14.92],[-21.18,15.22],[-21.18,15.25],[-20.67,15.2],[-20.67,14.92]]]},\"properties\":{\"id\":3296,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3297,3386,3385,3295,3204,3205]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.68,15.39],[-3.74,15],[-3.74,15],[-4.11,15],[-4.53,15.31],[-4.36,15.53],[-3.88,15.56],[-3.68,15.39]]]},\"properties\":{\"id\":3327,\"height\":4,\"biome\":4,\"type\":\"island\",\"population\":5882,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3237,3328,3418,3417,3326,3235,3236]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.62,15.22],[-2.59,14.92],[-2.62,14.69],[-3.29,14.81],[-2.92,15.39],[-2.9,15.39],[-2.62,15.22]]]},\"properties\":{\"id\":3329,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":7853,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3239,3330,3420,3419,3328,3238]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.51,15.39],[-0.51,15.11],[-0.73,15.06],[-1.24,15.28],[-1.04,15.64],[-0.53,15.42],[-0.51,15.39]]]},\"properties\":{\"id\":3333,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3243,3334,3423,3332,3241,3242]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.51,15.39],[0.17,15.59],[0.34,15.28],[0.06,14.97],[-0.39,14.97],[-0.51,15.11],[-0.51,15.39]]]},\"properties\":{\"id\":3334,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":5837,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3333,3243,3244,3335,3424,3423]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.09,15.28],[12.38,15.48],[12.66,14.92],[12.57,14.78],[12.04,14.81],[11.98,14.86],[12.01,15.22],[12.09,15.28]]]},\"properties\":{\"id\":3357,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":31981,\"state\":8,\"province\":124,\"culture\":8,\"religion\":11,\"neighbors\":[3265,3266,3358,3448,3447,3446,3356]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.52,15.67],[12.88,15.42],[12.97,15.08],[12.66,14.92],[12.38,15.48],[12.49,15.67],[12.52,15.67]]]},\"properties\":{\"id\":3358,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3174,3267,3359,3448,3357,3266]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.27,15.62],[13.56,15.48],[13.27,14.97],[12.97,15.08],[12.88,15.42],[13.27,15.62]]]},\"properties\":{\"id\":3359,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":24537,\"state\":8,\"province\":114,\"culture\":8,\"religion\":11,\"neighbors\":[3267,3268,3360,3448,3358]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.34,14.89],[14.85,15.31],[15.08,15.14],[15.05,14.89],[14.57,14.78],[14.34,14.89]]]},\"properties\":{\"id\":3362,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":13504,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3451,3361,3271,3363,3452]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.47,15.17],[-26.24,14.69],[-26.83,14.33],[-27,14.39],[-27.11,14.64],[-26.47,15.17]]]},\"properties\":{\"id\":3375,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":5,\"religion\":5,\"neighbors\":[3285,3286,3376,3466]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.16,14.83],[-24.33,14.47],[-24.72,14.41],[-25,14.75],[-24.89,14.92],[-24.22,14.95],[-24.16,14.83]]]},\"properties\":{\"id\":3379,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3290,3380,3470,3378,3288,3289]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.11,14.3],[-22.16,14.19],[-22.64,14.27],[-22.7,14.83],[-22.44,14.81],[-22.11,14.3]]]},\"properties\":{\"id\":3383,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3384,3475,3474,3382,3293]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.66,14.89],[-21.8,14.39],[-22.11,14.3],[-22.44,14.81],[-22.27,14.92],[-21.77,14.97],[-21.66,14.89]]]},\"properties\":{\"id\":3384,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3295,3385,3475,3383,3293,3294]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.5,14.75],[-20.53,14.33],[-20.98,14.22],[-21.07,14.33],[-21.07,14.55],[-20.67,14.92],[-20.5,14.75]]]},\"properties\":{\"id\":3386,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3297,3387,3477,3476,3385,3296]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.29,14.81],[-2.62,14.69],[-2.59,14.61],[-2.7,14.47],[-3.32,14.33],[-3.29,14.78],[-3.29,14.81]]]},\"properties\":{\"id\":3419,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3328,3329,3420,3511,3510,3418]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.35,14.83],[-1.35,14.44],[-1.69,14.25],[-2.05,14.36],[-2.05,14.36],[-1.88,14.92],[-1.86,14.97],[-1.49,15],[-1.35,14.83]]]},\"properties\":{\"id\":3421,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3332,3422,3513,3512,3511,3420,3330,3331]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.06,14.97],[0.22,14.69],[0.17,14.27],[-0.03,14.16],[-0.42,14.36],[-0.39,14.97],[0.06,14.97]]]},\"properties\":{\"id\":3424,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3334,3335,3425,3516,3515,3423]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.04,14.25],[0.67,14.33],[0.7,14.81],[1.15,14.83],[1.04,14.25]]]},\"properties\":{\"id\":3426,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3427,3517,3425,3336]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.69,15.14],[11.19,14.78],[10.69,14.41],[10.46,14.67],[10.69,15.14]]]},\"properties\":{\"id\":3444,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":17000,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3354,3355,3445,3443]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.04,14.81],[12.57,14.78],[12.77,14.39],[12.09,14.25],[11.98,14.36],[12.04,14.81]]]},\"properties\":{\"id\":3447,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":29088,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3446,3357,3448,3538,3537]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.5,14.72],[14.09,14.83],[14.12,14.55],[13.98,14.27],[13.64,14.27],[13.5,14.72]]]},\"properties\":{\"id\":3450,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3449,3360,3451,3542,3541]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.34,14.89],[14.57,14.78],[14.77,14.25],[14.68,14.19],[14.12,14.55],[14.09,14.83],[14.12,14.89],[14.34,14.89]]]},\"properties\":{\"id\":3451,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":21051,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3361,3362,3452,3543,3542,3450,3360]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.61,15.06],[15.86,15.03],[15.86,14.55],[15.5,14.64],[15.61,15.06]]]},\"properties\":{\"id\":3453,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3363,3274,3455,3454]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.19,14.53],[15.5,14.64],[15.86,14.55],[15.86,14.55],[15.81,14.13],[15.16,14.3],[15.13,14.33],[15.19,14.53]]]},\"properties\":{\"id\":3454,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3452,3363,3453,3455,3456,3544,3543]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[25,14.5],[25.34,14.55],[25.37,14.53],[25.42,14.25],[25.4,14.22],[25,14.22],[24.98,14.27],[25,14.5]]]},\"properties\":{\"id\":3462,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3461,3460,3463,3464,3551,3550,3549]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.98,14.22],[-20.95,13.88],[-21.21,13.71],[-21.6,13.83],[-21.6,14.25],[-21.07,14.33],[-20.98,14.22]]]},\"properties\":{\"id\":3476,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3386,3477,3564,3563,3475,3385]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.05,14.36],[-2.05,14.36],[-2.25,13.91],[-2.7,13.88],[-2.76,13.88],[-2.7,14.47],[-2.59,14.61],[-2.05,14.36]]]},\"properties\":{\"id\":3511,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3420,3421,3512,3598,3597,3510,3419]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.69,14.25],[-1.35,14.44],[-1.12,14.33],[-1.15,13.71],[-1.49,13.71],[-1.69,14.25]]]},\"properties\":{\"id\":3513,\"height\":4,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3512,3421,3422,3514,3600]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.58,14.22],[13.64,14.27],[13.98,14.27],[14.06,13.97],[13.56,13.85],[13.58,14.22]]]},\"properties\":{\"id\":3541,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3540,3449,3450,3542,3628]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.21,13.71],[-21.23,13.29],[-21.71,13.32],[-21.8,13.66],[-21.6,13.83],[-21.21,13.71]]]},\"properties\":{\"id\":3563,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3476,3564,3648,3562,3475]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.67,13.69],[-20.76,13.18],[-21.12,13.13],[-21.23,13.29],[-21.21,13.71],[-20.95,13.88],[-20.67,13.69]]]},\"properties\":{\"id\":3564,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3477,3565,3649,3648,3563,3476]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.71,13.77],[14.88,13.66],[14.82,13.32],[14.48,13.18],[14.37,13.24],[14.71,13.77]]]},\"properties\":{\"id\":3630,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":9000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3629,3543,3631,3632,3714]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.88,13.66],[15.13,13.66],[15.19,13.57],[15.1,13.24],[15.08,13.18],[14.82,13.32],[14.88,13.66]]]},\"properties\":{\"id\":3631,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":14816,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3630,3543,3545,3633,3717,3632]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.48,13.18],[14.82,13.32],[15.08,13.18],[15.08,13.07],[14.71,12.9],[14.48,13.18]]]},\"properties\":{\"id\":3632,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":9000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3714,3630,3631,3717,3715]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.12,13.13],[-21.26,12.76],[-21.35,12.73],[-21.85,13.13],[-21.71,13.32],[-21.23,13.29],[-21.12,13.13]]]},\"properties\":{\"id\":3648,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3564,3649,3731,3647,3562,3563]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.64,13.1],[-20.45,12.73],[-20.95,12.43],[-21.26,12.76],[-21.12,13.13],[-20.76,13.18],[-20.64,13.1]]]},\"properties\":{\"id\":3649,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3565,3650,3732,3731,3648,3564]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.08,12.68],[-20.14,12.62],[-20.45,12.73],[-20.64,13.1],[-20.14,13.41],[-20.08,12.68]]]},\"properties\":{\"id\":3650,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3651,3734,3732,3649,3565]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.14,12.54],[-20.7,12.18],[-20.95,12.37],[-20.95,12.43],[-20.45,12.73],[-20.14,12.62],[-20.14,12.54]]]},\"properties\":{\"id\":3732,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3734,3733,3817,3731,3649,3650]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.1,12.2],[15.55,12.59],[15.67,12.26],[15.61,12.12],[15.16,12.01],[15.1,12.2]]]},\"properties\":{\"id\":3799,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3883,3716,3800,3801,3884]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.58,12.76],[15.81,12.76],[15.95,12.32],[15.67,12.26],[15.55,12.59],[15.58,12.76]]]},\"properties\":{\"id\":3800,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3716,3718,3802,3801,3799]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.67,12.26],[15.95,12.32],[16,12.26],[15.89,11.9],[15.61,12.12],[15.67,12.26]]]},\"properties\":{\"id\":3801,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":6569,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3799,3800,3802,3885,3884]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.01,12.32],[-20.9,11.53],[-21.01,11.48],[-21.46,11.64],[-21.49,12.01],[-21.01,12.32]]]},\"properties\":{\"id\":3816,\"height\":4,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3731,3817,3900,3899,3815]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.5,11.92],[-20.62,11.62],[-20.9,11.53],[-21.01,12.32],[-20.95,12.37],[-20.7,12.18],[-20.5,11.92]]]},\"properties\":{\"id\":3817,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3733,3818,3900,3816,3731,3732]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.94,12.09],[-19.86,11.81],[-20.42,11.5],[-20.62,11.62],[-20.5,11.92],[-20.05,12.2],[-19.94,12.09]]]},\"properties\":{\"id\":3818,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3734,3819,3901,3900,3817,3733]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.89,11.9],[16,12.26],[16.23,12.32],[16.34,12.09],[16.14,11.9],[15.89,11.87],[15.89,11.9]]]},\"properties\":{\"id\":3885,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3884,3801,3802,3804,3887,3886]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.89,11.87],[16.14,11.9],[16.4,11.64],[16.26,11.56],[15.89,11.53],[15.83,11.73],[15.89,11.87]]]},\"properties\":{\"id\":3886,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3884,3885,3887,3969,3968,3967]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.01,11.48],[-21.01,10.78],[-21.85,10.86],[-21.8,11.28],[-21.57,11.59],[-21.46,11.64],[-21.01,11.48]]]},\"properties\":{\"id\":3899,\"height\":4,\"biome\":3,\"type\":\"island\",\"population\":9510,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3816,3900,3897,3898,3815]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.32,10.97],[14.82,11.59],[15.05,11.64],[15.5,10.92],[15.41,10.78],[14.32,10.86],[14.32,10.86],[14.32,10.97]]]},\"properties\":{\"id\":3966,\"height\":4,\"biome\":12,\"type\":\"island\",\"population\":7000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3964,3965,3883,3967]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.28,37.47],[-11.67,37.55],[-11.81,37.75],[-11.84,38.11],[-11.22,38.31],[-11.28,37.47]]]},\"properties\":{\"id\":28,\"height\":9,\"biome\":11,\"type\":\"island\",\"population\":23630,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[29,102,101,27]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.7,37.24],[-10.21,37.33],[-10.32,37.61],[-10.27,38.06],[-9.9,38.2],[-9.76,38.08],[-9.62,37.58],[-9.7,37.24]]]},\"properties\":{\"id\":31,\"height\":9,\"biome\":2,\"type\":\"island\",\"population\":29000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[106,105,104,30,32]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.6,38.25],[-6.02,37.52],[-6.1,37.52],[-6.44,37.78],[-6.58,38.28],[-5.6,38.25]]]},\"properties\":{\"id\":38,\"height\":9,\"biome\":11,\"type\":\"island\",\"population\":30865,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[39,112,111,37]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.66,38.2],[-3.71,37.55],[-4.05,37.52],[-4.44,38.28],[-4.42,38.34],[-3.66,38.2]]]},\"properties\":{\"id\":42,\"height\":9,\"biome\":10,\"type\":\"island\",\"population\":28710,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[43,116,41]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.57,37.27],[-1.74,37.61],[-1.27,38.17],[-1.1,38.2],[-1.04,38.14],[-1.07,37.75],[-1.57,37.27]]]},\"properties\":{\"id\":47,\"height\":9,\"biome\":11,\"type\":\"island\",\"population\":21000,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[121,120,46,48]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.34,37.38],[-0.82,38.11],[0,38.25],[0,38.25],[0,37.61],[-0.14,37.47],[-0.34,37.38]]]},\"properties\":{\"id\":49,\"height\":9,\"biome\":11,\"type\":\"island\",\"population\":28000,\"state\":1,\"province\":1,\"culture\":3,\"religion\":12,\"neighbors\":[123,48,50,124]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.71,37.61],[3.8,38.14],[4.42,38.36],[4.64,38.08],[4.39,37.64],[3.85,37.52],[3.71,37.61]]]},\"properties\":{\"id\":57,\"height\":9,\"biome\":11,\"type\":\"island\",\"population\":51060,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[130,56,58,131]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7,37.58],[6.89,38.03],[7.65,38.2],[7.73,37.83],[7.48,37.36],[7.2,37.38],[7,37.58]]]},\"properties\":{\"id\":63,\"height\":9,\"biome\":11,\"type\":\"island\",\"population\":31000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[136,62,64,138,137]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.88,36.91],[-2.14,36.96],[-2.17,37.41],[-2,37.72],[-1.74,37.61],[-1.57,37.27],[-1.57,37.16],[-1.88,36.91]]]},\"properties\":{\"id\":120,\"height\":9,\"biome\":10,\"type\":\"island\",\"population\":27066,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[197,196,119,45,46,47,121]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.06,36.68],[4.64,36.96],[5.12,37.27],[5.48,37.38],[5.51,37.16],[5.06,36.68]]]},\"properties\":{\"id\":133,\"height\":9,\"biome\":10,\"type\":\"island\",\"population\":18000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[209,208,132,59,134]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.19,36.88],[5.65,37.47],[6.02,37.61],[6.27,37.52],[6.5,37.13],[6.19,36.88]]]},\"properties\":{\"id\":135,\"height\":9,\"biome\":11,\"type\":\"island\",\"population\":21661,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[211,134,60,61,62]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.56,37.22],[11.59,37.55],[11.9,37.69],[12.18,37.44],[12.07,37.16],[11.56,37.22]]]},\"properties\":{\"id\":145,\"height\":9,\"biome\":11,\"type\":\"island\",\"population\":19214,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[146,144,71,72,147]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.31,36.88],[11.19,36.94],[11.56,37.22],[12.07,37.16],[12.09,36.99],[12.01,36.8],[11.31,36.88]]]},\"properties\":{\"id\":146,\"height\":9,\"biome\":11,\"type\":\"island\",\"population\":17000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[221,220,144,145,147,148]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.73,35.9],[2.73,36.1],[3.32,36.46],[3.4,36.38],[3.49,36.07],[3.26,35.85],[2.84,35.79],[2.73,35.9]]]},\"properties\":{\"id\":279,\"height\":9,\"biome\":10,\"type\":\"island\",\"population\":6000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[355,278,205,206,280,357,356]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.45,36.15],[7.59,36.74],[7.65,36.77],[8.16,36.1],[8.13,36.04],[7.65,35.85],[7.45,36.15]]]},\"properties\":{\"id\":288,\"height\":9,\"biome\":10,\"type\":\"island\",\"population\":7000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[287,213,137,214,289,365]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.82,34.98],[3.66,35.31],[3.66,35.34],[3.94,35.57],[4.47,35.06],[4.42,34.81],[4.39,34.78],[3.82,34.98]]]},\"properties\":{\"id\":433,\"height\":9,\"biome\":11,\"type\":\"island\",\"population\":24909,\"state\":10,\"province\":134,\"culture\":3,\"religion\":3,\"neighbors\":[506,432,356,357,358,434,507]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.81,34.87],[6.64,35.2],[7.03,35.4],[7.14,35.23],[6.95,34.78],[6.92,34.75],[6.81,34.87]]]},\"properties\":{\"id\":438,\"height\":9,\"biome\":10,\"type\":\"island\",\"population\":11577,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[510,437,363,364,439,512]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.35,34.33],[-20.05,34.05],[-19.72,34.67],[-19.6,34.73],[-19.46,34.61],[-19.32,34.39],[-19.35,34.33]]]},\"properties\":{\"id\":462,\"height\":9,\"biome\":2,\"type\":\"island\",\"population\":27822,\"state\":4,\"province\":49,\"culture\":9,\"religion\":9,\"neighbors\":[537,536,461,389,390,463]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.82,34.08],[-19.18,33.64],[-19.49,33.64],[-19.52,33.66],[-19.35,34.33],[-19.32,34.39],[-18.98,34.33],[-18.79,34.19],[-18.82,34.08]]]},\"properties\":{\"id\":537,\"height\":9,\"biome\":2,\"type\":\"island\",\"population\":22000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[538,610,609,608,536,462,463,464]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.08,33.69],[-18.34,33.44],[-18.82,34.08],[-18.79,34.19],[-18.39,34.39],[-18.31,34.28],[-18.08,33.69]]]},\"properties\":{\"id\":538,\"height\":9,\"biome\":2,\"type\":\"island\",\"population\":30074,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[539,611,610,537,464,465]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.15,32.57],[-19.27,32.54],[-19.86,32.82],[-19.83,32.94],[-19.72,33.02],[-19.01,32.82],[-18.98,32.8],[-18.98,32.8],[-19.15,32.57]]]},\"properties\":{\"id\":682,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":14000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[758,757,756,681,608,683,609,684]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.41,31.54],[-17.77,31.4],[-18.06,31.73],[-17.86,32.07],[-17.32,31.96],[-17.41,31.54]]]},\"properties\":{\"id\":833,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":21891,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[834,907,906,832,760]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.93,31.17],[-19.27,30.98],[-19.6,31.34],[-19.6,31.34],[-19.43,31.54],[-19.01,31.48],[-18.93,31.17]]]},\"properties\":{\"id\":904,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":38,\"culture\":9,\"religion\":9,\"neighbors\":[905,977,976,903,829,830]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.04,30.59],[-19.27,30.64],[-19.27,30.98],[-18.93,31.17],[-18.84,31.09],[-19.04,30.59]]]},\"properties\":{\"id\":977,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[978,1049,976,904,905]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.9,30.08],[-19.24,29.94],[-19.63,30.5],[-19.27,30.64],[-19.04,30.59],[-18.76,30.39],[-18.9,30.08]]]},\"properties\":{\"id\":1049,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[1050,1121,1048,976,977,978]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.83,29.89],[6.75,30.39],[6.95,30.67],[7.23,30.36],[7.23,30],[6.86,29.89],[6.83,29.89]]]},\"properties\":{\"id\":1097,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1169,1096,1025,1026,1098,1170]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.23,30],[7.23,30.36],[7.65,30.64],[7.85,30.39],[7.26,29.97],[7.23,30]]]},\"properties\":{\"id\":1098,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1170,1097,1026,1027,1099]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.3,30.28],[8.63,30.81],[8.89,30.61],[8.89,30.11],[8.66,30],[8.3,30.28]]]},\"properties\":{\"id\":1100,\"height\":9,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":6,\"religion\":6,\"neighbors\":[1172,1028,1029,1101,1173]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.37,29.63],[9.17,30.05],[9.37,30.25],[9.73,30.14],[9.39,29.63],[9.37,29.63]]]},\"properties\":{\"id\":1102,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1247,1173,1101,1031,1174]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.38,29.38],[-19.8,29.38],[-20.05,29.72],[-20.05,29.75],[-19.91,29.89],[-19.35,29.75],[-19.32,29.55],[-19.38,29.38]]]},\"properties\":{\"id\":1120,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1195,1194,1193,1119,1047,1048,1121]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.96,29.41],[10.21,29.77],[10.24,29.77],[10.49,29.47],[10.46,29.47],[10.24,29.3],[9.96,29.41]]]},\"properties\":{\"id\":1176,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":2,\"province\":15,\"culture\":6,\"religion\":11,\"neighbors\":[1249,1175,1104,1178,1179,1177]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.29,28.88],[10.24,29.3],[10.46,29.47],[10.66,29.16],[10.29,28.88]]]},\"properties\":{\"id\":1177,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":10474,\"state\":2,\"province\":15,\"culture\":6,\"religion\":11,\"neighbors\":[1250,1249,1176,1179]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.05,29.72],[-19.8,29.38],[-20.02,28.93],[-20.5,29.19],[-20.33,29.49],[-20.05,29.72]]]},\"properties\":{\"id\":1193,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":8161,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1119,1120,1194,1266,1118]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.38,29.38],[-19.29,29.07],[-19.49,28.74],[-19.94,28.82],[-20.02,28.93],[-19.8,29.38],[-19.38,29.38]]]},\"properties\":{\"id\":1194,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1120,1195,1268,1267,1266,1193]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.98,29.07],[-19.29,29.07],[-19.38,29.38],[-19.32,29.55],[-19.01,29.52],[-18.62,29.27],[-18.98,29.07]]]},\"properties\":{\"id\":1195,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1196,1268,1194,1120,1121,1122]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.42,29.3],[-18.37,28.93],[-18.42,28.77],[-18.79,28.63],[-18.98,29.07],[-18.62,29.27],[-18.42,29.3]]]},\"properties\":{\"id\":1196,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1122,1197,1270,1269,1268,1195]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.51,29.1],[-0.65,29.35],[-0.48,29.75],[0.03,29.47],[0.08,29.3],[-0.03,29.05],[-0.51,29.1]]]},\"properties\":{\"id\":1230,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1303,1229,1155,1156,1157,1231]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.1,28.88],[1.04,29.58],[1.1,29.61],[1.55,29.44],[1.49,28.82],[1.1,28.88]]]},\"properties\":{\"id\":1233,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1306,1232,1158,1159,1234]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.13,28.88],[6.13,29.3],[6.33,29.38],[6.72,28.82],[6.52,28.71],[6.27,28.77],[6.13,28.88]]]},\"properties\":{\"id\":1242,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1314,1241,1168,1243,1316,1315]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.17,28.85],[9.51,29.52],[9.62,29.49],[9.79,29.35],[9.82,29.07],[9.56,28.82],[9.31,28.71],[9.17,28.85]]]},\"properties\":{\"id\":1248,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1320,1247,1174,1175,1249,1322,1321]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.08,28.57],[-20.53,28.26],[-20.64,28.32],[-20.64,29.07],[-20.56,29.19],[-20.5,29.19],[-20.02,28.93],[-19.94,28.82],[-20.08,28.57]]]},\"properties\":{\"id\":1266,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":9000,\"state\":4,\"province\":26,\"culture\":7,\"religion\":7,\"neighbors\":[1267,1340,1339,1265,1192,1118,1193,1194]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.38,28.46],[-19.8,28.21],[-20.08,28.57],[-19.94,28.82],[-19.49,28.74],[-19.38,28.49],[-19.38,28.46]]]},\"properties\":{\"id\":1267,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1342,1341,1340,1266,1194,1268]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.25,28.32],[-0.53,28.91],[-0.51,29.1],[-0.03,29.05],[-0.03,29.02],[-0.2,28.32],[-0.22,28.32],[-0.25,28.32]]]},\"properties\":{\"id\":1303,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":11,\"neighbors\":[1377,1302,1229,1230,1231,1304,1378]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.49,28.4],[3.46,28.71],[3.94,28.93],[4.05,28.85],[4.05,28.49],[3.52,28.4],[3.49,28.4]]]},\"properties\":{\"id\":1310,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1384,1309,1237,1238,1311,1385]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.6,28.38],[5.63,28.79],[6.13,28.88],[6.27,28.77],[6.05,28.32],[5.6,28.38]]]},\"properties\":{\"id\":1314,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1388,1313,1241,1242,1315]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.05,28.32],[6.27,28.77],[6.52,28.71],[6.55,28.24],[6.52,28.21],[6.22,28.12],[6.05,28.32]]]},\"properties\":{\"id\":1315,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1388,1314,1242,1316,1390,1389]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.91,27.93],[-20.11,27.84],[-20.36,27.93],[-20.53,28.26],[-20.08,28.57],[-19.8,28.21],[-19.91,27.93]]]},\"properties\":{\"id\":1340,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1341,1414,1413,1339,1266,1267]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.38,28.46],[-19.27,27.79],[-19.91,27.93],[-19.8,28.21],[-19.38,28.46]]]},\"properties\":{\"id\":1341,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1267,1342,1414,1340]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.22,27.62],[-2.76,28.01],[-2.76,28.04],[-2.17,28.26],[-2.11,28.24],[-1.97,27.7],[-2.22,27.62]]]},\"properties\":{\"id\":1373,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1447,1446,1372,1299,1300,1374]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.25,27.93],[-0.11,27.56],[-0.53,27.82],[-0.48,28.15],[-0.25,28.32],[-0.22,28.32],[0.25,27.93]]]},\"properties\":{\"id\":1377,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":11,\"neighbors\":[1378,1451,1450,1376,1302,1303]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.25,27.93],[-0.22,28.32],[-0.2,28.32],[0.42,28.57],[0.51,28.32],[0.51,27.87],[0.25,27.93]]]},\"properties\":{\"id\":1378,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":15597,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1451,1377,1303,1304,1305,1379]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.52,27.98],[1.66,28.54],[1.69,28.6],[2.08,28.24],[2.14,27.93],[1.69,27.7],[1.52,27.98]]]},\"properties\":{\"id\":1381,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1453,1380,1306,1307,1382,1454]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.1,27.73],[6.22,28.12],[6.52,28.21],[6.67,27.68],[6.61,27.65],[6.1,27.73]]]},\"properties\":{\"id\":1389,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1462,1388,1315,1390,1463]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.42,27.84],[7.82,28.24],[8.1,28.07],[8.1,27.96],[7.65,27.65],[7.42,27.84]]]},\"properties\":{\"id\":1392,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1464,1391,1318,1393,1465]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.93,27.62],[9.37,27.9],[9.39,28.21],[10.15,27.79],[9.93,27.62]]]},\"properties\":{\"id\":1395,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":12000,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1469,1468,1394,1396]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.39,28.21],[9.39,28.21],[10.21,28.46],[10.27,28.46],[10.32,28.29],[10.38,27.87],[10.27,27.82],[10.15,27.79],[9.39,28.21]]]},\"properties\":{\"id\":1396,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":29177,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1395,1394,1321,1322,1323,1397,1470,1469]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.6,27.82],[10.88,28.01],[11.42,28.12],[11.39,27.76],[11.28,27.65],[10.6,27.82]]]},\"properties\":{\"id\":1398,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":13000,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1471,1397,1325,1400,1473]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.94,27.4],[-20.14,27.14],[-20.62,27.23],[-20.67,27.26],[-20.59,27.59],[-20.36,27.93],[-20.11,27.84],[-19.94,27.4]]]},\"properties\":{\"id\":1413,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1414,1489,1488,1487,1412,1339,1340]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.76,27.34],[-17.24,26.89],[-17.27,26.92],[-17.32,27.76],[-17.32,27.76],[-16.93,27.82],[-16.93,27.79],[-16.76,27.34]]]},\"properties\":{\"id\":1419,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1420,1494,1493,1418,1345,1346,1347]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.62,26.86],[-0.96,27.54],[-0.9,27.65],[-0.62,27.76],[-0.45,27.14],[-0.62,26.86]]]},\"properties\":{\"id\":1449,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1525,1524,1448,1376,1450]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.13,27.14],[0.67,27.14],[0.45,27.48],[0.56,27.82],[0.82,27.82],[1.18,27.31],[1.13,27.14]]]},\"properties\":{\"id\":1452,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":11131,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1528,1527,1526,1451,1379,1453]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.66,27.54],[1.69,27.7],[2.14,27.93],[2.47,27.82],[2.47,27.76],[2.28,27.42],[1.97,27.31],[1.83,27.34],[1.66,27.54]]]},\"properties\":{\"id\":1454,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1528,1453,1381,1382,1456,1455,1530,1529]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.78,27.28],[5.15,27.73],[5.43,27.76],[5.46,27.51],[5.37,27.14],[5.01,27],[4.78,27.28]]]},\"properties\":{\"id\":1460,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":7315,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1534,1459,1387,1461,1536,1535]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.1,27.14],[6.02,27.68],[6.1,27.73],[6.61,27.65],[6.58,27.4],[6.1,27.14]]]},\"properties\":{\"id\":1462,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1537,1461,1388,1389,1463]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.58,27.4],[6.61,27.65],[6.67,27.68],[7,27.73],[7.12,27.23],[7,27.17],[6.78,27.09],[6.58,27.4]]]},\"properties\":{\"id\":1463,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1537,1462,1389,1390,1464,1539,1538]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.73,27.34],[9.93,27.62],[10.15,27.79],[10.27,27.82],[10.24,27.37],[9.87,27.09],[9.73,27.34]]]},\"properties\":{\"id\":1469,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1543,1468,1395,1396,1470,1544]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.08,26.67],[-20.62,26.67],[-20.62,27.23],[-20.14,27.14],[-20.02,26.75],[-20.08,26.67]]]},\"properties\":{\"id\":1488,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":8554,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1564,1563,1487,1413,1489]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.24,26.86],[-17.35,26.78],[-17.86,26.78],[-18.2,27.23],[-18.03,27.37],[-17.27,26.92],[-17.24,26.89],[-17.24,26.86]]]},\"properties\":{\"id\":1493,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1494,1569,1568,1492,1417,1418,1419]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.5,26.78],[-14.09,26.61],[-14.12,26.64],[-13.78,27.14],[-13.5,26.78]]]},\"properties\":{\"id\":1500,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1501,1575,1574,1499]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.21,26.81],[1.13,27.14],[1.18,27.31],[1.66,27.54],[1.83,27.34],[1.72,26.61],[1.66,26.61],[1.27,26.75],[1.21,26.81]]]},\"properties\":{\"id\":1528,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":10023,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1602,1527,1452,1453,1454,1529,1604,1603]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.88,26.86],[3.82,27.06],[4.02,27.4],[4.5,27.14],[4.25,26.75],[3.88,26.86]]]},\"properties\":{\"id\":1533,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1608,1532,1457,1458,1534]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.25,26.75],[4.5,27.14],[4.67,27.28],[4.78,27.28],[5.01,27],[5.03,26.67],[4.42,26.44],[4.25,26.75]]]},\"properties\":{\"id\":1534,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":9000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1608,1533,1458,1459,1460,1535,1609]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.66,26.81],[-19.35,26.44],[-19.49,26.16],[-19.86,26.14],[-20.02,26.33],[-20.08,26.67],[-20.02,26.75],[-19.66,26.81]]]},\"properties\":{\"id\":1564,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1489,1490,1565,1639,1638,1563,1488]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,26.25],[-0.28,25.88],[-0.56,26.22],[-0.48,26.61],[-0.22,26.61],[0,26.25]]]},\"properties\":{\"id\":1600,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1601,1675,1674,1599,1525]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.01,26.3],[1.27,26.75],[1.66,26.61],[1.6,26.14],[1.1,26.16],[1.01,26.3]]]},\"properties\":{\"id\":1603,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1677,1602,1528,1604,1678]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.19,26.58],[2.33,26.86],[2.59,27.03],[2.73,27.03],[3.01,26.75],[2.98,26.61],[2.84,26.33],[2.36,26.3],[2.19,26.58]]]},\"properties\":{\"id\":1605,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":9000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1604,1529,1530,1455,1531,1607,1606,1680]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.95,26.02],[4.39,26.39],[4.42,26.44],[5.03,26.67],[5.12,26.61],[5.09,26.11],[4.95,26.02]]]},\"properties\":{\"id\":1609,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1685,1684,1608,1534,1535,1610]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.46,26.14],[-19.52,25.52],[-19.94,25.52],[-20.05,25.72],[-19.86,26.14],[-19.49,26.16],[-19.46,26.14]]]},\"properties\":{\"id\":1639,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":10633,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1565,1640,1717,1716,1638,1564]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.93,25.77],[-19.07,25.52],[-19.38,25.44],[-19.52,25.52],[-19.46,26.14],[-18.96,25.86],[-18.93,25.77]]]},\"properties\":{\"id\":1640,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1641,1719,1718,1717,1639,1565]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.8,25.52],[-2.19,25.55],[-2.25,25.61],[-2,26.08],[-1.69,26.02],[-1.66,25.63],[-1.8,25.52]]]},\"properties\":{\"id\":1672,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1751,1750,1749,1671,1597,1673]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.28,25.88],[-0.28,25.88],[0,26.25],[0.03,26.25],[0.08,25.83],[-0.28,25.88]]]},\"properties\":{\"id\":1675,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1753,1674,1600,1601,1676]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.51,26.19],[0.53,26.28],[1.01,26.3],[1.1,26.16],[1.04,25.66],[0.96,25.61],[0.48,25.75],[0.51,26.19]]]},\"properties\":{\"id\":1677,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":9056,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1676,1601,1602,1603,1678,1756,1755]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.1,25.61],[7.93,26.08],[8.21,26.28],[8.52,26.25],[8.75,26.02],[8.75,25.91],[8.44,25.63],[8.1,25.61]]]},\"properties\":{\"id\":1691,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":24000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1769,1690,1615,1616,1617,1692,1770]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.75,26.02],[9.03,26.19],[9.42,25.72],[9.17,25.52],[8.75,25.91],[8.75,26.02]]]},\"properties\":{\"id\":1692,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":2,\"province\":16,\"culture\":6,\"religion\":11,\"neighbors\":[1691,1617,1693,1771,1770]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.37,25.24],[-18.87,25.13],[-18.87,25.16],[-19.07,25.52],[-18.93,25.77],[-18.48,25.66],[-18.34,25.49],[-18.37,25.24]]]},\"properties\":{\"id\":1719,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1720,1795,1794,1718,1640,1641,1642]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.83,25.1],[-18.25,25.05],[-18.37,25.24],[-18.34,25.49],[-17.97,25.66],[-17.75,25.13],[-17.83,25.1]]]},\"properties\":{\"id\":1720,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1797,1796,1795,1719,1642,1721]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.43,25.61],[-3.71,25.13],[-4.05,25.3],[-4.08,25.61],[-3.6,25.77],[-3.43,25.61]]]},\"properties\":{\"id\":1746,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":7,\"neighbors\":[1669,1747,1822,1745,1668]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.31,25.19],[-0.53,24.85],[-1.15,25.1],[-1.07,25.55],[-1.04,25.61],[-0.45,25.47],[-0.31,25.19]]]},\"properties\":{\"id\":1752,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1753,1829,1828,1751,1673,1674]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.17,25.35],[0.39,25.72],[0.42,25.72],[0.67,24.99],[0.53,24.85],[0.17,25.35]]]},\"properties\":{\"id\":1754,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1830,1753,1676,1755,1831]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.96,25.61],[1.04,25.66],[1.52,25.69],[1.72,25.35],[1.69,25.19],[1.24,24.96],[1.01,25.13],[0.96,25.61]]]},\"properties\":{\"id\":1756,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1755,1677,1678,1679,1757,1832,1831]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.22,24.93],[2.02,24.99],[2.42,25.61],[2.5,25.58],[2.7,25.41],[2.7,25.35],[2.22,24.93]]]},\"properties\":{\"id\":1758,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1834,1833,1757,1680,1681,1759]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.03,25.13],[7.12,25.77],[7.37,25.72],[7.59,25.49],[7.57,25.1],[7.54,25.1],[7.03,25.13]]]},\"properties\":{\"id\":1767,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":34017,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1843,1766,1689,1690,1768,1844]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.59,25.49],[8.1,25.58],[8.07,24.99],[7.57,25.1],[7.59,25.49]]]},\"properties\":{\"id\":1768,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":16868,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1767,1690,1769,1844]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.44,25.63],[8.75,25.91],[9.17,25.52],[9.14,25.19],[9.11,25.13],[9.03,25.1],[8.63,25.19],[8.44,25.63]]]},\"properties\":{\"id\":1770,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":37489,\"state\":2,\"province\":16,\"culture\":6,\"religion\":11,\"neighbors\":[1769,1691,1692,1771,1847,1846,1845]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.42,25.72],[9.73,25.86],[9.82,25.72],[9.87,25.13],[9.14,25.19],[9.17,25.52],[9.42,25.72]]]},\"properties\":{\"id\":1771,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":25759,\"state\":2,\"province\":16,\"culture\":6,\"religion\":11,\"neighbors\":[1692,1693,1694,1772,1847,1770]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11,25.05],[10.94,24.99],[10.38,25.3],[10.43,25.55],[10.74,25.58],[11,25.05]]]},\"properties\":{\"id\":1773,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":12000,\"state\":3,\"province\":19,\"culture\":6,\"religion\":11,\"neighbors\":[1774,1850,1849,1772,1695]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.19,24.74],[-15.55,24.54],[-15.78,24.65],[-15.75,25.02],[-15.58,25.24],[-15.16,24.93],[-15.19,24.74]]]},\"properties\":{\"id\":1801,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5904,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1802,1879,1878,1800,1724,1725]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.95,25.1],[-14.01,24.54],[-14.46,24.63],[-14.6,25.13],[-14.03,25.24],[-13.95,25.1]]]},\"properties\":{\"id\":1803,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1728,1804,1881,1802,1727]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.46,25.19],[-12.38,24.79],[-12.63,24.63],[-12.82,24.71],[-12.91,25.1],[-12.46,25.19]]]},\"properties\":{\"id\":1806,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1730,1731,1885,1884,1805]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.34,24.68],[-9.7,24.04],[-9.7,24.04],[-9.93,24.54],[-9.42,24.93],[-9.42,24.93],[-9.34,24.68]]]},\"properties\":{\"id\":1812,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1813,1890,1967,1889,1811,1736]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.7,25.13],[-5.01,24.46],[-5.12,24.46],[-5.51,25.05],[-5.32,25.24],[-4.7,25.13]]]},\"properties\":{\"id\":1820,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":11831,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1744,1821,1898,1819,1743]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.33,24.49],[-4.81,24.23],[-4.84,24.26],[-5.01,24.46],[-4.7,25.13],[-4.7,25.13],[-4.44,25.05],[-4.25,24.57],[-4.33,24.49]]]},\"properties\":{\"id\":1821,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1900,1899,1977,1898,1820,1744,1745,1822]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.17,25.19],[0.25,24.57],[0.08,24.37],[-0.53,24.77],[-0.53,24.85],[-0.31,25.19],[-0.17,25.19]]]},\"properties\":{\"id\":1829,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1753,1830,1908,1907,1828,1752]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.34,24.63],[9.11,25.13],[9.14,25.19],[9.87,25.13],[9.93,25.07],[9.87,24.68],[9.34,24.63]]]},\"properties\":{\"id\":1847,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":22000,\"state\":2,\"province\":16,\"culture\":6,\"religion\":11,\"neighbors\":[1925,1846,1770,1771,1772,1848]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11,25.05],[11.33,25.27],[11.5,25.19],[11.76,24.57],[11.39,24.37],[10.88,24.65],[10.94,24.99],[11,25.05]]]},\"properties\":{\"id\":1850,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":31000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[1773,1774,1775,1851,1929,1928,1849]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.42,24.4],[-16.93,24.01],[-17.16,24.04],[-17.24,24.12],[-17.18,24.35],[-16.85,24.68],[-16.42,24.4]]]},\"properties\":{\"id\":1876,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1799,1877,1953,1952,1875,1798]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.54,24.09],[-12.82,23.95],[-13.11,24.6],[-12.82,24.71],[-12.63,24.63],[-12.54,24.09]]]},\"properties\":{\"id\":1884,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1885,1961,1883,1805,1806]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.41,24.68],[-10.24,23.93],[-10.69,23.93],[-10.77,24.07],[-10.86,24.37],[-10.55,24.65],[-10.41,24.68]]]},\"properties\":{\"id\":1888,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6982,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[1810,1889,1965,1964,1887,1809]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.41,24.54],[-8.63,24.04],[-9.11,24.21],[-9.11,24.54],[-8.69,24.74],[-8.41,24.54]]]},\"properties\":{\"id\":1891,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1814,1892,1968,1890,1813]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.71,24.37],[-5.91,24.04],[-6.38,24.21],[-6.41,24.4],[-6.33,24.57],[-5.88,24.68],[-5.71,24.37]]]},\"properties\":{\"id\":1896,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1819,1897,1975,1895,1817,1818]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.33,24.49],[-4.19,23.98],[-4.42,23.84],[-4.7,23.95],[-4.81,24.23],[-4.33,24.49]]]},\"properties\":{\"id\":1899,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":69,\"culture\":7,\"religion\":7,\"neighbors\":[1821,1900,1979,1978,1977]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.15,24.35],[-3.07,24.12],[-3.77,23.81],[-3.83,23.93],[-3.77,24.51],[-3.15,24.35]]]},\"properties\":{\"id\":1901,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":69,\"culture\":7,\"religion\":11,\"neighbors\":[1823,1902,1980,1979,1900]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.53,24.77],[0.08,24.37],[0.06,24.21],[-0.34,24.01],[-0.37,24.04],[-0.7,24.49],[-0.53,24.77]]]},\"properties\":{\"id\":1907,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1828,1829,1908,1986,1985,1906]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.56,24.6],[1.13,24.49],[1.21,24.26],[1.01,23.95],[0.96,23.93],[0.7,24.09],[0.56,24.6]]]},\"properties\":{\"id\":1909,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[1908,1831,1910,1989,1988,1987]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.86,24.49],[2.25,24.43],[2.33,23.95],[2.19,23.79],[1.8,23.93],[1.66,24.15],[1.86,24.49]]]},\"properties\":{\"id\":1911,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1910,1833,1912,1991,1990,1989]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.18,24.4],[3.32,24.54],[3.94,24.29],[3.97,24.15],[3.68,23.95],[3.49,23.93],[3.23,24.12],[3.18,24.4]]]},\"properties\":{\"id\":1914,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1913,1835,1836,1915,1994,1993,1992]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.52,24.26],[6.92,24.57],[7.37,24.01],[7.17,23.87],[6.55,24.15],[6.52,24.26]]]},\"properties\":{\"id\":1920,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[1919,1842,1921,2000,1999]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.77,23.93],[8.83,24.4],[9.2,24.32],[9.39,24.04],[8.8,23.79],[8.77,23.93]]]},\"properties\":{\"id\":1924,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":14000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2002,1923,1846,1925,2003]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.48,23.53],[-16.85,23.31],[-17.21,23.42],[-17.16,24.04],[-16.93,24.01],[-16.57,23.67],[-16.48,23.53]]]},\"properties\":{\"id\":1953,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1954,2035,2034,1952,1876,1877]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.22,23.9],[-15.19,23.39],[-15.67,23.31],[-15.83,23.51],[-15.69,23.98],[-15.61,24.01],[-15.24,23.93],[-15.22,23.9]]]},\"properties\":{\"id\":1956,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1880,1957,2037,2036,1955,1878,1879]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.29,23.37],[-14.37,23.34],[-14.68,23.59],[-14.74,23.9],[-14.51,24.04],[-14.2,23.95],[-14.29,23.37]]]},\"properties\":{\"id\":1958,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6004,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1959,2039,2038,1957,1880,1881]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.67,23.53],[-14.15,23.31],[-14.29,23.37],[-14.2,23.95],[-13.92,24.09],[-13.75,23.98],[-13.61,23.67],[-13.67,23.53]]]},\"properties\":{\"id\":1959,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2041,2040,2039,1958,1881,1882,1960]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.5,23.51],[-11.67,23.48],[-11.95,23.62],[-12.21,24.04],[-11.95,24.23],[-11.5,24.12],[-11.45,23.93],[-11.45,23.62],[-11.5,23.51]]]},\"properties\":{\"id\":1963,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":8905,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[2045,2044,2043,1962,1885,1886,1887,1964]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.65,23.56],[-9.76,23.34],[-10.24,23.53],[-10.21,23.93],[-9.7,24.04],[-9.65,23.56]]]},\"properties\":{\"id\":1966,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":85,\"culture\":7,\"religion\":7,\"neighbors\":[1967,2048,2047,1965,1889]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.32,23.84],[-5.23,23.56],[-5.71,23.51],[-5.88,23.59],[-5.85,23.87],[-5.43,23.95],[-5.32,23.84]]]},\"properties\":{\"id\":1976,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":8048,\"state\":6,\"province\":78,\"culture\":7,\"religion\":7,\"neighbors\":[1898,1977,2059,2058,1975,1897]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.95,24.01],[-3.21,23.45],[-3.66,23.48],[-3.74,23.53],[-3.77,23.81],[-3.07,24.12],[-2.95,24.01]]]},\"properties\":{\"id\":1980,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":14578,\"state\":6,\"province\":69,\"culture\":7,\"religion\":11,\"neighbors\":[1902,1981,2064,2063,1979,1901]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.21,24.26],[1.66,24.15],[1.8,23.93],[1.43,23.53],[1.01,23.95],[1.21,24.26]]]},\"properties\":{\"id\":1989,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1909,1910,1911,1990,1988]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.87,23.93],[3.23,24.12],[3.49,23.93],[3.29,23.51],[2.95,23.48],[2.87,23.93]]]},\"properties\":{\"id\":1992,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1991,1913,1914,1993,2076]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.8,23.79],[9.39,24.04],[9.39,24.04],[9.34,23.48],[8.72,23.59],[8.8,23.79]]]},\"properties\":{\"id\":2003,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":15841,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2002,1924,1925,2004,2090]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.96,23.93],[10.35,23.93],[10.63,23.37],[10.57,23.37],[9.96,23.48],[9.96,23.93]]]},\"properties\":{\"id\":2005,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2004,1926,2006,2093,2092]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.32,23.87],[12.35,23.95],[13.11,23.9],[13.11,23.87],[12.88,23.62],[12.54,23.56],[12.4,23.65],[12.32,23.87]]]},\"properties\":{\"id\":2010,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[2009,1930,1932,2013,2011,2012,2096]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.88,23.62],[13.11,23.87],[13.3,23.62],[13.33,23.42],[13.22,23.31],[12.94,23.25],[12.91,23.28],[12.88,23.62]]]},\"properties\":{\"id\":2011,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[2012,2010,2013,2014,2099,2098,2097]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.54,23.56],[12.88,23.62],[12.91,23.28],[12.63,23.23],[12.54,23.56]]]},\"properties\":{\"id\":2012,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[2096,2010,2011,2097]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.9,23.34],[-20.9,22.89],[-21.18,22.81],[-21.52,23.23],[-21.49,23.37],[-21.09,23.42],[-20.9,23.34]]]},\"properties\":{\"id\":2026,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[1946,2027,2113,2112,2025,1945]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.03,23],[-18.03,22.95],[-18.31,22.75],[-18.76,22.92],[-18.65,23.34],[-18.34,23.56],[-18.03,23]]]},\"properties\":{\"id\":2031,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2032,2033,2118,2117,2030,1950]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.58,23.34],[-18.03,23],[-18.34,23.56],[-18.34,23.59],[-17.77,23.62],[-17.58,23.34]]]},\"properties\":{\"id\":2032,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1952,2033,2031,1950,1951]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.23,23.09],[-16.71,22.75],[-16.85,22.84],[-16.85,23.31],[-16.48,23.53],[-16.48,23.53],[-16.28,23.39],[-16.23,23.09]]]},\"properties\":{\"id\":2035,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[2036,2121,2120,2034,1953,1954,1955]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.4,23.31],[-12.38,23],[-12.94,22.84],[-13.13,22.95],[-12.97,23.62],[-12.91,23.67],[-12.43,23.37],[-12.4,23.31]]]},\"properties\":{\"id\":2042,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1962,2043,2128,2127,2041,1960,1961]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.66,23.48],[-3.63,22.89],[-3.77,22.7],[-4.3,23.17],[-4.3,23.23],[-4.19,23.37],[-3.74,23.53],[-3.66,23.48]]]},\"properties\":{\"id\":2063,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":69,\"culture\":7,\"religion\":11,\"neighbors\":[1980,2064,2147,2146,2062,1978,1979]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.45,23.31],[-2.45,23.14],[-2.7,23.06],[-3.07,23.23],[-3.12,23.37],[-2.64,23.53],[-2.45,23.31]]]},\"properties\":{\"id\":2065,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":69,\"culture\":7,\"religion\":11,\"neighbors\":[1982,2066,2149,2148,2064,1981]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.62,23.39],[-0.34,22.89],[-1.04,22.95],[-0.96,23.37],[-0.96,23.37],[-0.62,23.39]]]},\"properties\":{\"id\":2069,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[1985,2070,2152,2068,1984]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.37,23.56],[0.11,23.37],[-0.03,23.06],[-0.2,22.81],[-0.28,22.81],[-0.34,22.89],[-0.62,23.39],[-0.37,23.56]]]},\"properties\":{\"id\":2070,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[1985,1986,2071,2154,2153,2152,2069]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.44,23.59],[4.78,23.65],[4.87,23.42],[4.74,23],[4.58,23.12],[4.44,23.59]]]},\"properties\":{\"id\":2081,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":51,\"culture\":8,\"religion\":11,\"neighbors\":[2079,1995,1996,2082,2163]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.87,23.42],[5.26,23.31],[4.89,22.89],[4.74,23],[4.87,23.42]]]},\"properties\":{\"id\":2082,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":51,\"culture\":8,\"religion\":11,\"neighbors\":[2081,1996,2083,2163]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.72,23.59],[9.34,23.48],[9.34,23.48],[9.14,22.89],[8.89,22.95],[8.8,23.03],[8.72,23.59],[8.72,23.59]]]},\"properties\":{\"id\":2090,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":18000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2002,2003,2004,2091,2172,2171,2089]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.01,23],[12.4,23.65],[12.54,23.56],[12.63,23.23],[12.49,23],[12.01,23]]]},\"properties\":{\"id\":2096,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":21954,\"state\":3,\"province\":20,\"culture\":8,\"religion\":11,\"neighbors\":[2178,2009,2010,2012,2097]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.35,22.44],[-19.52,22.14],[-19.86,22.28],[-20.05,22.47],[-19.8,22.92],[-19.72,22.95],[-19.43,22.98],[-19.35,22.89],[-19.35,22.44]]]},\"properties\":{\"id\":2115,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2116,2196,2195,2194,2114,2028,2029,2030]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.16,22.75],[-17.35,22.42],[-17.63,22.47],[-17.75,22.7],[-17.38,23.03],[-17.16,22.75]]]},\"properties\":{\"id\":2119,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[2034,2120,2199,2118,2033]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16,22.84],[-16.28,22.36],[-16.54,22.39],[-16.71,22.75],[-16.23,23.09],[-16,22.84]]]},\"properties\":{\"id\":2121,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":7615,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[2036,2122,2201,2120,2035]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.88,22.47],[-13.02,22.33],[-13.56,22.33],[-13.61,22.44],[-13.22,22.95],[-13.13,22.95],[-12.94,22.84],[-12.88,22.47]]]},\"properties\":{\"id\":2127,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2128,2208,2207,2206,2126,2041,2042]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.59,22.44],[-11.78,22.39],[-12.09,22.89],[-11.9,23.06],[-11.31,22.84],[-11.59,22.44]]]},\"properties\":{\"id\":2130,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2131,2210,2129,2043,2044]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.91,22.44],[-11.28,22.28],[-11.59,22.44],[-11.31,22.84],[-11.14,22.98],[-11.05,22.98],[-11.02,22.95],[-10.86,22.61],[-10.91,22.44]]]},\"properties\":{\"id\":2131,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":60,\"culture\":7,\"religion\":7,\"neighbors\":[2212,2211,2210,2130,2044,2045,2046,2132]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.2,22.81],[-0.14,22.72],[-0.25,22.05],[-0.48,22],[-0.82,22.44],[-0.28,22.81],[-0.2,22.81]]]},\"properties\":{\"id\":2153,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[2070,2154,2229,2303,2228,2152]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.21,23.12],[1.74,22.84],[1.72,22.53],[1.66,22.44],[1.07,22.67],[1.07,23.03],[1.21,23.12]]]},\"properties\":{\"id\":2156,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2072,2073,2157,2233,2232,2155]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.86,22.98],[2.02,23.06],[2.42,22.47],[2.42,22.44],[1.72,22.53],[1.74,22.84],[1.86,22.98]]]},\"properties\":{\"id\":2157,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2073,2074,2158,2159,2233,2156]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.55,22.67],[6.89,22.78],[7.06,22.64],[7.03,22.5],[6.72,22.11],[6.36,22.33],[6.55,22.67]]]},\"properties\":{\"id\":2168,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":10685,\"state\":7,\"province\":109,\"culture\":8,\"religion\":11,\"neighbors\":[2167,2086,2087,2243,2242,2241]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.85,22.5],[7.76,23],[8.21,23.09],[8.3,23.03],[8.21,22.56],[8.1,22.47],[7.85,22.5]]]},\"properties\":{\"id\":2170,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":32195,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2244,2169,2088,2089,2171,2245]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.65,22.5],[9.87,23.09],[10.29,22.75],[10.32,22.64],[10.32,22.61],[10.29,22.56],[9.65,22.47],[9.65,22.5]]]},\"properties\":{\"id\":2174,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2247,2173,2092,2093,2175,2249,2248]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.53,22.92],[11.92,23.03],[11.98,23],[12.09,22.39],[11.59,22.33],[11.33,22.67],[11.36,22.75],[11.53,22.92]]]},\"properties\":{\"id\":2177,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":24910,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[2094,2095,2009,2178,2251,2250,2176]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.53,22.36],[-20.5,21.88],[-21.32,22.02],[-20.95,22.39],[-20.53,22.39],[-20.53,22.36]]]},\"properties\":{\"id\":2193,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":7483,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2114,2194,2269,2192,2113]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.2,21.94],[-14.29,21.91],[-14.71,22.11],[-14.82,22.25],[-14.85,22.3],[-14.77,22.44],[-14.15,22.36],[-14.2,21.94]]]},\"properties\":{\"id\":2205,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2206,2281,2280,2204,2203,2124,2125]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.87,22.44],[-2.73,21.83],[-3.35,21.69],[-3.35,21.72],[-3.29,22.33],[-3.07,22.44],[-2.87,22.44]]]},\"properties\":{\"id\":2224,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":7962,\"state\":6,\"province\":62,\"culture\":7,\"religion\":11,\"neighbors\":[2148,2225,2298,2297,2223,2147]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.39,22.5],[0.48,22.33],[-0.25,22.05],[-0.25,22.05],[-0.14,22.72],[0.39,22.5]]]},\"properties\":{\"id\":2229,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[2154,2155,2230,2303,2153]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.07,22.67],[1.66,22.44],[1.63,22.22],[1.41,22.08],[0.84,22.42],[1.07,22.67]]]},\"properties\":{\"id\":2232,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2155,2156,2233,2306,2231]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.72,22.53],[2.42,22.44],[2.45,22.3],[2.33,22.02],[2.25,22],[1.86,22],[1.63,22.22],[1.66,22.44],[1.72,22.53]]]},\"properties\":{\"id\":2233,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2156,2157,2159,2234,2308,2307,2306,2232]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.45,22.3],[2.93,22.14],[3.01,21.97],[2.64,21.6],[2.33,22.02],[2.45,22.3]]]},\"properties\":{\"id\":2234,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2233,2159,2235,2309,2308]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.65,22.39],[5.85,22.42],[6.13,22.28],[6.1,21.97],[5.63,21.8],[5.43,22.22],[5.65,22.39]]]},\"properties\":{\"id\":2240,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2164,2166,2167,2241,2314,2313]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.32,21.8],[-21.57,21.27],[-21.63,21.27],[-21.94,21.41],[-22.05,21.52],[-22.02,21.69],[-21.6,22.22],[-21.32,22.02],[-21.32,21.8]]]},\"properties\":{\"id\":2267,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2269,2268,2345,2344,2343,2190,2191,2192]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.5,21.74],[-20.7,21.55],[-21.32,21.8],[-21.32,22.02],[-21.32,22.02],[-20.5,21.88],[-20.48,21.8],[-20.5,21.74]]]},\"properties\":{\"id\":2269,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2270,2347,2268,2267,2192,2193,2194]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.79,21.32],[-15.1,21.21],[-15.58,21.66],[-15.58,21.72],[-15.44,21.86],[-15.27,21.86],[-14.93,21.66],[-14.77,21.35],[-14.79,21.32]]]},\"properties\":{\"id\":2279,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2358,2357,2356,2278,2202,2203,2204,2280]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.71,22.11],[-14.29,21.91],[-14.54,21.46],[-14.77,21.35],[-14.93,21.66],[-14.71,22.11]]]},\"properties\":{\"id\":2280,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2204,2205,2281,2358,2279]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.46,21.83],[-10.38,21.3],[-10.38,21.24],[-10.88,21.41],[-10.49,21.86],[-10.46,21.83]]]},\"properties\":{\"id\":2288,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":14407,\"state\":6,\"province\":103,\"culture\":7,\"religion\":7,\"neighbors\":[2134,2289,2290,2365,2287]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.35,21.69],[-3.29,21.46],[-3.94,21.13],[-3.94,21.13],[-3.94,21.72],[-3.91,21.77],[-3.35,21.72],[-3.35,21.69]]]},\"properties\":{\"id\":2297,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":64,\"culture\":7,\"religion\":11,\"neighbors\":[2224,2298,2378,2377,2296,2221,2223]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.25,22.05],[0.03,21.77],[-0.08,21.44],[-0.28,21.44],[-0.51,21.88],[-0.48,22],[-0.25,22.05],[-0.25,22.05]]]},\"properties\":{\"id\":2303,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[2229,2230,2304,2384,2302,2228,2153]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.08,21.44],[0.03,21.77],[0.45,21.77],[0.48,21.46],[0.06,21.35],[-0.08,21.44]]]},\"properties\":{\"id\":2304,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":7,\"neighbors\":[2384,2303,2230,2305,2385]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.63,22.22],[1.86,22],[1.77,21.52],[1.66,21.41],[1.24,21.52],[1.21,21.72],[1.41,22.08],[1.63,22.22]]]},\"properties\":{\"id\":2306,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2232,2233,2307,2388,2387,2305,2231]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.85,21.72],[4.36,22],[4.53,21.86],[4.28,21.44],[3.85,21.46],[3.82,21.63],[3.85,21.72]]]},\"properties\":{\"id\":2311,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2236,2237,2238,2312,2392,2310]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.72,21.72],[9.31,21.69],[9.37,21.04],[9.34,21.02],[8.69,21.49],[8.72,21.72]]]},\"properties\":{\"id\":2320,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":18000,\"state\":7,\"province\":108,\"culture\":8,\"religion\":11,\"neighbors\":[2319,2246,2321,2402,2401]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.75,20.96],[-17.83,20.9],[-18.25,20.82],[-18.25,21.21],[-17.75,21.32],[-17.63,21.24],[-17.75,20.96]]]},\"properties\":{\"id\":2351,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2352,2433,2432,2350,2274,2275]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.62,20.79],[-14.71,20.62],[-15.13,20.57],[-15.41,20.82],[-15.1,21.21],[-14.79,21.32],[-14.62,20.79]]]},\"properties\":{\"id\":2357,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2358,2439,2438,2437,2356,2279]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.12,21.21],[-14.15,20.82],[-14.62,20.79],[-14.79,21.32],[-14.77,21.35],[-14.54,21.46],[-14.12,21.21]]]},\"properties\":{\"id\":2358,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2281,2359,2439,2357,2279,2280]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.56,21.16],[-13.7,20.76],[-14.12,20.79],[-14.15,20.82],[-14.12,21.21],[-14.06,21.27],[-13.58,21.21],[-13.56,21.16]]]},\"properties\":{\"id\":2359,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2283,2360,2440,2439,2358,2281,2282]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.35,21.24],[-12.49,20.79],[-12.57,20.68],[-12.91,20.71],[-12.99,21.13],[-12.91,21.35],[-12.43,21.3],[-12.35,21.24]]]},\"properties\":{\"id\":2361,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":12375,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2285,2362,2443,2442,2360,2283,2284]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.9,20.99],[-11.92,20.9],[-12.49,20.79],[-12.35,21.24],[-11.9,21.3],[-11.9,20.99]]]},\"properties\":{\"id\":2362,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2363,2444,2443,2361,2285]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.94,21.13],[-3.83,20.9],[-3.99,20.6],[-4.11,20.57],[-4.36,20.74],[-4.42,21.04],[-4.39,21.07],[-4.22,21.13],[-3.94,21.13],[-3.94,21.13]]]},\"properties\":{\"id\":2377,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2297,2378,2462,2461,2459,2376,2375,2295,2296]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.48,21.16],[-0.37,20.82],[-0.51,20.57],[-1.15,20.99],[-1.01,21.32],[-0.48,21.16]]]},\"properties\":{\"id\":2383,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2302,2384,2468,2467,2382]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.09,20.71],[3.18,21.21],[3.68,21.24],[3.82,20.85],[3.32,20.51],[3.09,20.71]]]},\"properties\":{\"id\":2391,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":8002,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2474,2390,2310,2392,2475]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.85,21.46],[4.28,21.44],[4.56,21.21],[4.47,20.85],[4.22,20.71],[3.91,20.76],[3.82,20.85],[3.68,21.24],[3.85,21.46]]]},\"properties\":{\"id\":2392,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":10000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2310,2311,2312,2393,2477,2476,2475,2391]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.6,21.32],[5.74,21.35],[6.16,21.18],[6.24,20.93],[5.82,20.71],[5.6,20.71],[5.54,21.3],[5.6,21.32]]]},\"properties\":{\"id\":2395,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2313,2314,2315,2396,2480,2479,2394]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.79,20.62],[7.68,20.88],[7.9,21.27],[8.24,21.07],[8.21,20.88],[7.79,20.62]]]},\"properties\":{\"id\":2399,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":13000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2483,2482,2398,2319,2400]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.95,20.37],[-21.12,20.07],[-21.49,20.12],[-21.57,20.65],[-21.01,20.62],[-20.95,20.37]]]},\"properties\":{\"id\":2426,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":7230,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2427,2516,2515,2425,2345]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.75,20.96],[-17.41,20.43],[-17.86,20.43],[-17.83,20.9],[-17.75,20.96]]]},\"properties\":{\"id\":2433,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":2950,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2351,2352,2522,2432]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.11,20.57],[-4.25,20.35],[-4.25,20.35],[-4.7,20.43],[-4.7,20.54],[-4.36,20.74],[-4.11,20.57]]]},\"properties\":{\"id\":2459,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":7739,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2377,2461,2551,2460,2458,2376]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.25,20.35],[-4.39,20.04],[-4.73,20.09],[-4.84,20.23],[-4.7,20.43],[-4.25,20.35]]]},\"properties\":{\"id\":2460,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2459,2551,2550,2549,2458]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.63,20.21],[-3.66,19.9],[-3.77,19.9],[-4.25,20.35],[-4.11,20.57],[-3.99,20.6],[-3.63,20.21]]]},\"properties\":{\"id\":2461,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":11242,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2462,2552,2632,2551,2459,2377]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.02,20.82],[2.53,20.32],[2.36,20.18],[1.86,20.23],[1.77,20.74],[1.86,20.82],[2,20.82],[2.02,20.82]]]},\"properties\":{\"id\":2472,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2389,2473,2563,2562,2471,2387,2388]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.02,20.82],[2.59,20.88],[2.76,20.62],[2.64,20.35],[2.53,20.32],[2.02,20.82]]]},\"properties\":{\"id\":2473,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2472,2389,2390,2474,2563]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.09,20.71],[3.32,20.51],[3.35,20.21],[2.67,20.29],[2.64,20.35],[2.76,20.62],[3.09,20.71]]]},\"properties\":{\"id\":2474,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2390,2391,2475,2564,2563,2473]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.32,20.51],[3.82,20.85],[3.91,20.76],[3.77,20.04],[3.35,20.21],[3.35,20.21],[3.32,20.51]]]},\"properties\":{\"id\":2475,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2474,2391,2392,2476,2565,2564]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.6,20.71],[5.82,20.71],[6.33,20.29],[6.3,20.23],[5.54,20.18],[5.46,20.35],[5.54,20.65],[5.6,20.71]]]},\"properties\":{\"id\":2479,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":56,\"culture\":7,\"religion\":11,\"neighbors\":[2394,2395,2480,2571,2569,2568,2478]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.79,20.62],[8.21,20.88],[8.3,20.71],[8.02,20.32],[7.76,20.46],[7.79,20.62]]]},\"properties\":{\"id\":2483,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":16933,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2482,2399,2400,2484,2573]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.98,20.82],[10.29,20.82],[10.49,20.68],[10.6,20.37],[10.43,20.12],[9.98,20.23],[9.87,20.48],[9.84,20.74],[9.98,20.82]]]},\"properties\":{\"id\":2487,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":25000,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2402,2403,2404,2488,2578,2577,2576,2486]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.64,21.02],[13.78,21.02],[14.01,20.93],[14.06,20.82],[13.92,20.43],[13.84,20.43],[13.53,20.9],[13.64,21.02]]]},\"properties\":{\"id\":2496,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":11000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":11,\"neighbors\":[2331,2330,2412,2413,2497,2584,2495]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.06,20.82],[14.43,20.71],[14.26,20.29],[14.23,20.29],[13.92,20.43],[14.06,20.82]]]},\"properties\":{\"id\":2497,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":24164,\"state\":8,\"province\":117,\"culture\":8,\"religion\":11,\"neighbors\":[2496,2413,2498,2585,2584]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.37,20.15],[-18.37,20.01],[-18.76,19.59],[-19.07,20.04],[-18.7,20.26],[-18.37,20.15]]]},\"properties\":{\"id\":2520,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2431,2521,2605,2519,2430]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.71,20.12],[-17.21,19.65],[-17.55,19.7],[-17.55,19.81],[-17.35,20.4],[-16.85,20.29],[-16.71,20.15],[-16.71,20.12]]]},\"properties\":{\"id\":2523,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2524,2608,2607,2521,2522,2434,2435]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.86,19.76],[-16,19.62],[-16.57,19.73],[-16.71,20.12],[-16.71,20.15],[-16.42,20.26],[-15.86,19.76]]]},\"properties\":{\"id\":2524,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2525,2610,2609,2608,2523,2435]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.19,20.23],[-15.02,20.01],[-15.02,19.93],[-15.3,19.56],[-15.47,19.62],[-15.75,19.81],[-15.67,20.07],[-15.19,20.23]]]},\"properties\":{\"id\":2526,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2437,2438,2527,2612,2611,2610,2525]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.94,19.76],[-12.99,19.98],[-12.91,20.12],[-12.26,20.26],[-12.43,19.79],[-12.94,19.76]]]},\"properties\":{\"id\":2531,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":14642,\"state\":6,\"province\":99,\"culture\":7,\"religion\":7,\"neighbors\":[2616,2530,2441,2442,2532]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.2,19.93],[-9.31,19.76],[-9.9,19.81],[-9.76,20.15],[-9.34,20.26],[-9.25,20.12],[-9.2,19.93]]]},\"properties\":{\"id\":2537,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2538,2623,2622,2536,2447,2449]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.99,19.81],[-8.07,19.53],[-8.58,19.45],[-8.63,19.81],[-8.13,19.98],[-7.99,19.81]]]},\"properties\":{\"id\":2540,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2541,2625,2624,2623,2539]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.09,20.29],[-7.37,19.76],[-7.4,19.76],[-7.59,19.9],[-7.65,20.21],[-7.31,20.4],[-7.17,20.4],[-7.09,20.29]]]},\"properties\":{\"id\":2542,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":11000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2453,2543,2626,2625,2541,2451,2452]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.67,20.12],[-6.92,19.65],[-6.97,19.62],[-7.37,19.76],[-7.09,20.29],[-6.78,20.23],[-6.67,20.12]]]},\"properties\":{\"id\":2543,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":12234,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2454,2544,2627,2626,2542,2453]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.43,20.21],[-5.43,19.67],[-5.62,19.53],[-5.77,19.56],[-5.85,19.76],[-5.71,20.26],[-5.68,20.26],[-5.55,20.23],[-5.43,20.21]]]},\"properties\":{\"id\":2547,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2457,2548,2630,2629,2628,2546,2455,2456]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.09,20.21],[-5.03,19.59],[-5.43,19.67],[-5.43,20.21],[-5.23,20.26],[-5.09,20.21]]]},\"properties\":{\"id\":2548,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2458,2549,2630,2547,2457]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.73,20.09],[-4.7,19.7],[-4.95,19.51],[-5.03,19.59],[-5.09,20.21],[-4.84,20.23],[-4.73,20.09]]]},\"properties\":{\"id\":2549,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2460,2550,2631,2630,2548,2458]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.78,20.46],[-2.56,20.29],[-2.73,19.9],[-2.84,19.84],[-3.01,19.87],[-3.01,20.29],[-2.78,20.46]]]},\"properties\":{\"id\":2553,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2463,2464,2554,2635,2634,2552]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.67,20.29],[3.35,20.21],[3.35,20.21],[3.09,19.81],[2.87,19.76],[2.67,20.29]]]},\"properties\":{\"id\":2564,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":4809,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2563,2474,2475,2565,2645]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.77,20.04],[4.3,20.21],[4.5,19.87],[4.33,19.53],[3.99,19.56],[3.8,19.9],[3.77,20.04]]]},\"properties\":{\"id\":2566,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2565,2476,2567,2648,2647,2646]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.22,19.81],[6.3,20.12],[6.89,19.65],[6.86,19.59],[6.69,19.56],[6.22,19.81]]]},\"properties\":{\"id\":2570,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":10000,\"state\":11,\"province\":149,\"culture\":8,\"religion\":11,\"neighbors\":[2651,2569,2571,2653,2652]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.72,20.07],[9.08,20.15],[9.31,19.95],[9.37,19.84],[9.31,19.67],[8.69,19.7],[8.72,20.07]]]},\"properties\":{\"id\":2575,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2574,2485,2486,2576,2657,2656]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.08,19.87],[10.63,20.37],[11.08,20.43],[11.33,20.29],[11.33,20.18],[11.11,19.87],[11.08,19.87]]]},\"properties\":{\"id\":2579,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2660,2578,2488,2489,2490,2580]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.5,20.12],[13.84,20.43],[13.92,20.43],[14.23,20.29],[14.15,19.79],[13.61,19.84],[13.5,20.09],[13.5,20.12]]]},\"properties\":{\"id\":2584,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":24574,\"state\":8,\"province\":117,\"culture\":8,\"religion\":11,\"neighbors\":[2494,2495,2496,2497,2585,2665,2583]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.57,19.73],[-16.68,19.37],[-16.9,19.23],[-17.21,19.65],[-16.71,20.12],[-16.57,19.73]]]},\"properties\":{\"id\":2608,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2524,2609,2691,2607,2523]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16,19.62],[-16.09,19.28],[-16.2,19.2],[-16.68,19.37],[-16.57,19.73],[-16,19.62]]]},\"properties\":{\"id\":2609,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7480,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2524,2610,2692,2691,2608]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.47,19.62],[-15.75,19.09],[-16.09,19.28],[-16,19.62],[-15.86,19.76],[-15.75,19.81],[-15.47,19.62]]]},\"properties\":{\"id\":2610,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2526,2611,2692,2609,2524,2525]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.94,19.28],[-13.11,19.06],[-13.42,19.06],[-13.75,19.28],[-13.7,19.45],[-13.47,19.67],[-12.97,19.7],[-12.94,19.28]]]},\"properties\":{\"id\":2615,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2616,2698,2697,2696,2614,2529,2530]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.66,19.9],[-3.32,19.76],[-3.21,19.14],[-3.23,19.14],[-3.71,19.06],[-3.88,19.37],[-3.66,19.9]]]},\"properties\":{\"id\":2633,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2632,2552,2634,2716,2715,2714]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.01,19.87],[-2.84,19.84],[-2.56,19.14],[-2.64,19.06],[-3.21,19.14],[-3.32,19.76],[-3.01,19.87]]]},\"properties\":{\"id\":2634,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2552,2553,2635,2717,2716,2633]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.07,19.53],[-0.79,19.7],[-0.76,19.7],[-0.45,19.14],[-0.48,19.09],[-1.1,19.11],[-1.07,19.53]]]},\"properties\":{\"id\":2638,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2637,2556,2557,2639,2721,2720]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.73,19.9],[1.07,19.53],[1.1,19.23],[0.7,19.25],[0.59,19.62],[0.73,19.9]]]},\"properties\":{\"id\":2641,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":10729,\"state\":6,\"province\":165,\"culture\":7,\"religion\":7,\"neighbors\":[2559,2560,2642,2723,2640]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.74,19.67],[2.28,19.59],[2.36,19.17],[2.31,19.03],[1.74,18.97],[1.55,19.11],[1.52,19.14],[1.74,19.67]]]},\"properties\":{\"id\":2643,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":11,\"neighbors\":[2642,2562,2644,2726,2725,2807,2724]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.81,19.93],[5.09,19.7],[4.87,19.23],[4.53,19.28],[4.33,19.53],[4.5,19.87],[4.81,19.93]]]},\"properties\":{\"id\":2648,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2567,2568,2649,2730,2647,2566]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.49,19.73],[10.69,19.7],[11,19.17],[10.88,19],[10.43,19.03],[10.38,19.09],[10.49,19.7],[10.49,19.73]]]},\"properties\":{\"id\":2659,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":19000,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2577,2578,2660,2742,2741,2740,2658]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.08,19.87],[11.11,19.87],[11.39,19.37],[11.39,19.34],[11,19.17],[10.69,19.7],[11.08,19.87]]]},\"properties\":{\"id\":2660,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":17000,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2578,2579,2580,2661,2742,2659]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.4,19.65],[14.74,19.95],[15.05,19.79],[15.1,19.48],[14.99,19.34],[14.4,19.65]]]},\"properties\":{\"id\":2667,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":8,\"neighbors\":[2666,2585,2586,2587,2669]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.91,18.41],[-20.05,18.33],[-20.45,18.47],[-20.59,18.97],[-20.48,19.17],[-20.33,19.17],[-19.74,18.64],[-19.91,18.41]]]},\"properties\":{\"id\":2684,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":94,\"culture\":7,\"religion\":7,\"neighbors\":[2768,2854,2767,2766,2683,2602,2685]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.09,19.06],[-14.03,18.75],[-14.68,18.5],[-14.71,18.53],[-14.71,18.58],[-14.46,19.06],[-14.09,19.06]]]},\"properties\":{\"id\":2695,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2613,2696,2778,2777,2776,2694]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.14,19.14],[-1.66,19.11],[-1.57,18.61],[-1.94,18.64],[-2.14,19.14]]]},\"properties\":{\"id\":2718,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2717,2636,2719,2801]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.1,19.11],[-0.48,19.09],[-0.39,18.67],[-0.51,18.61],[-1.12,18.47],[-1.24,18.61],[-1.15,19.09],[-1.1,19.11]]]},\"properties\":{\"id\":2720,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2637,2638,2721,2804,2803,2802,2719]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.53,19.28],[4.87,19.23],[4.95,19.11],[4.89,18.58],[4.87,18.55],[4.36,18.69],[4.28,18.86],[4.3,18.89],[4.53,19.28]]]},\"properties\":{\"id\":2730,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2647,2648,2649,2731,2814,2813,2812,2729]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.75,18.69],[6.61,19.03],[6.89,19.48],[7.12,19.14],[6.75,18.69]]]},\"properties\":{\"id\":2734,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":12000,\"state\":11,\"province\":149,\"culture\":8,\"religion\":11,\"neighbors\":[2735,2733,2652,2653]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.65,19.2],[8.07,19.28],[8.27,19.03],[8.3,18.61],[8.13,18.53],[7.59,18.55],[7.51,18.64],[7.54,19.09],[7.65,19.2]]]},\"properties\":{\"id\":2736,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":32913,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2653,2654,2655,2737,2820,2819,2818,2735]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.92,18.95],[12.15,19.34],[12.6,19.03],[12.29,18.75],[11.92,18.95]]]},\"properties\":{\"id\":2744,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2827,2661,2662,2745]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.99,18.86],[13.42,19.14],[13.56,18.78],[13.16,18.3],[12.97,18.67],[12.99,18.86]]]},\"properties\":{\"id\":2746,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":117,\"culture\":8,\"religion\":8,\"neighbors\":[2745,2663,2747,2829,2828]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.77,19.03],[14.99,19.28],[15.19,19.09],[15.22,18.58],[15.16,18.58],[14.71,18.89],[14.77,19.03]]]},\"properties\":{\"id\":2749,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":4973,\"state\":8,\"province\":122,\"culture\":8,\"religion\":8,\"neighbors\":[2748,2666,2669,2750,2833,2832]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.22,18.58],[15.19,19.09],[15.47,19.09],[15.5,18.75],[15.47,18.69],[15.3,18.55],[15.22,18.58]]]},\"properties\":{\"id\":2750,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":122,\"culture\":8,\"religion\":8,\"neighbors\":[2833,2749,2669,2751,2754,2834]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.71,18.53],[-15.38,18.11],[-15.52,18.19],[-15.55,18.67],[-15.07,18.83],[-14.71,18.58],[-14.71,18.53]]]},\"properties\":{\"id\":2776,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2695,2777,2862,2775,2693,2694]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.68,18.5],[-14.46,18.11],[-14.51,18.02],[-15.16,17.83],[-15.38,18.11],[-14.71,18.53],[-14.68,18.5]]]},\"properties\":{\"id\":2777,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2695,2778,2864,2863,2862,2776]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.7,18.47],[-13.61,18.36],[-13.89,17.8],[-14.37,18.08],[-13.84,18.53],[-13.7,18.47]]]},\"properties\":{\"id\":2779,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2696,2697,2865,2864,2778]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.77,18.53],[-10.77,18.08],[-10.83,17.99],[-11.19,18.02],[-11.33,18.47],[-11.19,18.61],[-10.77,18.53]]]},\"properties\":{\"id\":2784,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2701,2785,2871,2870,2783,2700]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.75,18.75],[-8.52,18.19],[-9,18.22],[-9,18.41],[-8.75,18.75]]]},\"properties\":{\"id\":2788,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2705,2789,2874,2787]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.49,19],[-8.24,18.36],[-8.24,18.13],[-8.3,18.13],[-8.52,18.19],[-8.75,18.75],[-8.66,19.11],[-8.49,19]]]},\"properties\":{\"id\":2789,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":8230,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2624,2706,2790,2875,2874,2788,2705]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.67,18.64],[-4.73,18.3],[-5.18,18.19],[-5.48,18.64],[-5.34,18.72],[-4.78,18.78],[-4.67,18.64]]]},\"properties\":{\"id\":2795,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5842,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2713,2796,2881,2794,2711,2712]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.17,18.33],[-2.17,18.3],[-2.64,18.08],[-2.78,18.16],[-2.62,18.86],[-2.17,18.33]]]},\"properties\":{\"id\":2800,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2717,2801,2886,2885,2799]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.55,19.11],[1.74,18.97],[1.86,18.55],[1.77,18.22],[1.46,18.13],[1.41,18.13],[1.27,18.27],[1.55,19.11]]]},\"properties\":{\"id\":2807,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2724,2643,2725,2808,2894,2893,2892]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.6,18.72],[5.99,18.72],[6.1,18.16],[5.96,17.97],[5.46,18.16],[5.43,18.19],[5.4,18.39],[5.6,18.72]]]},\"properties\":{\"id\":2815,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2731,2732,2816,2902,2901,2900,2814]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.03,18.5],[7.51,18.64],[7.59,18.55],[7.59,18.08],[7.17,18.05],[7.06,18.16],[7.03,18.5]]]},\"properties\":{\"id\":2818,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":17000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2817,2735,2736,2819,2904,2903]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.3,18.61],[8.58,18.44],[8.63,18.36],[8.16,17.72],[7.96,17.91],[8.13,18.53],[8.3,18.61]]]},\"properties\":{\"id\":2820,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":20000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2736,2737,2821,2906,2905,2819]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.68,18.67],[9.9,18.55],[9.87,18.11],[9.25,18.11],[9.42,18.58],[9.45,18.61],[9.68,18.67]]]},\"properties\":{\"id\":2822,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":17000,\"state\":8,\"province\":119,\"culture\":8,\"religion\":11,\"neighbors\":[2739,2740,2823,2908,2821,2738]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.8,17.8],[-17.86,17.69],[-18.2,17.58],[-18.53,17.99],[-18.48,18.02],[-17.89,17.94],[-17.8,17.8]]]},\"properties\":{\"id\":2857,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2772,2942,2941,2856,2770,2771]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.22,17.97],[-13.78,17.6],[-13.81,17.6],[-13.89,17.8],[-13.61,18.36],[-13.36,18.3],[-13.22,17.97]]]},\"properties\":{\"id\":2865,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2780,2866,2949,2864,2779,2697]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.18,18.05],[-12.68,17.58],[-12.91,17.77],[-12.91,17.8],[-12.71,18.13],[-12.38,18.33],[-12.18,18.05]]]},\"properties\":{\"id\":2867,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":10961,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2782,2868,2950,2866,2780,2781]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.84,17.66],[-12.35,17.32],[-12.63,17.52],[-12.68,17.58],[-12.18,18.05],[-11.92,17.88],[-11.84,17.66]]]},\"properties\":{\"id\":2868,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2869,2952,2951,2950,2867,2782]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.72,17.46],[-10.77,17.35],[-11.48,17.66],[-11.31,17.91],[-11.19,18.02],[-10.83,17.99],[-10.72,17.46]]]},\"properties\":{\"id\":2870,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2871,2955,2954,2869,2783,2784]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.15,18.11],[-10.1,17.63],[-10.72,17.46],[-10.83,17.99],[-10.77,18.08],[-10.15,18.11],[-10.15,18.11]]]},\"properties\":{\"id\":2871,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2786,2872,2955,2870,2784,2785]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.37,18.08],[-9.73,17.49],[-9.96,17.52],[-10.1,17.63],[-10.15,18.11],[-9.56,18.27],[-9.37,18.08]]]},\"properties\":{\"id\":2872,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2787,2873,2956,2955,2871,2786]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.1,18.11],[-7.9,17.49],[-8.04,17.35],[-8.47,17.74],[-8.3,18.13],[-8.24,18.13],[-8.1,18.11]]]},\"properties\":{\"id\":2875,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2790,2876,2960,2959,2874,2789]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.97,18.11],[-6.83,18.02],[-7.03,17.52],[-7.51,17.72],[-7.59,18.13],[-6.97,18.11]]]},\"properties\":{\"id\":2877,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2791,2792,2878,2961,2876]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.58,18.08],[-6.5,17.63],[-7,17.3],[-7.03,17.52],[-6.83,18.02],[-6.58,18.08],[-6.58,18.08]]]},\"properties\":{\"id\":2878,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2793,2879,2962,2961,2877,2792]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.05,17.99],[-5.82,17.58],[-5.96,17.44],[-6.33,17.35],[-6.5,17.63],[-6.58,18.08],[-6.05,17.99]]]},\"properties\":{\"id\":2879,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2793,2880,2964,2963,2962,2878]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.27,18.27],[1.41,18.13],[1.18,17.72],[0.65,17.66],[0.53,18.16],[0.53,18.19],[1.07,18.36],[1.27,18.27]]]},\"properties\":{\"id\":2892,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":130,\"culture\":7,\"religion\":7,\"neighbors\":[2724,2807,2893,2976,2891,2805,2806]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.76,17.3],[2.87,18.13],[3.23,17.99],[3.23,17.6],[2.76,17.3]]]},\"properties\":{\"id\":2896,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2980,2895,2810,2897]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.73,17.97],[5.06,17.58],[4.87,17.32],[4.47,17.44],[4.61,18.02],[4.73,17.97]]]},\"properties\":{\"id\":2899,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2814,2900,2984,2983,2898]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.73,17.97],[5.43,18.19],[5.46,18.16],[5.26,17.63],[5.06,17.58],[4.73,17.97]]]},\"properties\":{\"id\":2900,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2899,2814,2815,2901,2984]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.46,18.16],[5.96,17.97],[6.05,17.72],[5.57,17.35],[5.26,17.63],[5.46,18.16]]]},\"properties\":{\"id\":2901,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2900,2815,2902,2985,2984]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.67,17.97],[7.06,18.16],[7.17,18.05],[7.12,17.58],[7.03,17.49],[6.64,17.63],[6.67,17.97]]]},\"properties\":{\"id\":2903,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2902,2817,2818,2904,2988,2987]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.17,18.05],[7.59,18.08],[7.68,17.99],[7.45,17.63],[7.12,17.58],[7.17,18.05]]]},\"properties\":{\"id\":2904,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":20602,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2903,2818,2819,2905,2988]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.68,17.99],[7.96,17.91],[8.16,17.72],[8.16,17.69],[7.79,17.32],[7.45,17.63],[7.68,17.99]]]},\"properties\":{\"id\":2905,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2904,2819,2820,2906,2989,2988]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.35,18.11],[10.74,18.33],[10.8,18.33],[11.08,17.97],[11,17.77],[10.69,17.63],[10.27,17.77],[10.24,17.85],[10.35,18.11]]]},\"properties\":{\"id\":2910,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":26297,\"state\":8,\"province\":123,\"culture\":8,\"religion\":11,\"neighbors\":[2823,2824,2741,2825,2911,2995,2994,2909]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.81,17.13],[-24.89,17.02],[-25.4,17.1],[-25.31,17.69],[-25.06,17.69],[-24.78,17.38],[-24.81,17.13]]]},\"properties\":{\"id\":2928,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[2929,3017,3016,2927,2844,2845]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.1,17.04],[-19.35,16.85],[-19.86,17.1],[-19.77,17.55],[-19.1,17.07],[-19.1,17.04]]]},\"properties\":{\"id\":2938,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[2940,3027,3026,2937,2939]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.84,17.6],[-18.37,17.38],[-18.31,17.04],[-18.39,16.99],[-18.79,16.85],[-19.1,17.04],[-19.1,17.07],[-18.96,17.55],[-18.84,17.6]]]},\"properties\":{\"id\":2940,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2855,2856,2941,3029,3028,3027,2938,2939]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.66,17.07],[-17.69,17.02],[-18.31,17.04],[-18.37,17.38],[-18.2,17.58],[-17.86,17.69],[-17.66,17.07]]]},\"properties\":{\"id\":2941,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2942,3030,3029,2940,2856,2857]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.17,17.41],[-8.92,17.13],[-9.31,16.88],[-9.62,17.3],[-9.62,17.38],[-9.17,17.41]]]},\"properties\":{\"id\":2957,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2873,2958,3046,3045,2956]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.03,17.74],[-8.58,17.6],[-8.66,17.1],[-8.92,17.13],[-9.17,17.41],[-9.03,17.74]]]},\"properties\":{\"id\":2958,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":84,\"culture\":7,\"religion\":7,\"neighbors\":[2873,2874,2959,3046,2957]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.32,17.21],[-5.4,16.88],[-5.93,17.02],[-5.96,17.44],[-5.82,17.58],[-5.34,17.55],[-5.32,17.21]]]},\"properties\":{\"id\":2964,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":7919,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[2965,3053,3052,2963,2879,2880]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.12,17.58],[-4.56,17.18],[-4.56,17.1],[-4.73,16.88],[-5.32,17.21],[-5.34,17.55],[-5.29,17.58],[-5.12,17.58]]]},\"properties\":{\"id\":2965,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2881,2966,2967,3054,3053,2964,2880]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.26,17.32],[-3.29,16.99],[-3.63,16.85],[-3.88,17.02],[-3.88,17.35],[-3.77,17.44],[-3.26,17.32]]]},\"properties\":{\"id\":2968,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2884,2969,3056,3055,2967,2883]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.87,17.44],[-2.67,17.07],[-2.73,16.88],[-3.01,16.76],[-3.29,16.99],[-3.26,17.32],[-3.12,17.46],[-2.87,17.44]]]},\"properties\":{\"id\":2969,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5661,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2885,2970,3058,3057,3056,2968,2884]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.16,17.69],[8.27,17.63],[8.49,17.07],[8.41,17.02],[7.68,16.99],[7.79,17.32],[8.16,17.69]]]},\"properties\":{\"id\":2989,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":29155,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2905,2906,2990,3078,3077,2988]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.33,17.32],[11.64,17.49],[11.9,17.38],[11.98,17.16],[11.53,16.99],[11.33,17.3],[11.33,17.32]]]},\"properties\":{\"id\":2996,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":12000,\"state\":8,\"province\":123,\"culture\":8,\"religion\":11,\"neighbors\":[2995,2911,2912,2997,3084,3083]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.43,17.07],[12.49,17.49],[12.94,17.52],[13.05,17.41],[12.8,16.96],[12.74,16.96],[12.43,17.07]]]},\"properties\":{\"id\":2998,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":8,\"province\":116,\"culture\":8,\"religion\":8,\"neighbors\":[3085,2997,2914,2915,2999,3086]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.17,17.63],[14.65,17.55],[14.79,17.46],[14.91,17.04],[14.82,17.02],[14.2,17.07],[14.17,17.63]]]},\"properties\":{\"id\":3001,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":19000,\"state\":8,\"province\":122,\"culture\":8,\"religion\":11,\"neighbors\":[3000,2917,2918,3002,3090,3089]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.12,16.48],[-25.4,16.26],[-25.82,16.37],[-25.93,16.48],[-25.76,16.96],[-25.71,16.96],[-25.12,16.48]]]},\"properties\":{\"id\":3015,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[3016,3104,3103,3102,3014,2927]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.38,16.57],[-24.41,16.57],[-24.89,16.6],[-24.89,17.02],[-24.81,17.13],[-24.36,17.02],[-24.38,16.57]]]},\"properties\":{\"id\":3017,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[3018,3106,3105,3016,2928,2929]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.81,16.96],[-22.87,16.48],[-23.12,16.4],[-23.32,16.57],[-23.37,16.9],[-22.81,16.96]]]},\"properties\":{\"id\":3020,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[2932,3021,3108,3107,3019]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.41,16.76],[-19.52,16.6],[-19.88,16.54],[-20.05,16.65],[-20.08,16.93],[-19.86,17.1],[-19.35,16.85],[-19.41,16.76]]]},\"properties\":{\"id\":3026,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3027,3115,3114,3113,3025,2937,2938]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,16.46],[-18.98,16.23],[-19.41,16.76],[-19.35,16.85],[-19.1,17.04],[-18.79,16.85],[-18.76,16.46]]]},\"properties\":{\"id\":3027,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3028,3116,3115,3026,2938,2940]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.23,16.54],[-18.42,16.26],[-18.76,16.46],[-18.79,16.85],[-18.39,16.99],[-18.23,16.54]]]},\"properties\":{\"id\":3028,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3029,3117,3116,3027,2940]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.69,17.02],[-17.69,16.54],[-18.23,16.54],[-18.39,16.99],[-18.31,17.04],[-17.69,17.02]]]},\"properties\":{\"id\":3029,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2941,3030,3117,3028,2940]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.02,16.51],[-17.18,16.4],[-17.69,16.51],[-17.69,16.54],[-17.69,17.02],[-17.66,17.07],[-17.52,17.1],[-17.16,16.96],[-16.96,16.6],[-17.02,16.51]]]},\"properties\":{\"id\":3030,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3120,3119,3118,3117,3029,2941,2942,2943,3031]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.21,16.85],[-9.7,17.13],[-9.76,16.51],[-9.82,16.46],[-10.04,16.54],[-10.21,16.85]]]},\"properties\":{\"id\":3044,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3043,2956,3045,3133,3132]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.62,17.3],[-9.31,16.88],[-9.34,16.62],[-9.76,16.51],[-9.7,17.13],[-9.62,17.3]]]},\"properties\":{\"id\":3045,\"height\":9,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2956,2957,3046,3133,3044]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.18,17.07],[1.69,16.85],[1.69,16.82],[1.49,16.57],[1.15,16.34],[0.98,16.4],[0.87,16.62],[1.04,17.04],[1.18,17.07]]]},\"properties\":{\"id\":3065,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2976,2977,3066,3154,3153,3152,3151,3064]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.7,16.96],[14.15,16.99],[14.23,16.6],[14.06,16.4],[13.61,16.62],[13.7,16.96]]]},\"properties\":{\"id\":3088,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3087,3000,3089,3177,3176]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.38,17.24],[15.61,17.18],[15.67,17.13],[15.75,16.71],[15.67,16.54],[15.3,16.4],[15.05,16.99],[15.38,17.24]]]},\"properties\":{\"id\":3091,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":23622,\"state\":8,\"province\":121,\"culture\":8,\"religion\":11,\"neighbors\":[3002,3003,3004,3005,3092,3179,3090]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.75,16.71],[16.37,16.9],[16.43,16.79],[16.43,16.74],[16.14,16.34],[15.97,16.32],[15.67,16.54],[15.75,16.71]]]},\"properties\":{\"id\":3092,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3091,3005,3007,3093,3181,3180,3179]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.95,16.51],[-24.81,16.12],[-25.34,15.81],[-25.4,16.26],[-25.12,16.48],[-24.95,16.51]]]},\"properties\":{\"id\":3104,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":5,\"religion\":5,\"neighbors\":[3016,3105,3197,3103,3015]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.58,16.32],[-22.67,16.01],[-23.17,16.04],[-23.12,16.4],[-22.87,16.48],[-22.58,16.32]]]},\"properties\":{\"id\":3108,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":92,\"culture\":7,\"religion\":7,\"neighbors\":[3021,3109,3201,3107,3020]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.48,16.46],[-20.33,15.9],[-20.53,15.76],[-20.9,15.9],[-20.98,16.46],[-20.92,16.57],[-20.53,16.51],[-20.48,16.46]]]},\"properties\":{\"id\":3112,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3025,3113,3206,3205,3111,3023,3024]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.52,16.6],[-19.35,16.04],[-19.94,15.95],[-19.88,16.54],[-19.52,16.6]]]},\"properties\":{\"id\":3114,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3026,3115,3207,3113]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.41,16.76],[-18.98,16.23],[-19.07,16.09],[-19.35,16.04],[-19.35,16.04],[-19.52,16.6],[-19.41,16.76]]]},\"properties\":{\"id\":3115,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3026,3027,3116,3208,3207,3114]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.07,16.51],[-2.76,16.32],[-2.73,16.04],[-3.29,16.06],[-3.35,16.15],[-3.32,16.29],[-3.07,16.51]]]},\"properties\":{\"id\":3145,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":11575,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3056,3057,3146,3238,3237,3144]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.09,15.84],[-21.18,15.25],[-21.18,15.22],[-21.66,15.62],[-21.66,15.81],[-21.52,15.9],[-21.09,15.84]]]},\"properties\":{\"id\":3204,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3111,3205,3296,3295,3203,3110]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.35,16.04],[-19.32,15.42],[-19.35,15.42],[-19.8,15.45],[-20.02,15.9],[-19.94,15.95],[-19.35,16.04],[-19.35,16.04]]]},\"properties\":{\"id\":3207,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3115,3208,3299,3298,3206,3113,3114]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.92,15.56],[-18.25,15.11],[-18.37,15.14],[-18.53,15.34],[-18.53,15.78],[-18.28,15.95],[-17.97,15.87],[-17.92,15.56]]]},\"properties\":{\"id\":3210,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3211,3301,3390,3300,3209,3116,3117]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.95,15.98],[-11.76,15.56],[-11.98,15.39],[-12.32,15.45],[-12.21,15.95],[-11.95,15.98]]]},\"properties\":{\"id\":3221,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3128,3222,3313,3312,3220]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.69,15.78],[-1.69,15.67],[-2,15.2],[-2.28,15.34],[-2.17,15.95],[-1.69,15.78]]]},\"properties\":{\"id\":3240,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3147,3241,3331,3330,3239]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.69,15.78],[-1.43,15.92],[-1.1,15.76],[-1.04,15.64],[-1.24,15.28],[-1.38,15.2],[-1.69,15.67],[-1.69,15.78]]]},\"properties\":{\"id\":3241,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3240,3147,3148,3242,3333,3332,3331]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.73,15.78],[1.21,16.15],[1.18,15.48],[1.18,15.45],[0.96,15.48],[0.73,15.78]]]},\"properties\":{\"id\":3245,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3244,3152,3246,3337,3336]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.17,16.01],[14.54,16.06],[14.82,15.76],[14.74,15.53],[14.2,15.5],[14.17,16.01]]]},\"properties\":{\"id\":3270,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3269,3177,3178,3271,3361]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.23,15.03],[-23.65,14.64],[-24.07,14.83],[-23.51,15.39],[-23.4,15.39],[-23.23,15.03]]]},\"properties\":{\"id\":3291,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3292,3381,3380,3290,3200]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.72,15.39],[-17.66,14.86],[-17.83,14.72],[-18.06,14.81],[-18.25,15.11],[-17.92,15.56],[-17.72,15.39]]]},\"properties\":{\"id\":3301,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3211,3302,3392,3391,3390,3210]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.62,15.22],[-2.28,15.34],[-2,15.2],[-1.86,14.97],[-1.88,14.92],[-2.59,14.92],[-2.62,15.22]]]},\"properties\":{\"id\":3330,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3329,3239,3240,3331,3421,3420]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.69,15.67],[-1.38,15.2],[-1.49,15],[-1.86,14.97],[-2,15.2],[-1.69,15.67]]]},\"properties\":{\"id\":3331,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3240,3241,3332,3421,3330]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.96,15.48],[1.18,15.45],[1.18,14.86],[1.15,14.83],[0.7,14.81],[0.7,14.81],[0.53,15.22],[0.96,15.48]]]},\"properties\":{\"id\":3336,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3244,3245,3337,3427,3426,3425,3335]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.46,15.36],[10.57,15.36],[10.63,15.28],[10.69,15.14],[10.46,14.67],[10.29,14.72],[10.24,15.28],[10.46,15.36]]]},\"properties\":{\"id\":3354,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":14720,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3262,3263,3264,3355,3444,3443,3353]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.07,14.61],[-26.02,14.5],[-26.41,13.94],[-26.83,14.33],[-26.24,14.69],[-26.07,14.61]]]},\"properties\":{\"id\":3376,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":5,\"religion\":5,\"neighbors\":[3286,3377,3467,3466,3375]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.34,14.69],[-25.4,14.5],[-25.85,14.39],[-26.02,14.5],[-26.07,14.61],[-25.79,14.92],[-25.54,14.97],[-25.34,14.69]]]},\"properties\":{\"id\":3377,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3288,3378,3468,3467,3376,3286,3287]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.07,14.55],[-21.07,14.33],[-21.6,14.25],[-21.8,14.39],[-21.66,14.89],[-21.4,14.92],[-21.07,14.55]]]},\"properties\":{\"id\":3385,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3296,3386,3476,3475,3384,3295]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.55,14.81],[-19.8,14.27],[-19.97,14.3],[-20.17,14.75],[-20,15.08],[-19.97,15.11],[-19.55,14.81]]]},\"properties\":{\"id\":3388,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3298,3389,3478,3387,3297,3206]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.06,14.81],[-18.59,14.41],[-18.76,14.47],[-18.93,14.67],[-18.96,14.69],[-18.37,15.14],[-18.25,15.11],[-18.06,14.81]]]},\"properties\":{\"id\":3390,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3301,3391,3481,3480,3389,3300,3210]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.35,14.83],[-0.96,14.83],[-0.84,14.39],[-1.12,14.33],[-1.35,14.44],[-1.35,14.83]]]},\"properties\":{\"id\":3422,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3421,3332,3423,3514,3513]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.7,14.81],[0.7,14.81],[0.67,14.33],[0.53,14.27],[0.17,14.27],[0.22,14.69],[0.7,14.81]]]},\"properties\":{\"id\":3425,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3335,3336,3426,3517,3516,3424]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.31,14.86],[11.98,14.86],[12.04,14.81],[11.98,14.36],[11.45,14.22],[11.22,14.78],[11.31,14.86]]]},\"properties\":{\"id\":3446,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":26766,\"state\":8,\"province\":127,\"culture\":8,\"religion\":11,\"neighbors\":[3355,3356,3357,3447,3537,3445]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.57,14.78],[15.05,14.89],[15.19,14.53],[15.13,14.33],[14.77,14.25],[14.57,14.78]]]},\"properties\":{\"id\":3452,\"height\":9,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3451,3362,3363,3454,3543]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.85,14.39],[-25.76,13.94],[-26.41,13.91],[-26.41,13.94],[-26.02,14.5],[-25.85,14.39]]]},\"properties\":{\"id\":3467,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3377,3468,3554,3466,3376]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.09,14.41],[-22.67,14.22],[-22.75,13.91],[-23.23,13.97],[-23.26,13.99],[-23.29,14.25],[-23.09,14.41]]]},\"properties\":{\"id\":3473,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3381,3382,3474,3560,3559,3472]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.25,14.19],[-20.39,13.74],[-20.67,13.69],[-20.95,13.88],[-20.98,14.22],[-20.53,14.33],[-20.25,14.19]]]},\"properties\":{\"id\":3477,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3387,3478,3565,3564,3476,3386]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.27,13.99],[-19.49,13.6],[-19.77,13.88],[-19.74,14.19],[-19.43,14.16],[-19.27,13.99]]]},\"properties\":{\"id\":3479,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3480,3567,3566,3478,3389]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.42,14.08],[-18.51,13.91],[-18.93,13.69],[-19.1,13.91],[-18.76,14.47],[-18.59,14.41],[-18.42,14.08]]]},\"properties\":{\"id\":3481,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3391,3569,3568,3567,3480,3390]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.12,14.55],[14.68,14.19],[14.6,13.99],[14.17,13.85],[14.06,13.97],[13.98,14.27],[14.12,14.55]]]},\"properties\":{\"id\":3542,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3450,3451,3543,3629,3628,3541]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.47,13.71],[13.56,13.85],[14.06,13.97],[14.17,13.85],[14.06,13.29],[13.5,13.32],[13.47,13.71]]]},\"properties\":{\"id\":3628,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":20000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3627,3540,3541,3542,3629,3713]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.41,13.18],[-19.57,12.85],[-20.08,12.68],[-20.14,13.41],[-20.08,13.49],[-19.41,13.18]]]},\"properties\":{\"id\":3651,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3566,3652,3734,3650,3565]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.71,12.45],[-21.71,12.23],[-22.25,12.04],[-22.42,12.29],[-21.97,12.65],[-21.71,12.45]]]},\"properties\":{\"id\":3730,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3647,3731,3815,3814,3729]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.95,12.37],[-21.01,12.32],[-21.49,12.01],[-21.71,12.23],[-21.71,12.45],[-21.35,12.73],[-21.26,12.76],[-20.95,12.43],[-20.95,12.37]]]},\"properties\":{\"id\":3731,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3732,3817,3816,3815,3730,3647,3648,3649]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.14,12.54],[-20.05,12.2],[-20.5,11.92],[-20.7,12.18],[-20.14,12.54]]]},\"properties\":{\"id\":3733,\"height\":9,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3732,3734,3818,3817]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.86,12.79],[11.31,12.85],[11.39,12.65],[11.11,12.26],[10.88,12.26],[10.77,12.48],[10.86,12.79]]]},\"properties\":{\"id\":3791,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":38895,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3707,3708,3709,3792,3876,3790]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.39,12.65],[11.87,12.48],[11.87,12.23],[11.42,11.98],[11.11,12.26],[11.39,12.65]]]},\"properties\":{\"id\":3792,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":21526,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3791,3709,3793,3877,3876]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[16.03,12.87],[16.09,12.87],[16.34,12.62],[16.37,12.51],[16.23,12.32],[16,12.26],[15.95,12.32],[15.81,12.76],[16.03,12.87]]]},\"properties\":{\"id\":3802,\"height\":9,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3718,3719,3720,3803,3804,3885,3801,3800]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.8,11.28],[-21.85,10.86],[-22.02,10.75],[-22.58,11],[-22.61,11.53],[-22.42,11.64],[-21.8,11.28]]]},\"properties\":{\"id\":3897,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3898,3899,3896,3814]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.27,11.87],[-21.57,11.59],[-21.8,11.28],[-22.42,11.64],[-22.27,11.87]]]},\"properties\":{\"id\":3898,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3814,3815,3899,3897]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.42,11.5],[-20.22,11.17],[-20.22,10.92],[-20.92,10.66],[-21.01,10.78],[-21.01,11.48],[-20.9,11.53],[-20.62,11.62],[-20.42,11.5]]]},\"properties\":{\"id\":3900,\"height\":9,\"biome\":1,\"type\":\"island\",\"population\":9436,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3818,3901,3902,3899,3816,3817]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.97,37.33],[-7.62,37.38],[-7.48,38.08],[-7.31,38.03],[-6.97,37.33],[-6.97,37.33]]]},\"properties\":{\"id\":36,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":19505,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[111,110,35,37]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.44,37.78],[-6.97,37.33],[-7.31,38.03],[-6.61,38.31],[-6.58,38.28],[-6.44,37.78]]]},\"properties\":{\"id\":37,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":30000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[38,111,36]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.85,37.41],[-6.02,37.52],[-5.6,38.25],[-5.51,38.28],[-5.26,38.11],[-5.29,37.55],[-5.85,37.41]]]},\"properties\":{\"id\":39,\"height\":16,\"biome\":11,\"type\":\"island\",\"population\":27000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[113,112,38,40]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.05,37.52],[-4.7,37.44],[-4.73,38.11],[-4.44,38.28],[-4.05,37.52],[-4.05,37.52]]]},\"properties\":{\"id\":41,\"height\":16,\"biome\":11,\"type\":\"island\",\"population\":38311,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[116,115,40,42]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.95,37.38],[-3.15,37.58],[-3.01,38.17],[-2.39,38.14],[-2.59,37.58],[-2.81,37.33],[-2.95,37.38]]]},\"properties\":{\"id\":44,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":26000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[118,117,43,45,119]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.31,37.44],[0,37.61],[0,38.25],[0.82,38.11],[0.56,37.52],[0.31,37.44]]]},\"properties\":{\"id\":50,\"height\":16,\"biome\":11,\"type\":\"island\",\"population\":44341,\"state\":1,\"province\":5,\"culture\":3,\"religion\":12,\"neighbors\":[125,124,49,51]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.73,37.83],[7.65,38.2],[7.71,38.28],[8.55,38.14],[8.49,37.92],[8.16,37.5],[7.73,37.83]]]},\"properties\":{\"id\":64,\"height\":16,\"biome\":11,\"type\":\"island\",\"population\":27000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[138,63,66,65]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.24,37.19],[8.16,37.5],[8.49,37.92],[8.72,37.55],[8.44,37.24],[8.24,37.19]]]},\"properties\":{\"id\":65,\"height\":16,\"biome\":11,\"type\":\"island\",\"population\":25470,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[139,138,64,66,140]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.98,36.94],[7.2,37.38],[7.48,37.36],[7.79,36.94],[7.65,36.77],[7.59,36.74],[7.14,36.74],[6.98,36.94]]]},\"properties\":{\"id\":137,\"height\":16,\"biome\":11,\"type\":\"island\",\"population\":7960,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[212,136,63,138,214,288,213]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.83,36.91],[10.38,37.44],[11,37.8],[11.11,37.61],[11.08,36.94],[10.94,36.85],[10.83,36.91]]]},\"properties\":{\"id\":143,\"height\":16,\"biome\":11,\"type\":\"island\",\"population\":32416,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[219,142,69,70,144,220]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.72,36.24],[1.72,36.82],[1.97,36.91],[2.14,36.82],[2.31,36.43],[2.11,36.27],[1.72,36.24]]]},\"properties\":{\"id\":203,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":6000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[277,202,127,128,204,278]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.55,36.29],[6.75,36.94],[6.98,36.94],[7.14,36.74],[6.95,36.27],[6.55,36.29],[6.55,36.29]]]},\"properties\":{\"id\":212,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":5781,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[285,211,136,137,213,286]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.87,35.85],[-1.12,36.21],[-1.15,36.32],[-0.98,36.57],[-0.37,36.35],[-0.62,35.9],[-0.7,35.87],[-0.87,35.85]]]},\"properties\":{\"id\":272,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":9900,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[349,348,271,197,198,273,350]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,35.2],[-4.64,35.43],[-4.67,35.93],[-4.42,35.93],[-4.33,35.87],[-4.27,35.23],[-4.3,35.2]]]},\"properties\":{\"id\":342,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":13000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[418,417,341,265,266,343]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.46,35.34],[-1.57,35.76],[-1.12,36.21],[-0.87,35.85],[-0.98,35.57],[-1.18,35.4],[-1.46,35.34]]]},\"properties\":{\"id\":348,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":23000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[423,347,271,272,349,424]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.38,35.43],[6.47,35.62],[6.98,35.76],[7.12,35.68],[7.03,35.4],[6.64,35.2],[6.38,35.43]]]},\"properties\":{\"id\":363,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":17754,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[437,362,286,287,364,438]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.48,35.26],[7.14,35.23],[7.03,35.4],[7.12,35.68],[7.57,35.68],[7.62,35.48],[7.48,35.26]]]},\"properties\":{\"id\":364,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[440,439,438,363,287,365]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.15,34.5],[-3.21,34.47],[-3.71,34.87],[-3.74,35.2],[-3.09,35.29],[-3.04,34.81],[-3.15,34.5]]]},\"properties\":{\"id\":419,\"height\":16,\"biome\":9,\"type\":\"island\",\"population\":39614,\"state\":1,\"province\":9,\"culture\":4,\"religion\":12,\"neighbors\":[493,567,492,418,344,420]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.54,34.64],[5.43,34.89],[5.77,35.4],[5.77,35.4],[6.13,35.31],[6.1,34.7],[5.54,34.64]]]},\"properties\":{\"id\":436,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":28135,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[509,508,435,361,362,437]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.1,34.81],[8.13,35.15],[8.63,35.29],[8.72,35.23],[8.66,34.87],[8.16,34.73],[8.1,34.81]]]},\"properties\":{\"id\":441,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[513,440,366,367,442,514]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.51,34.25],[7.45,34.73],[8.1,34.81],[8.16,34.73],[8.24,34.45],[7.71,34.08],[7.51,34.25]]]},\"properties\":{\"id\":513,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":22000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[586,512,440,441,514,587]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.27,34.39],[8.24,34.45],[8.16,34.73],[8.66,34.87],[8.89,34.67],[8.75,34.31],[8.55,34.25],[8.27,34.39]]]},\"properties\":{\"id\":514,\"height\":16,\"biome\":10,\"type\":\"island\",\"population\":20786,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[588,587,513,441,442,515,589]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.34,33.41],[-18.79,33.24],[-19.18,33.64],[-18.82,34.08],[-18.34,33.44],[-18.34,33.41]]]},\"properties\":{\"id\":610,\"height\":16,\"biome\":2,\"type\":\"island\",\"population\":23737,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[611,684,609,537,538]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.04,32.12],[-19.49,31.9],[-19.74,32.12],[-19.27,32.54],[-19.15,32.57],[-19.04,32.12]]]},\"properties\":{\"id\":757,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":17702,\"state\":4,\"province\":38,\"culture\":9,\"religion\":9,\"neighbors\":[758,830,829,756,682]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.39,31.01],[-18.84,31.09],[-18.93,31.17],[-19.01,31.48],[-18.93,31.56],[-18.39,31.48],[-18.37,31.03],[-18.39,31.01]]]},\"properties\":{\"id\":905,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[979,978,977,904,830,831,906]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.45,30.47],[-18.76,30.39],[-19.04,30.59],[-18.84,31.09],[-18.39,31.01],[-18.45,30.47]]]},\"properties\":{\"id\":978,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[979,1050,1049,977,905]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.2,29.72],[-18.34,29.52],[-18.76,29.86],[-18.9,30.08],[-18.76,30.39],[-18.45,30.47],[-18.31,30.39],[-18.2,29.72]]]},\"properties\":{\"id\":1050,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":9000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[1051,1123,1122,1121,1049,978,979]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,29.86],[-19.01,29.52],[-19.32,29.55],[-19.35,29.75],[-19.24,29.94],[-18.9,30.08],[-18.76,29.86]]]},\"properties\":{\"id\":1121,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":6560,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[1050,1122,1195,1120,1048,1049]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.42,29.3],[-18.62,29.27],[-19.01,29.52],[-18.76,29.86],[-18.34,29.52],[-18.37,29.38],[-18.42,29.3]]]},\"properties\":{\"id\":1122,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[1197,1196,1195,1121,1050,1123]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.08,29.13],[1.63,29.47],[1.86,29.83],[1.97,29.83],[2.19,29.66],[2.22,29.38],[2.08,29.13]]]},\"properties\":{\"id\":1160,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1235,1234,1159,1088,1089,1161]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.98,29.02],[6.52,29.63],[6.58,29.77],[6.83,29.89],[6.86,29.89],[7.17,29.3],[6.98,29.02]]]},\"properties\":{\"id\":1169,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1244,1243,1168,1096,1097,1170]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.54,29.72],[8.02,30.28],[8.07,30.25],[8.04,29.41],[7.76,29.41],[7.65,29.49],[7.54,29.72]]]},\"properties\":{\"id\":1171,\"height\":16,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1170,1099,1028,1172,1245,1244]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.39,29.63],[9.73,30.14],[9.82,30.14],[9.96,30.03],[9.98,29.97],[9.62,29.49],[9.51,29.52],[9.39,29.63]]]},\"properties\":{\"id\":1174,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1247,1102,1031,1103,1104,1175,1248]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.62,29.49],[9.98,29.97],[10.21,29.77],[9.96,29.41],[9.79,29.35],[9.62,29.49]]]},\"properties\":{\"id\":1175,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1248,1174,1104,1176,1249]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.92,28.99],[4.87,29.52],[5.09,29.66],[5.54,29.38],[5.46,29.02],[5.01,28.91],[4.92,28.99]]]},\"properties\":{\"id\":1240,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1312,1239,1165,1166,1241,1313]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.98,29.02],[7.17,29.3],[7.65,29.49],[7.76,29.41],[7.48,28.74],[7.09,28.77],[6.98,28.88],[6.98,29.02]]]},\"properties\":{\"id\":1244,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1243,1169,1170,1171,1245,1317,1316]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.27,28.85],[9.82,29.07],[9.79,29.35],[9.96,29.41],[10.24,29.3],[10.29,28.88],[10.27,28.85]]]},\"properties\":{\"id\":1249,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":2,\"province\":15,\"culture\":6,\"religion\":11,\"neighbors\":[1250,1322,1248,1175,1176,1177]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.27,28.85],[10.29,28.88],[10.66,29.16],[10.74,29.13],[10.86,28.82],[10.74,28.71],[10.32,28.6],[10.27,28.85]]]},\"properties\":{\"id\":1250,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":36217,\"state\":2,\"province\":15,\"culture\":6,\"religion\":11,\"neighbors\":[1322,1249,1177,1179,1251,1324,1323]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.84,28.57],[-18.98,28.49],[-19.38,28.49],[-19.49,28.74],[-19.29,29.07],[-18.98,29.07],[-18.79,28.63],[-18.84,28.57]]]},\"properties\":{\"id\":1268,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":6928,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1269,1343,1342,1267,1194,1195,1196]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.42,28.77],[-18.25,28.38],[-18.51,28.15],[-18.84,28.57],[-18.79,28.63],[-18.42,28.77]]]},\"properties\":{\"id\":1269,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":9691,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1196,1270,1344,1343,1268]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.42,28.77],[-18.37,28.93],[-17.77,28.77],[-17.97,28.29],[-18.25,28.38],[-18.42,28.77]]]},\"properties\":{\"id\":1270,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1269,1196,1197,1271,1344]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.48,28.15],[-0.84,28.38],[-0.96,28.6],[-0.53,28.91],[-0.25,28.32],[-0.48,28.15]]]},\"properties\":{\"id\":1302,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1377,1376,1301,1229,1303]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.51,28.32],[0.42,28.57],[0.48,28.77],[0.62,28.85],[0.93,28.82],[0.96,28.38],[0.51,28.32]]]},\"properties\":{\"id\":1305,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":11,\"neighbors\":[1379,1378,1304,1231,1232,1306]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.31,28.32],[9.31,28.71],[9.56,28.82],[10.21,28.46],[9.39,28.21],[9.31,28.32]]]},\"properties\":{\"id\":1321,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":20000,\"state\":2,\"province\":15,\"culture\":6,\"religion\":11,\"neighbors\":[1394,1320,1248,1322,1396]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.21,28.46],[9.56,28.82],[9.82,29.07],[10.27,28.85],[10.32,28.6],[10.27,28.46],[10.21,28.46]]]},\"properties\":{\"id\":1322,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":2,\"province\":15,\"culture\":6,\"religion\":11,\"neighbors\":[1396,1321,1248,1249,1250,1323]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.74,28.71],[10.86,28.82],[11.08,28.82],[11.31,28.49],[10.94,28.43],[10.74,28.71]]]},\"properties\":{\"id\":1324,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":31702,\"state\":2,\"province\":18,\"culture\":6,\"religion\":6,\"neighbors\":[1323,1250,1251,1252,1325]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.91,28.4],[10.94,28.43],[11.31,28.49],[11.36,28.46],[11.39,28.4],[11.45,28.15],[11.42,28.12],[10.88,28.01],[10.91,28.4]]]},\"properties\":{\"id\":1325,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":12000,\"state\":2,\"province\":18,\"culture\":6,\"religion\":6,\"neighbors\":[1397,1323,1324,1252,1326,1327,1400,1398]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,27.79],[-18.98,27.73],[-19.24,27.76],[-19.27,27.79],[-19.38,28.46],[-19.38,28.49],[-18.98,28.49],[-18.76,27.79]]]},\"properties\":{\"id\":1342,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1343,1416,1415,1414,1341,1267,1268]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.59,27.93],[-18.76,27.82],[-18.76,27.79],[-18.98,28.49],[-18.84,28.57],[-18.51,28.15],[-18.59,27.93]]]},\"properties\":{\"id\":1343,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1344,1417,1416,1342,1268,1269]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.72,27.82],[-17.75,27.79],[-18.59,27.93],[-18.51,28.15],[-18.25,28.38],[-17.97,28.29],[-17.8,28.07],[-17.72,27.82]]]},\"properties\":{\"id\":1344,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1345,1418,1417,1343,1269,1270,1271]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.93,27.82],[-17.32,27.76],[-17.24,28.54],[-16.85,28.1],[-16.93,27.82]]]},\"properties\":{\"id\":1346,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1347,1419,1345,1272]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.9,27.65],[-1.12,27.79],[-0.96,28.29],[-0.84,28.38],[-0.48,28.15],[-0.53,27.82],[-0.62,27.76],[-0.9,27.65]]]},\"properties\":{\"id\":1376,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":11,\"neighbors\":[1449,1448,1375,1301,1302,1377,1450]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.51,27.87],[0.51,28.32],[0.96,28.38],[1.01,28.29],[1.01,28.01],[0.82,27.82],[0.56,27.82],[0.51,27.87]]]},\"properties\":{\"id\":1379,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":11,\"neighbors\":[1451,1378,1305,1306,1380,1453,1452]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.01,28.01],[1.01,28.29],[1.66,28.54],[1.52,27.98],[1.01,28.01]]]},\"properties\":{\"id\":1380,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":11,\"neighbors\":[1453,1379,1306,1381]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.14,27.93],[2.08,28.24],[2.5,28.43],[2.76,28.43],[2.81,28.35],[2.59,27.9],[2.47,27.82],[2.14,27.93]]]},\"properties\":{\"id\":1382,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1454,1381,1307,1308,1309,1383,1456]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.32,27.54],[3.21,28.26],[3.49,28.4],[3.52,28.4],[3.85,27.76],[3.35,27.51],[3.32,27.54]]]},\"properties\":{\"id\":1384,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1531,1383,1309,1310,1385,1457]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.24,27.76],[-19.55,27.34],[-19.94,27.4],[-20.11,27.84],[-19.91,27.93],[-19.27,27.79],[-19.24,27.76]]]},\"properties\":{\"id\":1414,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1342,1415,1489,1413,1340,1341]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.93,27.12],[-19.12,26.98],[-19.49,27.14],[-19.55,27.34],[-19.24,27.76],[-18.98,27.73],[-18.93,27.12]]]},\"properties\":{\"id\":1415,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1416,1491,1490,1489,1414,1342]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.23,27.23],[-18.48,27],[-18.93,27.12],[-18.98,27.73],[-18.76,27.79],[-18.76,27.82],[-18.23,27.23]]]},\"properties\":{\"id\":1416,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1417,1492,1491,1415,1342,1343]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.57,27.26],[-1.63,27.31],[-1.74,27.62],[-1.43,27.93],[-1.12,27.79],[-0.9,27.65],[-0.96,27.54],[-1.32,27.2],[-1.57,27.26]]]},\"properties\":{\"id\":1448,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":11,\"neighbors\":[1523,1522,1447,1374,1375,1376,1449,1524]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.45,27.14],[-0.62,27.76],[-0.53,27.82],[-0.11,27.56],[-0.03,27.31],[-0.45,27.14]]]},\"properties\":{\"id\":1450,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1525,1449,1376,1377,1451]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.47,27.76],[2.47,27.82],[2.59,27.9],[3.26,27.51],[2.81,27.26],[2.47,27.76]]]},\"properties\":{\"id\":1456,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1455,1454,1382,1383,1531]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.4,27.4],[3.35,27.51],[3.85,27.76],[4.02,27.73],[4.02,27.4],[3.82,27.06],[3.4,27.4]]]},\"properties\":{\"id\":1457,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":9845,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1532,1531,1384,1385,1458,1533]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.71,27.28],[7.65,27.65],[8.1,27.96],[8.33,27.65],[8.33,27.45],[7.96,27.26],[7.71,27.28]]]},\"properties\":{\"id\":1465,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":20000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1540,1464,1392,1393,1466,1541]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.86,27.28],[8.72,27.9],[8.72,27.9],[9.25,27.65],[9.25,27.42],[8.86,27.28]]]},\"properties\":{\"id\":1467,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":12000,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1542,1466,1393,1394,1468]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.27,27.82],[10.38,27.87],[10.57,27.79],[10.72,27.45],[10.57,27.09],[10.41,27],[10.24,27.37],[10.27,27.82]]]},\"properties\":{\"id\":1470,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":23909,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1469,1396,1397,1471,1472,1545,1544]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.66,26.81],[-20.02,26.75],[-20.14,27.14],[-19.94,27.4],[-19.55,27.34],[-19.49,27.14],[-19.66,26.81]]]},\"properties\":{\"id\":1489,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":16041,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1490,1564,1488,1413,1414,1415]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.1,26.58],[-19.35,26.44],[-19.66,26.81],[-19.49,27.14],[-19.12,26.98],[-19.1,26.58]]]},\"properties\":{\"id\":1490,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1491,1565,1564,1489,1415]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.21,26.81],[0.45,26.61],[0.37,26.72],[0.67,27.14],[1.13,27.14],[1.21,26.81]]]},\"properties\":{\"id\":1527,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1528,1602,1601,1526,1452]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.23,26.81],[3.4,27.4],[3.82,27.06],[3.88,26.86],[3.66,26.7],[3.23,26.81]]]},\"properties\":{\"id\":1532,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":8467,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1607,1531,1457,1533,1608]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.03,26.67],[5.01,27],[5.37,27.14],[5.68,26.84],[5.43,26.61],[5.12,26.61],[5.03,26.67]]]},\"properties\":{\"id\":1535,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":42413,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1609,1534,1460,1536,1611,1610]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.61,26.78],[6.78,27.09],[7,27.17],[7.14,26.64],[7.14,26.64],[6.75,26.64],[6.61,26.78]]]},\"properties\":{\"id\":1538,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":11000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1612,1537,1463,1539,1614,1613]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.87,27.09],[10.24,27.37],[10.41,27],[10.38,26.95],[9.96,26.84],[9.93,26.84],[9.87,27.09]]]},\"properties\":{\"id\":1544,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":9000,\"state\":2,\"province\":14,\"culture\":6,\"religion\":11,\"neighbors\":[1543,1469,1470,1545,1546,1619]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.82,26.14],[-18.96,25.86],[-19.46,26.14],[-19.49,26.16],[-19.35,26.44],[-19.1,26.58],[-18.93,26.53],[-18.82,26.14]]]},\"properties\":{\"id\":1565,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1566,1641,1640,1639,1564,1490,1491]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.53,26.42],[-14.06,26.28],[-14.09,26.61],[-13.5,26.78],[-13.39,26.72],[-13.53,26.42]]]},\"properties\":{\"id\":1575,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1576,1650,1574,1500,1501]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.6,26.14],[1.66,26.61],[1.72,26.61],[2.19,26.58],[2.36,26.3],[2.22,25.94],[1.66,25.97],[1.6,26.14]]]},\"properties\":{\"id\":1604,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":9000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1678,1603,1528,1529,1605,1680,1679]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.66,26.7],[3.88,26.86],[4.25,26.75],[4.42,26.44],[4.39,26.39],[4.28,26.16],[3.91,26.16],[3.6,26.33],[3.66,26.7]]]},\"properties\":{\"id\":1608,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":8907,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1607,1532,1533,1534,1609,1684,1683,1682]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.1,26.25],[6.19,26.78],[6.61,26.78],[6.75,26.64],[6.75,26.19],[6.41,26.08],[6.19,26.11],[6.1,26.25]]]},\"properties\":{\"id\":1612,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":25866,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1686,1611,1537,1538,1613,1688,1687]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.34,26.22],[-18.48,25.66],[-18.93,25.77],[-18.96,25.86],[-18.82,26.14],[-18.34,26.22]]]},\"properties\":{\"id\":1641,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1566,1642,1719,1640,1565]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.94,26.14],[-12.68,25.69],[-12.99,25.52],[-13.44,25.77],[-13.36,26.02],[-12.94,26.14]]]},\"properties\":{\"id\":1651,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1576,1652,1730,1729,1650]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.04,25.61],[-1.07,25.55],[-1.66,25.63],[-1.69,26.02],[-1.6,26.11],[-1.18,26.11],[-1.01,25.94],[-1.04,25.61]]]},\"properties\":{\"id\":1673,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":8633,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1674,1752,1751,1672,1597,1598,1599]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.45,25.47],[-1.04,25.61],[-1.01,25.94],[-0.56,26.22],[-0.28,25.88],[-0.28,25.88],[-0.45,25.47]]]},\"properties\":{\"id\":1674,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1753,1752,1673,1599,1600,1675]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.04,25.66],[1.1,26.16],[1.6,26.14],[1.66,25.97],[1.52,25.69],[1.04,25.66]]]},\"properties\":{\"id\":1678,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1756,1677,1603,1604,1679]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.22,25.94],[2.36,26.3],[2.84,26.33],[2.93,26.19],[2.5,25.58],[2.42,25.61],[2.33,25.69],[2.22,25.94]]]},\"properties\":{\"id\":1680,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1679,1604,1605,1606,1681,1758,1757]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.54,26.3],[3.6,26.33],[3.91,26.16],[3.6,25.63],[3.35,25.63],[3.32,25.66],[3.26,25.94],[3.54,26.3]]]},\"properties\":{\"id\":1682,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1606,1607,1608,1683,1760,1759,1681]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.12,25.77],[7.03,26],[7.14,26.16],[7.59,26.39],[7.76,26.11],[7.37,25.72],[7.12,25.77],[7.12,25.77]]]},\"properties\":{\"id\":1689,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":18000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1766,1688,1613,1614,1615,1690,1767]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.51,25.75],[-14.6,25.13],[-14.82,25.16],[-14.99,25.61],[-14.57,25.86],[-14.51,25.75]]]},\"properties\":{\"id\":1726,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":12740,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1649,1727,1802,1725,1648]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.03,25.24],[-14.6,25.13],[-14.6,25.13],[-14.51,25.75],[-13.95,25.47],[-14.03,25.24]]]},\"properties\":{\"id\":1727,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1728,1803,1802,1726,1649]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.69,25.07],[-2.28,24.96],[-2.31,24.96],[-2.19,25.55],[-1.8,25.52],[-1.69,25.07]]]},\"properties\":{\"id\":1750,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1751,1826,1825,1749,1672]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.47,25.41],[6.69,25.63],[7.12,25.77],[7.12,25.77],[7.03,25.13],[6.89,25.02],[6.5,25.16],[6.47,25.41]]]},\"properties\":{\"id\":1766,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":2,\"province\":13,\"culture\":6,\"religion\":11,\"neighbors\":[1765,1687,1688,1689,1767,1843,1842]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.91,25.1],[-12.82,24.71],[-13.11,24.6],[-13.25,24.6],[-13.39,24.71],[-13.42,24.96],[-13.39,25.02],[-13.02,25.19],[-12.91,25.1]]]},\"properties\":{\"id\":1805,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1730,1806,1884,1883,1882,1804,1728,1729]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.93,25.07],[10.07,25.1],[10.72,24.57],[10.69,24.51],[10.69,24.51],[9.96,24.46],[9.87,24.68],[9.93,25.07]]]},\"properties\":{\"id\":1848,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":20000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[1847,1772,1849,1928,1927,1926,1925]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.72,24.57],[10.88,24.65],[11.39,24.37],[11.36,23.95],[10.94,24.01],[10.69,24.51],[10.72,24.57]]]},\"properties\":{\"id\":1928,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":20000,\"state\":3,\"province\":19,\"culture\":8,\"religion\":11,\"neighbors\":[1848,1849,1850,1929,2007,1927]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.22,23.93],[4.95,24.01],[4.78,23.65],[4.44,23.59],[4.28,23.67],[4.22,23.93]]]},\"properties\":{\"id\":1995,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":51,\"culture\":7,\"religion\":11,\"neighbors\":[1994,1916,1996,2081,2079]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.13,23.25],[6.19,23.79],[6.44,23.93],[6.69,23.39],[6.44,23.25],[6.13,23.25]]]},\"properties\":{\"id\":1998,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2085,1997,1919,1999,2086]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.7,23.06],[-2.87,22.44],[-2.87,22.44],[-3.07,22.44],[-3.23,22.98],[-3.07,23.23],[-2.7,23.06]]]},\"properties\":{\"id\":2148,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":6012,\"state\":6,\"province\":62,\"culture\":7,\"religion\":11,\"neighbors\":[2065,2149,2225,2224,2147,2064]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.11,22.92],[-2.14,22.5],[-2.19,22.44],[-2.87,22.44],[-2.7,23.06],[-2.45,23.14],[-2.11,22.92]]]},\"properties\":{\"id\":2149,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2066,2150,2226,2225,2148,2065]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.65,22.3],[-16.62,21.8],[-16.68,21.69],[-17.1,21.72],[-17.21,21.94],[-17.18,22.14],[-16.65,22.3]]]},\"properties\":{\"id\":2200,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2120,2201,2277,2276,2275,2199]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.56,22.33],[-13.02,22.33],[-13.19,21.77],[-13.56,21.8],[-13.58,21.8],[-13.56,22.33]]]},\"properties\":{\"id\":2207,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[2206,2127,2208,2283,2282]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.02,21.77],[-19.77,21.3],[-19.97,20.9],[-20.05,20.93],[-20.5,21.74],[-20.48,21.8],[-20.19,21.8],[-20.02,21.77]]]},\"properties\":{\"id\":2270,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":77,\"culture\":7,\"religion\":7,\"neighbors\":[2195,2271,2348,2428,2347,2269,2194]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,21.6],[-3.94,21.72],[-3.94,21.13],[-4.22,21.13],[-4.3,21.6]]]},\"properties\":{\"id\":2296,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":64,\"culture\":7,\"religion\":7,\"neighbors\":[2295,2221,2297,2377]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.18,21.24],[-3.37,20.82],[-3.83,20.9],[-3.94,21.13],[-3.29,21.46],[-3.18,21.24]]]},\"properties\":{\"id\":2378,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":75,\"culture\":7,\"religion\":7,\"neighbors\":[2298,2379,2462,2377,2297]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.08,21.44],[0.06,21.35],[0.06,20.88],[-0.37,20.82],[-0.48,21.16],[-0.28,21.44],[-0.08,21.44]]]},\"properties\":{\"id\":2384,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":11899,\"state\":6,\"province\":57,\"culture\":7,\"religion\":7,\"neighbors\":[2303,2304,2385,2468,2383,2302]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.77,21.52],[2.08,21.52],[2.33,21.35],[2,20.82],[1.86,20.82],[1.66,21.41],[1.77,21.52]]]},\"properties\":{\"id\":2388,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2306,2307,2308,2389,2472,2387]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.02,20.82],[2,20.82],[2.33,21.35],[2.64,21.44],[2.73,21.32],[2.59,20.88],[2.02,20.82]]]},\"properties\":{\"id\":2389,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":58,\"culture\":7,\"religion\":11,\"neighbors\":[2473,2472,2388,2308,2309,2390]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.97,20.82],[10.69,21.32],[10.8,21.44],[11.39,21.1],[11.39,21.02],[11,20.82],[10.97,20.82]]]},\"properties\":{\"id\":2405,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":13000,\"state\":8,\"province\":115,\"culture\":8,\"religion\":11,\"neighbors\":[2488,2404,2323,2324,2406,2489]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.39,21.1],[11.59,21.35],[12.01,21.21],[12.07,20.96],[11.62,20.71],[11.39,21.02],[11.39,21.1]]]},\"properties\":{\"id\":2406,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":17706,\"state\":8,\"province\":110,\"culture\":8,\"religion\":11,\"neighbors\":[2405,2324,2325,2408,2407,2489]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.62,20.71],[12.07,20.96],[12.43,20.76],[12.43,20.74],[12.38,20.62],[11.98,20.43],[11.62,20.65],[11.62,20.71]]]},\"properties\":{\"id\":2407,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":20057,\"state\":8,\"province\":110,\"culture\":8,\"religion\":11,\"neighbors\":[2489,2406,2408,2409,2492,2491,2490]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.15,20.68],[-19.32,20.26],[-19.94,20.29],[-19.94,20.85],[-19.38,20.85],[-19.15,20.68]]]},\"properties\":{\"id\":2429,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2349,2430,2518,2428,2348]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.43,20.65],[-1.49,20.29],[-2.19,20.29],[-2.22,20.35],[-2.19,20.51],[-2,20.65],[-1.6,20.79],[-1.46,20.71],[-1.43,20.65]]]},\"properties\":{\"id\":2465,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2467,2466,2555,2554,2464,2380,2381,2382]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.67,20.07],[-15.75,19.81],[-15.86,19.76],[-16.42,20.26],[-16.26,20.43],[-15.75,20.29],[-15.67,20.07]]]},\"properties\":{\"id\":2525,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":12069,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2437,2526,2610,2524,2435,2436]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.32,20.37],[-9.98,19.79],[-10.32,19.56],[-10.46,19.65],[-10.63,20.09],[-10.32,20.37]]]},\"properties\":{\"id\":2535,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":67,\"culture\":7,\"religion\":7,\"neighbors\":[2446,2536,2621,2620,2534]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.55,20.12],[-6.38,19.53],[-6.41,19.42],[-6.92,19.65],[-6.67,20.12],[-6.55,20.12]]]},\"properties\":{\"id\":2544,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2454,2545,2628,2627,2543]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.24,20.12],[-6.13,19.79],[-6.38,19.53],[-6.55,20.12],[-6.38,20.18],[-6.24,20.12]]]},\"properties\":{\"id\":2545,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2455,2546,2628,2544,2454]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.51,20.4],[0.17,20.18],[0.17,20.18],[0,19.65],[-0.51,19.9],[-0.51,20.4]]]},\"properties\":{\"id\":2558,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2557,2468,2469,2559,2639]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.11,19.87],[11.33,20.18],[12.01,19.84],[12.01,19.81],[11.39,19.37],[11.11,19.87]]]},\"properties\":{\"id\":2580,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":37151,\"state\":8,\"province\":111,\"culture\":8,\"religion\":11,\"neighbors\":[2660,2579,2490,2491,2661]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.73,19.9],[-2.14,19.87],[-2.02,19.73],[-2.22,19.23],[-2.56,19.14],[-2.84,19.84],[-2.73,19.9]]]},\"properties\":{\"id\":2635,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2553,2554,2555,2636,2717,2634]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.09,19.7],[5.48,19.79],[5.65,19.59],[5.63,19.34],[5.48,19.09],[4.95,19.11],[4.87,19.23],[5.09,19.7]]]},\"properties\":{\"id\":2649,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":11,\"province\":145,\"culture\":7,\"religion\":11,\"neighbors\":[2648,2568,2569,2650,2732,2731,2730]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.66,19.59],[8.69,19.7],[9.31,19.67],[9.28,19.37],[9.2,19.25],[9.03,19.23],[8.66,19.59]]]},\"properties\":{\"id\":2656,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":13000,\"state\":11,\"province\":150,\"culture\":8,\"religion\":11,\"neighbors\":[2655,2574,2575,2657,2739,2738]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.61,19.84],[14.15,19.79],[14.32,19.65],[14.26,19.42],[14.06,19.14],[13.53,19.25],[13.56,19.76],[13.61,19.84]]]},\"properties\":{\"id\":2665,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":29165,\"state\":8,\"province\":117,\"culture\":8,\"religion\":11,\"neighbors\":[2583,2584,2585,2666,2748,2747,2664]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.49,19.23],[-1.15,19.09],[-1.24,18.61],[-1.57,18.61],[-1.57,18.61],[-1.66,19.11],[-1.49,19.23]]]},\"properties\":{\"id\":2719,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2636,2637,2720,2802,2801,2718]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.1,19.23],[1.21,19.14],[0.98,18.72],[0.48,18.78],[0.56,19.14],[0.7,19.25],[1.1,19.23]]]},\"properties\":{\"id\":2723,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":165,\"culture\":7,\"religion\":7,\"neighbors\":[2641,2642,2724,2806,2722,2640]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.84,18.53],[-14.37,18.08],[-14.46,18.11],[-14.68,18.5],[-14.03,18.75],[-13.84,18.53]]]},\"properties\":{\"id\":2778,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2696,2779,2864,2777,2695]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.85,18.83],[-3.68,18.58],[-4.05,18.16],[-4.08,18.19],[-4.27,18.72],[-4.19,18.83],[-3.85,18.83]]]},\"properties\":{\"id\":2797,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":4959,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2714,2715,2798,2882,2796,2713]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.62,18.86],[-2.78,18.16],[-3.21,18.22],[-3.26,18.36],[-2.64,19.03],[-2.62,18.86]]]},\"properties\":{\"id\":2799,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":105,\"culture\":7,\"religion\":7,\"neighbors\":[2717,2800,2885,2798,2716]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.28,18.05],[-16.12,17.58],[-16.26,17.32],[-16.68,17.69],[-16.68,17.8],[-16.28,18.05]]]},\"properties\":{\"id\":2860,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2774,2861,2945,2944,2859]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.16,17.83],[-15.16,17.58],[-15.67,17.58],[-15.81,17.8],[-15.75,18.05],[-15.52,18.19],[-15.38,18.11],[-15.16,17.83]]]},\"properties\":{\"id\":2862,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2777,2863,2946,2945,2861,2775,2776]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.54,17.44],[-14.6,17.38],[-15.16,17.55],[-15.16,17.58],[-15.16,17.83],[-14.51,18.02],[-14.54,17.44]]]},\"properties\":{\"id\":2863,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2864,2948,2947,2946,2862,2777]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.81,17.6],[-13.92,17.52],[-14.54,17.44],[-14.51,18.02],[-14.46,18.11],[-14.37,18.08],[-13.89,17.8],[-13.81,17.6]]]},\"properties\":{\"id\":2864,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2865,2949,2948,2863,2777,2778,2779]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.91,17.77],[-13.39,17.27],[-13.78,17.6],[-13.22,17.97],[-12.91,17.8],[-12.91,17.77]]]},\"properties\":{\"id\":2866,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2867,2950,2949,2865,2780]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.59,18.13],[-7.51,17.72],[-7.65,17.55],[-7.9,17.49],[-8.1,18.11],[-7.59,18.16],[-7.59,18.13]]]},\"properties\":{\"id\":2876,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2791,2877,2961,2960,2875,2790]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.1,18.16],[6.5,18.27],[6.67,17.97],[6.64,17.63],[6.44,17.58],[6.24,17.58],[6.05,17.72],[5.96,17.97],[6.1,18.16]]]},\"properties\":{\"id\":2902,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5686,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2815,2816,2817,2903,2987,2986,2985,2901]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.91,18.02],[15.1,17.94],[15.22,17.66],[14.79,17.46],[14.65,17.55],[14.91,18.02]]]},\"properties\":{\"id\":2918,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":10000,\"state\":8,\"province\":122,\"culture\":8,\"religion\":8,\"neighbors\":[2917,2833,2919,3002,3001]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.93,17.46],[-16.87,17.18],[-17.16,16.96],[-17.52,17.1],[-17.21,17.49],[-16.93,17.46]]]},\"properties\":{\"id\":2943,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2859,2944,3031,3030,2942]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.26,17.32],[-16.17,17.1],[-16.62,16.99],[-16.87,17.18],[-16.93,17.46],[-16.68,17.69],[-16.26,17.32]]]},\"properties\":{\"id\":2944,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":72,\"culture\":7,\"religion\":7,\"neighbors\":[2860,2945,3032,3031,2943,2859]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.67,17.58],[-15.81,17.04],[-15.81,17.04],[-16.09,17.02],[-16.17,17.1],[-16.26,17.32],[-16.12,17.58],[-15.81,17.8],[-15.67,17.58]]]},\"properties\":{\"id\":2945,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2862,2946,3034,3033,3032,2944,2860,2861]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.16,17.55],[-15.3,17.16],[-15.38,17.07],[-15.81,17.04],[-15.67,17.58],[-15.16,17.58],[-15.16,17.55]]]},\"properties\":{\"id\":2946,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[2863,2947,3035,3034,2945,2862]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.57,17.02],[-14.6,16.9],[-15.3,17.16],[-15.16,17.55],[-14.6,17.38],[-14.57,17.02]]]},\"properties\":{\"id\":2947,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2948,3036,3035,2946,2863]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.54,17.44],[-13.92,17.52],[-14.01,17.13],[-14.57,17.02],[-14.6,17.38],[-14.54,17.44]]]},\"properties\":{\"id\":2948,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2863,2864,2949,3036,2947]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.36,17.1],[-13.5,16.96],[-13.87,16.93],[-14.01,17.13],[-13.92,17.52],[-13.81,17.6],[-13.78,17.6],[-13.39,17.27],[-13.36,17.1]]]},\"properties\":{\"id\":2949,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2950,3038,3037,3036,2948,2864,2865,2866]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.63,17.52],[-13.08,17.02],[-13.36,17.1],[-13.39,17.27],[-12.91,17.77],[-12.68,17.58],[-12.63,17.52]]]},\"properties\":{\"id\":2950,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2868,2951,3038,2949,2866,2867]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.62,17.38],[-9.62,17.3],[-9.7,17.13],[-10.21,16.85],[-10.24,16.88],[-9.96,17.52],[-9.73,17.49],[-9.62,17.38]]]},\"properties\":{\"id\":2956,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2873,2957,3045,3044,3043,2955,2872]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.83,17.02],[2.45,17.44],[2.7,17.24],[2.73,17.18],[2.59,16.96],[2.25,16.74],[1.83,16.96],[1.83,17.02]]]},\"properties\":{\"id\":2979,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":8,\"neighbors\":[2977,2978,2895,2980,3068,3067,3066]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.76,17.3],[3.23,17.6],[3.46,17.35],[3.09,16.96],[2.73,17.18],[2.7,17.24],[2.76,17.3]]]},\"properties\":{\"id\":2980,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2895,2896,2897,2981,3068,2979]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.62,16.99],[-16.85,16.65],[-16.96,16.6],[-17.16,16.96],[-16.87,17.18],[-16.62,16.99]]]},\"properties\":{\"id\":3031,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[2944,3032,3120,3030,2943]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.09,17.02],[-16.17,16.54],[-16.37,16.43],[-16.85,16.65],[-16.62,16.99],[-16.17,17.1],[-16.09,17.02]]]},\"properties\":{\"id\":3032,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[2945,3033,3121,3120,3031,2944]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.58,16.51],[-15.86,16.26],[-16.17,16.54],[-16.09,17.02],[-15.81,17.04],[-15.58,16.51]]]},\"properties\":{\"id\":3033,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[3034,3122,3121,3032,2945]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.16,16.54],[-15.24,16.46],[-15.58,16.51],[-15.81,17.04],[-15.81,17.04],[-15.38,17.07],[-15.16,16.54]]]},\"properties\":{\"id\":3034,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[3035,3123,3122,3033,2945,2946]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.6,16.68],[-14.65,16.62],[-15.16,16.54],[-15.38,17.07],[-15.3,17.16],[-14.6,16.9],[-14.6,16.68]]]},\"properties\":{\"id\":3035,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3036,3124,3123,3034,2946,2947]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.58,16.96],[-8.61,16.62],[-9.17,16.51],[-9.34,16.62],[-9.31,16.88],[-8.92,17.13],[-8.66,17.1],[-8.58,16.96]]]},\"properties\":{\"id\":3046,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2959,3047,3134,3133,3045,2957,2958]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.05,16.9],[-4.22,16.4],[-4.25,16.34],[-4.75,16.65],[-4.73,16.88],[-4.56,17.1],[-4.05,16.9]]]},\"properties\":{\"id\":3054,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2967,3055,3143,3142,3053,2965]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.73,16.88],[-2.39,16.57],[-2.76,16.32],[-3.07,16.51],[-3.01,16.76],[-2.73,16.88]]]},\"properties\":{\"id\":3057,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2969,3058,3146,3145,3056]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.49,17.07],[8.8,17.04],[8.63,16.48],[8.27,16.46],[8.41,17.02],[8.49,17.07]]]},\"properties\":{\"id\":3078,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":13000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2989,2990,3079,3166,3077]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.89,17.04],[9.14,16.93],[9.28,16.74],[9.28,16.74],[8.89,16.32],[8.63,16.48],[8.8,17.04],[8.89,17.04]]]},\"properties\":{\"id\":3079,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":17000,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[2990,2991,2992,3080,3167,3166,3078]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,16.46],[-18.42,16.26],[-18.28,15.95],[-18.53,15.78],[-18.82,15.81],[-19.07,16.09],[-18.98,16.23],[-18.76,16.46]]]},\"properties\":{\"id\":3116,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3027,3028,3117,3210,3209,3208,3115]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.69,16.51],[-17.86,15.95],[-17.97,15.87],[-18.28,15.95],[-18.42,16.26],[-18.23,16.54],[-17.69,16.54],[-17.69,16.51]]]},\"properties\":{\"id\":3117,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3030,3118,3211,3210,3116,3028,3029]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.18,16.4],[-17.16,15.81],[-17.86,15.95],[-17.69,16.51],[-17.18,16.4]]]},\"properties\":{\"id\":3118,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3030,3119,3211,3117]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.37,16.43],[-16.54,15.98],[-17.02,16.51],[-16.96,16.6],[-16.85,16.65],[-16.37,16.43]]]},\"properties\":{\"id\":3120,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3032,3121,3119,3030,3031]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.58,16.51],[-15.24,16.46],[-15.27,16.15],[-15.81,16.04],[-15.86,16.26],[-15.58,16.51]]]},\"properties\":{\"id\":3122,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":91,\"culture\":7,\"religion\":7,\"neighbors\":[3033,3034,3123,3215,3121]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.08,16.51],[-1.43,16.23],[-1.43,15.92],[-1.69,15.78],[-2.17,15.95],[-2.19,15.98],[-2.14,16.48],[-2.08,16.51]]]},\"properties\":{\"id\":3147,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3058,3059,3148,3241,3240,3239,3146]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.01,16.4],[-0.93,15.95],[-1.1,15.76],[-1.43,15.92],[-1.43,16.23],[-1.27,16.43],[-1.01,16.4]]]},\"properties\":{\"id\":3148,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3061,3149,3242,3241,3147,3059]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.49,16.57],[1.77,16.12],[1.69,16.01],[1.21,16.15],[1.15,16.34],[1.49,16.57]]]},\"properties\":{\"id\":3153,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":2000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3065,3154,3247,3246,3152]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.69,16.82],[1.97,16.2],[1.77,16.12],[1.49,16.57],[1.69,16.82]]]},\"properties\":{\"id\":3154,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":2000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3065,3066,3247,3153]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.29,16.68],[10.74,16.54],[10.74,16.04],[10.18,15.98],[10.15,16.01],[10.29,16.68]]]},\"properties\":{\"id\":3170,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":20000,\"state\":8,\"province\":124,\"culture\":8,\"religion\":8,\"neighbors\":[3169,3082,3171,3263,3262]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.33,16.51],[11.5,16.65],[12.04,16.62],[12.12,16.46],[11.78,15.95],[11.42,15.87],[11.33,16.51]]]},\"properties\":{\"id\":3172,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":27000,\"state\":8,\"province\":124,\"culture\":8,\"religion\":8,\"neighbors\":[3171,3083,3084,3085,3173,3265]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.68,16.37],[15.24,16.32],[15.24,16.2],[15.1,15.92],[14.82,15.76],[14.54,16.06],[14.68,16.37]]]},\"properties\":{\"id\":3178,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":29376,\"state\":8,\"province\":121,\"culture\":8,\"religion\":11,\"neighbors\":[3177,3090,3179,3272,3271,3270]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.82,15.81],[-18.96,15.56],[-19.32,15.42],[-19.35,16.04],[-19.07,16.09],[-18.82,15.81]]]},\"properties\":{\"id\":3208,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3116,3209,3299,3207,3115]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.13,15.78],[-17.18,15.39],[-17.72,15.39],[-17.92,15.56],[-17.97,15.87],[-17.86,15.95],[-17.16,15.81],[-17.13,15.78]]]},\"properties\":{\"id\":3211,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3119,3212,3302,3301,3210,3117,3118]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.48,15.34],[-16.62,15.2],[-17.16,15.34],[-17.18,15.39],[-17.13,15.78],[-16.62,15.87],[-16.48,15.34]]]},\"properties\":{\"id\":3212,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3213,3304,3303,3302,3211,3119]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.95,15.81],[-16.26,15.39],[-16.42,15.34],[-16.48,15.34],[-16.62,15.87],[-16.54,15.98],[-15.95,15.81]]]},\"properties\":{\"id\":3213,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3121,3214,3305,3304,3212,3119]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.61,15.5],[-15.75,15.22],[-16.26,15.39],[-15.95,15.81],[-15.89,15.84],[-15.61,15.5]]]},\"properties\":{\"id\":3214,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3215,3306,3305,3213,3121]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.31,15.98],[-11.28,15.87],[-11.42,15.56],[-11.76,15.56],[-11.95,15.98],[-11.73,16.23],[-11.31,15.98]]]},\"properties\":{\"id\":3222,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3129,3130,3223,3313,3221,3128]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.47,15.95],[-4.36,15.53],[-4.53,15.31],[-4.78,15.2],[-5.01,15.5],[-4.98,15.87],[-4.92,15.95],[-4.47,15.95]]]},\"properties\":{\"id\":3235,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":5739,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3142,3236,3327,3326,3325,3234,3141]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.21,16.15],[1.69,16.01],[1.72,15.5],[1.69,15.48],[1.18,15.48],[1.21,16.15],[1.21,16.15]]]},\"properties\":{\"id\":3246,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3152,3153,3247,3338,3337,3245]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.01,15.98],[10.15,16.01],[10.18,15.98],[10.46,15.36],[10.24,15.28],[9.98,15.25],[9.84,15.45],[10.01,15.98]]]},\"properties\":{\"id\":3262,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":33514,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3261,3169,3170,3263,3354,3353,3352]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.09,15.28],[11.81,15.95],[12.46,15.67],[12.49,15.67],[12.38,15.48],[12.09,15.28]]]},\"properties\":{\"id\":3266,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":14538,\"state\":8,\"province\":124,\"culture\":8,\"religion\":8,\"neighbors\":[3357,3265,3173,3174,3358]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.82,15.76],[15.1,15.92],[15.44,15.42],[15.38,15.28],[15.08,15.14],[14.85,15.31],[14.74,15.53],[14.82,15.76]]]},\"properties\":{\"id\":3271,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":20710,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3270,3178,3272,3274,3363,3362,3361]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20,15.08],[-20.17,14.75],[-20.5,14.75],[-20.67,14.92],[-20.67,15.2],[-20.56,15.31],[-20,15.08]]]},\"properties\":{\"id\":3297,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3206,3388,3387,3386,3296,3205]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.35,15.42],[-19.18,14.92],[-19.55,14.81],[-19.97,15.11],[-19.8,15.45],[-19.35,15.42]]]},\"properties\":{\"id\":3298,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3207,3299,3389,3388,3206]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.79,15.31],[-19.15,14.92],[-19.18,14.92],[-19.35,15.42],[-19.32,15.42],[-18.96,15.56],[-18.79,15.31]]]},\"properties\":{\"id\":3299,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":3724,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3209,3300,3389,3298,3207,3208]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.37,15.14],[-18.96,14.69],[-19.15,14.92],[-18.79,15.31],[-18.53,15.34],[-18.37,15.14]]]},\"properties\":{\"id\":3300,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3210,3390,3389,3299,3209]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.16,15.34],[-17.27,14.97],[-17.66,14.86],[-17.72,15.39],[-17.18,15.39],[-17.16,15.34]]]},\"properties\":{\"id\":3302,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3212,3303,3392,3301,3211]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.62,15.2],[-16.65,14.83],[-16.76,14.69],[-17.16,14.86],[-17.27,14.97],[-17.16,15.34],[-16.62,15.2]]]},\"properties\":{\"id\":3303,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3212,3304,3394,3393,3392,3302]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.53,15.31],[-4.11,15],[-4.39,14.67],[-4.78,14.81],[-4.87,15],[-4.78,15.2],[-4.53,15.31]]]},\"properties\":{\"id\":3326,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3235,3327,3417,3416,3415,3325]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.29,15.59],[-2.92,15.39],[-3.29,14.81],[-3.29,14.78],[-3.74,15],[-3.68,15.39],[-3.29,15.59]]]},\"properties\":{\"id\":3328,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3237,3238,3329,3419,3418,3327]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.34,15.28],[0.53,15.22],[0.7,14.81],[0.22,14.69],[0.06,14.97],[0.34,15.28]]]},\"properties\":{\"id\":3335,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3334,3244,3336,3425,3424]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.18,15.48],[1.69,15.48],[1.66,14.83],[1.52,14.75],[1.18,14.86],[1.18,15.45],[1.18,15.48]]]},\"properties\":{\"id\":3337,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[3245,3246,3338,3428,3427,3336]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.08,15.14],[15.38,15.28],[15.61,15.06],[15.5,14.64],[15.19,14.53],[15.05,14.89],[15.08,15.14]]]},\"properties\":{\"id\":3363,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":20788,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3362,3271,3274,3453,3454,3452]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.72,14.41],[-24.83,14.25],[-25.23,14.11],[-25.4,14.5],[-25.34,14.69],[-25,14.75],[-24.72,14.41]]]},\"properties\":{\"id\":3378,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3379,3470,3469,3468,3377,3288]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.65,14.64],[-23.6,14.5],[-23.82,14.22],[-24.24,14.27],[-24.33,14.47],[-24.16,14.83],[-24.07,14.83],[-23.65,14.64]]]},\"properties\":{\"id\":3380,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3291,3381,3472,3471,3470,3379,3290]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.09,14.41],[-23.29,14.25],[-23.6,14.5],[-23.65,14.64],[-23.23,15.03],[-22.81,14.86],[-23.09,14.41]]]},\"properties\":{\"id\":3381,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":13261,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3382,3473,3472,3380,3291,3292]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.7,14.83],[-22.64,14.27],[-22.67,14.22],[-23.09,14.41],[-22.81,14.86],[-22.75,14.86],[-22.7,14.83]]]},\"properties\":{\"id\":3382,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3293,3383,3474,3473,3381,3292]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.17,14.75],[-19.97,14.3],[-20.25,14.19],[-20.53,14.33],[-20.5,14.75],[-20.17,14.75]]]},\"properties\":{\"id\":3387,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3297,3388,3478,3477,3386]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.93,14.67],[-19.43,14.16],[-19.74,14.19],[-19.8,14.27],[-19.55,14.81],[-19.18,14.92],[-19.15,14.92],[-18.96,14.69],[-18.93,14.67]]]},\"properties\":{\"id\":3389,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3390,3480,3479,3478,3388,3298,3299,3300]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.77,14.53],[-17.92,14.19],[-18.25,14.08],[-18.42,14.08],[-18.59,14.41],[-18.06,14.81],[-17.83,14.72],[-17.77,14.53]]]},\"properties\":{\"id\":3391,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3392,3483,3482,3569,3481,3390,3301]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.16,14.86],[-17.27,14.33],[-17.77,14.53],[-17.83,14.72],[-17.66,14.86],[-17.27,14.97],[-17.16,14.86]]]},\"properties\":{\"id\":3392,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3303,3393,3483,3391,3301,3302]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.29,14.78],[-3.32,14.33],[-3.32,14.3],[-3.88,14.3],[-3.94,14.33],[-3.74,15],[-3.74,15],[-3.29,14.78]]]},\"properties\":{\"id\":3418,\"height\":16,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3328,3419,3510,3509,3508,3417,3327]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.41,13.91],[-26.47,13.69],[-27.28,13.57],[-27.42,13.71],[-27,14.39],[-26.83,14.33],[-26.41,13.94],[-26.41,13.91]]]},\"properties\":{\"id\":3466,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3467,3554,3553,3375,3376]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.26,14.08],[-25.65,13.85],[-25.76,13.94],[-25.85,14.39],[-25.4,14.5],[-25.23,14.11],[-25.26,14.08]]]},\"properties\":{\"id\":3468,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3469,3556,3554,3467,3377,3378]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.26,13.99],[-23.71,13.77],[-23.77,13.8],[-23.82,14.22],[-23.6,14.5],[-23.29,14.25],[-23.26,13.99]]]},\"properties\":{\"id\":3472,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3473,3559,3558,3471,3380,3381]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.6,14.25],[-21.6,13.83],[-21.8,13.66],[-22.13,13.77],[-22.22,13.91],[-22.16,14.19],[-22.11,14.3],[-21.8,14.39],[-21.6,14.25]]]},\"properties\":{\"id\":3475,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3385,3476,3563,3562,3561,3474,3383,3384]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.74,14.19],[-19.77,13.88],[-20.08,13.49],[-20.39,13.74],[-20.25,14.19],[-19.97,14.3],[-19.8,14.27],[-19.74,14.19]]]},\"properties\":{\"id\":3478,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3389,3479,3566,3565,3477,3387,3388]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,14.47],[-19.1,13.91],[-19.27,13.99],[-19.43,14.16],[-18.93,14.67],[-18.76,14.47]]]},\"properties\":{\"id\":3480,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3390,3481,3567,3479,3389]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.92,14.19],[-17.61,13.77],[-17.97,13.49],[-18.25,14.08],[-17.92,14.19]]]},\"properties\":{\"id\":3482,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3391,3483,3570,3569]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.32,13.32],[-26.38,13.24],[-27.11,13.07],[-27.28,13.57],[-26.47,13.69],[-26.32,13.32]]]},\"properties\":{\"id\":3553,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3554,3639,3638,3466]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.65,13.8],[-25.85,13.35],[-26.1,13.29],[-26.32,13.32],[-26.47,13.69],[-26.41,13.91],[-25.76,13.94],[-25.65,13.85],[-25.65,13.8]]]},\"properties\":{\"id\":3554,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3556,3555,3640,3639,3553,3466,3467,3468]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.23,13.97],[-23.12,13.35],[-23.12,13.35],[-23.82,13.29],[-23.71,13.77],[-23.26,13.99],[-23.23,13.97]]]},\"properties\":{\"id\":3559,\"height\":16,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3473,3560,3645,3644,3558,3472]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.39,13.69],[0.62,13.91],[1.07,13.71],[0.87,13.38],[0.76,13.38],[0.39,13.69]]]},\"properties\":{\"id\":3604,\"height\":16,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[3603,3516,3517,3605,3689]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.09,13.69],[12.71,13.24],[12.54,13.01],[12.01,13.15],[12.09,13.69]]]},\"properties\":{\"id\":3625,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":13000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3624,3626,3711,3710]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.88,13.1],[-22.02,12.73],[-22.5,12.85],[-22.58,13.01],[-22.58,13.24],[-22.44,13.29],[-21.88,13.1]]]},\"properties\":{\"id\":3646,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3562,3647,3729,3728,3645,3561]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.45,13.21],[11.87,13.07],[11.95,12.59],[11.87,12.48],[11.39,12.65],[11.31,12.85],[11.36,13.1],[11.45,13.21]]]},\"properties\":{\"id\":3709,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":28959,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3623,3624,3710,3793,3792,3791,3708]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.01,13.15],[12.54,13.01],[12.46,12.71],[11.95,12.59],[11.87,13.07],[12.01,13.15]]]},\"properties\":{\"id\":3710,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":14605,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3624,3625,3711,3793,3709]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.32,12.45],[-19.35,12.32],[-19.94,12.09],[-20.05,12.2],[-20.14,12.54],[-20.14,12.62],[-20.08,12.68],[-19.57,12.85],[-19.32,12.45]]]},\"properties\":{\"id\":3734,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3652,3735,3819,3818,3733,3732,3650,3651]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.54,12.59],[14.71,12.73],[14.96,12.57],[15.05,12.26],[14.63,12.26],[14.54,12.29],[14.54,12.59]]]},\"properties\":{\"id\":3798,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":9000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3797,3714,3715,3716,3883,3882]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.49,12.01],[-21.46,11.64],[-21.57,11.59],[-22.27,11.87],[-22.25,12.04],[-21.71,12.23],[-21.49,12.01]]]},\"properties\":{\"id\":3815,\"height\":16,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3731,3816,3899,3898,3814,3730]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.54,12.29],[14.63,12.26],[14.65,11.73],[14.26,11.87],[14.29,12.18],[14.54,12.29]]]},\"properties\":{\"id\":3882,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":20015,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3797,3798,3883,3965,3881]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.22,11.59],[13.22,11.59],[12.83,10.89],[12.66,10.94],[12.63,11.45],[13.22,11.59]]]},\"properties\":{\"id\":3962,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":11000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3879,3880,3963,3961]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.83,10.89],[13.22,11.59],[13.44,11.48],[13.47,10.92],[13.22,10.69],[12.83,10.89]]]},\"properties\":{\"id\":3963,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3962,3880,3964]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.13,11.73],[15.83,11.73],[15.89,11.53],[15.72,11],[15.5,10.92],[15.05,11.64],[15.13,11.73]]]},\"properties\":{\"id\":3967,\"height\":16,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3883,3884,3886,3968,3966]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.32,37.24],[2.84,37.41],[3.01,37.97],[3.63,37.58],[3.32,37.24]]]},\"properties\":{\"id\":55,\"height\":25,\"biome\":11,\"type\":\"island\",\"population\":20000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[130,129,54,56]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.63,37.58],[3.01,37.97],[2.95,38.14],[3.32,38.5],[3.8,38.14],[3.71,37.61],[3.63,37.58]]]},\"properties\":{\"id\":56,\"height\":25,\"biome\":11,\"type\":\"island\",\"population\":28000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[130,55,54,57]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.5,37.13],[6.27,37.52],[6.83,38.06],[6.89,38.03],[7,37.58],[6.5,37.13],[6.5,37.13]]]},\"properties\":{\"id\":62,\"height\":25,\"biome\":11,\"type\":\"island\",\"population\":31969,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[211,135,61,63,136]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.03,37.52],[9.22,38.03],[9.51,38.03],[9.76,37.55],[9.11,37.22],[9.03,37.52]]]},\"properties\":{\"id\":67,\"height\":25,\"biome\":11,\"type\":\"island\",\"population\":38919,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[140,66,68,141]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.58,36.96],[4.56,37.24],[4.87,37.52],[5.12,37.27],[4.64,36.96],[4.58,36.96]]]},\"properties\":{\"id\":132,\"height\":25,\"biome\":11,\"type\":\"island\",\"population\":10000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[208,131,58,59,133]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.51,37.16],[5.48,37.38],[5.51,37.44],[5.65,37.47],[6.19,36.88],[6.16,36.8],[5.68,36.8],[5.51,37.16]]]},\"properties\":{\"id\":134,\"height\":25,\"biome\":11,\"type\":\"island\",\"population\":17000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[209,133,59,60,135,211,210]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.79,36.94],[7.48,37.36],[7.73,37.83],[8.16,37.5],[8.24,37.19],[8.18,37.1],[7.99,36.99],[7.79,36.94]]]},\"properties\":{\"id\":138,\"height\":25,\"biome\":11,\"type\":\"island\",\"population\":25000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[214,137,63,64,65,139,215]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.15,36.32],[-1.24,36.35],[-1.77,36.68],[-1.88,36.91],[-1.57,37.16],[-1.1,36.96],[-0.96,36.66],[-0.98,36.57],[-1.15,36.32]]]},\"properties\":{\"id\":197,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":10046,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[272,271,270,196,120,121,122,198]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.17,36.41],[-0.39,36.94],[0.08,36.94],[0.22,36.88],[-0.06,36.35],[-0.17,36.41]]]},\"properties\":{\"id\":199,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":1,\"province\":1,\"culture\":3,\"religion\":12,\"neighbors\":[273,198,123,124,200]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.31,36.43],[2.14,36.82],[2.73,36.77],[2.73,36.74],[2.67,36.29],[2.31,36.43]]]},\"properties\":{\"id\":204,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[278,203,128,129,205]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.24,36.49],[6.16,36.8],[6.19,36.88],[6.5,37.13],[6.5,37.13],[6.75,36.94],[6.55,36.29],[6.24,36.49]]]},\"properties\":{\"id\":211,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":6000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[285,210,134,135,62,136,212]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.27,36.21],[7.99,36.99],[8.18,37.1],[8.52,36.71],[8.52,36.35],[8.27,36.21]]]},\"properties\":{\"id\":215,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[289,214,138,139,216]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.73,36.52],[9.56,36.91],[9.87,37.1],[10.21,36.63],[9.9,36.41],[9.73,36.52]]]},\"properties\":{\"id\":218,\"height\":25,\"biome\":11,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[291,217,141,142,292]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.33,35.87],[-4.42,35.93],[-4.25,36.29],[-3.71,36.43],[-3.88,35.82],[-4.33,35.87]]]},\"properties\":{\"id\":266,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":11331,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[343,342,265,192,267]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.21,35.87],[-3.46,36.38],[-2.73,36.32],[-2.78,36.07],[-3.18,35.85],[-3.21,35.87]]]},\"properties\":{\"id\":268,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[344,267,194,269,345]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.57,35.76],[-1.88,36.04],[-1.24,36.35],[-1.15,36.32],[-1.12,36.21],[-1.57,35.76]]]},\"properties\":{\"id\":271,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":12000,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[348,347,270,197,272]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.38,35.68],[10.18,35.96],[10.35,36.32],[10.8,36.18],[10.77,35.9],[10.6,35.76],[10.38,35.68]]]},\"properties\":{\"id\":293,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":41908,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[370,369,292,219,294,371]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.63,35.31],[-20,35.4],[-19.91,35.76],[-19.49,36.1],[-19.27,35.87],[-19.63,35.31]]]},\"properties\":{\"id\":314,\"height\":25,\"biome\":2,\"type\":\"island\",\"population\":21667,\"state\":4,\"province\":49,\"culture\":9,\"religion\":9,\"neighbors\":[315,389,313,237,238]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.25,35.26],[2.11,35.51],[2.17,35.62],[2.5,35.82],[2.73,35.9],[2.84,35.79],[2.93,35.37],[2.7,35.12],[2.25,35.26]]]},\"properties\":{\"id\":355,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":8000,\"state\":10,\"province\":136,\"culture\":4,\"religion\":4,\"neighbors\":[430,429,354,277,278,279,356,431]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.77,35.4],[5.77,35.99],[5.82,36.04],[6.41,35.85],[6.47,35.62],[6.38,35.43],[6.13,35.31],[5.77,35.4]]]},\"properties\":{\"id\":362,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":26787,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[436,361,284,285,286,363,437]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.76,34.84],[-0.82,34.84],[-1.18,35.4],[-0.98,35.57],[-0.48,35.23],[-0.76,34.84]]]},\"properties\":{\"id\":424,\"height\":25,\"biome\":11,\"type\":\"island\",\"population\":16000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[425,497,423,348,349]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.09,35.12],[5.23,35.59],[5.77,35.4],[5.43,34.89],[5.23,34.95],[5.09,35.12]]]},\"properties\":{\"id\":435,\"height\":25,\"biome\":10,\"type\":\"island\",\"population\":18000,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[434,360,361,436,508]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.39,34.39],[-18.79,34.19],[-18.98,34.33],[-18.93,34.87],[-18.82,35.06],[-18.39,34.7],[-18.34,34.56],[-18.39,34.39]]]},\"properties\":{\"id\":464,\"height\":25,\"biome\":2,\"type\":\"island\",\"population\":26072,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[465,538,537,463,390,391,392]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.01,31.48],[-19.43,31.54],[-19.49,31.9],[-19.04,32.12],[-18.87,32.01],[-18.93,31.56],[-19.01,31.48]]]},\"properties\":{\"id\":830,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":32664,\"state\":4,\"province\":38,\"culture\":9,\"religion\":9,\"neighbors\":[905,904,829,757,758,831]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.39,31.48],[-18.93,31.56],[-18.87,32.01],[-18.62,32.07],[-18.28,31.65],[-18.39,31.48]]]},\"properties\":{\"id\":831,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":38,\"culture\":9,\"religion\":9,\"neighbors\":[906,905,830,758,832]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.83,31.06],[-18.37,31.03],[-18.39,31.48],[-18.28,31.65],[-18.06,31.73],[-17.77,31.4],[-17.83,31.09],[-17.83,31.06]]]},\"properties\":{\"id\":906,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[980,979,905,831,832,833,907]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.68,30.53],[-3.91,30.53],[-4.22,30.73],[-4.39,31.01],[-4.36,31.12],[-3.66,31.03],[-3.63,31.01],[-3.68,30.53]]]},\"properties\":{\"id\":1005,\"height\":25,\"biome\":9,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1006,1077,1076,1004,931,932,933]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.22,29.38],[2.19,29.66],[2.62,29.8],[2.9,29.47],[2.81,29.21],[2.22,29.38]]]},\"properties\":{\"id\":1161,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1235,1160,1089,1162,1236]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.9,29.47],[2.62,29.8],[2.67,30.03],[3.26,29.89],[3.21,29.58],[2.9,29.47]]]},\"properties\":{\"id\":1162,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1236,1161,1089,1090,1163]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.23,28.85],[-3.74,28.85],[-3.74,29.41],[-3.4,29.24],[-3.23,28.85]]]},\"properties\":{\"id\":1224,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":15705,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1225,1297,1223,1150]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.46,28.71],[-1.83,28.91],[-1.66,29.41],[-1.49,29.44],[-1.12,29.21],[-1.24,28.79],[-1.46,28.71]]]},\"properties\":{\"id\":1228,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1301,1300,1227,1153,1154,1229]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.84,29.05],[2.81,29.21],[2.9,29.47],[3.21,29.58],[3.66,29.3],[3.63,29.3],[3.4,28.96],[2.84,29.05]]]},\"properties\":{\"id\":1236,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":7,\"neighbors\":[1309,1235,1161,1162,1163,1238,1237]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.33,29.38],[6.52,29.63],[6.98,29.02],[6.98,28.88],[6.72,28.82],[6.33,29.38]]]},\"properties\":{\"id\":1243,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1242,1168,1169,1244,1316]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.83,28.99],[8.66,29.35],[9.37,29.63],[9.39,29.63],[9.51,29.52],[9.17,28.85],[8.83,28.99]]]},\"properties\":{\"id\":1247,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":6,\"neighbors\":[1320,1246,1173,1102,1174,1248]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.22,28.6],[-2.17,28.26],[-2.76,28.04],[-2.78,28.21],[-2.78,28.82],[-2.76,28.85],[-2.22,28.6]]]},\"properties\":{\"id\":1299,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1226,1300,1373,1372,1298,1225]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.11,28.24],[-2.17,28.26],[-2.22,28.6],[-1.91,28.88],[-1.83,28.91],[-1.46,28.71],[-1.55,28.35],[-2.11,28.24]]]},\"properties\":{\"id\":1300,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1374,1373,1299,1226,1227,1228,1301]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.42,28.57],[-0.2,28.32],[-0.03,29.02],[0.48,28.77],[0.42,28.57]]]},\"properties\":{\"id\":1304,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":11,\"neighbors\":[1305,1378,1303,1231]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.5,28.43],[1.83,28.74],[2.05,28.99],[2.73,28.82],[2.76,28.43],[2.5,28.43]]]},\"properties\":{\"id\":1308,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1382,1307,1234,1235,1309]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.61,28.71],[8.83,28.99],[9.17,28.85],[9.31,28.71],[9.31,28.32],[8.75,28.15],[8.44,28.38],[8.61,28.71]]]},\"properties\":{\"id\":1320,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":10000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":6,\"neighbors\":[1319,1246,1247,1248,1321,1394,1393]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.25,28.32],[-13.64,27.87],[-13.87,27.84],[-14.06,28.21],[-13.42,28.46],[-13.25,28.32],[-13.25,28.32]]]},\"properties\":{\"id\":1352,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1354,1353,1425,1351,1278,1279]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.74,27.62],[-1.97,27.7],[-2.11,28.24],[-1.55,28.35],[-1.46,28.15],[-1.43,27.93],[-1.74,27.62]]]},\"properties\":{\"id\":1374,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1448,1447,1373,1300,1301,1375]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.85,27.76],[3.52,28.4],[4.05,28.49],[4.33,28.29],[4.36,28.04],[4.28,27.84],[4.02,27.73],[3.85,27.76]]]},\"properties\":{\"id\":1385,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":9000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1457,1384,1310,1311,1386,1459,1458]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.48,28.24],[5.6,28.38],[6.05,28.32],[6.22,28.12],[6.1,27.73],[6.02,27.68],[5.43,27.79],[5.48,28.24]]]},\"properties\":{\"id\":1388,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":26000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1387,1313,1314,1315,1389,1462,1461]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.25,27.65],[8.72,27.9],[8.75,28.15],[9.31,28.32],[9.39,28.21],[9.39,28.21],[9.37,27.9],[9.25,27.65]]]},\"properties\":{\"id\":1394,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":19000,\"state\":2,\"province\":18,\"culture\":6,\"religion\":11,\"neighbors\":[1468,1467,1393,1320,1321,1396,1395]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.2,27.23],[-18.23,27.23],[-18.76,27.82],[-18.59,27.93],[-17.75,27.79],[-18.03,27.37],[-18.2,27.23]]]},\"properties\":{\"id\":1417,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1493,1492,1416,1343,1344,1418]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.32,27.76],[-17.27,26.92],[-18.03,27.37],[-17.75,27.79],[-17.72,27.82],[-17.32,27.76]]]},\"properties\":{\"id\":1418,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1345,1419,1493,1417,1344]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.5,27.14],[4.02,27.4],[4.02,27.73],[4.28,27.84],[4.67,27.28],[4.5,27.14]]]},\"properties\":{\"id\":1458,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1534,1533,1457,1385,1459]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7,27.73],[7.2,27.93],[7.2,27.93],[7.42,27.84],[7.65,27.65],[7.71,27.28],[7.51,27.12],[7.12,27.23],[7,27.73]]]},\"properties\":{\"id\":1464,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":25000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1463,1390,1317,1391,1392,1465,1540,1539]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.51,26.72],[-18.93,26.53],[-19.1,26.58],[-19.12,26.98],[-18.93,27.12],[-18.48,27],[-18.51,26.72]]]},\"properties\":{\"id\":1491,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1492,1566,1565,1490,1415,1416]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.89,26.86],[-16.12,26.44],[-16.65,26.72],[-16.48,26.98],[-15.89,26.86],[-15.89,26.86]]]},\"properties\":{\"id\":1495,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":4896,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1497,1571,1570,1494,1496]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.21,26.58],[-1.66,26.58],[-1.57,27.26],[-1.32,27.2],[-1.04,26.75],[-1.21,26.58]]]},\"properties\":{\"id\":1523,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1599,1598,1522,1448,1524]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.19,26.58],[1.72,26.61],[1.83,27.34],[1.97,27.31],[2.33,26.86],[2.19,26.58]]]},\"properties\":{\"id\":1529,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":12570,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1605,1604,1528,1454,1530]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.07,26.67],[8.16,26.81],[8.66,26.86],[8.52,26.25],[8.21,26.28],[8.07,26.67]]]},\"properties\":{\"id\":1616,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":20215,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1615,1540,1541,1617,1691]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.82,25.75],[-17.16,25.69],[-17.52,26.11],[-16.82,26.08],[-16.73,25.97],[-16.82,25.75]]]},\"properties\":{\"id\":1644,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1723,1722,1643,1569,1570]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.51,26.16],[-14.57,25.86],[-14.99,25.61],[-15.07,25.66],[-15.13,26.11],[-15.02,26.28],[-14.68,26.3],[-14.51,26.16]]]},\"properties\":{\"id\":1648,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1574,1649,1726,1725,1647,1572,1573]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.06,25.61],[-16.4,25.19],[-16.79,25.19],[-16.82,25.75],[-16.73,25.97],[-16.71,25.97],[-16.09,25.66],[-16.06,25.61]]]},\"properties\":{\"id\":1723,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1646,1724,1799,1722,1644,1570,1645]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.98,25.19],[-10.18,25.07],[-10.32,25.21],[-10.24,25.83],[-9.84,25.83],[-9.76,25.63],[-9.98,25.19]]]},\"properties\":{\"id\":1735,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":7989,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1736,1811,1810,1734,1657,1658]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.7,25.13],[-4.7,25.13],[-5.32,25.24],[-5.34,25.49],[-5.32,25.55],[-4.89,25.91],[-4.64,25.75],[-4.7,25.13]]]},\"properties\":{\"id\":1744,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1745,1821,1820,1743,1665,1666,1667]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.18,25.07],[-10.27,24.77],[-10.41,24.68],[-10.55,24.65],[-10.91,25.07],[-10.66,25.35],[-10.32,25.21],[-10.18,25.07]]]},\"properties\":{\"id\":1810,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":9670,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1735,1811,1889,1888,1809,1733,1734]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.91,23.67],[-12.97,23.62],[-13.61,23.67],[-13.75,23.98],[-13.33,24.15],[-12.85,23.9],[-12.91,23.67]]]},\"properties\":{\"id\":1960,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":7666,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1961,2042,2041,1959,1882,1883]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.33,23.62],[8.27,24.18],[8.77,23.93],[8.8,23.79],[8.72,23.59],[8.72,23.59],[8.33,23.62]]]},\"properties\":{\"id\":2002,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":13000,\"state\":2,\"province\":13,\"culture\":8,\"religion\":11,\"neighbors\":[2089,2001,1923,1924,2003,2090]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.02,23.65],[-1.94,23.03],[-2.11,22.92],[-2.45,23.14],[-2.45,23.31],[-2.19,23.7],[-2.02,23.65]]]},\"properties\":{\"id\":2066,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":69,\"culture\":7,\"religion\":11,\"neighbors\":[1983,2067,2150,2149,2065,1982]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.03,23.06],[0.45,22.84],[0.39,22.5],[-0.14,22.72],[-0.2,22.81],[-0.03,23.06]]]},\"properties\":{\"id\":2154,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":57,\"culture\":7,\"religion\":11,\"neighbors\":[2070,2071,2155,2229,2153]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.63,21.8],[6.1,21.97],[6.13,21.8],[5.74,21.35],[5.6,21.32],[5.63,21.8]]]},\"properties\":{\"id\":2314,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":7,\"province\":107,\"culture\":8,\"religion\":11,\"neighbors\":[2313,2240,2241,2315,2395]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.43,20.65],[-1.46,20.71],[-1.15,20.99],[-0.51,20.57],[-0.51,20.43],[-0.76,20.37],[-1.43,20.65]]]},\"properties\":{\"id\":2467,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":83,\"culture\":7,\"religion\":7,\"neighbors\":[2466,2465,2382,2383,2468,2557]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.04,17.35],[-8.07,17.1],[-8.58,16.96],[-8.66,17.1],[-8.58,17.6],[-8.47,17.74],[-8.04,17.35]]]},\"properties\":{\"id\":2959,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2875,2960,3047,3046,2958,2874]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.96,17.44],[-5.93,17.02],[-6.07,16.76],[-6.5,16.88],[-6.67,17.02],[-6.33,17.35],[-5.96,17.44]]]},\"properties\":{\"id\":2963,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[2879,2964,3052,3051,3050,2962]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.55,17.35],[-1.41,17.21],[-1.66,16.79],[-1.94,16.76],[-2.08,17.24],[-2.05,17.3],[-1.55,17.35]]]},\"properties\":{\"id\":2971,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[2887,2972,3060,3059,3058,2970]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.47,17.44],[4.87,17.32],[4.92,16.96],[4.28,16.93],[4.13,17.07],[4.3,17.38],[4.47,17.44]]]},\"properties\":{\"id\":2983,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2898,2899,2984,3071,3070,2982]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.12,17.58],[7.45,17.63],[7.79,17.32],[7.68,16.99],[7.68,16.96],[7.17,16.99],[7.12,17.04],[7.03,17.49],[7.12,17.58]]]},\"properties\":{\"id\":2988,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":24000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2903,2904,2905,2989,3077,3076,3075,2987]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.79,17.46],[15.22,17.66],[15.3,17.6],[15.38,17.24],[15.05,16.99],[14.91,17.04],[14.79,17.46]]]},\"properties\":{\"id\":3002,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":8,\"province\":121,\"culture\":8,\"religion\":8,\"neighbors\":[3001,2918,2919,3003,3091,3090]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.99,17.02],[-8.07,16.51],[-8.55,16.51],[-8.61,16.62],[-8.58,16.96],[-8.07,17.1],[-7.99,17.02]]]},\"properties\":{\"id\":3047,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2960,3048,3135,3134,3046,2959]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.32,17.21],[-4.73,16.88],[-4.75,16.65],[-5.03,16.48],[-5.37,16.54],[-5.4,16.88],[-5.32,17.21]]]},\"properties\":{\"id\":3053,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[2964,2965,3054,3142,3141,3052]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.83,16.96],[2.25,16.74],[2.28,16.6],[2.11,16.18],[1.97,16.2],[1.69,16.82],[1.69,16.85],[1.83,16.96]]]},\"properties\":{\"id\":3066,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[2977,2979,3067,3155,3247,3154,3065]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.29,17.02],[10.72,17.24],[10.97,17.04],[10.97,16.68],[10.74,16.54],[10.29,16.68],[10.29,16.68],[10.29,17.02]]]},\"properties\":{\"id\":3082,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":28792,\"state\":8,\"province\":113,\"culture\":8,\"religion\":11,\"neighbors\":[3081,2994,2995,3083,3171,3170,3169]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.2,17.07],[14.82,17.02],[14.57,16.54],[14.23,16.6],[14.15,16.99],[14.2,17.07]]]},\"properties\":{\"id\":3089,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3000,3001,3090,3177,3088]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.02,16.51],[-16.54,15.98],[-16.54,15.98],[-16.62,15.87],[-17.13,15.78],[-17.16,15.81],[-17.18,16.4],[-17.02,16.51]]]},\"properties\":{\"id\":3119,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3030,3120,3121,3213,3212,3211,3118]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.81,16.04],[-15.89,15.84],[-15.95,15.81],[-16.54,15.98],[-16.54,15.98],[-16.37,16.43],[-16.17,16.54],[-15.86,16.26],[-15.81,16.04]]]},\"properties\":{\"id\":3121,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3122,3215,3214,3213,3119,3120,3032,3033]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.55,16.51],[-8.55,16.09],[-9.11,15.9],[-9.17,16.51],[-8.61,16.62],[-8.55,16.51]]]},\"properties\":{\"id\":3134,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":167,\"culture\":7,\"religion\":7,\"neighbors\":[3047,3135,3227,3133,3046]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.25,16.34],[-4.27,16.23],[-4.47,15.95],[-4.92,15.95],[-5.03,16.48],[-4.75,16.65],[-4.25,16.34]]]},\"properties\":{\"id\":3142,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3054,3143,3236,3235,3141,3053]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.23,16.6],[14.57,16.54],[14.68,16.37],[14.54,16.06],[14.17,16.01],[14.06,16.15],[14.06,16.4],[14.23,16.6]]]},\"properties\":{\"id\":3177,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3088,3089,3090,3178,3270,3269,3176]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.24,16.32],[15.3,16.4],[15.67,16.54],[15.97,16.32],[15.97,16.06],[15.61,15.92],[15.24,16.2],[15.24,16.32]]]},\"properties\":{\"id\":3179,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":18547,\"state\":8,\"province\":121,\"culture\":8,\"religion\":11,\"neighbors\":[3178,3090,3091,3092,3180,3273,3272]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.53,15.78],[-18.53,15.34],[-18.79,15.31],[-18.96,15.56],[-18.82,15.81],[-18.53,15.78]]]},\"properties\":{\"id\":3209,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3116,3210,3300,3299,3208]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.21,15.95],[-12.32,15.45],[-12.46,15.39],[-12.74,15.45],[-12.8,15.87],[-12.26,16.01],[-12.21,15.95]]]},\"properties\":{\"id\":3220,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3128,3221,3312,3311,3219,3127]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.73,16.04],[-2.62,15.92],[-2.9,15.39],[-2.92,15.39],[-3.29,15.59],[-3.29,16.06],[-2.73,16.04]]]},\"properties\":{\"id\":3238,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3145,3146,3239,3329,3328,3237]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.11,16.15],[0.25,16.01],[0.17,15.59],[-0.51,15.39],[-0.53,15.42],[-0.45,15.87],[0.11,16.15]]]},\"properties\":{\"id\":3243,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3150,3151,3244,3334,3333,3242]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.11,16.18],[2.25,16.04],[2.11,15.48],[1.72,15.5],[1.69,16.01],[1.77,16.12],[1.97,16.2],[2.11,16.18]]]},\"properties\":{\"id\":3247,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[3066,3155,3248,3338,3246,3153,3154]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.75,15.22],[-15.78,15.06],[-16.03,14.89],[-16.42,15.34],[-16.26,15.39],[-15.75,15.22]]]},\"properties\":{\"id\":3305,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3214,3306,3395,3304,3213]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.11,15.48],[2.31,15.31],[2.17,14.72],[2.14,14.72],[1.66,14.83],[1.69,15.48],[1.72,15.5],[2.11,15.48]]]},\"properties\":{\"id\":3338,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[3247,3248,3339,3429,3428,3337,3246]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.31,15.31],[2.7,15.36],[2.7,14.64],[2.17,14.72],[2.31,15.31]]]},\"properties\":{\"id\":3339,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3338,3248,3340,3429]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.2,15.5],[14.74,15.53],[14.85,15.31],[14.34,14.89],[14.12,14.89],[14.03,15.34],[14.2,15.5]]]},\"properties\":{\"id\":3361,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":20000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3269,3270,3271,3362,3451,3360]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.2,15.03],[-13.84,14.89],[-14.01,14.47],[-14.2,14.44],[-14.48,14.81],[-14.2,15.03]]]},\"properties\":{\"id\":3398,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3308,3309,3399,3490,3397]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.51,14.75],[-5.4,14.25],[-6.19,14.33],[-6.19,14.33],[-6.22,14.39],[-5.96,14.75],[-5.51,14.75]]]},\"properties\":{\"id\":3414,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3324,3415,3505,3504,3503,3413]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.78,14.81],[-4.92,14.27],[-5.4,14.25],[-5.4,14.25],[-5.51,14.75],[-5.37,14.92],[-4.87,15],[-4.78,14.81]]]},\"properties\":{\"id\":3415,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":14832,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3326,3416,3506,3505,3414,3324,3325]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.59,14.92],[-1.88,14.92],[-2.05,14.36],[-2.59,14.61],[-2.62,14.69],[-2.59,14.92]]]},\"properties\":{\"id\":3420,\"height\":25,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3329,3330,3421,3511,3419]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.51,15.11],[-0.39,14.97],[-0.42,14.36],[-0.53,14.3],[-0.84,14.39],[-0.96,14.83],[-0.73,15.06],[-0.51,15.11]]]},\"properties\":{\"id\":3423,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3333,3334,3424,3515,3514,3422,3332]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.24,14.27],[-24.24,13.99],[-24.47,13.77],[-24.55,13.74],[-24.83,14.25],[-24.72,14.41],[-24.33,14.47],[-24.24,14.27]]]},\"properties\":{\"id\":3470,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3380,3471,3558,3557,3469,3378,3379]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.24,14.27],[-23.82,14.22],[-23.77,13.8],[-24.24,13.99],[-24.24,14.27]]]},\"properties\":{\"id\":3471,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3470,3380,3472,3558]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.16,14.19],[-22.22,13.91],[-22.75,13.91],[-22.75,13.91],[-22.67,14.22],[-22.64,14.27],[-22.16,14.19]]]},\"properties\":{\"id\":3474,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3383,3475,3561,3560,3473,3382]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.53,14.27],[0.62,13.91],[0.39,13.69],[0.08,13.71],[0,13.8],[-0.03,14.16],[0.17,14.27],[0.53,14.27]]]},\"properties\":{\"id\":3516,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3425,3517,3604,3603,3602,3515,3424]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.8,14.39],[12.97,14.33],[12.99,14.27],[13.02,14.05],[12.83,13.74],[12.43,13.91],[12.8,14.39]]]},\"properties\":{\"id\":3539,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":11000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3538,3448,3449,3540,3627,3626]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.16,14.3],[15.81,14.13],[15.83,14.08],[15.75,13.74],[15.24,13.91],[15.16,14.3]]]},\"properties\":{\"id\":3544,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":11637,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3543,3454,3456,3546,3545]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.24,13.91],[15.75,13.74],[15.78,13.69],[15.75,13.6],[15.55,13.43],[15.19,13.57],[15.13,13.66],[15.24,13.91]]]},\"properties\":{\"id\":3545,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":10000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3543,3544,3546,3547,3635,3633,3631]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.75,13.91],[-22.67,13.29],[-23.12,13.35],[-23.23,13.97],[-22.75,13.91],[-22.75,13.91]]]},\"properties\":{\"id\":3560,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3474,3561,3645,3559,3473]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.13,13.77],[-22.44,13.29],[-22.58,13.24],[-22.67,13.29],[-22.75,13.91],[-22.22,13.91],[-22.13,13.77]]]},\"properties\":{\"id\":3561,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3475,3562,3646,3645,3560,3474]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.71,13.32],[-21.85,13.13],[-21.88,13.1],[-22.44,13.29],[-22.13,13.77],[-21.8,13.66],[-21.71,13.32]]]},\"properties\":{\"id\":3562,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3563,3648,3647,3646,3561,3475]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.08,13.49],[-20.14,13.41],[-20.64,13.1],[-20.76,13.18],[-20.67,13.69],[-20.39,13.74],[-20.08,13.49],[-20.08,13.49]]]},\"properties\":{\"id\":3565,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3566,3651,3650,3649,3564,3477,3478]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.77,13.88],[-19.49,13.6],[-19.38,13.21],[-19.41,13.18],[-20.08,13.49],[-20.08,13.49],[-19.77,13.88]]]},\"properties\":{\"id\":3566,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3478,3479,3567,3652,3651,3565]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.93,13.69],[-19.01,13.27],[-19.38,13.21],[-19.49,13.6],[-19.27,13.99],[-19.1,13.91],[-18.93,13.69]]]},\"properties\":{\"id\":3567,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3481,3568,3652,3566,3479,3480]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.25,14.08],[-17.97,13.49],[-18.11,13.24],[-18.2,13.24],[-18.51,13.91],[-18.42,14.08],[-18.25,14.08]]]},\"properties\":{\"id\":3569,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3391,3482,3570,3654,3568,3481]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.42,13.32],[4.33,13.88],[4.89,13.66],[4.89,13.49],[4.42,13.32]]]},\"properties\":{\"id\":3611,\"height\":25,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3696,3610,3524,3612]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.22,13.71],[11.36,13.71],[11.39,13.66],[11.45,13.21],[11.36,13.1],[10.69,13.15],[10.97,13.63],[11.22,13.71]]]},\"properties\":{\"id\":3623,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":11055,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3535,3536,3537,3624,3709,3708,3622]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.19,13.57],[15.55,13.43],[15.5,13.24],[15.1,13.24],[15.19,13.57]]]},\"properties\":{\"id\":3633,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3631,3545,3635,3717]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.38,13.24],[-26.35,12.62],[-27.22,12.71],[-27.11,13.07],[-26.38,13.24]]]},\"properties\":{\"id\":3638,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3553,3639,3721]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.58,13.24],[-22.58,13.01],[-23.26,12.59],[-23.29,12.59],[-23.12,13.35],[-23.12,13.35],[-22.67,13.29],[-22.58,13.24]]]},\"properties\":{\"id\":3645,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3561,3646,3728,3727,3644,3559,3560]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,13.13],[-19.01,12.51],[-19.32,12.45],[-19.57,12.85],[-19.41,13.18],[-19.38,13.21],[-19.01,13.27],[-18.76,13.13]]]},\"properties\":{\"id\":3652,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3568,3736,3735,3734,3651,3566,3567]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.35,12.62],[-26.61,12.12],[-26.66,12.06],[-27.06,12.09],[-27.31,12.62],[-27.22,12.71],[-26.35,12.62],[-26.35,12.62]]]},\"properties\":{\"id\":3721,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3639,3722,3807,3806,3638]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.26,12.57],[-23.68,11.9],[-23.88,12.54],[-23.88,12.54],[-23.68,12.73],[-23.29,12.59],[-23.26,12.59],[-23.26,12.57],[-23.26,12.57]]]},\"properties\":{\"id\":3727,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3813,3812,3811,3726,3643,3644,3645,3728]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.5,12.85],[-22.02,12.73],[-21.97,12.65],[-22.42,12.29],[-22.56,12.37],[-22.5,12.85]]]},\"properties\":{\"id\":3729,\"height\":25,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3728,3646,3647,3730,3814]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.41,11.67],[-26.44,11.64],[-27.28,11.48],[-27.34,11.56],[-27.06,12.09],[-26.66,12.06],[-26.41,11.67]]]},\"properties\":{\"id\":3806,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3807,3890,3889,3721]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.26,12.57],[-23.26,11.67],[-23.71,11.73],[-23.68,11.9],[-23.26,12.57]]]},\"properties\":{\"id\":3812,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3727,3813,3895,3811]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.65,11.73],[14.63,12.26],[15.05,12.26],[15.1,12.2],[15.16,12.01],[15.13,11.73],[15.05,11.64],[14.82,11.59],[14.65,11.73]]]},\"properties\":{\"id\":3883,\"height\":25,\"biome\":12,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3965,3882,3798,3716,3799,3884,3967,3966]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.35,10.97],[-26.38,10.92],[-26.44,10.86],[-27.03,11],[-27.28,11.48],[-26.44,11.64],[-26.35,10.97]]]},\"properties\":{\"id\":3889,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3890,3891,3806]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.42,11.5],[-19.86,11.81],[-19.55,11.56],[-20.22,11.17],[-20.42,11.5]]]},\"properties\":{\"id\":3901,\"height\":25,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3900,3818,3819,3902]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.9,37.22],[-8.21,37.61],[-7.87,38.14],[-7.71,38.22],[-7.48,38.08],[-7.62,37.38],[-7.76,37.27],[-7.9,37.22]]]},\"properties\":{\"id\":35,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":28000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[109,108,34,36,110]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.81,37.3],[-5.2,37.44],[-5.29,37.55],[-5.26,38.11],[-4.73,38.11],[-4.7,37.44],[-4.81,37.3]]]},\"properties\":{\"id\":40,\"height\":36,\"biome\":11,\"type\":\"island\",\"population\":26000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[115,114,113,39,41]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11,37.8],[11.03,38.25],[11.03,38.28],[11.5,38.17],[11.48,37.61],[11.11,37.61],[11,37.8]]]},\"properties\":{\"id\":70,\"height\":36,\"biome\":11,\"type\":\"island\",\"population\":16000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[143,69,71,144]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.5,36.96],[-6.97,37.27],[-6.97,37.33],[-6.97,37.33],[-6.44,37.78],[-6.1,37.52],[-6.5,36.96]]]},\"properties\":{\"id\":111,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":40512,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[112,187,110,36,37,38]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.39,36.94],[-0.39,36.96],[-0.42,37.3],[-0.34,37.38],[-0.14,37.47],[0.08,36.94],[-0.39,36.94]]]},\"properties\":{\"id\":123,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":3951,\"state\":1,\"province\":1,\"culture\":3,\"religion\":12,\"neighbors\":[199,198,122,48,49,124]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.08,36.94],[-0.14,37.47],[0,37.61],[0.31,37.44],[0.39,36.96],[0.22,36.88],[0.08,36.94]]]},\"properties\":{\"id\":124,\"height\":36,\"biome\":11,\"type\":\"island\",\"population\":5000,\"state\":1,\"province\":1,\"culture\":3,\"religion\":12,\"neighbors\":[199,123,49,50,125,200]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.02,36.99],[3.85,37.52],[4.39,37.64],[4.56,37.24],[4.58,36.96],[4.53,36.91],[4.02,36.99]]]},\"properties\":{\"id\":131,\"height\":36,\"biome\":11,\"type\":\"island\",\"population\":23000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[207,130,57,58,132,208]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.93,36.35],[-6.24,36.46],[-6.47,36.68],[-6.5,36.96],[-5.74,36.99],[-5.71,36.99],[-5.91,36.35],[-5.93,36.35]]]},\"properties\":{\"id\":188,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":23000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[263,262,261,187,112,113,189]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.89,36.21],[-5.23,36.6],[-5.2,36.82],[-4.78,36.99],[-4.73,36.43],[-4.89,36.21]]]},\"properties\":{\"id\":190,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[265,264,189,114,191]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.2,36.66],[9.2,36.88],[9.56,36.91],[9.73,36.52],[9.42,36.35],[9.2,36.66]]]},\"properties\":{\"id\":217,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[290,216,141,218,291]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.02,36.01],[-20.42,35.73],[-20.42,35.73],[-20.48,36.24],[-19.91,36.38],[-19.86,36.32],[-20.02,36.01]]]},\"properties\":{\"id\":236,\"height\":36,\"biome\":2,\"type\":\"island\",\"population\":15766,\"state\":4,\"province\":46,\"culture\":9,\"religion\":9,\"neighbors\":[237,313,312,235,162,163]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.67,35.93],[-4.89,36.07],[-4.89,36.21],[-4.73,36.43],[-4.44,36.49],[-4.25,36.29],[-4.42,35.93],[-4.67,35.93]]]},\"properties\":{\"id\":265,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[342,341,264,190,191,192,266]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.87,36.01],[4.81,36.21],[5.15,36.55],[5.34,36.46],[5.43,36.07],[5.09,35.82],[4.87,36.01]]]},\"properties\":{\"id\":283,\"height\":36,\"biome\":11,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[359,282,208,209,284,361]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.43,36.07],[5.34,36.46],[5.63,36.6],[5.91,36.24],[5.82,36.04],[5.77,35.99],[5.43,36.07]]]},\"properties\":{\"id\":284,\"height\":36,\"biome\":11,\"type\":\"island\",\"population\":4000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[361,283,209,210,285,362]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.82,35.09],[-19.52,35.15],[-19.63,35.31],[-19.27,35.87],[-19.18,35.87],[-18.79,35.23],[-18.82,35.09]]]},\"properties\":{\"id\":315,\"height\":36,\"biome\":2,\"type\":\"island\",\"population\":40667,\"state\":4,\"province\":49,\"culture\":9,\"religion\":9,\"neighbors\":[391,390,389,314,238,316]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.09,35.29],[-3.74,35.2],[-3.8,35.29],[-3.8,35.68],[-3.21,35.87],[-3.18,35.85],[-3.01,35.37],[-3.09,35.29]]]},\"properties\":{\"id\":344,\"height\":36,\"biome\":11,\"type\":\"island\",\"population\":28955,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[420,419,418,343,267,268,345]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.59,35.4],[-3.01,35.37],[-3.18,35.85],[-2.78,36.07],[-2.56,35.71],[-2.59,35.4],[-2.59,35.4]]]},\"properties\":{\"id\":345,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":22366,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[421,420,344,268,269,346]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.14,35.31],[-0.48,35.23],[-0.98,35.57],[-0.87,35.85],[-0.7,35.87],[-0.14,35.37],[-0.14,35.31]]]},\"properties\":{\"id\":349,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":28641,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[351,425,424,348,272,350]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.69,35.4],[1.29,35.87],[1.29,35.87],[1.66,36.21],[1.72,36.24],[2.17,35.62],[2.11,35.51],[1.69,35.4]]]},\"properties\":{\"id\":354,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":8000,\"state\":1,\"province\":7,\"culture\":3,\"religion\":12,\"neighbors\":[429,353,275,276,202,277,355]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.77,35.4],[5.23,35.59],[5.12,35.76],[5.09,35.82],[5.43,36.07],[5.77,35.99],[5.77,35.4],[5.77,35.4]]]},\"properties\":{\"id\":361,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":20904,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[436,435,360,359,283,284,362]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.71,34.87],[-4.5,34.7],[-4.56,34.78],[-4.3,35.2],[-4.27,35.23],[-3.8,35.29],[-3.74,35.2],[-3.71,34.87],[-3.71,34.87]]]},\"properties\":{\"id\":418,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":19000,\"state\":1,\"province\":9,\"culture\":4,\"religion\":12,\"neighbors\":[492,491,490,417,342,343,344,419]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.66,34.87],[8.72,35.23],[9.14,35.2],[9.17,35.17],[9.28,34.92],[8.89,34.67],[8.66,34.87]]]},\"properties\":{\"id\":442,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":16759,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[514,441,367,368,443,515]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.18,34.31],[3.15,34.78],[3.23,34.87],[3.68,34.73],[3.66,34.39],[3.29,34.25],[3.18,34.31]]]},\"properties\":{\"id\":505,\"height\":36,\"biome\":11,\"type\":\"island\",\"population\":15000,\"state\":10,\"province\":134,\"culture\":3,\"religion\":3,\"neighbors\":[578,504,431,432,506,579]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.66,34.39],[3.68,34.73],[3.82,34.98],[4.39,34.78],[4.19,34.28],[4.13,34.25],[3.66,34.39]]]},\"properties\":{\"id\":506,\"height\":36,\"biome\":10,\"type\":\"island\",\"population\":25002,\"state\":10,\"province\":134,\"culture\":3,\"religion\":3,\"neighbors\":[579,505,432,433,507,580]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.44,31.15],[-6.86,31.01],[-7.03,31.62],[-6.41,31.56],[-6.38,31.54],[-6.44,31.15]]]},\"properties\":{\"id\":927,\"height\":36,\"biome\":9,\"type\":\"island\",\"population\":17000,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[928,1000,926,853,854]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.73,30.5],[-17.1,30.42],[-17.24,30.56],[-17.32,31.03],[-17.16,31.26],[-17.02,31.26],[-16.73,30.56],[-16.73,30.5]]]},\"properties\":{\"id\":981,\"height\":36,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":29,\"culture\":7,\"religion\":7,\"neighbors\":[982,1053,1052,980,907,834,908]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.5,30.45],[6.55,30.92],[6.98,30.84],[6.95,30.67],[6.75,30.39],[6.5,30.45]]]},\"properties\":{\"id\":1025,\"height\":36,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1096,1024,952,1026,1097]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.08,29.3],[0.03,29.47],[0.37,29.8],[0.65,29.49],[0.56,29.3],[0.08,29.3]]]},\"properties\":{\"id\":1157,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1231,1230,1156,1158,1232]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.65,29.49],[0.37,29.8],[0.34,29.94],[0.34,29.97],[0.62,30.19],[1.13,29.94],[1.1,29.61],[1.04,29.58],[0.65,29.49]]]},\"properties\":{\"id\":1158,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1232,1157,1156,1084,1085,1086,1159,1233]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.04,29.41],[8.07,30.25],[8.3,30.28],[8.66,30],[8.58,29.41],[8.13,29.38],[8.04,29.41]]]},\"properties\":{\"id\":1172,\"height\":36,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":6,\"neighbors\":[1245,1171,1028,1100,1173,1246]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.69,28.82],[-17.77,28.77],[-18.37,28.93],[-18.42,29.3],[-18.37,29.38],[-17.66,29.16],[-17.69,28.82]]]},\"properties\":{\"id\":1197,\"height\":36,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1198,1271,1270,1196,1122,1123]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.08,29.13],[2.22,29.38],[2.81,29.21],[2.84,29.05],[2.73,28.82],[2.05,28.99],[2.08,29.13]]]},\"properties\":{\"id\":1235,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":6895,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1234,1160,1161,1236,1309,1308]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.83,28.4],[-15.95,28.32],[-16.06,28.32],[-16.31,28.77],[-16.2,29.1],[-15.75,28.77],[-15.75,28.71],[-15.83,28.4]]]},\"properties\":{\"id\":1274,\"height\":36,\"biome\":3,\"type\":\"island\",\"population\":6843,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1275,1349,1348,1273,1200,1201,1202]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.78,28.21],[-3.4,28.49],[-3.21,28.82],[-2.78,28.82],[-2.78,28.21]]]},\"properties\":{\"id\":1298,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1299,1372,1297,1225]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.23,27.87],[-9.65,27.79],[-9.67,28.21],[-9.53,28.29],[-9.37,28.26],[-9.23,27.87]]]},\"properties\":{\"id\":1360,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1361,1433,1359,1285,1286]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.43,27.54],[-5.46,27.48],[-5.71,27.65],[-5.88,28.04],[-5.65,28.26],[-5.37,28.15],[-5.43,27.54]]]},\"properties\":{\"id\":1367,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1368,1441,1440,1439,1292,1294]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.26,27.51],[2.59,27.9],[2.81,28.35],[3.21,28.26],[3.32,27.54],[3.26,27.51]]]},\"properties\":{\"id\":1383,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":15259,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1531,1456,1382,1309,1384]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.28,27.42],[2.47,27.76],[2.81,27.26],[2.73,27.03],[2.59,27.03],[2.28,27.42]]]},\"properties\":{\"id\":1455,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":52,\"culture\":7,\"religion\":11,\"neighbors\":[1530,1454,1456,1531,1605]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.43,27.76],[5.43,27.79],[6.02,27.68],[6.1,27.14],[6.05,26.92],[5.99,26.92],[5.46,27.51],[5.43,27.76]]]},\"properties\":{\"id\":1461,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":21000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1460,1387,1388,1462,1537,1611,1536]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.33,27.65],[8.72,27.9],[8.86,27.28],[8.75,27.17],[8.33,27.45],[8.33,27.65]]]},\"properties\":{\"id\":1466,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1465,1393,1467,1542,1541]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.56,26.81],[-3.09,26.5],[-3.26,26.72],[-3.18,27],[-2.78,27.12],[-2.56,26.81]]]},\"properties\":{\"id\":1520,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1521,1595,1594,1519,1445]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.14,26.64],[7,27.17],[7.12,27.23],[7.51,27.12],[7.48,26.72],[7.14,26.64]]]},\"properties\":{\"id\":1539,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":13000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1614,1538,1463,1464,1540]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.34,26.22],[-18.82,26.14],[-18.93,26.53],[-18.51,26.72],[-18.39,26.58],[-18.31,26.22],[-18.34,26.22]]]},\"properties\":{\"id\":1566,\"height\":36,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1642,1641,1565,1491,1492,1567]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.94,26.14],[-13.36,26.02],[-13.53,26.42],[-13.39,26.72],[-12.99,26.84],[-12.88,26.78],[-12.8,26.39],[-12.94,26.14]]]},\"properties\":{\"id\":1576,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1652,1651,1650,1575,1501,1502,1577]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.48,26.61],[-0.56,26.22],[-1.01,25.94],[-1.18,26.11],[-1.21,26.58],[-1.04,26.75],[-0.65,26.78],[-0.48,26.61]]]},\"properties\":{\"id\":1599,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1525,1600,1674,1673,1598,1523,1524]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.75,25.88],[-17.97,25.66],[-18.34,25.49],[-18.48,25.66],[-18.34,26.22],[-18.31,26.22],[-17.92,26.14],[-17.72,26.02],[-17.75,25.88]]]},\"properties\":{\"id\":1642,\"height\":36,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1643,1721,1720,1719,1641,1566,1567,1568]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.52,26.11],[-17.16,25.69],[-17.41,25.41],[-17.75,25.88],[-17.72,26.02],[-17.55,26.11],[-17.52,26.11]]]},\"properties\":{\"id\":1643,\"height\":36,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1569,1644,1722,1721,1642,1568]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.32,25.66],[-12.68,25.69],[-12.94,26.14],[-12.8,26.39],[-12.35,26.14],[-12.32,25.66],[-12.32,25.66]]]},\"properties\":{\"id\":1652,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1732,1730,1651,1576,1577,1653]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.48,26],[5.63,26.22],[6.1,26.25],[6.19,26.11],[6.08,25.69],[5.51,25.69],[5.48,26]]]},\"properties\":{\"id\":1686,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1685,1610,1611,1612,1687,1764]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.42,24.93],[-9.42,24.93],[-9.98,25.19],[-9.76,25.63],[-9.28,25.49],[-9.31,25.07],[-9.42,24.93]]]},\"properties\":{\"id\":1736,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1813,1812,1811,1735,1658,1737]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.99,25.16],[-8.07,25.05],[-8.66,25.33],[-8.69,25.49],[-8.38,25.66],[-8.21,25.63],[-7.99,25.16]]]},\"properties\":{\"id\":1738,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":8125,\"state\":6,\"province\":66,\"culture\":7,\"religion\":7,\"neighbors\":[1739,1815,1814,1737,1659,1660]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.67,23.98],[-2.64,23.53],[-3.12,23.37],[-3.21,23.45],[-2.95,24.01],[-2.67,23.98]]]},\"properties\":{\"id\":1981,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":5953,\"state\":6,\"province\":69,\"culture\":7,\"religion\":11,\"neighbors\":[1902,1982,2065,2064,1980]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.96,17.52],[-10.24,16.88],[-10.69,17.02],[-10.77,17.3],[-10.77,17.35],[-10.72,17.46],[-10.1,17.63],[-9.96,17.52]]]},\"properties\":{\"id\":2955,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2872,2956,3043,3042,2954,2870,2871]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.65,17.55],[-7.43,16.93],[-7.48,16.88],[-7.99,17.02],[-8.07,17.1],[-8.04,17.35],[-7.9,17.49],[-7.65,17.55]]]},\"properties\":{\"id\":2960,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[2876,2961,3049,3048,3047,2959,2875]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7,17.3],[-6.97,17.1],[-7.43,16.93],[-7.65,17.55],[-7.51,17.72],[-7.03,17.52],[-7,17.3]]]},\"properties\":{\"id\":2961,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2878,2962,3049,2960,2876,2877]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7,17.3],[-6.5,17.63],[-6.33,17.35],[-6.67,17.02],[-6.83,17.02],[-6.97,17.1],[-7,17.3]]]},\"properties\":{\"id\":2962,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2961,2878,2879,2963,3050,3049]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.09,16.96],[3.46,17.35],[3.6,17.32],[3.68,17.21],[3.29,16.62],[3.26,16.65],[3.09,16.96]]]},\"properties\":{\"id\":2981,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[3068,2980,2897,2982,3069,3156]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.97,17.83],[4.3,17.38],[4.13,17.07],[3.97,17.04],[3.68,17.21],[3.6,17.32],[3.97,17.83]]]},\"properties\":{\"id\":2982,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2897,2898,2983,3070,3069,2981]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.57,17.35],[6.05,17.72],[6.24,17.58],[6.08,16.88],[5.57,17.1],[5.57,17.35]]]},\"properties\":{\"id\":2985,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":6568,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2984,2901,2902,2986,3073]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.64,17.63],[7.03,17.49],[7.12,17.04],[6.55,17.02],[6.44,17.58],[6.64,17.63]]]},\"properties\":{\"id\":2987,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2902,2903,2988,3075,2986]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.87,16.93],[-14.03,16.6],[-14.26,16.54],[-14.6,16.68],[-14.6,16.9],[-14.57,17.02],[-14.01,17.13],[-13.87,16.93]]]},\"properties\":{\"id\":3036,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2949,3037,3125,3124,3035,2947,2948]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.08,17.02],[-12.97,16.88],[-12.99,16.51],[-13.47,16.54],[-13.5,16.96],[-13.36,17.1],[-13.08,17.02]]]},\"properties\":{\"id\":3038,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2950,2951,3039,3126,3037,2949]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.4,16.88],[-5.37,16.54],[-5.4,16.51],[-5.96,16.54],[-5.96,16.54],[-6.07,16.76],[-5.93,17.02],[-5.4,16.88]]]},\"properties\":{\"id\":3052,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[2964,3053,3141,3140,3139,3051,2963]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.59,16.96],[2.81,16.48],[2.73,16.37],[2.28,16.6],[2.25,16.74],[2.59,16.96]]]},\"properties\":{\"id\":3067,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":2000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":8,\"neighbors\":[2979,3068,3156,3155,3066]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.09,16.96],[3.26,16.65],[2.81,16.48],[2.59,16.96],[2.73,17.18],[3.09,16.96]]]},\"properties\":{\"id\":3068,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2980,2981,3156,3067,2979]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.92,16.96],[5.01,16.85],[4.98,16.62],[4.33,16.54],[4.28,16.93],[4.92,16.96]]]},\"properties\":{\"id\":3071,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":8,\"neighbors\":[2983,2984,3072,3159,3070]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.68,16.99],[8.41,17.02],[8.27,16.46],[8.18,16.4],[7.88,16.43],[7.68,16.96],[7.68,16.99]]]},\"properties\":{\"id\":3077,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":21000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2988,2989,3078,3166,3165,3076]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.17,16.51],[-9.11,15.9],[-9.2,15.78],[-9.7,15.95],[-9.82,16.46],[-9.76,16.51],[-9.34,16.62],[-9.17,16.51]]]},\"properties\":{\"id\":3133,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3046,3134,3227,3226,3132,3044,3045]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.55,16.51],[-8.07,16.51],[-7.79,16.34],[-8.16,15.87],[-8.32,15.9],[-8.55,16.09],[-8.55,16.51]]]},\"properties\":{\"id\":3135,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":167,\"culture\":7,\"religion\":7,\"neighbors\":[3134,3047,3048,3136,3228,3227]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.96,16.54],[-5.4,16.51],[-5.51,16.09],[-5.82,15.92],[-5.96,16.54]]]},\"properties\":{\"id\":3140,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3139,3052,3141,3233]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.03,16.48],[-4.92,15.95],[-4.98,15.87],[-5.34,15.92],[-5.51,16.09],[-5.4,16.51],[-5.37,16.54],[-5.03,16.48]]]},\"properties\":{\"id\":3141,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3053,3142,3235,3234,3233,3140,3052]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.99,16.4],[-3.57,16.12],[-3.88,15.87],[-4.27,16.23],[-4.25,16.34],[-4.22,16.4],[-3.99,16.4]]]},\"properties\":{\"id\":3143,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3055,3144,3237,3236,3142,3054]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.15,16.34],[1.21,16.15],[1.21,16.15],[0.73,15.78],[0.45,16.01],[0.98,16.4],[1.15,16.34]]]},\"properties\":{\"id\":3152,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":7,\"religion\":7,\"neighbors\":[3065,3153,3246,3245,3244,3151]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.28,16.6],[2.73,16.37],[2.7,16.06],[2.25,16.04],[2.11,16.18],[2.28,16.6]]]},\"properties\":{\"id\":3155,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":8,\"neighbors\":[3066,3067,3156,3248,3247]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.29,16.62],[3.43,16.48],[3.38,16.2],[2.84,15.95],[2.7,16.06],[2.73,16.37],[2.81,16.48],[3.26,16.65],[3.29,16.62]]]},\"properties\":{\"id\":3156,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2981,3069,3157,3249,3248,3155,3067,3068]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.89,16.32],[9.28,16.74],[9.28,16.71],[9.48,16.04],[9.31,15.87],[8.89,16.04],[8.89,16.32]]]},\"properties\":{\"id\":3167,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":33496,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[3166,3079,3080,3168,3261,3260]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.78,15.95],[12.12,16.46],[12.29,16.4],[12.46,15.67],[11.81,15.95],[11.78,15.95]]]},\"properties\":{\"id\":3173,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":23997,\"state\":8,\"province\":124,\"culture\":8,\"religion\":8,\"neighbors\":[3265,3172,3085,3174,3266]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.98,15.87],[-5.01,15.5],[-5.51,15.5],[-5.34,15.92],[-4.98,15.87]]]},\"properties\":{\"id\":3234,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3141,3235,3325,3233]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.7,16.06],[2.84,15.95],[2.9,15.45],[2.7,15.36],[2.31,15.31],[2.11,15.48],[2.25,16.04],[2.7,16.06]]]},\"properties\":{\"id\":3248,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3155,3156,3249,3340,3339,3338,3247]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.38,16.2],[3.52,15.95],[3.12,15.34],[2.9,15.45],[2.84,15.95],[3.38,16.2]]]},\"properties\":{\"id\":3249,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":11,\"neighbors\":[3156,3157,3250,3340,3248]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.48,16.04],[9.79,16.06],[10.01,15.98],[9.84,15.45],[9.31,15.53],[9.31,15.87],[9.48,16.04]]]},\"properties\":{\"id\":3261,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":21000,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3167,3168,3169,3262,3352,3260]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.7,16.04],[14.06,16.15],[14.17,16.01],[14.2,15.5],[14.03,15.34],[13.58,15.48],[13.7,16.04]]]},\"properties\":{\"id\":3269,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":21000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3268,3176,3177,3270,3361,3360]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.32,15.11],[-10.55,14.67],[-10.86,14.86],[-10.52,15.2],[-10.32,15.11]]]},\"properties\":{\"id\":3315,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3224,3405,3404,3314]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.65,15.42],[-5.51,15.5],[-5.01,15.5],[-4.78,15.2],[-4.87,15],[-5.37,14.92],[-5.65,15.42]]]},\"properties\":{\"id\":3325,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3324,3233,3234,3235,3326,3415]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.24,15.28],[-0.73,15.06],[-0.96,14.83],[-1.35,14.83],[-1.49,15],[-1.38,15.2],[-1.24,15.28]]]},\"properties\":{\"id\":3332,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3241,3333,3423,3422,3421,3331]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.98,15.25],[10.24,15.28],[10.29,14.72],[9.82,14.61],[9.73,14.81],[9.98,15.25]]]},\"properties\":{\"id\":3353,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":17000,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3352,3262,3354,3443,3442]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.05,14.95],[-5.96,14.75],[-6.22,14.39],[-6.53,14.55],[-6.58,14.81],[-6.3,15.06],[-6.05,14.95]]]},\"properties\":{\"id\":3413,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3323,3324,3414,3503,3412,3322]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.39,14.67],[-4.22,14.39],[-4.73,14.08],[-4.92,14.27],[-4.78,14.81],[-4.39,14.67]]]},\"properties\":{\"id\":3416,\"height\":36,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3326,3417,3507,3506,3415]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.69,14.41],[11.19,14.78],[11.22,14.78],[11.45,14.22],[11.45,14.19],[10.72,14.3],[10.66,14.33],[10.69,14.41]]]},\"properties\":{\"id\":3445,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3443,3444,3355,3446,3537,3536,3535]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.21,14.25],[-17.24,13.94],[-17.41,13.77],[-17.61,13.77],[-17.92,14.19],[-17.77,14.53],[-17.27,14.33],[-17.21,14.25]]]},\"properties\":{\"id\":3483,\"height\":36,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3393,3484,3571,3570,3482,3391,3392]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.32,14.33],[-2.7,14.47],[-2.76,13.88],[-3.12,13.8],[-3.15,13.83],[-3.32,14.3],[-3.32,14.33]]]},\"properties\":{\"id\":3510,\"height\":36,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3418,3419,3511,3597,3596,3509]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.84,14.16],[10.52,14.16],[10.55,13.8],[10.27,13.52],[9.96,13.71],[9.82,14.11],[9.84,14.16]]]},\"properties\":{\"id\":3534,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":11000,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3533,3443,3535,3622,3621,3620]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.68,14.19],[14.77,14.25],[15.13,14.33],[15.16,14.3],[15.24,13.91],[15.13,13.66],[14.88,13.66],[14.71,13.77],[14.6,13.99],[14.68,14.19]]]},\"properties\":{\"id\":3543,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3542,3451,3452,3454,3544,3545,3631,3630,3629]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.12,13.32],[-25.4,13.04],[-25.85,13.35],[-25.65,13.8],[-25.12,13.32]]]},\"properties\":{\"id\":3555,\"height\":36,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3556,3641,3640,3554]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.02,14.05],[13.47,13.71],[13.5,13.32],[13.47,13.32],[12.85,13.27],[12.83,13.29],[12.83,13.74],[13.02,14.05]]]},\"properties\":{\"id\":3627,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":21000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3539,3540,3628,3713,3712,3711,3626]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.12,13.35],[-23.29,12.59],[-23.68,12.73],[-23.85,13.27],[-23.82,13.29],[-23.12,13.35]]]},\"properties\":{\"id\":3644,\"height\":36,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3559,3645,3727,3643,3558]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.35,12.73],[-21.71,12.45],[-21.97,12.65],[-22.02,12.73],[-21.88,13.1],[-21.85,13.13],[-21.35,12.73]]]},\"properties\":{\"id\":3647,\"height\":36,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3648,3731,3730,3729,3646,3562]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.69,13.15],[11.36,13.1],[11.31,12.85],[10.86,12.79],[10.63,13.13],[10.69,13.15]]]},\"properties\":{\"id\":3708,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":9000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3622,3623,3709,3791,3707]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.71,12.9],[15.08,13.07],[15.27,12.85],[14.96,12.57],[14.71,12.73],[14.71,12.9]]]},\"properties\":{\"id\":3715,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":14372,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3714,3632,3717,3716,3798]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.96,12.57],[15.27,12.85],[15.55,12.82],[15.58,12.76],[15.55,12.59],[15.1,12.2],[15.05,12.26],[14.96,12.57]]]},\"properties\":{\"id\":3716,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":12000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3798,3715,3717,3718,3800,3799,3883]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.16,12.01],[15.61,12.12],[15.89,11.9],[15.89,11.87],[15.83,11.73],[15.13,11.73],[15.16,12.01]]]},\"properties\":{\"id\":3884,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":11000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3883,3799,3801,3885,3886,3967]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.83,11.73],[-24.97,11],[-25.34,10.89],[-25.48,11.34],[-25.23,11.78],[-24.83,11.73]]]},\"properties\":{\"id\":3892,\"height\":36,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3809,3893,3891,3808]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[15.89,11.53],[16.26,11.56],[16.37,10.86],[15.72,11],[15.89,11.53]]]},\"properties\":{\"id\":3968,\"height\":36,\"biome\":12,\"type\":\"island\",\"population\":7000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3967,3886,3969]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.09,37.13],[-7.37,37.05],[-7.76,37.27],[-7.62,37.38],[-6.97,37.33],[-6.97,37.27],[-7.09,37.13]]]},\"properties\":{\"id\":110,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":10000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[187,186,109,35,36,111]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.26,37.02],[-3.6,37.02],[-3.68,37.52],[-3.15,37.58],[-2.95,37.38],[-3.26,37.02]]]},\"properties\":{\"id\":117,\"height\":49,\"biome\":11,\"type\":\"island\",\"population\":41938,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[118,193,116,43,44]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.35,36.96],[3.32,37.24],[3.63,37.58],[3.71,37.61],[3.85,37.52],[4.02,36.99],[3.85,36.82],[3.35,36.96]]]},\"properties\":{\"id\":130,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":24939,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[206,129,55,56,57,131,207]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.73,36.1],[2.67,36.29],[2.73,36.74],[3.21,36.74],[3.32,36.46],[2.73,36.1]]]},\"properties\":{\"id\":205,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[279,278,204,129,206]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.63,36.6],[5.68,36.8],[6.16,36.8],[6.24,36.49],[5.91,36.24],[5.63,36.6]]]},\"properties\":{\"id\":210,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[284,209,134,211,285]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.87,36.52],[11.64,36.41],[11.31,36.88],[12.01,36.8],[12.04,36.71],[11.87,36.52]]]},\"properties\":{\"id\":221,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":12000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[298,296,220,146,148]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.15,35.93],[-5.74,36.32],[-5.23,36.6],[-4.89,36.21],[-4.89,36.07],[-5.15,35.93]]]},\"properties\":{\"id\":264,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":18000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[341,263,189,190,265]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.88,36.04],[-1.97,36.04],[-1.77,36.68],[-1.24,36.35],[-1.88,36.04]]]},\"properties\":{\"id\":270,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[271,347,196,197]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.17,35.62],[1.72,36.24],[1.72,36.24],[2.11,36.27],[2.5,35.82],[2.17,35.62]]]},\"properties\":{\"id\":277,\"height\":49,\"biome\":11,\"type\":\"island\",\"population\":14024,\"state\":10,\"province\":136,\"culture\":3,\"religion\":3,\"neighbors\":[355,354,202,203,278]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.73,35.9],[2.5,35.82],[2.11,36.27],[2.31,36.43],[2.67,36.29],[2.73,36.1],[2.73,35.9]]]},\"properties\":{\"id\":278,\"height\":49,\"biome\":11,\"type\":\"island\",\"population\":4000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[279,355,277,203,204,205]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.98,35.76],[6.98,36.24],[7.45,36.15],[7.65,35.85],[7.57,35.68],[7.12,35.68],[6.98,35.76]]]},\"properties\":{\"id\":287,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":6000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[363,286,213,288,365,364]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2,36.04],[-2.08,35.48],[-2.59,35.4],[-2.56,35.71],[-2.11,36.07],[-2,36.04]]]},\"properties\":{\"id\":346,\"height\":49,\"biome\":11,\"type\":\"island\",\"population\":15000,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[196,347,421,345,269]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.14,35.31],[-0.14,35.37],[-0.03,35.85],[0,35.9],[0.56,35.65],[0.51,35.37],[-0.11,35.29],[-0.14,35.31]]]},\"properties\":{\"id\":351,\"height\":49,\"biome\":11,\"type\":\"island\",\"population\":18000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[425,349,350,273,274,352,426]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.42,35.48],[-18.14,35.15],[-18.39,34.7],[-18.82,35.06],[-18.82,35.09],[-18.79,35.23],[-18.42,35.48]]]},\"properties\":{\"id\":391,\"height\":49,\"biome\":2,\"type\":\"island\",\"population\":20017,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[316,317,392,464,390,315]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.03,34.81],[-0.11,35.29],[0.51,35.37],[0.67,35.2],[0.56,34.61],[-0.03,34.81]]]},\"properties\":{\"id\":426,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":32108,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[499,425,351,352,427]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.24,34.75],[0.56,34.59],[0.56,34.61],[0.67,35.2],[0.9,35.2],[1.38,34.87],[1.24,34.75]]]},\"properties\":{\"id\":427,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":19000,\"state\":10,\"province\":139,\"culture\":4,\"religion\":4,\"neighbors\":[501,500,499,426,352,428]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.26,34.17],[6.89,34.67],[6.92,34.75],[6.95,34.78],[7.45,34.75],[7.45,34.73],[7.51,34.25],[7.26,34.17]]]},\"properties\":{\"id\":512,\"height\":49,\"biome\":10,\"type\":\"island\",\"population\":14000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[586,511,510,438,439,440,513]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.14,32.88],[-18.42,32.52],[-18.98,32.8],[-18.98,32.8],[-18.79,33.24],[-18.34,33.41],[-18.31,33.36],[-18.14,32.88]]]},\"properties\":{\"id\":684,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":32899,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[685,759,758,682,609,610,611]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.77,32.8],[-18.14,32.88],[-18.31,33.36],[-17.69,33.22],[-17.77,32.8]]]},\"properties\":{\"id\":685,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":17913,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[686,759,684,611]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.75,32.29],[-16.12,31.93],[-16.48,32.04],[-15.95,32.63],[-15.75,32.29]]]},\"properties\":{\"id\":763,\"height\":49,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[764,836,835,762]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.86,32.07],[-18.06,31.73],[-18.28,31.65],[-18.62,32.07],[-18.39,32.43],[-17.89,32.12],[-17.86,32.07]]]},\"properties\":{\"id\":832,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":21000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[760,833,906,831,758,759]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.96,32.21],[-8.1,31.65],[-8.47,31.68],[-8.63,32.1],[-8.52,32.21],[-8.24,32.38],[-7.96,32.21]]]},\"properties\":{\"id\":850,\"height\":49,\"biome\":9,\"type\":\"island\",\"population\":32991,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[778,851,924,849,776,777]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.97,30.42],[-18.31,30.39],[-18.45,30.47],[-18.39,31.01],[-18.37,31.03],[-17.83,31.06],[-17.75,30.67],[-17.97,30.42]]]},\"properties\":{\"id\":979,\"height\":49,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[1052,1051,1050,978,905,906,980]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.24,30.56],[-17.75,30.67],[-17.83,31.06],[-17.83,31.09],[-17.32,31.03],[-17.24,30.56]]]},\"properties\":{\"id\":980,\"height\":49,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":29,\"culture\":7,\"religion\":7,\"neighbors\":[981,1052,979,906,907]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.74,30.89],[-14.65,30.5],[-14.68,30.45],[-14.99,30.14],[-15.1,30.47],[-15.02,30.87],[-14.96,30.92],[-14.74,30.89]]]},\"properties\":{\"id\":985,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[912,986,1058,1057,1056,984,911]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.65,30.64],[7.59,30.81],[8.02,31.12],[8.21,30.98],[7.96,30.33],[7.85,30.39],[7.65,30.64]]]},\"properties\":{\"id\":1027,\"height\":49,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":6,\"religion\":6,\"neighbors\":[1098,1026,954,955,1028,1099]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.17,29.72],[-18.2,29.72],[-18.31,30.39],[-17.97,30.42],[-17.49,29.97],[-18.17,29.72]]]},\"properties\":{\"id\":1051,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":38,\"culture\":7,\"religion\":7,\"neighbors\":[1124,1123,1050,979,1052]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.43,29.94],[-7.59,29.44],[-7.99,29.49],[-7.93,29.72],[-7.45,29.94],[-7.43,29.94]]]},\"properties\":{\"id\":1142,\"height\":49,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1071,1143,1216,1141,1070]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.37,29.8],[0.03,29.47],[-0.48,29.75],[-0.48,29.8],[-0.45,29.83],[0.34,29.94],[0.37,29.8]]]},\"properties\":{\"id\":1156,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1158,1157,1230,1155,1083,1084]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.22,28.6],[-2.76,28.85],[-2.62,29.21],[-2.56,29.3],[-2.33,29.38],[-1.91,28.88],[-2.22,28.6]]]},\"properties\":{\"id\":1226,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1300,1299,1225,1151,1152,1227]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.66,29.41],[-1.83,28.91],[-1.91,28.88],[-2.33,29.38],[-2.11,29.69],[-1.66,29.41]]]},\"properties\":{\"id\":1227,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1153,1228,1300,1226,1152]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.69,28.82],[-17.32,28.6],[-17.8,28.07],[-17.97,28.29],[-17.77,28.77],[-17.69,28.82]]]},\"properties\":{\"id\":1271,\"height\":49,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1197,1198,1345,1344,1270]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.76,28.43],[2.73,28.82],[2.84,29.05],[3.4,28.96],[3.46,28.71],[3.49,28.4],[3.21,28.26],[2.81,28.35],[2.76,28.43]]]},\"properties\":{\"id\":1309,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":10000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1382,1308,1235,1236,1237,1310,1384,1383]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.24,28.54],[-17.32,27.76],[-17.32,27.76],[-17.72,27.82],[-17.8,28.07],[-17.32,28.6],[-17.27,28.6],[-17.24,28.54]]]},\"properties\":{\"id\":1345,\"height\":49,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1272,1346,1419,1418,1344,1271,1198]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.96,28.01],[-6.33,27.68],[-6.55,27.84],[-6.3,28.29],[-5.96,28.01]]]},\"properties\":{\"id\":1366,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1292,1439,1438,1365]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.36,28.04],[4.33,28.29],[4.5,28.46],[4.92,28.57],[5.03,28.43],[4.84,27.96],[4.36,28.04]]]},\"properties\":{\"id\":1386,\"height\":49,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1459,1385,1311,1312,1313,1387]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.52,28.21],[6.55,28.24],[7.03,28.18],[7.2,27.93],[7,27.73],[6.67,27.68],[6.52,28.21]]]},\"properties\":{\"id\":1390,\"height\":49,\"biome\":6,\"type\":\"island\",\"population\":23416,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1389,1315,1316,1317,1464,1463]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.2,27.93],[7.65,28.54],[7.82,28.24],[7.42,27.84],[7.2,27.93]]]},\"properties\":{\"id\":1391,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":28636,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1464,1317,1318,1392]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.1,28.07],[8.44,28.38],[8.44,28.38],[8.75,28.15],[8.72,27.9],[8.72,27.9],[8.33,27.65],[8.1,27.96],[8.1,28.07]]]},\"properties\":{\"id\":1393,\"height\":49,\"biome\":6,\"type\":\"island\",\"population\":18000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1392,1318,1319,1320,1394,1467,1466,1465]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.28,27.84],[4.36,28.04],[4.84,27.96],[5.15,27.73],[4.78,27.28],[4.67,27.28],[4.28,27.84]]]},\"properties\":{\"id\":1459,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1458,1385,1386,1387,1460,1534]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.26,27.42],[-15.83,27.2],[-15.89,26.86],[-16.48,26.98],[-16.45,27.17],[-16.26,27.42]]]},\"properties\":{\"id\":1496,\"height\":49,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1420,1421,1497,1495,1494]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.46,26.92],[-14.65,26.53],[-15.19,26.98],[-15.16,27.03],[-14.88,27.2],[-14.48,27.14],[-14.46,26.92]]]},\"properties\":{\"id\":1498,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1499,1574,1573,1497,1422,1423]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.37,27.14],[5.46,27.51],[5.99,26.92],[5.68,26.84],[5.37,27.14]]]},\"properties\":{\"id\":1536,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1535,1460,1461,1611]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.12,26.36],[-16.71,25.97],[-16.73,25.97],[-16.82,26.08],[-16.79,26.64],[-16.65,26.72],[-16.12,26.44],[-16.12,26.36]]]},\"properties\":{\"id\":1570,\"height\":49,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1571,1645,1723,1644,1569,1494,1495]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.69,26.02],[-2,26.08],[-2,26.11],[-2.02,26.58],[-1.66,26.58],[-1.6,26.11],[-1.69,26.02]]]},\"properties\":{\"id\":1597,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":9649,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1673,1672,1671,1596,1522,1598]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.18,26.11],[-1.6,26.11],[-1.66,26.58],[-1.66,26.58],[-1.21,26.58],[-1.18,26.11]]]},\"properties\":{\"id\":1598,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":61,\"culture\":7,\"religion\":11,\"neighbors\":[1599,1673,1597,1522,1523]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.43,26.61],[5.68,26.84],[5.99,26.92],[6.05,26.92],[6.19,26.78],[6.1,26.25],[5.63,26.22],[5.43,26.61]]]},\"properties\":{\"id\":1611,\"height\":49,\"biome\":6,\"type\":\"island\",\"population\":24000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1610,1535,1536,1461,1537,1612,1686]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.03,26.3],[-16.09,25.66],[-16.71,25.97],[-16.12,26.36],[-16.03,26.3]]]},\"properties\":{\"id\":1645,\"height\":49,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1571,1646,1723,1570]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.07,25.66],[-15.64,25.47],[-15.72,25.55],[-15.55,26.02],[-15.13,26.11],[-15.07,25.66]]]},\"properties\":{\"id\":1647,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":9784,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1648,1725,1724,1646,1572]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.32,26.28],[-10.21,26.39],[-9.73,26.14],[-9.84,25.83],[-10.24,25.83],[-10.24,25.83],[-10.32,26.28]]]},\"properties\":{\"id\":1657,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1656,1581,1582,1658,1735,1734]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.9,25.83],[-8.21,25.63],[-8.38,25.66],[-8.47,26.22],[-8.24,26.33],[-8.02,26.14],[-7.9,25.83]]]},\"properties\":{\"id\":1660,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1661,1739,1738,1659,1585,1586]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.89,25.91],[-5.32,25.55],[-5.6,26.16],[-5.43,26.22],[-4.95,26.14],[-4.89,25.91]]]},\"properties\":{\"id\":1666,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":10711,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1667,1744,1665,1590,1591]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.37,25.72],[7.76,26.11],[7.93,26.08],[8.1,25.61],[8.1,25.58],[7.59,25.49],[7.37,25.72]]]},\"properties\":{\"id\":1690,\"height\":49,\"biome\":6,\"type\":\"island\",\"population\":18873,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1767,1689,1615,1691,1769,1768]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.02,25.19],[-13.39,25.02],[-13.53,25.72],[-13.44,25.77],[-12.99,25.52],[-13.02,25.19]]]},\"properties\":{\"id\":1729,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1730,1805,1728,1650,1651]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.26,17.63],[5.57,17.35],[5.57,17.1],[5.54,17.04],[5.01,16.85],[4.92,16.96],[4.87,17.32],[5.06,17.58],[5.26,17.63]]]},\"properties\":{\"id\":2984,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":8,\"neighbors\":[2900,2901,2985,3073,3072,3071,2983,2899]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.24,17.58],[6.44,17.58],[6.55,17.02],[6.36,16.82],[6.16,16.79],[6.08,16.88],[6.24,17.58]]]},\"properties\":{\"id\":2986,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2985,2902,2987,3075,3074,3073]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.51,16.43],[-7.54,16.4],[-7.79,16.34],[-8.07,16.51],[-7.99,17.02],[-7.48,16.88],[-7.51,16.43]]]},\"properties\":{\"id\":3048,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":104,\"culture\":7,\"religion\":7,\"neighbors\":[3049,3137,3136,3135,3047,2960]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.5,16.88],[-6.5,16.26],[-6.86,16.43],[-6.83,17.02],[-6.67,17.02],[-6.5,16.88]]]},\"properties\":{\"id\":3050,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[2963,3051,3138,3049,2962]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.5,16.88],[-6.07,16.76],[-5.96,16.54],[-6.44,16.18],[-6.5,16.26],[-6.5,16.88]]]},\"properties\":{\"id\":3051,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3050,2963,3052,3139,3138]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.68,17.21],[3.97,17.04],[3.71,16.51],[3.43,16.48],[3.29,16.62],[3.68,17.21]]]},\"properties\":{\"id\":3069,\"height\":49,\"biome\":6,\"type\":\"island\",\"population\":4703,\"state\":11,\"province\":145,\"culture\":8,\"religion\":11,\"neighbors\":[2981,2982,3070,3157,3156]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.97,17.04],[4.13,17.07],[4.28,16.93],[4.33,16.54],[4.25,16.4],[4.05,16.32],[3.71,16.51],[3.97,17.04]]]},\"properties\":{\"id\":3070,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":8,\"neighbors\":[3069,2982,2983,3071,3159,3158,3157]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.55,16.74],[24.95,16.76],[24.95,16.34],[24.86,16.34],[24.55,16.74]]]},\"properties\":{\"id\":3098,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3187,3011,3099,3188]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.45,15.92],[-7.45,15.92],[-7.99,15.7],[-8.16,15.87],[-7.79,16.34],[-7.54,16.4],[-7.45,15.92]]]},\"properties\":{\"id\":3136,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":167,\"culture\":7,\"religion\":7,\"neighbors\":[3137,3230,3229,3228,3135,3048]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.96,16.54],[-5.82,15.92],[-5.91,15.81],[-6.44,16.09],[-6.44,16.18],[-5.96,16.54],[-5.96,16.54]]]},\"properties\":{\"id\":3139,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3052,3140,3233,3232,3138,3051]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.71,16.51],[4.05,16.32],[3.94,15.87],[3.88,15.81],[3.52,15.95],[3.38,16.2],[3.43,16.48],[3.71,16.51]]]},\"properties\":{\"id\":3157,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":8,\"neighbors\":[3069,3070,3158,3251,3250,3249,3156]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.38,16.68],[24.53,16.74],[24.55,16.74],[24.86,16.34],[24.64,16.15],[24.38,16.12],[24.3,16.4],[24.38,16.68]]]},\"properties\":{\"id\":3187,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3097,3012,3011,3098,3188,3189,3185]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.95,16.34],[25.06,16.32],[25.2,16.06],[24.89,15.81],[24.64,16.15],[24.86,16.34],[24.95,16.34]]]},\"properties\":{\"id\":3188,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3098,3099,3190,3281,3189,3187]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.38,16.12],[24.64,16.15],[24.89,15.81],[24.83,15.73],[24.47,15.67],[24.38,15.78],[24.36,16.12],[24.38,16.12]]]},\"properties\":{\"id\":3189,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3185,3187,3188,3281,3280,3279,3186]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.45,15.92],[-7.23,15.39],[-7.87,15.39],[-7.99,15.7],[-7.45,15.92]]]},\"properties\":{\"id\":3229,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":167,\"culture\":7,\"religion\":7,\"neighbors\":[3136,3230,3320,3228]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.34,15.92],[-5.51,15.5],[-5.65,15.42],[-5.71,15.42],[-5.88,15.59],[-5.91,15.81],[-5.82,15.92],[-5.51,16.09],[-5.34,15.92]]]},\"properties\":{\"id\":3233,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3141,3234,3325,3324,3323,3232,3139,3140]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.29,16.06],[-3.29,15.59],[-3.68,15.39],[-3.88,15.56],[-3.88,15.87],[-3.57,16.12],[-3.35,16.15],[-3.29,16.06]]]},\"properties\":{\"id\":3237,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3145,3238,3328,3327,3236,3143,3144]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.12,15.34],[3.52,15.95],[3.88,15.81],[3.85,15.62],[3.74,15.45],[3.18,15.28],[3.12,15.34]]]},\"properties\":{\"id\":3250,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3340,3249,3157,3251,3342,3341]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[24.89,15.81],[25.2,16.06],[25.26,16.04],[25.42,15.84],[25.31,15.53],[25.12,15.42],[24.98,15.5],[24.83,15.73],[24.89,15.81]]]},\"properties\":{\"id\":3281,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3189,3188,3190,3191,3283,3372,3369,3280]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.42,15.34],[-16.03,14.89],[-16.12,14.72],[-16.65,14.83],[-16.62,15.2],[-16.48,15.34],[-16.42,15.34]]]},\"properties\":{\"id\":3304,\"height\":49,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3213,3305,3395,3394,3303,3212]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.65,15.42],[-5.37,14.92],[-5.51,14.75],[-5.96,14.75],[-6.05,14.95],[-5.71,15.42],[-5.65,15.42]]]},\"properties\":{\"id\":3324,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3233,3325,3415,3414,3413,3323]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.12,15.34],[3.18,15.28],[3.29,14.89],[3.15,14.69],[2.73,14.61],[2.7,14.64],[2.7,15.36],[2.9,15.45],[3.12,15.34]]]},\"properties\":{\"id\":3340,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":9801,\"state\":11,\"province\":148,\"culture\":8,\"religion\":11,\"neighbors\":[3249,3250,3341,3431,3430,3429,3339,3248]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.33,15.36],[11.45,15.62],[12.01,15.22],[11.98,14.86],[11.31,14.86],[11.33,15.36]]]},\"properties\":{\"id\":3356,\"height\":49,\"biome\":6,\"type\":\"island\",\"population\":30273,\"state\":8,\"province\":124,\"culture\":8,\"religion\":11,\"neighbors\":[3355,3264,3265,3357,3446]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.78,13.49],[-24.89,13.43],[-24.89,13.43],[-25.26,14.08],[-25.23,14.11],[-24.83,14.25],[-24.55,13.74],[-24.78,13.49]]]},\"properties\":{\"id\":3469,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3557,3642,3641,3556,3468,3378,3470]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.53,14.27],[0.67,14.33],[1.04,14.25],[1.24,14.05],[1.18,13.8],[1.07,13.71],[0.62,13.91],[0.53,14.27]]]},\"properties\":{\"id\":3517,\"height\":49,\"biome\":4,\"type\":\"island\",\"population\":4752,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[3516,3425,3426,3427,3518,3605,3604]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.26,14.08],[-24.89,13.43],[-25.12,13.32],[-25.65,13.8],[-25.65,13.85],[-25.26,14.08]]]},\"properties\":{\"id\":3556,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3468,3469,3641,3555,3554]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.78,13.49],[-24.55,13.74],[-24.47,13.77],[-23.91,13.27],[-24.19,13.15],[-24.78,13.49]]]},\"properties\":{\"id\":3557,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3642,3469,3470,3558,3643]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.71,13.77],[-23.82,13.29],[-23.85,13.27],[-23.91,13.27],[-24.47,13.77],[-24.24,13.99],[-23.77,13.8],[-23.71,13.77]]]},\"properties\":{\"id\":3558,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3472,3559,3644,3643,3557,3470,3471]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.39,13.66],[12.09,13.69],[12.09,13.69],[12.01,13.15],[11.87,13.07],[11.45,13.21],[11.39,13.66]]]},\"properties\":{\"id\":3624,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":11000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3623,3537,3626,3625,3710,3709]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.17,13.85],[14.6,13.99],[14.71,13.77],[14.37,13.24],[14.15,13.24],[14.06,13.29],[14.17,13.85]]]},\"properties\":{\"id\":3629,\"height\":49,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3628,3542,3543,3630,3714,3713]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-26.1,13.29],[-25.76,12.57],[-25.87,12.45],[-26.35,12.62],[-26.35,12.62],[-26.38,13.24],[-26.32,13.32],[-26.1,13.29]]]},\"properties\":{\"id\":3639,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3554,3640,3723,3722,3721,3638,3553]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.4,13.04],[-25.4,12.73],[-25.76,12.57],[-26.1,13.29],[-25.85,13.35],[-25.4,13.04]]]},\"properties\":{\"id\":3640,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3555,3641,3723,3639,3554]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.87,12.45],[-25.87,12.06],[-26.61,12.12],[-26.35,12.62],[-25.87,12.45]]]},\"properties\":{\"id\":3722,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3639,3723,3807,3721]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.88,12.54],[-23.88,12.54],[-24.13,11.95],[-24.41,12.34],[-24.07,12.54],[-23.88,12.54]]]},\"properties\":{\"id\":3726,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3643,3727,3811,3810,3725]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.5,12.85],[-22.56,12.37],[-22.81,12.32],[-23.26,12.57],[-23.26,12.59],[-22.58,13.01],[-22.5,12.85]]]},\"properties\":{\"id\":3728,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3646,3729,3814,3813,3727,3645]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.85,11.98],[-25.87,11.87],[-26.41,11.67],[-26.66,12.06],[-26.61,12.12],[-25.87,12.06],[-25.85,11.98]]]},\"properties\":{\"id\":3807,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3723,3808,3890,3806,3721,3722]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.37,11.98],[-25.23,11.78],[-25.48,11.34],[-25.79,11.62],[-25.87,11.87],[-25.85,11.98],[-25.37,11.98]]]},\"properties\":{\"id\":3808,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3723,3809,3892,3891,3890,3807]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.81,12.32],[-22.92,11.7],[-23.2,11.67],[-23.26,11.67],[-23.26,12.57],[-23.26,12.57],[-22.81,12.32]]]},\"properties\":{\"id\":3813,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3728,3814,3896,3895,3812,3727]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.27,11.87],[-22.42,11.64],[-22.61,11.53],[-22.92,11.7],[-22.81,12.32],[-22.56,12.37],[-22.42,12.29],[-22.25,12.04],[-22.27,11.87]]]},\"properties\":{\"id\":3814,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3815,3898,3897,3896,3813,3728,3729,3730]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.79,11.62],[-26.35,10.97],[-26.44,11.64],[-26.41,11.67],[-25.87,11.87],[-25.79,11.62]]]},\"properties\":{\"id\":3890,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":9624,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3808,3891,3889,3806,3807]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.34,10.89],[-25.34,10.86],[-26.38,10.92],[-26.35,10.97],[-25.79,11.62],[-25.48,11.34],[-25.34,10.89]]]},\"properties\":{\"id\":3891,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3892,3889,3890,3808]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.85,11.64],[-23.77,10.94],[-24.22,10.66],[-24.52,10.92],[-24.24,11.64],[-24.07,11.7],[-23.85,11.64]]]},\"properties\":{\"id\":3894,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3811,3895,3893,3810]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-22.61,11.53],[-22.58,11],[-23.12,10.69],[-23.29,10.83],[-23.2,11.67],[-22.92,11.7],[-22.61,11.53]]]},\"properties\":{\"id\":3896,\"height\":49,\"biome\":1,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3814,3897,3895,3813]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-21.12,36.85],[-21.52,37.02],[-21.68,37.22],[-21.68,37.3],[-21.46,37.47],[-21.18,37.5],[-21.07,37.41],[-21.01,36.99],[-21.12,36.85]]]},\"properties\":{\"id\":84,\"height\":64,\"biome\":2,\"type\":\"island\",\"population\":26561,\"state\":4,\"province\":45,\"culture\":9,\"religion\":9,\"neighbors\":[161,160,159,83,9,10,11,85]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.99,36.94],[-8.49,36.8],[-8.72,37.05],[-8.69,37.22],[-8.32,37.61],[-8.21,37.61],[-7.9,37.22],[-7.99,36.94],[-7.99,36.94]]]},\"properties\":{\"id\":108,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":27000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[185,184,183,107,33,34,35,109]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.46,36.99],[-5.71,36.99],[-5.74,36.99],[-5.85,37.41],[-5.29,37.55],[-5.2,37.44],[-5.46,36.99]]]},\"properties\":{\"id\":113,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":19127,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[114,189,188,112,39,40]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.05,37.52],[-4.25,36.94],[-4.75,37.02],[-4.81,37.3],[-4.7,37.44],[-4.05,37.52]]]},\"properties\":{\"id\":115,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":18000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[41,116,191,114,40]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.14,36.94],[-2.67,37.08],[-2.81,37.33],[-2.59,37.58],[-2.17,37.41],[-2.14,36.96],[-2.14,36.94]]]},\"properties\":{\"id\":119,\"height\":64,\"biome\":11,\"type\":\"island\",\"population\":17000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[196,195,118,44,45,120]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.08,37.1],[8.44,37.24],[8.72,37.55],[9.03,37.52],[9.11,37.22],[9.08,37.1]]]},\"properties\":{\"id\":140,\"height\":64,\"biome\":11,\"type\":\"island\",\"population\":11000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[141,139,65,66,67]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.96,36.24],[-8.49,36.6],[-8.49,36.8],[-7.99,36.94],[-7.96,36.24]]]},\"properties\":{\"id\":184,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":14000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[185,258,183,108]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.66,36.21],[1.07,36.49],[1.21,36.82],[1.63,36.85],[1.72,36.82],[1.72,36.24],[1.72,36.24],[1.66,36.21]]]},\"properties\":{\"id\":202,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":1,\"province\":7,\"culture\":3,\"religion\":12,\"neighbors\":[354,276,201,126,127,203,277]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.32,36.46],[3.21,36.74],[3.35,36.96],[3.85,36.82],[3.82,36.55],[3.4,36.38],[3.32,36.46]]]},\"properties\":{\"id\":206,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[279,205,129,130,207,280]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.47,36.49],[4.53,36.91],[4.58,36.96],[4.64,36.96],[5.06,36.68],[5.15,36.55],[4.81,36.21],[4.47,36.49]]]},\"properties\":{\"id\":208,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":18000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[282,207,131,132,133,209,283]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.15,36.55],[5.06,36.68],[5.51,37.16],[5.68,36.8],[5.63,36.6],[5.34,36.46],[5.15,36.55]]]},\"properties\":{\"id\":209,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[283,208,133,134,210,284]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.95,36.27],[7.14,36.74],[7.59,36.74],[7.45,36.15],[6.98,36.24],[6.95,36.27]]]},\"properties\":{\"id\":213,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[286,212,137,288,287]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.49,36.1],[-19.91,35.76],[-20.02,36.01],[-19.86,36.32],[-19.52,36.15],[-19.49,36.1]]]},\"properties\":{\"id\":237,\"height\":64,\"biome\":2,\"type\":\"island\",\"population\":8000,\"state\":4,\"province\":46,\"culture\":9,\"religion\":9,\"neighbors\":[238,314,313,236,163]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.49,36.07],[3.4,36.38],[3.82,36.55],[3.94,36.41],[3.91,35.96],[3.49,36.07]]]},\"properties\":{\"id\":280,\"height\":64,\"biome\":11,\"type\":\"island\",\"population\":3000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[357,279,206,207,281]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.82,36.04],[5.91,36.24],[6.24,36.49],[6.55,36.29],[6.55,36.29],[6.41,35.85],[5.82,36.04]]]},\"properties\":{\"id\":285,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[362,284,210,211,212,286]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.41,35.85],[6.55,36.29],[6.95,36.27],[6.98,36.24],[6.98,35.76],[6.47,35.62],[6.41,35.85]]]},\"properties\":{\"id\":286,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":5823,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[362,285,212,213,287,363]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.42,34.81],[4.47,35.06],[4.64,35.23],[5.09,35.12],[5.23,34.95],[4.81,34.64],[4.42,34.81]]]},\"properties\":{\"id\":434,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":19699,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[507,433,358,360,435,508]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.1,34.7],[6.13,35.31],[6.38,35.43],[6.64,35.2],[6.81,34.87],[6.13,34.67],[6.1,34.7]]]},\"properties\":{\"id\":437,\"height\":64,\"biome\":10,\"type\":\"island\",\"population\":18000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[509,436,362,363,438,510]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.39,32.43],[-18.62,32.07],[-18.87,32.01],[-19.04,32.12],[-19.15,32.57],[-18.98,32.8],[-18.42,32.52],[-18.39,32.43]]]},\"properties\":{\"id\":758,\"height\":64,\"biome\":1,\"type\":\"island\",\"population\":25931,\"state\":4,\"province\":38,\"culture\":9,\"religion\":9,\"neighbors\":[759,832,831,830,757,682,684]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.27,30.67],[-8.58,30.53],[-8.63,31.06],[-8.58,31.26],[-8.18,31.09],[-8.27,30.67]]]},\"properties\":{\"id\":997,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[998,1069,996,923,924]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.95,30.67],[4.87,30.89],[5.29,31.17],[5.43,31.01],[5.26,30.64],[4.95,30.67]]]},\"properties\":{\"id\":1022,\"height\":64,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1094,1021,949,950,1023]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.96,30.33],[8.21,30.98],[8.58,30.92],[8.63,30.81],[8.3,30.28],[8.07,30.25],[8.02,30.28],[7.96,30.33]]]},\"properties\":{\"id\":1028,\"height\":64,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1099,1027,955,1029,1100,1172,1171]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.09,30.05],[-14.12,30.05],[-14.68,30.45],[-14.65,30.5],[-14.17,30.5],[-14.09,30.05]]]},\"properties\":{\"id\":1058,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[987,1130,1057,985,986]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.71,29.8],[-4.27,30.14],[-3.91,30.53],[-3.68,30.53],[-3.63,30.47],[-3.6,29.91],[-3.71,29.8]]]},\"properties\":{\"id\":1077,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1150,1149,1076,1005,1006,1078]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.34,29.97],[-0.08,30.45],[0.31,30.67],[0.48,30.59],[0.62,30.42],[0.62,30.19],[0.34,29.97]]]},\"properties\":{\"id\":1085,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1158,1084,1012,1013,1014,1086]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.17,29.72],[-17.47,29.33],[-17.66,29.16],[-18.37,29.38],[-18.34,29.52],[-18.2,29.72],[-18.17,29.72]]]},\"properties\":{\"id\":1123,\"height\":64,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":95,\"culture\":7,\"religion\":7,\"neighbors\":[1051,1124,1198,1197,1122,1050]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.4,29.24],[-3.74,29.41],[-3.83,29.49],[-3.71,29.8],[-3.6,29.91],[-3.07,29.83],[-3.21,29.38],[-3.4,29.24]]]},\"properties\":{\"id\":1150,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1225,1224,1223,1149,1077,1078,1151]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.27,28.93],[-15.75,28.71],[-15.75,28.77],[-15.69,29.41],[-15.19,29.3],[-15.16,29.21],[-15.27,28.93]]]},\"properties\":{\"id\":1202,\"height\":64,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1276,1275,1274,1201,1128,1203]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.78,28.82],[-3.21,28.82],[-3.23,28.85],[-3.4,29.24],[-3.21,29.38],[-2.62,29.21],[-2.76,28.85],[-2.78,28.82]]]},\"properties\":{\"id\":1225,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1299,1298,1297,1224,1150,1151,1226]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.49,28.82],[1.55,29.44],[1.63,29.47],[2.08,29.13],[2.05,28.99],[1.83,28.74],[1.69,28.68],[1.49,28.82]]]},\"properties\":{\"id\":1234,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1306,1233,1159,1160,1235,1308,1307]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.4,28.96],[3.63,29.3],[3.94,28.93],[3.46,28.71],[3.4,28.96]]]},\"properties\":{\"id\":1237,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":2903,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1309,1236,1238,1310]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.79,28.71],[-16.71,28.26],[-16.85,28.1],[-17.24,28.54],[-17.27,28.6],[-16.96,28.82],[-16.79,28.71]]]},\"properties\":{\"id\":1272,\"height\":64,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1200,1273,1347,1346,1345,1198]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.31,28.21],[-11.7,28.12],[-11.87,28.24],[-11.7,28.77],[-11.59,28.82],[-11.36,28.82],[-11.22,28.32],[-11.31,28.21]]]},\"properties\":{\"id\":1282,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":8744,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1357,1356,1355,1281,1208,1209,1283]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.21,28.82],[-3.4,28.49],[-3.57,28.32],[-3.88,28.74],[-3.74,28.85],[-3.23,28.85],[-3.21,28.82]]]},\"properties\":{\"id\":1297,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1225,1298,1372,1296,1223,1224]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.55,28.24],[6.52,28.71],[6.72,28.82],[6.98,28.88],[7.09,28.77],[7.03,28.18],[6.55,28.24]]]},\"properties\":{\"id\":1316,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":17169,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1390,1315,1242,1243,1244,1317]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.65,28.54],[7.65,28.6],[8.02,28.71],[8.44,28.38],[8.1,28.07],[7.82,28.24],[7.65,28.54]]]},\"properties\":{\"id\":1318,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":17000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":11,\"neighbors\":[1391,1317,1245,1319,1393,1392]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.44,27.73],[-15.55,27.59],[-16.2,27.82],[-16.12,28.24],[-16.06,28.32],[-15.95,28.32],[-15.44,27.73]]]},\"properties\":{\"id\":1348,\"height\":64,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1349,1422,1421,1347,1273,1274]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.59,27.73],[-8.02,27.59],[-8.07,27.65],[-8.24,28.35],[-7.99,28.46],[-7.62,28.15],[-7.59,27.73]]]},\"properties\":{\"id\":1363,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1364,1436,1435,1362,1288,1289]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.4,27.59],[-3.88,27.54],[-3.97,27.62],[-3.91,28.15],[-3.57,28.26],[-3.21,27.79],[-3.4,27.59]]]},\"properties\":{\"id\":1371,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1445,1444,1443,1370,1296,1372]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.26,27.42],[-16.45,27.17],[-16.76,27.34],[-16.93,27.79],[-16.28,27.73],[-16.26,27.42]]]},\"properties\":{\"id\":1420,\"height\":64,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1421,1496,1494,1419,1347]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.86,27.28],[9.25,27.42],[9.31,27.4],[9.39,26.72],[9.22,26.61],[8.72,26.89],[8.75,27.17],[8.86,27.28]]]},\"properties\":{\"id\":1542,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":31453,\"state\":2,\"province\":14,\"culture\":6,\"religion\":11,\"neighbors\":[1466,1467,1468,1543,1618,1617,1541]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.94,26.67],[-17.92,26.14],[-18.31,26.22],[-18.39,26.58],[-17.94,26.67]]]},\"properties\":{\"id\":1567,\"height\":64,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1492,1568,1642,1566]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.55,26.11],[-17.72,26.02],[-17.92,26.14],[-17.94,26.67],[-17.86,26.78],[-17.35,26.78],[-17.55,26.11]]]},\"properties\":{\"id\":1568,\"height\":64,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1569,1643,1642,1567,1492,1493]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.82,26.08],[-17.52,26.11],[-17.55,26.11],[-17.35,26.78],[-17.24,26.86],[-16.79,26.64],[-16.82,26.08]]]},\"properties\":{\"id\":1569,\"height\":64,\"biome\":3,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1570,1644,1643,1568,1493,1494]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.68,26.3],[-15.02,26.28],[-15.36,26.67],[-15.19,26.98],[-14.65,26.53],[-14.68,26.3]]]},\"properties\":{\"id\":1573,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1574,1648,1572,1497,1498]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.59,26.39],[7.59,26.61],[8.07,26.67],[8.21,26.28],[7.93,26.08],[7.76,26.11],[7.59,26.39]]]},\"properties\":{\"id\":1615,\"height\":64,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1689,1614,1540,1616,1691,1690]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.52,26.25],[8.66,26.86],[8.72,26.89],[9.22,26.61],[9.2,26.33],[9.03,26.19],[8.75,26.02],[8.52,26.25]]]},\"properties\":{\"id\":1617,\"height\":64,\"biome\":12,\"type\":\"island\",\"population\":33287,\"state\":2,\"province\":14,\"culture\":6,\"religion\":11,\"neighbors\":[1691,1616,1541,1542,1618,1693,1692]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.22,26.61],[9.39,26.72],[9.76,26.72],[9.76,26.02],[9.73,26],[9.2,26.33],[9.22,26.61]]]},\"properties\":{\"id\":1618,\"height\":64,\"biome\":12,\"type\":\"island\",\"population\":18000,\"state\":2,\"province\":14,\"culture\":6,\"religion\":11,\"neighbors\":[1617,1542,1543,1619,1694,1693]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.15,26.19],[-13.81,25.66],[-13.95,25.47],[-14.51,25.75],[-14.57,25.86],[-14.51,26.16],[-14.15,26.19]]]},\"properties\":{\"id\":1649,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1574,1650,1728,1727,1726,1648]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.44,25.77],[-13.53,25.72],[-13.81,25.66],[-14.15,26.19],[-14.06,26.28],[-13.53,26.42],[-13.36,26.02],[-13.44,25.77]]]},\"properties\":{\"id\":1650,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1651,1729,1728,1649,1574,1575,1576]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.37,26.3],[-7.76,25.8],[-7.9,25.83],[-8.02,26.14],[-7.4,26.36],[-7.37,26.3]]]},\"properties\":{\"id\":1661,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1587,1662,1739,1660,1586]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.53,25.72],[-13.39,25.02],[-13.42,24.96],[-13.95,25.1],[-14.03,25.24],[-13.95,25.47],[-13.81,25.66],[-13.53,25.72]]]},\"properties\":{\"id\":1728,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":8653,\"state\":6,\"province\":86,\"culture\":7,\"religion\":7,\"neighbors\":[1650,1729,1805,1804,1803,1727,1649]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.32,25.63],[-12.46,25.19],[-12.91,25.1],[-13.02,25.19],[-12.99,25.52],[-12.68,25.69],[-12.32,25.66],[-12.32,25.63]]]},\"properties\":{\"id\":1730,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1732,1731,1806,1805,1729,1651,1652]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.66,25.33],[-8.77,24.91],[-9.31,25.07],[-9.28,25.49],[-9.03,25.66],[-8.69,25.49],[-8.66,25.33]]]},\"properties\":{\"id\":1737,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":20253,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1738,1814,1813,1736,1658,1659]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.32,25.24],[-5.51,25.05],[-5.71,25.02],[-5.85,25.13],[-5.91,25.61],[-5.79,25.69],[-5.34,25.49],[-5.32,25.24]]]},\"properties\":{\"id\":1743,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1744,1820,1819,1818,1742,1664,1665]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.64,17.44],[-11.31,17.1],[-11.39,16.85],[-11.76,17.04],[-11.64,17.44]]]},\"properties\":{\"id\":2953,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2952,2954,3042,3041]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.83,17.02],[-6.86,16.43],[-7.06,16.32],[-7.51,16.43],[-7.48,16.88],[-7.43,16.93],[-6.97,17.1],[-6.83,17.02]]]},\"properties\":{\"id\":3049,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":82,\"culture\":7,\"religion\":7,\"neighbors\":[2962,3050,3138,3137,3048,2960,2961]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.01,16.85],[5.54,17.04],[5.6,16.37],[5.03,16.51],[4.98,16.62],[5.01,16.85]]]},\"properties\":{\"id\":3072,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":8,\"neighbors\":[3071,2984,3073,3160,3159]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.55,17.02],[7.12,17.04],[7.17,16.99],[7.03,16.54],[6.83,16.48],[6.36,16.82],[6.55,17.02]]]},\"properties\":{\"id\":3075,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[2986,2987,2988,3076,3163,3074]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.17,16.99],[7.68,16.96],[7.88,16.43],[7.73,16.23],[7.03,16.54],[7.03,16.54],[7.17,16.99]]]},\"properties\":{\"id\":3076,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":25000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[3075,2988,3077,3165,3164,3163]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.65,16.62],[-14.77,15.92],[-15.13,15.95],[-15.27,16.15],[-15.24,16.46],[-15.16,16.54],[-14.65,16.62]]]},\"properties\":{\"id\":3123,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3035,3124,3216,3215,3122,3034]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.06,16.32],[-6.97,16.04],[-7.45,15.92],[-7.54,16.4],[-7.51,16.43],[-7.06,16.32]]]},\"properties\":{\"id\":3137,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":167,\"culture\":7,\"religion\":7,\"neighbors\":[3049,3138,3230,3136,3048]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.44,16.18],[-6.44,16.09],[-6.64,15.84],[-6.75,15.78],[-6.97,16.04],[-7.06,16.32],[-6.86,16.43],[-6.5,16.26],[-6.44,16.18]]]},\"properties\":{\"id\":3138,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3051,3139,3232,3231,3230,3137,3049,3050]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.6,16.46],[12.83,16.32],[12.91,16.06],[12.52,15.67],[12.49,15.67],[12.46,15.67],[12.29,16.4],[12.6,16.46]]]},\"properties\":{\"id\":3174,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3085,3086,3175,3267,3358,3266,3173]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.13,15.95],[-15.41,15.5],[-15.61,15.5],[-15.89,15.84],[-15.81,16.04],[-15.27,16.15],[-15.13,15.95]]]},\"properties\":{\"id\":3215,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3123,3216,3306,3214,3121,3122]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.63,15.81],[-10.74,15.36],[-11.25,15.22],[-11.42,15.56],[-11.28,15.87],[-10.63,15.81]]]},\"properties\":{\"id\":3223,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3130,3224,3314,3313,3222]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.16,15.87],[-7.99,15.7],[-7.87,15.39],[-8.04,15.08],[-8.61,15.31],[-8.32,15.9],[-8.16,15.87]]]},\"properties\":{\"id\":3228,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":22000,\"state\":6,\"province\":167,\"culture\":7,\"religion\":7,\"neighbors\":[3135,3136,3229,3320,3319,3227]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.45,15.92],[-6.97,16.04],[-6.75,15.78],[-7.12,15.34],[-7.23,15.39],[-7.45,15.92],[-7.45,15.92]]]},\"properties\":{\"id\":3230,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":4765,\"state\":6,\"province\":167,\"culture\":7,\"religion\":7,\"neighbors\":[3136,3137,3138,3231,3320,3229]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.64,15.84],[-6.27,15.45],[-6.36,15.25],[-7.09,15.31],[-7.09,15.31],[-7.12,15.34],[-6.75,15.78],[-6.64,15.84]]]},\"properties\":{\"id\":3231,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3138,3232,3323,3322,3321,3320,3230]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.91,15.81],[-5.88,15.59],[-6.27,15.45],[-6.64,15.84],[-6.44,16.09],[-5.91,15.81]]]},\"properties\":{\"id\":3232,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3139,3233,3323,3231,3138]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.88,15.59],[-5.71,15.42],[-6.05,14.95],[-6.3,15.06],[-6.36,15.25],[-6.27,15.45],[-5.88,15.59]]]},\"properties\":{\"id\":3323,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3232,3233,3324,3413,3322,3231]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.31,15.53],[9.84,15.45],[9.98,15.25],[9.73,14.81],[9.45,14.95],[9.25,15.42],[9.31,15.53]]]},\"properties\":{\"id\":3352,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":20000,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3260,3261,3262,3353,3442,3351]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.17,14.72],[2.7,14.64],[2.73,14.61],[2.7,14.36],[2.17,14.27],[2.11,14.39],[2.14,14.72],[2.17,14.72]]]},\"properties\":{\"id\":3429,\"height\":64,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3338,3339,3340,3430,3520,3519,3428]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.45,14.95],[9.73,14.81],[9.82,14.61],[9.79,14.41],[9.22,14.41],[9.17,14.78],[9.45,14.95]]]},\"properties\":{\"id\":3442,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":32237,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3351,3352,3353,3443,3533,3441]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.42,14.36],[-0.03,14.16],[0,13.8],[-0.45,13.6],[-0.76,13.74],[-0.53,14.3],[-0.42,14.36]]]},\"properties\":{\"id\":3515,\"height\":64,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3423,3424,3516,3602,3601,3514]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.22,14.41],[9.79,14.41],[9.84,14.16],[9.82,14.11],[9.22,13.85],[9.03,14.25],[9.22,14.41]]]},\"properties\":{\"id\":3533,\"height\":64,\"biome\":12,\"type\":\"island\",\"population\":11000,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3441,3442,3443,3534,3620,3532]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.66,14.33],[10.72,14.3],[11.22,13.71],[10.97,13.63],[10.55,13.8],[10.52,14.16],[10.66,14.33]]]},\"properties\":{\"id\":3535,\"height\":64,\"biome\":12,\"type\":\"island\",\"population\":8000,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3443,3445,3536,3623,3622,3534]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.15,13.71],[-1.01,13.63],[-0.98,13.35],[-1.01,13.29],[-1.69,13.15],[-1.52,13.71],[-1.49,13.71],[-1.15,13.71]]]},\"properties\":{\"id\":3600,\"height\":64,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3513,3514,3601,3686,3685,3599,3512]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.55,13.8],[10.97,13.63],[10.69,13.15],[10.63,13.13],[10.41,13.13],[10.29,13.32],[10.27,13.52],[10.55,13.8]]]},\"properties\":{\"id\":3622,\"height\":64,\"biome\":12,\"type\":\"island\",\"population\":10000,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3534,3535,3623,3708,3707,3706,3621]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.64,12.85],[-24.75,12.68],[-25.34,12.68],[-25.4,12.73],[-25.4,13.04],[-25.12,13.32],[-24.89,13.43],[-24.89,13.43],[-24.64,12.85]]]},\"properties\":{\"id\":3641,\"height\":64,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3642,3725,3724,3723,3640,3555,3556,3469]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.68,12.73],[-23.88,12.54],[-24.07,12.54],[-24.44,12.87],[-24.19,13.15],[-23.91,13.27],[-23.85,13.27],[-23.68,12.73]]]},\"properties\":{\"id\":3643,\"height\":64,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3644,3727,3726,3725,3642,3557,3558]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.83,13.29],[12.85,13.27],[13.11,12.57],[13.05,12.54],[12.49,12.68],[12.46,12.71],[12.54,13.01],[12.71,13.24],[12.83,13.29]]]},\"properties\":{\"id\":3711,\"height\":64,\"biome\":12,\"type\":\"island\",\"population\":25656,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3626,3627,3712,3795,3794,3793,3710,3625]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-25.34,12.68],[-25.2,12.26],[-25.37,11.98],[-25.85,11.98],[-25.87,12.06],[-25.87,12.45],[-25.76,12.57],[-25.4,12.73],[-25.34,12.68]]]},\"properties\":{\"id\":3723,\"height\":64,\"biome\":1,\"type\":\"island\",\"population\":11278,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3641,3724,3809,3808,3807,3722,3639,3640]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.61,12.32],[-24.75,12.09],[-25.2,12.26],[-25.34,12.68],[-24.75,12.68],[-24.61,12.32]]]},\"properties\":{\"id\":3724,\"height\":64,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3725,3810,3809,3723,3641]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.61,12.32],[-24.41,12.34],[-24.13,11.95],[-24.07,11.7],[-24.24,11.64],[-24.72,11.81],[-24.75,12.09],[-24.61,12.32]]]},\"properties\":{\"id\":3810,\"height\":64,\"biome\":1,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3724,3725,3726,3811,3894,3893,3809]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.68,11.9],[-23.71,11.73],[-23.85,11.64],[-24.07,11.7],[-24.13,11.95],[-23.88,12.54],[-23.68,11.9]]]},\"properties\":{\"id\":3811,\"height\":64,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3727,3812,3895,3894,3810,3726]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.24,11.64],[-24.52,10.92],[-24.97,11],[-24.83,11.73],[-24.72,11.81],[-24.24,11.64]]]},\"properties\":{\"id\":3893,\"height\":64,\"biome\":1,\"type\":\"island\",\"population\":14492,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3810,3894,3892,3809]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-23.2,11.67],[-23.29,10.83],[-23.77,10.94],[-23.85,11.64],[-23.71,11.73],[-23.26,11.67],[-23.2,11.67]]]},\"properties\":{\"id\":3895,\"height\":64,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3813,3896,3894,3811,3812]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.81,11.76],[13.98,11.7],[14.32,10.97],[14.32,10.86],[13.47,10.92],[13.44,11.48],[13.81,11.76]]]},\"properties\":{\"id\":3964,\"height\":64,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3880,3881,3965,3966,3963]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.26,11.87],[14.65,11.73],[14.82,11.59],[14.32,10.97],[13.98,11.7],[14.26,11.87]]]},\"properties\":{\"id\":3965,\"height\":64,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3881,3882,3883,3966,3964]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.9,37.1],[-12.35,36.96],[-12.38,37.47],[-12.35,37.55],[-11.81,37.75],[-11.67,37.55],[-11.9,37.1]]]},\"properties\":{\"id\":101,\"height\":81,\"biome\":2,\"type\":\"island\",\"population\":20000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[102,177,100,26,27,28]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.14,36.96],[-9.59,36.99],[-9.62,37.02],[-9.7,37.24],[-9.62,37.58],[-9.14,37.58],[-9.08,36.99],[-9.14,36.96]]]},\"properties\":{\"id\":106,\"height\":81,\"biome\":10,\"type\":\"island\",\"population\":18000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[183,182,181,105,31,32,107]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.85,37.41],[-5.74,36.99],[-6.5,36.96],[-6.5,36.96],[-6.1,37.52],[-6.02,37.52],[-5.85,37.41]]]},\"properties\":{\"id\":112,\"height\":81,\"biome\":10,\"type\":\"island\",\"population\":18761,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[39,113,188,187,111,38]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.73,36.77],[2.73,37.33],[2.84,37.41],[3.32,37.24],[3.35,36.96],[3.21,36.74],[2.73,36.74],[2.73,36.77]]]},\"properties\":{\"id\":129,\"height\":81,\"biome\":11,\"type\":\"island\",\"population\":6000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[204,128,54,55,130,206,205]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.74,36.32],[-5.91,36.35],[-5.71,36.99],[-5.46,36.99],[-5.2,36.82],[-5.23,36.6],[-5.74,36.32]]]},\"properties\":{\"id\":189,\"height\":81,\"biome\":10,\"type\":\"island\",\"population\":27604,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[264,263,188,113,114,190]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.73,36.32],[-3.46,36.38],[-3.52,36.41],[-3.09,36.77],[-2.84,36.77],[-2.73,36.32],[-2.73,36.32]]]},\"properties\":{\"id\":194,\"height\":81,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[269,268,267,193,118,195]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.73,36.32],[-2.84,36.77],[-2.67,37.08],[-2.14,36.94],[-2.42,36.35],[-2.73,36.32]]]},\"properties\":{\"id\":195,\"height\":81,\"biome\":10,\"type\":\"island\",\"population\":6000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[269,194,118,119,196]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2,36.04],[-2.11,36.07],[-2.42,36.35],[-2.14,36.94],[-2.14,36.96],[-1.88,36.91],[-1.77,36.68],[-1.97,36.04],[-2,36.04]]]},\"properties\":{\"id\":196,\"height\":81,\"biome\":10,\"type\":\"island\",\"population\":7000,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[347,346,269,195,119,120,197,270]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.52,36.35],[8.52,36.71],[9.14,36.96],[9.2,36.88],[9.2,36.66],[8.86,36.24],[8.52,36.35]]]},\"properties\":{\"id\":216,\"height\":81,\"biome\":11,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[289,215,139,141,217,290]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.18,35.87],[-5.93,35.71],[-6.02,35.82],[-5.93,36.35],[-5.91,36.35],[-5.74,36.32],[-5.15,35.93],[-5.18,35.87]]]},\"properties\":{\"id\":263,\"height\":81,\"biome\":10,\"type\":\"island\",\"population\":22000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[341,340,339,262,188,189,264]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.56,35.71],[-2.78,36.07],[-2.73,36.32],[-2.73,36.32],[-2.42,36.35],[-2.11,36.07],[-2.56,35.71]]]},\"properties\":{\"id\":269,\"height\":81,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[346,345,268,194,195,196]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.06,35.9],[8.86,36.24],[9.2,36.66],[9.42,36.35],[9.42,35.96],[9.08,35.87],[9.06,35.9]]]},\"properties\":{\"id\":290,\"height\":81,\"biome\":11,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[367,289,216,217,291,368]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.66,35.34],[3.26,35.85],[3.49,36.07],[3.91,35.96],[4.05,35.82],[3.94,35.57],[3.66,35.34]]]},\"properties\":{\"id\":357,\"height\":81,\"biome\":10,\"type\":\"island\",\"population\":6000,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[433,356,279,280,281,358]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.31,34.28],[2.08,34.7],[2.14,34.73],[2.64,34.81],[2.73,34.31],[2.31,34.28]]]},\"properties\":{\"id\":503,\"height\":81,\"biome\":10,\"type\":\"island\",\"population\":2000,\"state\":10,\"province\":136,\"culture\":4,\"religion\":4,\"neighbors\":[577,502,429,430,504]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.32,31.96],[-17.86,32.07],[-17.89,32.12],[-17.66,32.68],[-17.49,32.68],[-17.32,32.54],[-17.18,32.01],[-17.32,31.96]]]},\"properties\":{\"id\":760,\"height\":81,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[834,833,832,759,686,687,761]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.71,32.01],[-17.18,32.01],[-17.32,32.54],[-16.68,32.68],[-16.65,32.68],[-16.65,32.04],[-16.71,32.01]]]},\"properties\":{\"id\":761,\"height\":81,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":29,\"culture\":9,\"religion\":9,\"neighbors\":[835,834,760,687,688,762]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.62,32.24],[-7.96,32.21],[-8.24,32.38],[-8.18,32.71],[-7.54,32.68],[-7.51,32.4],[-7.62,32.24]]]},\"properties\":{\"id\":778,\"height\":81,\"biome\":9,\"type\":\"island\",\"population\":19000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[852,851,850,777,704,779]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.71,31.87],[-16.79,31.42],[-17.02,31.26],[-17.16,31.26],[-17.41,31.54],[-17.32,31.96],[-17.18,32.01],[-16.71,32.01],[-16.71,31.87]]]},\"properties\":{\"id\":834,\"height\":81,\"biome\":1,\"type\":\"island\",\"population\":15650,\"state\":4,\"province\":29,\"culture\":9,\"religion\":9,\"neighbors\":[835,909,908,981,907,833,760,761]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.99,31.59],[-8.1,31.65],[-7.96,32.21],[-7.62,32.24],[-7.48,31.56],[-7.99,31.59]]]},\"properties\":{\"id\":851,\"height\":81,\"biome\":9,\"type\":\"island\",\"population\":19000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[925,924,850,778,852]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.32,31.03],[-17.83,31.09],[-17.77,31.4],[-17.41,31.54],[-17.16,31.26],[-17.32,31.03]]]},\"properties\":{\"id\":907,\"height\":81,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":29,\"culture\":7,\"religion\":7,\"neighbors\":[981,980,906,833,834]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.63,31.06],[-9.2,31.03],[-9.23,31.45],[-8.61,31.45],[-8.58,31.26],[-8.63,31.06]]]},\"properties\":{\"id\":923,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[997,996,922,849,924]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.62,30.92],[-8.07,31.17],[-7.99,31.59],[-7.48,31.56],[-7.43,31.56],[-7.45,31.28],[-7.62,30.92]]]},\"properties\":{\"id\":925,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[999,998,924,851,852,926]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.12,31.42],[-5.65,31.12],[-5.91,31.62],[-5.85,31.7],[-5.2,31.51],[-5.12,31.42]]]},\"properties\":{\"id\":929,\"height\":81,\"biome\":9,\"type\":\"island\",\"population\":9891,\"state\":6,\"province\":80,\"culture\":7,\"religion\":7,\"neighbors\":[856,930,928,854,855]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.39,30.53],[-11.67,30.53],[-11.98,30.67],[-12.01,31.2],[-11.84,31.4],[-11.36,30.56],[-11.39,30.53]]]},\"properties\":{\"id\":991,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1064,1063,1062,990,917,918]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.79,30.36],[-7.45,29.94],[-7.93,29.72],[-8.1,30.05],[-7.79,30.36]]]},\"properties\":{\"id\":1070,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1069,1071,1142,1141]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.87,30],[-5.32,29.61],[-5.91,30.08],[-5.88,30.25],[-5.62,30.36],[-4.87,30]]]},\"properties\":{\"id\":1074,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[1075,1147,1146,1073,1002]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.89,30.11],[8.89,30.61],[9.37,30.7],[9.37,30.7],[9.37,30.25],[9.17,30.05],[8.89,30.11]]]},\"properties\":{\"id\":1101,\"height\":81,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1173,1100,1029,1030,1031,1102]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.83,29.49],[-4.05,29.41],[-4.33,30.11],[-4.27,30.14],[-3.71,29.8],[-3.83,29.49]]]},\"properties\":{\"id\":1149,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1150,1223,1148,1076,1077]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.62,29.21],[-3.21,29.38],[-3.07,29.83],[-2.98,29.86],[-2.56,29.3],[-2.62,29.21]]]},\"properties\":{\"id\":1151,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1226,1225,1150,1078,1152]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.65,29.35],[-1.01,29.27],[-1.15,29.94],[-0.48,29.8],[-0.48,29.75],[-0.65,29.35]]]},\"properties\":{\"id\":1155,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1230,1229,1154,1083,1156]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.58,29.41],[8.66,30],[8.89,30.11],[9.17,30.05],[9.37,29.63],[8.66,29.35],[8.58,29.41]]]},\"properties\":{\"id\":1173,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":53,\"culture\":6,\"religion\":6,\"neighbors\":[1246,1172,1100,1101,1102,1247]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.28,27.73],[-16.93,27.79],[-16.93,27.82],[-16.85,28.1],[-16.71,28.26],[-16.12,28.24],[-16.2,27.82],[-16.28,27.73]]]},\"properties\":{\"id\":1347,\"height\":81,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1421,1420,1419,1346,1272,1273,1348]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.02,27.93],[-13.36,27.62],[-13.64,27.87],[-13.25,28.32],[-13.02,27.93]]]},\"properties\":{\"id\":1353,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1354,1426,1425,1352]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.98,27.79],[-3.21,27.79],[-3.57,28.26],[-3.57,28.32],[-3.4,28.49],[-2.78,28.21],[-2.76,28.04],[-2.76,28.01],[-2.98,27.79]]]},\"properties\":{\"id\":1372,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1446,1445,1371,1296,1297,1298,1299,1373]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.61,27.26],[-8.97,27.06],[-9.34,27.31],[-9.06,27.73],[-8.77,27.76],[-8.61,27.26]]]},\"properties\":{\"id\":1434,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1435,1509,1508,1433,1361]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.31,27.45],[-2.76,27.26],[-2.98,27.79],[-2.76,28.01],[-2.22,27.62],[-2.31,27.45]]]},\"properties\":{\"id\":1446,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1447,1521,1445,1372,1373]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.63,27.31],[-2.11,27],[-2.31,27.45],[-2.22,27.62],[-1.97,27.7],[-1.74,27.62],[-1.63,27.31]]]},\"properties\":{\"id\":1447,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1448,1522,1521,1446,1373,1374]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.76,26.72],[9.39,26.72],[9.31,27.4],[9.73,27.34],[9.87,27.09],[9.93,26.84],[9.76,26.72]]]},\"properties\":{\"id\":1543,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":19000,\"state\":2,\"province\":14,\"culture\":6,\"religion\":11,\"neighbors\":[1619,1618,1542,1468,1469,1544]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.02,26.28],[-15.13,26.11],[-15.55,26.02],[-15.69,26.25],[-15.44,26.64],[-15.36,26.67],[-15.02,26.28]]]},\"properties\":{\"id\":1572,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1573,1648,1647,1646,1571,1497]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.32,26.16],[-12.35,26.14],[-12.8,26.39],[-12.88,26.78],[-12.43,26.84],[-12.21,26.61],[-12.32,26.16]]]},\"properties\":{\"id\":1577,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1578,1653,1652,1576,1502,1503]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.14,26.16],[7.14,26.64],[7.14,26.64],[7.48,26.72],[7.59,26.61],[7.59,26.39],[7.14,26.16]]]},\"properties\":{\"id\":1614,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":14626,\"state\":2,\"province\":17,\"culture\":6,\"religion\":11,\"neighbors\":[1689,1613,1538,1539,1540,1615]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.55,26.02],[-15.72,25.55],[-16.06,25.61],[-16.09,25.66],[-16.03,26.3],[-15.69,26.25],[-15.55,26.02]]]},\"properties\":{\"id\":1646,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":10196,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1572,1647,1724,1723,1645,1571]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.03,25.66],[-9.28,25.49],[-9.76,25.63],[-9.84,25.83],[-9.73,26.14],[-9.59,26.25],[-9.06,25.97],[-9.03,25.66]]]},\"properties\":{\"id\":1658,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":18227,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1659,1737,1736,1735,1657,1582,1583]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.68,25.19],[5.51,25.66],[5.51,25.69],[6.08,25.69],[6.1,25.66],[5.88,25.21],[5.68,25.19]]]},\"properties\":{\"id\":1764,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":5,\"province\":51,\"culture\":7,\"religion\":11,\"neighbors\":[1840,1763,1685,1686,1687,1765]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.36,16.82],[6.83,16.48],[6.67,16.29],[6.08,16.46],[6.16,16.79],[6.36,16.82]]]},\"properties\":{\"id\":3074,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[2986,3075,3163,3162,3073]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.88,16.43],[8.18,16.4],[8.47,15.9],[8.13,15.76],[7.71,16.2],[7.73,16.23],[7.88,16.43]]]},\"properties\":{\"id\":3165,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":17000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[3076,3077,3166,3259,3258,3164]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.27,16.46],[8.63,16.48],[8.89,16.32],[8.89,16.04],[8.55,15.87],[8.47,15.9],[8.18,16.4],[8.27,16.46]]]},\"properties\":{\"id\":3166,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":28859,\"state\":11,\"province\":151,\"culture\":8,\"religion\":11,\"neighbors\":[3077,3078,3079,3167,3260,3259,3165]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.97,16.68],[11.33,16.51],[11.42,15.87],[11.42,15.84],[10.91,15.87],[10.74,16.04],[10.74,16.54],[10.97,16.68]]]},\"properties\":{\"id\":3171,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":35656,\"state\":8,\"province\":124,\"culture\":8,\"religion\":11,\"neighbors\":[3082,3083,3172,3265,3264,3263,3170]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.91,16.06],[12.83,16.32],[13.16,16.68],[13.42,16.51],[13.42,16.2],[13.08,16.01],[12.91,16.06]]]},\"properties\":{\"id\":3175,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3267,3174,3086,3087,3176,3268]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.94,15.87],[4.33,15.78],[4.42,15.31],[3.85,15.62],[3.88,15.81],[3.94,15.87]]]},\"properties\":{\"id\":3251,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3157,3158,3252,3342,3250]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.42,15.87],[11.78,15.95],[11.81,15.95],[12.09,15.28],[12.01,15.22],[11.45,15.62],[11.42,15.84],[11.42,15.87]]]},\"properties\":{\"id\":3265,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":15000,\"state\":8,\"province\":124,\"culture\":8,\"religion\":11,\"neighbors\":[3171,3172,3173,3266,3357,3356,3264]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.91,16.06],[13.08,16.01],[13.27,15.62],[12.88,15.42],[12.52,15.67],[12.91,16.06]]]},\"properties\":{\"id\":3267,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":18968,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3174,3175,3268,3359,3358]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.25,15.22],[-11.31,14.95],[-11.9,14.97],[-11.98,15.39],[-11.76,15.56],[-11.42,15.56],[-11.25,15.22]]]},\"properties\":{\"id\":3313,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3223,3314,3403,3312,3221,3222]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.09,15.31],[-7.06,15.11],[-7.43,14.64],[-7.87,14.75],[-7.09,15.31],[-7.09,15.31]]]},\"properties\":{\"id\":3321,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":14646,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3231,3322,3411,3410,3320]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.06,14.33],[-16.14,14.22],[-16.76,14.53],[-16.76,14.69],[-16.65,14.83],[-16.12,14.72],[-16.06,14.33]]]},\"properties\":{\"id\":3394,\"height\":81,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3395,3486,3485,3393,3303,3304]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.74,15],[-3.94,14.33],[-3.99,14.3],[-4.22,14.39],[-4.39,14.67],[-4.11,15],[-3.74,15]]]},\"properties\":{\"id\":3417,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3327,3418,3508,3507,3416,3326]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.7,14.36],[2.73,14.61],[3.15,14.69],[3.18,14.27],[2.81,14.11],[2.7,14.36]]]},\"properties\":{\"id\":3430,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3520,3429,3340,3431,3521]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.29,14.89],[3.74,14.72],[3.74,14.39],[3.29,14.16],[3.18,14.27],[3.15,14.69],[3.29,14.89]]]},\"properties\":{\"id\":3431,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3340,3341,3432,3522,3521,3430]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.05,14.86],[4.53,14.33],[4.33,14.13],[3.82,14.27],[3.74,14.39],[3.74,14.72],[4.05,14.86]]]},\"properties\":{\"id\":3432,\"height\":81,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3341,3433,3524,3523,3522,3431]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.22,14.25],[-15.55,13.52],[-15.75,13.77],[-15.44,14.33],[-15.22,14.25]]]},\"properties\":{\"id\":3487,\"height\":81,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3396,3574,3573,3486]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.69,14.25],[-1.49,13.71],[-1.52,13.71],[-2.14,13.71],[-2.25,13.91],[-2.05,14.36],[-1.69,14.25]]]},\"properties\":{\"id\":3512,\"height\":81,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3421,3513,3600,3599,3598,3511]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.45,14.19],[11.36,13.71],[11.22,13.71],[10.72,14.3],[11.45,14.19]]]},\"properties\":{\"id\":3536,\"height\":81,\"biome\":12,\"type\":\"island\",\"population\":13000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3445,3537,3623,3535]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.99,14.27],[13.58,14.22],[13.56,13.85],[13.47,13.71],[13.02,14.05],[12.99,14.27]]]},\"properties\":{\"id\":3540,\"height\":81,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3539,3449,3541,3628,3627]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.87,13.83],[-16.73,13.32],[-17.24,13.27],[-17.41,13.77],[-17.24,13.94],[-16.87,13.83]]]},\"properties\":{\"id\":3571,\"height\":81,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3484,3572,3656,3570,3483]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.33,13.94],[8.69,13.52],[8.52,13.29],[8.21,13.27],[8.24,13.8],[8.33,13.94]]]},\"properties\":{\"id\":3618,\"height\":81,\"biome\":6,\"type\":\"island\",\"population\":12000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3530,3531,3619,3703,3617]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.78,13.49],[-24.19,13.15],[-24.44,12.87],[-24.64,12.85],[-24.89,13.43],[-24.78,13.49]]]},\"properties\":{\"id\":3642,\"height\":81,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3469,3557,3643,3725,3641]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.37,13.24],[14.48,13.18],[14.71,12.9],[14.71,12.73],[14.54,12.59],[14.15,12.68],[14.12,12.73],[14.15,13.24],[14.37,13.24]]]},\"properties\":{\"id\":3714,\"height\":81,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3629,3630,3632,3715,3798,3797,3796,3713]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.44,12.87],[-24.07,12.54],[-24.41,12.34],[-24.61,12.32],[-24.75,12.68],[-24.64,12.85],[-24.44,12.87]]]},\"properties\":{\"id\":3725,\"height\":81,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3642,3643,3726,3810,3724,3641]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.76,12.34],[-18.9,12.09],[-19.24,12.04],[-19.35,12.32],[-19.32,12.45],[-19.01,12.51],[-18.76,12.34]]]},\"properties\":{\"id\":3735,\"height\":81,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3736,3821,3820,3819,3734,3652]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.7,13.1],[-18.48,12.37],[-18.76,12.34],[-19.01,12.51],[-18.76,13.13],[-18.7,13.1]]]},\"properties\":{\"id\":3736,\"height\":81,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3568,3653,3821,3735,3652]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.49,12.68],[13.05,12.54],[12.85,12.09],[12.57,12.04],[12.54,12.06],[12.49,12.68]]]},\"properties\":{\"id\":3794,\"height\":81,\"biome\":12,\"type\":\"island\",\"population\":25083,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3793,3711,3795,3879,3878]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-24.75,12.09],[-24.72,11.81],[-24.83,11.73],[-25.23,11.78],[-25.37,11.98],[-25.2,12.26],[-24.75,12.09]]]},\"properties\":{\"id\":3809,\"height\":81,\"biome\":1,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3724,3810,3893,3892,3808,3723]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.24,12.04],[-19.35,11.64],[-19.52,11.56],[-19.55,11.56],[-19.86,11.81],[-19.94,12.09],[-19.35,12.32],[-19.24,12.04]]]},\"properties\":{\"id\":3819,\"height\":81,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3735,3820,3903,3902,3901,3818,3734]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.52,11.56],[-19.49,10.89],[-19.83,10.61],[-20.22,10.92],[-20.22,11.17],[-19.55,11.56],[-19.52,11.56]]]},\"properties\":{\"id\":3902,\"height\":81,\"biome\":1,\"type\":\"island\",\"population\":8812,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3819,3903,3900,3901]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.53,37.64],[-21.07,37.41],[-21.18,37.5],[-21.15,38.17],[-20.92,38.31],[-20.56,38.06],[-20.53,37.64]]]},\"properties\":{\"id\":11,\"height\":100,\"biome\":11,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":45,\"culture\":9,\"religion\":9,\"neighbors\":[12,85,84,10]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.72,37.69],[1.43,37.44],[1.15,37.52],[0.96,38.14],[1.1,38.28],[1.63,38.11],[1.72,37.69]]]},\"properties\":{\"id\":52,\"height\":100,\"biome\":11,\"type\":\"island\",\"population\":26000,\"state\":1,\"province\":4,\"culture\":3,\"religion\":12,\"neighbors\":[53,127,126,51]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.28,36.91],[-11.73,36.96],[-11.9,37.1],[-11.67,37.55],[-11.28,37.47],[-11.17,37.41],[-11.28,36.91]]]},\"properties\":{\"id\":102,\"height\":100,\"biome\":11,\"type\":\"island\",\"population\":3000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[103,178,177,101,28,29]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.67,37.08],[-2.84,36.77],[-3.09,36.77],[-3.26,37.02],[-2.95,37.38],[-2.81,37.33],[-2.67,37.08]]]},\"properties\":{\"id\":118,\"height\":100,\"biome\":10,\"type\":\"island\",\"population\":14000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[119,195,194,193,117,44]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.63,36.85],[1.43,37.44],[1.72,37.69],[2.19,37.44],[1.97,36.91],[1.72,36.82],[1.63,36.85]]]},\"properties\":{\"id\":127,\"height\":100,\"biome\":10,\"type\":\"island\",\"population\":24000,\"state\":1,\"province\":4,\"culture\":3,\"religion\":12,\"neighbors\":[202,126,52,53,128,203]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.13,36.04],[8.16,36.1],[8.27,36.21],[8.52,36.35],[8.86,36.24],[9.06,35.9],[8.61,35.65],[8.3,35.79],[8.13,36.04]]]},\"properties\":{\"id\":289,\"height\":100,\"biome\":10,\"type\":\"island\",\"population\":7000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[365,288,214,215,216,290,367,366]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.87,36.1],[9.9,36.41],[10.21,36.63],[10.24,36.63],[10.35,36.32],[10.18,35.96],[9.87,36.1]]]},\"properties\":{\"id\":292,\"height\":100,\"biome\":10,\"type\":\"island\",\"population\":3000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[369,291,218,142,219,293]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.42,35.48],[-18.79,35.23],[-19.18,35.87],[-18.98,35.99],[-18.28,35.82],[-18.42,35.48]]]},\"properties\":{\"id\":316,\"height\":100,\"biome\":2,\"type\":\"island\",\"population\":28275,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[317,391,315,238,239]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.65,35.12],[-17.24,35.29],[-16.93,35.76],[-16.73,35.73],[-16.51,35.34],[-16.65,35.12]]]},\"properties\":{\"id\":319,\"height\":100,\"biome\":9,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[395,394,318,242,320]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.57,35.68],[7.65,35.85],[8.13,36.04],[8.3,35.79],[8.1,35.17],[7.62,35.48],[7.57,35.68]]]},\"properties\":{\"id\":365,\"height\":100,\"biome\":10,\"type\":\"island\",\"population\":7000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[364,287,288,289,366,440]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.24,35.4],[10.38,35.68],[10.6,35.76],[11.05,35.29],[11.03,35.23],[10.46,35.17],[10.24,35.4]]]},\"properties\":{\"id\":370,\"height\":100,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[444,369,293,371,446,372]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.05,35.29],[10.6,35.76],[10.77,35.9],[10.91,35.85],[11.28,35.45],[11.28,35.45],[11.05,35.29]]]},\"properties\":{\"id\":371,\"height\":100,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[446,370,293,294,373,375]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.49,35.15],[10.46,35.17],[11.03,35.23],[11.08,34.92],[11.05,34.89],[10.72,34.87],[10.49,35.15]]]},\"properties\":{\"id\":372,\"height\":100,\"biome\":10,\"type\":\"island\",\"population\":3473,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[445,444,370,446,447,518]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.85,34.81],[-16.82,34.39],[-17.07,34.25],[-17.3,34.78],[-16.85,34.81]]]},\"properties\":{\"id\":467,\"height\":100,\"biome\":2,\"type\":\"island\",\"population\":11000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[394,468,541,466]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.26,34.36],[-3.77,34.11],[-4.02,34.28],[-3.71,34.87],[-3.71,34.87],[-3.21,34.47],[-3.26,34.36]]]},\"properties\":{\"id\":492,\"height\":100,\"biome\":9,\"type\":\"island\",\"population\":2000,\"state\":1,\"province\":9,\"culture\":4,\"religion\":12,\"neighbors\":[567,566,565,491,418,419]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.73,34.31],[2.64,34.81],[2.73,34.92],[3.15,34.78],[3.18,34.31],[2.84,34.22],[2.73,34.31]]]},\"properties\":{\"id\":504,\"height\":100,\"biome\":10,\"type\":\"island\",\"population\":29788,\"state\":10,\"province\":141,\"culture\":4,\"religion\":4,\"neighbors\":[577,503,430,431,505,578]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.75,33.78],[-18.08,33.69],[-18.31,34.28],[-17.66,34.11],[-17.75,33.78]]]},\"properties\":{\"id\":539,\"height\":100,\"biome\":2,\"type\":\"island\",\"population\":14000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[540,611,538,465]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.58,33.41],[-15.67,33.19],[-16.2,33.38],[-16.2,33.83],[-16.12,33.94],[-15.58,33.44],[-15.58,33.41]]]},\"properties\":{\"id\":615,\"height\":100,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":29,\"culture\":9,\"religion\":9,\"neighbors\":[544,616,689,614,542,543]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.64,33.22],[-13.78,33.19],[-14.15,33.52],[-13.98,33.78],[-13.73,33.8],[-13.5,33.47],[-13.64,33.22]]]},\"properties\":{\"id\":619,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[620,693,618,546,547,548]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.69,31.34],[-15.75,31.17],[-16.2,31.03],[-16.4,31.09],[-16.42,31.12],[-16.26,31.42],[-15.92,31.65],[-15.83,31.59],[-15.69,31.34]]]},\"properties\":{\"id\":910,\"height\":100,\"biome\":3,\"type\":\"island\",\"population\":13665,\"state\":4,\"province\":29,\"culture\":9,\"religion\":9,\"neighbors\":[837,911,983,982,908,909,835,836]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.86,31.01],[-6.95,30.95],[-7.45,31.28],[-7.43,31.56],[-7.14,31.65],[-7.03,31.62],[-6.86,31.01]]]},\"properties\":{\"id\":926,\"height\":100,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[927,1000,999,925,852,853]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.06,30.53],[-7.62,30.73],[-7.62,30.92],[-7.45,31.28],[-6.95,30.95],[-7.06,30.53]]]},\"properties\":{\"id\":999,\"height\":100,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1000,1071,998,925,926]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.55,30.64],[-1.83,30.5],[-2.14,30.64],[-2.33,31.12],[-2.28,31.15],[-1.55,31.01],[-1.52,30.7],[-1.55,30.64]]]},\"properties\":{\"id\":1009,\"height\":100,\"biome\":9,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1082,1081,1080,1008,935,936,1010]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.38,29.91],[-2.08,29.91],[-1.83,30.5],[-1.55,30.64],[-1.29,30],[-1.38,29.91]]]},\"properties\":{\"id\":1081,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1154,1153,1080,1009,1082]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.29,30],[-1.55,30.64],[-1.52,30.7],[-0.96,30.61],[-0.79,30.5],[-1.15,29.97],[-1.29,30]]]},\"properties\":{\"id\":1082,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1154,1081,1009,1010,1011,1083]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.13,29.94],[0.62,30.19],[0.62,30.42],[1.04,30.61],[1.21,30],[1.13,29.94]]]},\"properties\":{\"id\":1086,\"height\":100,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1159,1158,1085,1014,1087]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.03,30.03],[4.44,30.05],[4.42,30.42],[4.87,30.53],[5.03,30.03]]]},\"properties\":{\"id\":1093,\"height\":100,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1094,1165,1092,1021]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.66,29.41],[-2.11,29.69],[-2.11,29.89],[-2.08,29.91],[-1.38,29.91],[-1.49,29.44],[-1.66,29.41]]]},\"properties\":{\"id\":1153,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1228,1227,1152,1080,1081,1154]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.12,29.21],[-1.49,29.44],[-1.38,29.91],[-1.29,30],[-1.15,29.97],[-1.15,29.94],[-1.01,29.27],[-1.12,29.21]]]},\"properties\":{\"id\":1154,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1229,1228,1153,1081,1082,1083,1155]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.96,28.6],[-1.24,28.79],[-1.12,29.21],[-1.01,29.27],[-0.65,29.35],[-0.51,29.1],[-0.53,28.91],[-0.96,28.6]]]},\"properties\":{\"id\":1229,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1302,1301,1228,1154,1155,1230,1303]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.12,28.24],[-16.71,28.26],[-16.79,28.71],[-16.31,28.77],[-16.06,28.32],[-16.12,28.24]]]},\"properties\":{\"id\":1273,\"height\":100,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1348,1347,1272,1200,1274]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.96,28.38],[0.93,28.82],[1.1,28.88],[1.49,28.82],[1.69,28.68],[1.69,28.6],[1.66,28.54],[1.01,28.29],[0.96,28.38]]]},\"properties\":{\"id\":1306,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":11,\"neighbors\":[1379,1305,1232,1233,1234,1307,1381,1380]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.92,28.57],[5.01,28.91],[5.46,29.02],[5.63,28.79],[5.6,28.38],[5.48,28.24],[5.03,28.43],[4.92,28.57]]]},\"properties\":{\"id\":1313,\"height\":100,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":11,\"neighbors\":[1386,1312,1240,1241,1314,1388,1387]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.92,27.82],[-4.95,27.76],[-5.43,27.54],[-5.37,28.15],[-4.98,28.21],[-4.92,27.82]]]},\"properties\":{\"id\":1368,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1369,1442,1441,1367,1294]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.92,27.14],[-5.46,27.26],[-5.46,27.48],[-5.43,27.54],[-4.95,27.76],[-4.92,27.14]]]},\"properties\":{\"id\":1441,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1442,1516,1440,1367,1368]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.78,27.12],[-3.18,27],[-3.35,27.14],[-3.4,27.59],[-3.21,27.79],[-2.98,27.79],[-2.76,27.26],[-2.78,27.12]]]},\"properties\":{\"id\":1445,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":7870,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1521,1520,1519,1444,1371,1372,1446]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.2,27.23],[-17.86,26.78],[-17.94,26.67],[-18.39,26.58],[-18.51,26.72],[-18.48,27],[-18.23,27.23],[-18.2,27.23]]]},\"properties\":{\"id\":1492,\"height\":100,\"biome\":1,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":76,\"culture\":7,\"religion\":7,\"neighbors\":[1417,1493,1568,1567,1566,1491,1416]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.65,26.72],[-16.79,26.64],[-17.24,26.86],[-17.24,26.89],[-16.76,27.34],[-16.45,27.17],[-16.48,26.98],[-16.65,26.72]]]},\"properties\":{\"id\":1494,\"height\":100,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1495,1570,1569,1493,1419,1420,1496]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.19,26.98],[-15.36,26.67],[-15.44,26.64],[-15.89,26.86],[-15.89,26.86],[-15.83,27.2],[-15.58,27.37],[-15.16,27.03],[-15.19,26.98]]]},\"properties\":{\"id\":1497,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1498,1573,1572,1571,1495,1496,1421,1422]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.66,26.58],[-2.02,26.58],[-2.25,26.75],[-2.11,27],[-1.63,27.31],[-1.57,27.26],[-1.66,26.58],[-1.66,26.58]]]},\"properties\":{\"id\":1522,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":11,\"neighbors\":[1598,1597,1596,1521,1447,1448,1523]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.44,26.64],[-15.69,26.25],[-16.03,26.3],[-16.12,26.36],[-16.12,26.44],[-15.89,26.86],[-15.44,26.64]]]},\"properties\":{\"id\":1571,\"height\":100,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":89,\"culture\":7,\"religion\":7,\"neighbors\":[1497,1572,1646,1645,1570,1495]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2,26.11],[-2.59,26.16],[-2.39,26.72],[-2.25,26.75],[-2.02,26.58],[-2,26.11]]]},\"properties\":{\"id\":1596,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1597,1671,1595,1521,1522]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.24,25.83],[-10.32,25.21],[-10.66,25.35],[-10.74,25.58],[-10.66,25.8],[-10.24,25.83],[-10.24,25.83]]]},\"properties\":{\"id\":1734,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1657,1735,1810,1733,1655,1656]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.44,25.66],[-6.24,25.19],[-6.47,24.91],[-6.95,25.07],[-7.06,25.19],[-6.92,25.49],[-6.44,25.66]]]},\"properties\":{\"id\":1741,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":9233,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1663,1742,1818,1817,1816,1740]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.57,17.1],[6.08,16.88],[6.16,16.79],[6.08,16.46],[6.02,16.37],[5.65,16.34],[5.6,16.37],[5.54,17.04],[5.57,17.1]]]},\"properties\":{\"id\":3073,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[2984,2985,2986,3074,3162,3161,3160,3072]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.74,16.96],[12.8,16.96],[13.16,16.74],[13.16,16.68],[12.83,16.32],[12.6,16.46],[12.74,16.96]]]},\"properties\":{\"id\":3086,\"height\":100,\"biome\":6,\"type\":\"island\",\"population\":11000,\"state\":8,\"province\":116,\"culture\":8,\"religion\":8,\"neighbors\":[3085,2998,2999,3087,3175,3174]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.03,16.51],[5.6,16.37],[5.65,16.34],[5.51,15.92],[4.89,16.12],[5.03,16.51]]]},\"properties\":{\"id\":3160,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[3159,3072,3073,3161,3253]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.14,15.34],[-9.31,14.95],[-9.48,14.86],[-9.79,15.42],[-9.14,15.34]]]},\"properties\":{\"id\":3317,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3226,3318,3407,3316]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.85,15.62],[4.42,15.31],[4.42,15.28],[4.08,14.95],[3.74,15.45],[3.85,15.62]]]},\"properties\":{\"id\":3342,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3250,3251,3252,3343,3341]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.94,15.34],[9.25,15.42],[9.45,14.95],[9.17,14.78],[8.83,14.81],[8.72,14.95],[8.94,15.34]]]},\"properties\":{\"id\":3351,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":18000,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3350,3260,3352,3442,3441,3440]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.58,14.81],[-6.53,14.55],[-6.95,14.36],[-7,15.06],[-6.58,14.81]]]},\"properties\":{\"id\":3412,\"height\":100,\"biome\":6,\"type\":\"island\",\"population\":14121,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3322,3413,3503,3411]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.02,14.92],[6.36,14.75],[6.52,14.44],[5.88,14.27],[5.96,14.81],[6.02,14.92]]]},\"properties\":{\"id\":3436,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3345,3346,3437,3527,3435]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.82,14.27],[4.33,14.13],[4.3,13.94],[3.94,13.71],[3.71,13.88],[3.82,14.27]]]},\"properties\":{\"id\":3523,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":4555,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3522,3432,3524,3610,3609]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.38,14.19],[9.14,13.66],[9.14,13.66],[8.69,13.52],[8.33,13.94],[8.38,14.19],[8.38,14.19]]]},\"properties\":{\"id\":3531,\"height\":100,\"biome\":6,\"type\":\"island\",\"population\":17463,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3440,3532,3620,3619,3618,3530]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.38,14.19],[8.72,14.39],[9.03,14.25],[9.22,13.85],[9.14,13.66],[8.38,14.19]]]},\"properties\":{\"id\":3532,\"height\":100,\"biome\":6,\"type\":\"island\",\"population\":20206,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3531,3440,3441,3533,3620]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.97,13.69],[2.45,13.24],[2.14,12.96],[1.69,13.49],[1.97,13.69]]]},\"properties\":{\"id\":3606,\"height\":100,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3518,3607,3692,3691]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.96,13.71],[10.27,13.52],[10.29,13.32],[9.7,13.21],[9.62,13.32],[9.96,13.71]]]},\"properties\":{\"id\":3621,\"height\":100,\"biome\":12,\"type\":\"island\",\"population\":12000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3620,3534,3622,3706,3705]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.95,12.59],[12.46,12.71],[12.49,12.68],[12.54,12.06],[11.9,12.2],[11.87,12.23],[11.87,12.48],[11.95,12.59]]]},\"properties\":{\"id\":3793,\"height\":100,\"biome\":12,\"type\":\"island\",\"population\":17000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3709,3710,3711,3794,3878,3877,3792]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.76,37.55],[9.51,38.03],[9.93,38.42],[10.32,38.17],[10.29,37.44],[9.96,37.36],[9.76,37.55]]]},\"properties\":{\"id\":68,\"height\":121,\"biome\":11,\"type\":\"island\",\"population\":10000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[141,67,69,142]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.19,36.85],[-4.25,36.94],[-4.05,37.52],[-4.05,37.52],[-3.71,37.55],[-3.68,37.52],[-3.6,37.02],[-3.77,36.66],[-4.19,36.85]]]},\"properties\":{\"id\":116,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":24000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[192,191,115,41,42,43,117,193]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.18,37.1],[8.24,37.19],[8.44,37.24],[9.08,37.1],[9.14,36.96],[8.52,36.71],[8.18,37.1]]]},\"properties\":{\"id\":139,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":142,\"culture\":3,\"religion\":3,\"neighbors\":[215,138,65,140,141,216]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.14,36.96],[9.08,37.1],[9.11,37.22],[9.76,37.55],[9.96,37.36],[9.87,37.1],[9.56,36.91],[9.2,36.88],[9.14,36.96]]]},\"properties\":{\"id\":141,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":6000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[216,139,140,67,68,142,218,217]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.06,36.43],[-7.14,36.52],[-7.09,37.13],[-6.97,37.27],[-6.5,36.96],[-6.5,36.96],[-6.47,36.68],[-7.06,36.43]]]},\"properties\":{\"id\":187,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":27571,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[261,260,186,110,111,112,188]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.19,36.85],[-4.44,36.49],[-4.73,36.43],[-4.78,36.99],[-4.75,37.02],[-4.25,36.94],[-4.19,36.85]]]},\"properties\":{\"id\":191,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[116,192,265,190,114,115]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.83,35.82],[-7.06,36.1],[-7.06,36.43],[-6.47,36.68],[-6.24,36.46],[-6.83,35.82]]]},\"properties\":{\"id\":261,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":23627,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[262,337,260,187,188]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.53,35.71],[-6.83,35.76],[-6.83,35.82],[-6.24,36.46],[-5.93,36.35],[-6.02,35.82],[-6.53,35.71]]]},\"properties\":{\"id\":262,\"height\":121,\"biome\":11,\"type\":\"island\",\"population\":23000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[339,338,337,261,188,263]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.21,35.87],[-3.8,35.68],[-3.88,35.82],[-3.71,36.43],[-3.71,36.46],[-3.52,36.41],[-3.46,36.38],[-3.21,35.87]]]},\"properties\":{\"id\":267,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[268,344,343,266,192,193,194]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.87,36.01],[4.39,35.79],[4.19,35.85],[4.47,36.49],[4.47,36.49],[4.81,36.21],[4.87,36.01]]]},\"properties\":{\"id\":282,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[283,359,358,281,207,208]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.42,35.96],[9.42,36.35],[9.73,36.52],[9.9,36.41],[9.87,36.1],[9.53,35.93],[9.42,35.96]]]},\"properties\":{\"id\":291,\"height\":121,\"biome\":11,\"type\":\"island\",\"population\":3000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[368,290,217,218,292,369]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.75,35.4],[-5.23,35.43],[-5.18,35.87],[-5.15,35.93],[-4.89,36.07],[-4.67,35.93],[-4.64,35.43],[-4.75,35.4]]]},\"properties\":{\"id\":341,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":19543,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[417,416,340,263,264,265,342]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.63,35.29],[8.61,35.65],[9.06,35.9],[9.08,35.87],[9.14,35.2],[8.72,35.23],[8.63,35.29]]]},\"properties\":{\"id\":367,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[441,366,289,290,368,442]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.42,34.87],[-3.04,34.81],[-3.09,35.29],[-3.01,35.37],[-2.59,35.4],[-2.39,34.89],[-2.42,34.87]]]},\"properties\":{\"id\":420,\"height\":121,\"biome\":9,\"type\":\"island\",\"population\":17000,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[495,493,419,344,345,421]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.42,34.53],[-0.76,34.84],[-0.48,35.23],[-0.14,35.31],[-0.11,35.29],[-0.03,34.81],[-0.17,34.67],[-0.42,34.53]]]},\"properties\":{\"id\":425,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":22000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[498,497,424,349,351,426,499]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.45,34.75],[7.48,35.26],[7.62,35.48],[8.1,35.17],[8.13,35.15],[8.1,34.81],[7.45,34.73],[7.45,34.75]]]},\"properties\":{\"id\":440,\"height\":121,\"biome\":10,\"type\":\"island\",\"population\":22000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[512,439,364,365,366,441,513]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.69,33.22],[-18.31,33.36],[-18.34,33.41],[-18.34,33.44],[-18.08,33.69],[-17.75,33.78],[-17.63,33.66],[-17.58,33.3],[-17.69,33.22]]]},\"properties\":{\"id\":611,\"height\":121,\"biome\":1,\"type\":\"island\",\"population\":18000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[686,685,684,610,538,539,540,612]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.22,33.52],[-13.02,33.16],[-13.56,33.13],[-13.64,33.22],[-13.5,33.47],[-13.22,33.52]]]},\"properties\":{\"id\":620,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[548,621,694,693,619]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.68,32.68],[-17.32,32.54],[-17.49,32.68],[-17.16,33.1],[-16.9,33.05],[-16.68,32.68]]]},\"properties\":{\"id\":687,\"height\":121,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[688,761,760,686,613]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.06,32.77],[-14.68,32.54],[-14.71,32.54],[-14.74,33.22],[-14.6,33.27],[-14.06,32.85],[-14.06,32.77]]]},\"properties\":{\"id\":692,\"height\":121,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[693,766,765,691,617,618]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.04,31.12],[-3.63,31.01],[-3.66,31.03],[-3.68,31.37],[-3.29,31.51],[-3.04,31.26],[-3.04,31.12]]]},\"properties\":{\"id\":933,\"height\":121,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[934,1006,1005,932,859,860]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.63,30.47],[-8.92,30.47],[-9.06,30.56],[-9.23,30.87],[-9.2,31.03],[-8.63,31.06],[-8.58,30.53],[-8.63,30.47]]]},\"properties\":{\"id\":996,\"height\":121,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1069,1068,1067,995,922,923,997]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.84,30.47],[-5.4,30.7],[-5.4,30.75],[-4.98,31.09],[-4.7,30.92],[-4.84,30.47]]]},\"properties\":{\"id\":1003,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":17406,\"state\":6,\"province\":80,\"culture\":7,\"religion\":7,\"neighbors\":[1004,1075,1002,930,931]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.85,29.91],[-12.97,29.86],[-13.3,30.03],[-13.33,30.45],[-13.05,30.61],[-12.74,30.31],[-12.85,29.91]]]},\"properties\":{\"id\":1060,\"height\":121,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1061,1133,1132,1059,988,989]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.48,29.8],[-1.15,29.94],[-1.15,29.97],[-0.79,30.5],[-0.45,30.42],[-0.45,29.83],[-0.48,29.8]]]},\"properties\":{\"id\":1083,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1156,1155,1154,1082,1011,1084]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.67,30.03],[2.67,30.36],[2.95,30.5],[3.12,30.47],[3.23,30.42],[3.29,29.89],[3.26,29.89],[2.67,30.03]]]},\"properties\":{\"id\":1090,\"height\":121,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1162,1089,1017,1018,1019,1091,1163]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.38,29.94],[-17.44,29.35],[-17.47,29.33],[-18.17,29.72],[-17.49,29.97],[-17.38,29.94]]]},\"properties\":{\"id\":1124,\"height\":121,\"biome\":3,\"type\":\"island\",\"population\":16001,\"state\":6,\"province\":95,\"culture\":7,\"religion\":7,\"neighbors\":[1052,1125,1198,1123,1051]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.03,30.03],[-13.92,29.27],[-14.37,29.63],[-14.29,29.91],[-14.12,30.05],[-14.09,30.05],[-14.09,30.05],[-14.03,30.03]]]},\"properties\":{\"id\":1130,\"height\":121,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[1059,1131,1204,1129,1057,1058,987]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.04,29.44],[-8.49,29.52],[-8.41,30.14],[-8.1,30.05],[-7.93,29.72],[-7.99,29.49],[-8.04,29.44]]]},\"properties\":{\"id\":1141,\"height\":121,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1216,1215,1140,1069,1070,1142]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.21,29.58],[3.26,29.89],[3.29,29.89],[3.74,29.91],[3.71,29.35],[3.66,29.3],[3.21,29.58]]]},\"properties\":{\"id\":1163,\"height\":121,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1236,1162,1090,1091,1164,1238]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.18,28.63],[-10.66,28.21],[-10.8,28.32],[-10.74,28.79],[-10.18,28.68],[-10.18,28.63]]]},\"properties\":{\"id\":1284,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1285,1358,1357,1283,1211]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.91,28.15],[-3.97,27.62],[-4.39,27.59],[-4.42,27.59],[-4.39,28.35],[-3.91,28.15]]]},\"properties\":{\"id\":1370,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1296,1371,1443,1442,1369]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.32,26.28],[-10.24,25.83],[-10.66,25.8],[-10.83,26.19],[-10.77,26.25],[-10.32,26.28]]]},\"properties\":{\"id\":1656,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1581,1657,1734,1655,1580]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.6,26.16],[-5.32,25.55],[-5.34,25.49],[-5.79,25.69],[-5.71,26.19],[-5.6,26.16]]]},\"properties\":{\"id\":1665,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1590,1666,1744,1743,1664]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.48,25.13],[-11.64,25.1],[-11.76,25.13],[-12.32,25.63],[-12.32,25.66],[-12.32,25.66],[-11.78,25.86],[-11.36,25.55],[-11.48,25.13]]]},\"properties\":{\"id\":1732,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1733,1808,1807,1731,1730,1652,1653,1654]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.35,17.21],[-12.46,16.93],[-12.97,16.88],[-13.08,17.02],[-12.63,17.52],[-12.35,17.32],[-12.35,17.21]]]},\"properties\":{\"id\":2951,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2952,3040,3039,3038,2950,2868]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.69,17.02],[-10.83,16.74],[-11.05,16.54],[-11.36,16.71],[-11.39,16.85],[-11.31,17.1],[-10.77,17.3],[-10.69,17.02]]]},\"properties\":{\"id\":3042,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2955,3043,3131,3129,3041,2953,2954]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.21,16.85],[-10.04,16.54],[-10.38,16.32],[-10.83,16.74],[-10.69,17.02],[-10.24,16.88],[-10.21,16.85]]]},\"properties\":{\"id\":3043,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2956,3044,3132,3131,3042,2955]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.43,17.07],[12.74,16.96],[12.6,16.46],[12.29,16.4],[12.12,16.46],[12.04,16.62],[12.12,16.96],[12.43,17.07]]]},\"properties\":{\"id\":3085,\"height\":121,\"biome\":6,\"type\":\"island\",\"population\":21000,\"state\":8,\"province\":116,\"culture\":8,\"religion\":8,\"neighbors\":[2997,2998,3086,3174,3173,3172,3084]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.26,16.54],[-14.17,16.01],[-14.65,15.81],[-14.77,15.92],[-14.65,16.62],[-14.6,16.68],[-14.26,16.54]]]},\"properties\":{\"id\":3124,\"height\":121,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3036,3125,3217,3216,3123,3035]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.78,16.51],[-11.73,16.23],[-11.95,15.98],[-12.21,15.95],[-12.26,16.01],[-12.4,16.48],[-12.35,16.54],[-11.87,16.57],[-11.78,16.51]]]},\"properties\":{\"id\":3128,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3041,3129,3222,3221,3220,3127,3039,3040]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.05,16.32],[4.25,16.4],[4.64,16.01],[4.33,15.78],[3.94,15.87],[4.05,16.32]]]},\"properties\":{\"id\":3158,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":8,\"neighbors\":[3157,3070,3159,3252,3251]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.33,16.54],[4.98,16.62],[5.03,16.51],[4.89,16.12],[4.81,16.01],[4.64,16.01],[4.25,16.4],[4.33,16.54]]]},\"properties\":{\"id\":3159,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":145,\"culture\":8,\"religion\":8,\"neighbors\":[3070,3071,3072,3160,3253,3252,3158]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.08,16.46],[6.67,16.29],[6.67,16.06],[6.3,15.87],[6.16,15.92],[6.02,16.37],[6.08,16.46]]]},\"properties\":{\"id\":3162,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":11,\"neighbors\":[3073,3074,3163,3256,3255,3161]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.03,16.54],[7.73,16.23],[7.71,16.2],[7.48,15.9],[7.14,15.9],[7.03,16.54]]]},\"properties\":{\"id\":3164,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":17916,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[3163,3076,3165,3258,3257]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.54,15.78],[5.96,15.78],[5.96,15.17],[5.43,15.31],[5.37,15.39],[5.54,15.78]]]},\"properties\":{\"id\":3254,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[3253,3161,3255,3345,3344]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.16,15.92],[6.3,15.87],[6.5,15.5],[6.38,15.34],[5.99,15.17],[5.96,15.17],[5.96,15.78],[6.16,15.92]]]},\"properties\":{\"id\":3255,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":4752,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[3161,3162,3256,3347,3346,3345,3254]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.89,16.04],[9.31,15.87],[9.31,15.53],[9.25,15.42],[8.94,15.34],[8.61,15.62],[8.55,15.87],[8.89,16.04]]]},\"properties\":{\"id\":3260,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":24964,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3166,3167,3261,3352,3351,3350,3259]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.09,15.31],[-6.36,15.25],[-6.3,15.06],[-6.58,14.81],[-7,15.06],[-7.06,15.11],[-7.09,15.31]]]},\"properties\":{\"id\":3322,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3321,3231,3323,3413,3412,3411]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.74,15.45],[4.08,14.95],[4.05,14.92],[4.05,14.86],[3.74,14.72],[3.29,14.89],[3.18,15.28],[3.74,15.45]]]},\"properties\":{\"id\":3341,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3250,3342,3343,3433,3432,3431,3340]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.96,15.17],[5.99,15.17],[6.02,14.92],[5.96,14.81],[5.4,14.75],[5.37,14.81],[5.43,15.31],[5.96,15.17]]]},\"properties\":{\"id\":3345,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3254,3255,3346,3436,3435,3434,3344]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.99,15.17],[6.38,15.34],[6.61,15],[6.36,14.75],[6.02,14.92],[5.99,15.17]]]},\"properties\":{\"id\":3346,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3345,3255,3347,3437,3436]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.05,14.92],[4.81,14.78],[4.73,14.36],[4.53,14.33],[4.05,14.86],[4.05,14.92]]]},\"properties\":{\"id\":3433,\"height\":121,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3341,3343,3434,3524,3432]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.83,14.81],[9.17,14.78],[9.22,14.41],[9.03,14.25],[8.72,14.39],[8.83,14.81]]]},\"properties\":{\"id\":3441,\"height\":121,\"biome\":6,\"type\":\"island\",\"population\":13829,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3440,3351,3442,3533,3532]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.14,14.22],[-16.2,14.02],[-16.26,13.94],[-16.62,13.99],[-16.87,14.36],[-16.76,14.53],[-16.14,14.22]]]},\"properties\":{\"id\":3485,\"height\":121,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3394,3486,3573,3572,3484,3393]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.51,13.91],[-18.2,13.24],[-18.37,13.18],[-18.7,13.1],[-18.76,13.13],[-19.01,13.27],[-18.93,13.69],[-18.51,13.91]]]},\"properties\":{\"id\":3568,\"height\":121,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3481,3569,3654,3653,3736,3652,3567]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.77,13.74],[-15.27,13.35],[-15.52,13.38],[-15.55,13.52],[-15.22,14.25],[-15.13,14.25],[-14.77,13.74]]]},\"properties\":{\"id\":3574,\"height\":121,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3488,3575,3659,3573,3487,3396]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.59,13.69],[8.24,13.8],[8.21,13.27],[8.13,13.24],[7.59,13.55],[7.59,13.69]]]},\"properties\":{\"id\":3617,\"height\":121,\"biome\":6,\"type\":\"island\",\"population\":17202,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3616,3530,3618,3703,3702]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.18,13.83],[12.43,13.91],[12.83,13.74],[12.83,13.29],[12.71,13.24],[12.09,13.69],[12.09,13.69],[12.18,13.83]]]},\"properties\":{\"id\":3626,\"height\":121,\"biome\":12,\"type\":\"island\",\"population\":17612,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3537,3538,3539,3627,3711,3625,3624]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.41,13.13],[10.63,13.13],[10.86,12.79],[10.77,12.48],[10.35,12.59],[10.27,12.9],[10.41,13.13]]]},\"properties\":{\"id\":3707,\"height\":121,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3706,3622,3708,3791,3790,3789]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.11,12.57],[13.44,12.54],[13.56,12.26],[13.11,11.95],[12.85,12.09],[13.05,12.54],[13.11,12.57]]]},\"properties\":{\"id\":3795,\"height\":121,\"biome\":12,\"type\":\"island\",\"population\":14000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3711,3712,3796,3880,3879,3794]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.85,12.09],[13.11,11.95],[13.22,11.59],[12.63,11.45],[12.49,11.62],[12.57,12.04],[12.85,12.09]]]},\"properties\":{\"id\":3879,\"height\":121,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3794,3795,3880,3962,3961,3878]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.29,37.44],[10.32,38.17],[11.03,38.25],[11,37.8],[10.38,37.44],[10.29,37.44]]]},\"properties\":{\"id\":69,\"height\":144,\"biome\":11,\"type\":\"island\",\"population\":23000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[142,68,70,143]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.59,36.74],[-7.99,36.94],[-7.9,37.22],[-7.76,37.27],[-7.37,37.05],[-7.59,36.74]]]},\"properties\":{\"id\":109,\"height\":144,\"biome\":10,\"type\":\"island\",\"population\":12981,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[186,185,108,35,110]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.78,36.99],[-5.2,36.82],[-5.46,36.99],[-5.2,37.44],[-4.81,37.3],[-4.75,37.02],[-4.78,36.99]]]},\"properties\":{\"id\":114,\"height\":144,\"biome\":11,\"type\":\"island\",\"population\":4000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[191,190,189,113,40,115]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.21,36.63],[9.87,37.1],[9.96,37.36],[10.29,37.44],[10.38,37.44],[10.83,36.91],[10.24,36.63],[10.21,36.63]]]},\"properties\":{\"id\":142,\"height\":144,\"biome\":11,\"type\":\"island\",\"population\":8000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[292,218,141,68,69,143,219]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.14,36.52],[-7.48,36.6],[-7.59,36.74],[-7.37,37.05],[-7.09,37.13],[-7.14,36.52]]]},\"properties\":{\"id\":186,\"height\":144,\"biome\":10,\"type\":\"island\",\"population\":12000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[187,260,185,109,110]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.48,36.01],[-7.57,35.76],[-8.13,35.9],[-7.93,36.21],[-7.79,36.24],[-7.48,36.01]]]},\"properties\":{\"id\":259,\"height\":144,\"biome\":9,\"type\":\"island\",\"population\":10000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[260,337,336,258,185]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.48,36.01],[-7.79,36.24],[-7.48,36.6],[-7.14,36.52],[-7.06,36.43],[-7.06,36.1],[-7.48,36.01]]]},\"properties\":{\"id\":260,\"height\":144,\"biome\":11,\"type\":\"island\",\"population\":16000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[337,259,185,186,187,261]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.91,35.96],[3.94,36.41],[4.47,36.49],[4.19,35.85],[4.05,35.82],[3.91,35.96]]]},\"properties\":{\"id\":281,\"height\":144,\"biome\":11,\"type\":\"island\",\"population\":14877,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[357,280,207,282,358]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.28,34.92],[9.17,35.17],[9.7,35.57],[10.07,35.31],[9.82,34.84],[9.7,34.78],[9.39,34.87],[9.28,34.92]]]},\"properties\":{\"id\":443,\"height\":144,\"biome\":10,\"type\":\"island\",\"population\":37606,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[515,442,368,369,444,517,516]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.13,34.11],[-17.61,34.19],[-17.66,34.56],[-17.32,34.78],[-17.3,34.78],[-17.07,34.25],[-17.13,34.11]]]},\"properties\":{\"id\":466,\"height\":144,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[541,540,465,393,394,467]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.66,32.68],[-17.89,32.12],[-18.39,32.43],[-18.42,32.52],[-18.14,32.88],[-17.77,32.8],[-17.66,32.68]]]},\"properties\":{\"id\":759,\"height\":144,\"biome\":1,\"type\":\"island\",\"population\":32968,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[686,760,832,758,684,685]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.4,31.09],[-16.73,30.56],[-17.02,31.26],[-16.79,31.42],[-16.42,31.12],[-16.4,31.09]]]},\"properties\":{\"id\":908,\"height\":144,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":29,\"culture\":7,\"religion\":7,\"neighbors\":[910,982,981,834,909]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.02,30.87],[-15.61,30.87],[-15.75,31.17],[-15.69,31.34],[-15.1,31.51],[-14.96,30.92],[-15.02,30.87]]]},\"properties\":{\"id\":911,\"height\":144,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":71,\"culture\":9,\"religion\":9,\"neighbors\":[985,984,983,910,837,912]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.74,30.89],[-14.96,30.92],[-15.1,31.51],[-15.05,31.59],[-14.43,31.48],[-14.37,31.01],[-14.74,30.89]]]},\"properties\":{\"id\":912,\"height\":144,\"biome\":3,\"type\":\"island\",\"population\":8802,\"state\":4,\"province\":161,\"culture\":9,\"religion\":9,\"neighbors\":[986,985,911,837,838,913]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.66,31.03],[-4.36,31.12],[-4.27,31.62],[-4.27,31.62],[-3.88,31.54],[-3.68,31.37],[-3.66,31.03]]]},\"properties\":{\"id\":932,\"height\":144,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[933,1005,931,857,858,859]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.03,30.5],[-16.2,30.39],[-16.71,30.5],[-16.73,30.5],[-16.73,30.56],[-16.4,31.09],[-16.2,31.03],[-16.03,30.5]]]},\"properties\":{\"id\":982,\"height\":144,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[983,1055,1054,1053,981,908,910]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.98,29.86],[-3.07,29.83],[-3.6,29.91],[-3.63,30.47],[-3.52,30.5],[-2.84,30.08],[-2.98,29.86]]]},\"properties\":{\"id\":1078,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1152,1151,1150,1077,1006,1079]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.65,29.44],[5.51,30.11],[5.99,29.91],[5.71,29.47],[5.65,29.44]]]},\"properties\":{\"id\":1167,\"height\":144,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1241,1166,1095,1168]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.46,27.93],[-12.68,27.76],[-12.68,27.76],[-13.02,27.93],[-13.25,28.32],[-13.25,28.32],[-12.99,28.46],[-12.43,28.54],[-12.32,28.29],[-12.46,27.93]]]},\"properties\":{\"id\":1354,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":11668,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1355,1428,1427,1426,1353,1352,1279,1280,1281]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.14,27.68],[-11.33,27.59],[-11.73,27.98],[-11.7,28.12],[-11.31,28.21],[-11.14,27.68]]]},\"properties\":{\"id\":1356,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":12605,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1357,1430,1429,1355,1282]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.77,27.76],[-9.06,27.73],[-9.23,27.87],[-9.37,28.26],[-9.25,28.32],[-8.66,28.38],[-8.61,28.35],[-8.72,27.84],[-8.77,27.76]]]},\"properties\":{\"id\":1361,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":7923,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1435,1434,1433,1360,1286,1287,1288,1362]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.24,28.35],[-8.07,27.65],[-8.72,27.84],[-8.61,28.35],[-8.24,28.35]]]},\"properties\":{\"id\":1362,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":13994,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1288,1363,1435,1361]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.58,27.37],[-15.83,27.2],[-16.26,27.42],[-16.28,27.73],[-16.2,27.82],[-15.55,27.59],[-15.58,27.37]]]},\"properties\":{\"id\":1421,\"height\":144,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1422,1497,1496,1420,1347,1348]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.87,27.34],[-12.23,27.2],[-12.68,27.76],[-12.46,27.93],[-11.92,27.56],[-11.87,27.34]]]},\"properties\":{\"id\":1428,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1429,1503,1427,1354,1355]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.92,26.64],[-11.9,26.25],[-12.32,26.16],[-12.21,26.61],[-11.92,26.64]]]},\"properties\":{\"id\":1578,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1503,1579,1653,1577]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.78,25.86],[-12.32,25.66],[-12.35,26.14],[-12.32,26.16],[-11.9,26.25],[-11.7,26.14],[-11.78,25.86]]]},\"properties\":{\"id\":1653,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1654,1732,1652,1577,1578,1579]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.91,25.07],[-11.33,25.02],[-11.48,25.13],[-11.36,25.55],[-11.33,25.58],[-10.74,25.58],[-10.66,25.35],[-10.91,25.07]]]},\"properties\":{\"id\":1733,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1810,1809,1808,1732,1654,1655,1734]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.64,17.44],[-11.76,17.04],[-11.9,16.96],[-12.35,17.21],[-12.35,17.32],[-11.84,17.66],[-11.67,17.58],[-11.64,17.44]]]},\"properties\":{\"id\":2952,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":9043,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2954,2953,3041,3040,2951,2868,2869]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.05,16.43],[-11.31,15.98],[-11.73,16.23],[-11.78,16.51],[-11.36,16.71],[-11.05,16.54],[-11.05,16.43]]]},\"properties\":{\"id\":3129,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3131,3130,3222,3128,3041,3042]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.55,15.92],[-10.55,15.9],[-10.63,15.81],[-11.28,15.87],[-11.31,15.98],[-11.05,16.43],[-10.55,16.04],[-10.55,15.92]]]},\"properties\":{\"id\":3130,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3132,3225,3224,3223,3222,3129,3131]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.38,16.32],[-10.55,16.04],[-11.05,16.43],[-11.05,16.54],[-10.83,16.74],[-10.38,16.32]]]},\"properties\":{\"id\":3131,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3043,3132,3130,3129,3042]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.65,16.34],[6.02,16.37],[6.16,15.92],[5.96,15.78],[5.54,15.78],[5.51,15.92],[5.65,16.34]]]},\"properties\":{\"id\":3161,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[3160,3073,3162,3255,3254,3253]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.83,16.48],[7.03,16.54],[7.03,16.54],[7.14,15.9],[7,15.81],[6.67,16.06],[6.67,16.29],[6.83,16.48]]]},\"properties\":{\"id\":3163,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[3074,3075,3076,3164,3257,3256,3162]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.07,15.39],[-10.18,15.14],[-10.32,15.11],[-10.52,15.2],[-10.74,15.36],[-10.63,15.81],[-10.55,15.9],[-10.07,15.39]]]},\"properties\":{\"id\":3224,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3225,3316,3405,3315,3314,3223,3130]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.55,16.09],[-8.32,15.9],[-8.61,15.31],[-8.66,15.28],[-9.11,15.36],[-9.2,15.78],[-9.11,15.9],[-8.55,16.09]]]},\"properties\":{\"id\":3227,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3134,3135,3228,3319,3318,3226,3133]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.67,16.06],[7,15.81],[6.95,15.62],[6.83,15.5],[6.5,15.5],[6.3,15.87],[6.67,16.06]]]},\"properties\":{\"id\":3256,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[3162,3163,3257,3348,3347,3255]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.88,15.34],[8.13,15.76],[8.47,15.9],[8.55,15.87],[8.61,15.62],[8.24,15.11],[7.88,15.34]]]},\"properties\":{\"id\":3259,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":19000,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3349,3258,3165,3166,3260,3350]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.12,15.34],[-7.09,15.31],[-7.87,14.75],[-7.99,14.75],[-8.04,15.08],[-7.87,15.39],[-7.23,15.39],[-7.12,15.34]]]},\"properties\":{\"id\":3320,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3230,3231,3321,3410,3319,3228,3229]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.63,15.28],[11.33,15.36],[11.31,14.86],[11.22,14.78],[11.19,14.78],[10.69,15.14],[10.63,15.28]]]},\"properties\":{\"id\":3355,\"height\":144,\"biome\":6,\"type\":\"island\",\"population\":18470,\"state\":8,\"province\":124,\"culture\":8,\"religion\":8,\"neighbors\":[3354,3264,3356,3446,3445,3444]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.76,14.69],[-16.76,14.53],[-16.87,14.36],[-17.21,14.25],[-17.27,14.33],[-17.16,14.86],[-16.76,14.69]]]},\"properties\":{\"id\":3393,\"height\":144,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3303,3394,3485,3484,3483,3392]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.66,14.83],[2.14,14.72],[2.11,14.39],[1.52,14.33],[1.52,14.75],[1.66,14.83]]]},\"properties\":{\"id\":3428,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[3337,3338,3429,3519,3427]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.3,15.03],[8.72,14.95],[8.83,14.81],[8.72,14.39],[8.38,14.19],[8.38,14.19],[8.24,14.27],[8.21,14.81],[8.3,15.03]]]},\"properties\":{\"id\":3440,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":28699,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3349,3350,3351,3441,3532,3531,3530,3439]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.66,14.92],[12.97,15.08],[13.27,14.97],[13.36,14.78],[12.97,14.33],[12.8,14.39],[12.77,14.39],[12.57,14.78],[12.66,14.92]]]},\"properties\":{\"id\":3448,\"height\":144,\"biome\":6,\"type\":\"island\",\"population\":20000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3357,3358,3359,3360,3449,3539,3538,3447]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.32,14.3],[-3.15,13.83],[-3.46,13.69],[-3.66,13.77],[-3.88,14.3],[-3.32,14.3]]]},\"properties\":{\"id\":3509,\"height\":144,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3418,3510,3596,3595,3508]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.84,14.39],[-0.53,14.3],[-0.76,13.74],[-1.01,13.63],[-1.15,13.71],[-1.12,14.33],[-0.84,14.39]]]},\"properties\":{\"id\":3514,\"height\":144,\"biome\":12,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3422,3423,3515,3601,3600,3513]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.45,14.19],[11.45,14.22],[11.98,14.36],[12.09,14.25],[12.18,13.83],[12.09,13.69],[11.39,13.66],[11.36,13.71],[11.45,14.19]]]},\"properties\":{\"id\":3537,\"height\":144,\"biome\":12,\"type\":\"island\",\"population\":27000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3536,3445,3446,3447,3538,3626,3624,3623]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.77,14.39],[12.8,14.39],[12.43,13.91],[12.18,13.83],[12.09,14.25],[12.77,14.39]]]},\"properties\":{\"id\":3538,\"height\":144,\"biome\":12,\"type\":\"island\",\"population\":10000,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3447,3448,3539,3626,3537]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.41,13.77],[-17.24,13.27],[-17.32,13.15],[-18.03,13.15],[-18.11,13.24],[-17.97,13.49],[-17.61,13.77],[-17.41,13.77]]]},\"properties\":{\"id\":3570,\"height\":144,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3483,3571,3656,3655,3654,3569,3482]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.55,13.88],[-6.36,13.49],[-7,13.24],[-7.17,13.6],[-7.03,13.99],[-6.55,13.88]]]},\"properties\":{\"id\":3590,\"height\":144,\"biome\":6,\"type\":\"island\",\"population\":23000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3503,3504,3675,3589,3502]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.54,13.69],[6.08,13.43],[6.02,13.35],[5.6,13.13],[5.29,13.41],[5.54,13.69]]]},\"properties\":{\"id\":3613,\"height\":144,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3612,3526,3699,3698,3697]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.52,13.29],[8.69,13.52],[9.14,13.66],[9.28,13.38],[9.11,13.01],[8.69,13.04],[8.52,13.29]]]},\"properties\":{\"id\":3619,\"height\":144,\"biome\":12,\"type\":\"island\",\"population\":21000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3703,3618,3531,3620,3705,3704]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.14,13.66],[9.22,13.85],[9.82,14.11],[9.96,13.71],[9.62,13.32],[9.28,13.38],[9.14,13.66],[9.14,13.66]]]},\"properties\":{\"id\":3620,\"height\":144,\"biome\":12,\"type\":\"island\",\"population\":24000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3531,3532,3533,3534,3621,3705,3619]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.37,13.18],[-18.31,12.48],[-18.48,12.37],[-18.48,12.37],[-18.7,13.1],[-18.37,13.18]]]},\"properties\":{\"id\":3653,\"height\":144,\"biome\":3,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3568,3654,3737,3821,3736]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.5,13.32],[14.06,13.29],[14.15,13.24],[14.12,12.73],[13.47,12.59],[13.47,13.32],[13.5,13.32]]]},\"properties\":{\"id\":3713,\"height\":144,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3627,3628,3629,3714,3796,3712]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.22,11.59],[13.11,11.95],[13.56,12.26],[13.67,12.18],[13.81,11.76],[13.44,11.48],[13.22,11.59],[13.22,11.59]]]},\"properties\":{\"id\":3880,\"height\":144,\"biome\":12,\"type\":\"island\",\"population\":3000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3962,3879,3795,3796,3881,3964,3963]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.96,37.27],[0.56,37.52],[0.82,38.11],[0.96,38.14],[1.15,37.52],[0.96,37.27]]]},\"properties\":{\"id\":51,\"height\":169,\"biome\":11,\"type\":\"island\",\"population\":32514,\"state\":1,\"province\":5,\"culture\":3,\"religion\":12,\"neighbors\":[126,125,50,52]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.55,36.99],[-10.58,36.99],[-10.88,37.36],[-10.32,37.61],[-10.21,37.33],[-10.55,36.99]]]},\"properties\":{\"id\":104,\"height\":169,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[105,180,103,30,31]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.67,36.41],[-20.98,36.41],[-21.12,36.57],[-21.12,36.85],[-21.01,36.99],[-20.53,37.05],[-20.36,36.85],[-20.67,36.41]]]},\"properties\":{\"id\":161,\"height\":169,\"biome\":2,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":45,\"culture\":9,\"religion\":9,\"neighbors\":[162,235,234,160,84,85,86]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.71,36.46],[-3.77,36.66],[-3.6,37.02],[-3.26,37.02],[-3.09,36.77],[-3.52,36.41],[-3.71,36.46]]]},\"properties\":{\"id\":193,\"height\":169,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[267,192,116,117,118,194]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.94,36.41],[3.82,36.55],[3.85,36.82],[4.02,36.99],[4.53,36.91],[4.47,36.49],[4.47,36.49],[3.94,36.41]]]},\"properties\":{\"id\":207,\"height\":169,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":135,\"culture\":3,\"religion\":3,\"neighbors\":[281,280,206,130,131,208,282]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.13,35.15],[8.1,35.17],[8.3,35.79],[8.61,35.65],[8.63,35.29],[8.13,35.15]]]},\"properties\":{\"id\":366,\"height\":169,\"biome\":10,\"type\":\"island\",\"population\":3000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[441,440,365,289,367]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.86,34.61],[-18.34,34.56],[-18.39,34.7],[-18.14,35.15],[-17.83,35.17],[-17.86,34.61]]]},\"properties\":{\"id\":392,\"height\":169,\"biome\":2,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[393,465,464,391,317]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.19,33.64],[-15.58,33.41],[-15.58,33.44],[-15.64,34.25],[-15.61,34.25],[-15.47,34.25],[-15.1,33.94],[-15.19,33.64]]]},\"properties\":{\"id\":544,\"height\":169,\"biome\":3,\"type\":\"island\",\"population\":18000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[617,616,615,543,469,470,471]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.6,33.27],[-14.74,33.22],[-14.77,33.22],[-15.19,33.64],[-15.1,33.94],[-14.99,33.97],[-14.54,33.38],[-14.6,33.27]]]},\"properties\":{\"id\":617,\"height\":169,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[618,692,691,616,544,471,545]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.15,33.52],[-13.78,33.19],[-14.06,32.85],[-14.6,33.27],[-14.54,33.38],[-14.46,33.44],[-14.15,33.52]]]},\"properties\":{\"id\":618,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[546,619,693,692,617,545]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.49,32.68],[-17.66,32.68],[-17.77,32.8],[-17.69,33.22],[-17.58,33.3],[-17.18,33.16],[-17.16,33.1],[-17.49,32.68]]]},\"properties\":{\"id\":686,\"height\":169,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[687,760,759,685,611,612,613]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.34,32.8],[-16.65,32.68],[-16.68,32.68],[-16.9,33.05],[-16.65,33.36],[-16.31,33.3],[-16.34,32.8]]]},\"properties\":{\"id\":688,\"height\":169,\"biome\":1,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":29,\"culture\":9,\"religion\":9,\"neighbors\":[689,762,761,687,613,614]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.95,32.63],[-16.48,32.04],[-16.65,32.04],[-16.65,32.68],[-16.34,32.8],[-15.95,32.71],[-15.95,32.63]]]},\"properties\":{\"id\":762,\"height\":169,\"biome\":3,\"type\":\"island\",\"population\":7740,\"state\":4,\"province\":29,\"culture\":9,\"religion\":9,\"neighbors\":[764,763,835,761,688,689]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.61,31.45],[-9.23,31.45],[-9.37,31.59],[-9.14,32.07],[-8.94,32.15],[-8.63,32.1],[-8.47,31.68],[-8.61,31.45]]]},\"properties\":{\"id\":849,\"height\":169,\"biome\":9,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[924,923,922,848,775,776,850]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.61,30.87],[-15.72,30.53],[-16.03,30.5],[-16.2,31.03],[-15.75,31.17],[-15.61,30.87]]]},\"properties\":{\"id\":983,\"height\":169,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[911,984,1055,982,910]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.72,30.42],[-7,30.45],[-7.06,30.53],[-6.95,30.95],[-6.86,31.01],[-6.44,31.15],[-6.36,30.98],[-6.72,30.42]]]},\"properties\":{\"id\":1000,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[1001,1072,1071,999,926,927,928]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.95,30.98],[-3.15,30.67],[-3.52,30.5],[-3.63,30.47],[-3.68,30.53],[-3.63,31.01],[-3.04,31.12],[-2.95,30.98]]]},\"properties\":{\"id\":1006,\"height\":169,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[934,1007,1079,1078,1077,1005,933]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.31,30.67],[0.25,30.95],[0.65,31.17],[0.87,31.09],[0.48,30.59],[0.31,30.67]]]},\"properties\":{\"id\":1013,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1085,1012,940,941,1014]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.57,30.45],[3.82,30.92],[3.94,30.98],[4.22,30.81],[4.33,30.5],[3.8,30.25],[3.57,30.45]]]},\"properties\":{\"id\":1020,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1091,1019,946,947,1021,1092]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.63,30.81],[8.58,30.92],[8.61,30.95],[9.2,31.2],[9.39,30.95],[9.37,30.7],[8.89,30.61],[8.63,30.81]]]},\"properties\":{\"id\":1029,\"height\":169,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1100,1028,955,956,957,1030,1101]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.29,29.89],[3.23,30.42],[3.57,30.45],[3.8,30.25],[3.82,30],[3.74,29.91],[3.29,29.89]]]},\"properties\":{\"id\":1091,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1163,1090,1019,1020,1092,1164]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.1,29.61],[1.13,29.94],[1.21,30],[1.46,30.11],[1.86,29.83],[1.63,29.47],[1.55,29.44],[1.1,29.61]]]},\"properties\":{\"id\":1159,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1233,1158,1086,1087,1088,1160,1234]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.96,28.82],[-17.27,28.6],[-17.32,28.6],[-17.69,28.82],[-17.66,29.16],[-17.47,29.33],[-17.44,29.35],[-17.24,29.24],[-16.96,28.88],[-16.96,28.82]]]},\"properties\":{\"id\":1198,\"height\":169,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1200,1272,1345,1271,1197,1123,1124,1125,1199]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.94,28.93],[3.63,29.3],[3.66,29.3],[3.71,29.35],[4.33,29.47],[4.36,29.1],[4.05,28.85],[3.94,28.93]]]},\"properties\":{\"id\":1238,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":55,\"culture\":7,\"religion\":11,\"neighbors\":[1310,1237,1236,1163,1164,1239,1311]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.36,29.1],[4.33,29.47],[4.36,29.55],[4.87,29.52],[4.92,28.99],[4.47,29.02],[4.36,29.1]]]},\"properties\":{\"id\":1239,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":6067,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1311,1238,1164,1165,1240,1312]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.43,26.84],[-12.88,26.78],[-12.99,26.84],[-12.97,27.2],[-12.85,27.4],[-12.26,27.14],[-12.43,26.84]]]},\"properties\":{\"id\":1502,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1503,1577,1576,1501,1426,1427]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.15,26.19],[-14.51,26.16],[-14.68,26.3],[-14.65,26.53],[-14.46,26.92],[-14.12,26.64],[-14.09,26.61],[-14.06,26.28],[-14.15,26.19]]]},\"properties\":{\"id\":1574,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1650,1649,1648,1573,1498,1499,1500,1575]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.53,26.47],[-4.3,25.83],[-4.64,25.75],[-4.89,25.91],[-4.95,26.14],[-4.84,26.39],[-4.53,26.47]]]},\"properties\":{\"id\":1667,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1517,1592,1745,1744,1666,1591]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.35,17.21],[-11.9,16.96],[-11.87,16.57],[-12.35,16.54],[-12.46,16.93],[-12.35,17.21]]]},\"properties\":{\"id\":3040,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2951,2952,3041,3128,3039]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.76,15.9],[-9.93,15.5],[-10.07,15.39],[-10.55,15.9],[-10.55,15.92],[-9.76,15.9]]]},\"properties\":{\"id\":3225,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3132,3226,3316,3224,3130]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.11,15.36],[-9.14,15.34],[-9.79,15.42],[-9.93,15.5],[-9.76,15.9],[-9.7,15.95],[-9.2,15.78],[-9.11,15.36]]]},\"properties\":{\"id\":3226,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3227,3318,3317,3316,3225,3132,3133]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.64,16.01],[4.81,16.01],[4.95,15.42],[4.78,15.25],[4.42,15.28],[4.42,15.31],[4.33,15.78],[4.64,16.01]]]},\"properties\":{\"id\":3252,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3158,3159,3253,3344,3343,3342,3251]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.89,16.12],[5.51,15.92],[5.54,15.78],[5.37,15.39],[4.95,15.42],[4.81,16.01],[4.89,16.12]]]},\"properties\":{\"id\":3253,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[3159,3160,3161,3254,3344,3252]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.71,16.2],[8.13,15.76],[7.88,15.34],[7.73,15.34],[7.48,15.9],[7.71,16.2]]]},\"properties\":{\"id\":3258,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":18000,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3164,3165,3259,3349,3257]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.2,15.03],[-14.48,14.81],[-14.62,14.86],[-14.51,15.48],[-14.09,15.36],[-14.09,15.36],[-14.2,15.03]]]},\"properties\":{\"id\":3308,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3309,3398,3397,3307,3217,3218]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.61,15.62],[8.94,15.34],[8.72,14.95],[8.3,15.03],[8.24,15.11],[8.61,15.62]]]},\"properties\":{\"id\":3350,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":40208,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3259,3260,3351,3440,3349]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.58,15.48],[14.03,15.34],[14.12,14.89],[14.09,14.83],[13.5,14.72],[13.36,14.78],[13.27,14.97],[13.56,15.48],[13.58,15.48]]]},\"properties\":{\"id\":3360,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":24000,\"state\":8,\"province\":114,\"culture\":8,\"religion\":8,\"neighbors\":[3268,3269,3361,3451,3450,3449,3448,3359]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7,15.06],[-6.95,14.36],[-7.09,14.16],[-7.23,14.22],[-7.43,14.64],[-7.06,15.11],[-7,15.06]]]},\"properties\":{\"id\":3411,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":129,\"culture\":7,\"religion\":7,\"neighbors\":[3322,3412,3503,3502,3410,3321]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.47,14.25],[-13.67,13.8],[-13.87,13.8],[-14.23,14.36],[-14.2,14.44],[-14.01,14.47],[-13.47,14.25]]]},\"properties\":{\"id\":3490,\"height\":169,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3399,3491,3577,3489,3397,3398]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.52,13.38],[-15.61,13.29],[-16.31,13.46],[-16.26,13.94],[-16.2,14.02],[-15.75,13.77],[-15.55,13.52],[-15.52,13.38]]]},\"properties\":{\"id\":3573,\"height\":169,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3574,3659,3658,3572,3485,3486,3487]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.07,13.38],[-6.27,13.41],[-6.33,13.46],[-5.93,13.91],[-5.62,13.83],[-5.74,13.43],[-6.07,13.38]]]},\"properties\":{\"id\":3591,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3677,3676,3675,3504,3505,3592]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.18,13.8],[1.63,13.49],[1.57,13.38],[1.07,12.99],[0.87,13.38],[1.07,13.71],[1.18,13.8]]]},\"properties\":{\"id\":3605,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[3517,3518,3691,3690,3689,3604]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.3,13.94],[4.33,13.88],[4.42,13.32],[4.39,13.29],[3.91,13.24],[3.94,13.71],[4.3,13.94]]]},\"properties\":{\"id\":3610,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":16587,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3523,3524,3611,3696,3695,3609]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.29,13.41],[5.6,13.13],[5.51,12.79],[5.37,12.65],[5.01,12.85],[5.06,13.35],[5.29,13.41]]]},\"properties\":{\"id\":3697,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":18000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3612,3613,3698,3781,3780,3696]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.51,12.79],[5.6,13.13],[6.02,13.35],[5.96,12.79],[5.51,12.79]]]},\"properties\":{\"id\":3698,\"height\":169,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3781,3697,3613,3699]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.21,13.27],[8.52,13.29],[8.69,13.04],[8.49,12.65],[8.41,12.62],[8.02,12.79],[8.13,13.24],[8.21,13.27]]]},\"properties\":{\"id\":3703,\"height\":169,\"biome\":12,\"type\":\"island\",\"population\":19000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3617,3618,3619,3704,3786,3785,3702]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.73,12.65],[-16.82,12.26],[-17.32,12.26],[-17.44,12.62],[-17.3,12.87],[-16.73,12.68],[-16.73,12.65]]]},\"properties\":{\"id\":3739,\"height\":169,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3657,3740,3824,3738,3655,3656]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.67,12.18],[14.09,12.37],[14.29,12.18],[14.26,11.87],[13.98,11.7],[13.81,11.76],[13.67,12.18]]]},\"properties\":{\"id\":3881,\"height\":169,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3880,3796,3797,3882,3965,3964]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.31,11.5],[-8.83,10.89],[-9.62,10.83],[-9.59,11.5],[-9.31,11.5]]]},\"properties\":{\"id\":3921,\"height\":169,\"biome\":6,\"type\":\"island\",\"population\":21000,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3838,3922,3920]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.62,37.02],[-10.07,36.82],[-10.55,36.99],[-10.21,37.33],[-9.7,37.24],[-9.62,37.02]]]},\"properties\":{\"id\":105,\"height\":196,\"biome\":2,\"type\":\"island\",\"population\":2000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[106,181,180,104,31]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.72,36.27],[-9.03,36.35],[-9.14,36.96],[-9.08,36.99],[-8.72,37.05],[-8.49,36.8],[-8.49,36.6],[-8.72,36.27]]]},\"properties\":{\"id\":183,\"height\":196,\"biome\":10,\"type\":\"island\",\"population\":40444,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[258,257,182,106,107,108,184]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.14,35.2],[9.08,35.87],[9.42,35.96],[9.53,35.93],[9.7,35.57],[9.17,35.17],[9.14,35.2]]]},\"properties\":{\"id\":368,\"height\":196,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[442,367,290,291,369,443]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.7,35.57],[9.53,35.93],[9.87,36.1],[10.18,35.96],[10.38,35.68],[10.24,35.4],[10.07,35.31],[9.7,35.57]]]},\"properties\":{\"id\":369,\"height\":196,\"biome\":10,\"type\":\"island\",\"population\":22559,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[443,368,291,292,293,370,444]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.66,34.56],[-17.86,34.61],[-17.83,35.17],[-17.63,35.34],[-17.41,35.2],[-17.32,34.78],[-17.66,34.56]]]},\"properties\":{\"id\":393,\"height\":196,\"biome\":2,\"type\":\"island\",\"population\":19631,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[466,465,392,317,318,394]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.64,34.25],[-16.09,34.19],[-16.23,34.33],[-16.26,34.59],[-16.06,34.87],[-15.69,34.78],[-15.61,34.25],[-15.64,34.25]]]},\"properties\":{\"id\":469,\"height\":196,\"biome\":2,\"type\":\"island\",\"population\":20000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[544,543,542,468,395,396,470]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.2,33.83],[-16.76,33.69],[-16.9,33.8],[-16.4,34.28],[-16.23,34.33],[-16.09,34.19],[-16.12,33.94],[-16.2,33.83]]]},\"properties\":{\"id\":542,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[615,614,613,541,468,469,543]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.64,34.25],[-15.58,33.44],[-16.12,33.94],[-16.09,34.19],[-15.64,34.25]]]},\"properties\":{\"id\":543,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[469,544,615,542]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.18,33.16],[-17.58,33.3],[-17.63,33.66],[-17.16,33.69],[-17.18,33.16]]]},\"properties\":{\"id\":612,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":11000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[613,686,611,540]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.2,33.83],[-16.2,33.38],[-16.31,33.3],[-16.65,33.36],[-16.76,33.69],[-16.2,33.83]]]},\"properties\":{\"id\":614,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":29,\"culture\":9,\"religion\":9,\"neighbors\":[542,615,689,688,613]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.44,32.96],[-15.61,33.05],[-15.67,33.19],[-15.58,33.41],[-15.19,33.64],[-14.77,33.22],[-15.33,32.96],[-15.44,32.96]]]},\"properties\":{\"id\":616,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":4,\"province\":29,\"culture\":7,\"religion\":7,\"neighbors\":[690,764,689,615,544,617,691]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.92,31.65],[-16.26,31.42],[-16.71,31.87],[-16.71,32.01],[-16.65,32.04],[-16.48,32.04],[-16.12,31.93],[-15.92,31.65]]]},\"properties\":{\"id\":835,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":29,\"culture\":9,\"religion\":9,\"neighbors\":[836,910,909,834,761,762,763]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.03,31.62],[-7.14,31.65],[-7.03,32.1],[-6.53,32.1],[-6.41,31.56],[-7.03,31.62]]]},\"properties\":{\"id\":853,\"height\":196,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[927,926,852,780,854]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.39,31.01],[-4.7,30.92],[-4.98,31.09],[-5.09,31.4],[-4.87,31.59],[-4.27,31.62],[-4.36,31.12],[-4.39,31.01]]]},\"properties\":{\"id\":931,\"height\":196,\"biome\":9,\"type\":\"island\",\"population\":7992,\"state\":6,\"province\":80,\"culture\":7,\"religion\":7,\"neighbors\":[1005,1004,1003,930,856,857,932]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.79,30.59],[-8.27,30.67],[-8.18,31.09],[-8.07,31.17],[-7.62,30.92],[-7.62,30.73],[-7.79,30.59]]]},\"properties\":{\"id\":998,\"height\":196,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1071,1069,997,924,925,999]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.62,30.36],[-5.88,30.25],[-5.99,30.36],[-6.1,30.84],[-5.68,31.12],[-5.4,30.75],[-5.4,30.7],[-5.62,30.36]]]},\"properties\":{\"id\":1002,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":9025,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[1075,1074,1073,1001,928,930,1003]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.33,30.45],[-13.3,30.03],[-13.67,29.86],[-14.03,30.03],[-14.09,30.05],[-13.56,30.5],[-13.33,30.45]]]},\"properties\":{\"id\":1059,\"height\":196,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[988,1060,1132,1131,1130,987]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.33,30.11],[-4.73,30.14],[-4.22,30.73],[-3.91,30.53],[-4.27,30.14],[-4.33,30.11]]]},\"properties\":{\"id\":1076,\"height\":196,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1149,1148,1004,1005,1077]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.21,30],[1.04,30.61],[1.15,30.78],[1.57,30.42],[1.46,30.11],[1.21,30]]]},\"properties\":{\"id\":1087,\"height\":196,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1159,1086,1014,1015,1088]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.86,29.83],[1.46,30.11],[1.57,30.42],[1.72,30.5],[2.17,30.33],[1.97,29.83],[1.86,29.83]]]},\"properties\":{\"id\":1088,\"height\":196,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1160,1159,1087,1015,1016,1089]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.82,30],[3.8,30.25],[4.33,30.5],[4.42,30.42],[4.44,30.05],[4.33,29.8],[3.82,30]]]},\"properties\":{\"id\":1092,\"height\":196,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1164,1091,1020,1021,1093,1165]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.19,29.3],[-15.69,29.41],[-15.75,29.44],[-15.5,30.08],[-15.07,30],[-15.1,29.44],[-15.19,29.3]]]},\"properties\":{\"id\":1128,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1203,1202,1201,1127,1056,1129]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.2,29.1],[-16.31,28.77],[-16.79,28.71],[-16.96,28.82],[-16.96,28.88],[-16.57,29.33],[-16.2,29.21],[-16.2,29.1]]]},\"properties\":{\"id\":1200,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1201,1274,1273,1272,1198,1199,1126]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.69,29.41],[-15.75,28.77],[-16.2,29.1],[-16.2,29.21],[-15.92,29.47],[-15.75,29.44],[-15.69,29.41]]]},\"properties\":{\"id\":1201,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1128,1202,1274,1200,1126,1127]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.52,28.96],[-8.69,28.43],[-9.2,29.05],[-9.11,29.3],[-9.03,29.41],[-8.83,29.38],[-8.52,28.96]]]},\"properties\":{\"id\":1214,\"height\":196,\"biome\":6,\"type\":\"island\",\"population\":8029,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1215,1288,1287,1213,1139,1140]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.78,29.33],[-4.61,29.05],[-5.06,28.82],[-5.12,28.88],[-5.26,29.21],[-4.78,29.33]]]},\"properties\":{\"id\":1221,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1147,1222,1295,1294,1220]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.46,29.02],[5.54,29.38],[5.65,29.44],[5.71,29.47],[6.13,29.3],[6.13,28.88],[5.63,28.79],[5.46,29.02]]]},\"properties\":{\"id\":1241,\"height\":196,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1313,1240,1166,1167,1168,1242,1314]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.27,28.93],[-15.19,28.35],[-15.83,28.4],[-15.75,28.71],[-15.27,28.93]]]},\"properties\":{\"id\":1275,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1202,1276,1349,1274]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.74,28.79],[-10.8,28.32],[-11.22,28.32],[-11.36,28.82],[-11.19,28.96],[-10.86,28.96],[-10.74,28.79]]]},\"properties\":{\"id\":1283,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1211,1284,1357,1282,1209,1210]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.91,28.15],[-4.39,28.35],[-4.42,28.38],[-4.25,28.82],[-3.88,28.74],[-3.57,28.32],[-3.57,28.26],[-3.91,28.15]]]},\"properties\":{\"id\":1296,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":12431,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1371,1370,1369,1295,1223,1297,1372]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.73,27.98],[-11.92,27.56],[-12.46,27.93],[-12.32,28.29],[-11.87,28.24],[-11.7,28.12],[-11.73,27.98]]]},\"properties\":{\"id\":1355,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1356,1429,1428,1354,1281,1282]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.65,27.79],[-9.76,27.51],[-10.24,27.82],[-9.93,28.21],[-9.67,28.21],[-9.65,27.79]]]},\"properties\":{\"id\":1359,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1360,1433,1432,1358,1285]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.42,27.59],[-4.92,27.82],[-4.98,28.21],[-4.87,28.35],[-4.42,28.38],[-4.39,28.35],[-4.42,27.59]]]},\"properties\":{\"id\":1369,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1370,1442,1368,1294,1295,1296]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.59,26.16],[-2.62,26.16],[-2.92,26.11],[-3.07,26.22],[-3.09,26.5],[-2.56,26.81],[-2.39,26.72],[-2.59,26.16]]]},\"properties\":{\"id\":1595,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":14432,\"state\":6,\"province\":59,\"culture\":7,\"religion\":11,\"neighbors\":[1596,1671,1670,1669,1594,1520,1521]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.79,25.69],[-5.91,25.61],[-6.38,25.75],[-6.33,26.25],[-5.82,26.28],[-5.71,26.19],[-5.79,25.69]]]},\"properties\":{\"id\":1664,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1665,1743,1742,1663,1589,1590]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.06,25.19],[-7.4,25.1],[-7.62,25.21],[-7.65,25.66],[-7.14,25.83],[-6.92,25.49],[-7.06,25.19]]]},\"properties\":{\"id\":1740,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1741,1816,1815,1739,1662,1663]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.91,25.61],[-5.85,25.13],[-6.24,25.19],[-6.44,25.66],[-6.38,25.75],[-5.91,25.61]]]},\"properties\":{\"id\":1742,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1664,1743,1818,1741,1663]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.14,15.9],[7.48,15.9],[7.73,15.34],[7.62,15.25],[6.95,15.62],[7,15.81],[7.14,15.9]]]},\"properties\":{\"id\":3257,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":17000,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3163,3164,3258,3349,3348,3256]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.42,15.28],[4.78,15.25],[4.84,14.86],[4.81,14.78],[4.05,14.92],[4.08,14.95],[4.42,15.28]]]},\"properties\":{\"id\":3343,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3342,3252,3344,3434,3433,3341]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.95,15.42],[5.37,15.39],[5.43,15.31],[5.37,14.81],[4.84,14.86],[4.78,15.25],[4.95,15.42]]]},\"properties\":{\"id\":3344,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":6158,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3252,3253,3254,3345,3434,3343]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.84,14.81],[-10.21,14.27],[-10.27,14.22],[-10.52,14.39],[-10.55,14.67],[-10.32,15.11],[-10.18,15.14],[-9.84,14.81]]]},\"properties\":{\"id\":3405,\"height\":196,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3316,3406,3497,3496,3404,3315,3224]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.87,14.36],[-16.62,13.99],[-16.87,13.83],[-17.24,13.94],[-17.21,14.25],[-16.87,14.36]]]},\"properties\":{\"id\":3484,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3393,3485,3572,3571,3483]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.22,14.39],[-6.19,14.33],[-6.55,13.88],[-7.03,13.99],[-7.09,14.16],[-6.95,14.36],[-6.53,14.55],[-6.22,14.39]]]},\"properties\":{\"id\":3503,\"height\":196,\"biome\":6,\"type\":\"island\",\"population\":8166,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3413,3414,3504,3590,3502,3411,3412]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.62,14.25],[8.24,14.27],[8.38,14.19],[8.33,13.94],[8.24,13.8],[7.59,13.69],[7.57,13.77],[7.62,14.25]]]},\"properties\":{\"id\":3530,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":22000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3529,3439,3440,3531,3618,3617,3616]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.42,13.32],[4.89,13.49],[5.06,13.35],[5.01,12.85],[4.64,12.71],[4.39,13.29],[4.42,13.32]]]},\"properties\":{\"id\":3696,\"height\":196,\"biome\":4,\"type\":\"island\",\"population\":29732,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3610,3611,3612,3697,3780,3695]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.94,12.59],[-17.86,12.2],[-18.37,12.09],[-18.48,12.37],[-18.31,12.48],[-17.94,12.59]]]},\"properties\":{\"id\":3737,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3654,3738,3822,3821,3653]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.62,11.67],[-18.82,11.5],[-19.35,11.64],[-19.24,12.04],[-18.9,12.09],[-18.62,11.67]]]},\"properties\":{\"id\":3820,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3821,3904,3903,3819,3735]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.11,11.62],[-17.38,10.97],[-17.63,10.72],[-18.23,10.92],[-18.11,11.62],[-18.11,11.62]]]},\"properties\":{\"id\":3905,\"height\":196,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3822,3906,3904]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.91,36.38],[-20.48,36.24],[-20.67,36.41],[-20.36,36.85],[-20,36.77],[-19.97,36.74],[-19.91,36.38]]]},\"properties\":{\"id\":162,\"height\":225,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":46,\"culture\":9,\"religion\":9,\"neighbors\":[163,236,235,161,86,87]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.85,34.81],[-17.3,34.78],[-17.32,34.78],[-17.41,35.2],[-17.24,35.29],[-16.65,35.12],[-16.68,34.95],[-16.85,34.81]]]},\"properties\":{\"id\":394,\"height\":225,\"biome\":2,\"type\":\"island\",\"population\":32650,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[468,467,466,393,318,319,395]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.81,34.78],[-4.92,34.84],[-4.75,35.4],[-4.64,35.43],[-4.3,35.2],[-4.56,34.78],[-4.81,34.78]]]},\"properties\":{\"id\":417,\"height\":225,\"biome\":10,\"type\":\"island\",\"population\":15105,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[490,489,416,341,342,418]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.9,34.78],[-1.57,34.7],[-1.57,35.23],[-1.46,35.34],[-1.18,35.4],[-0.82,34.84],[-0.9,34.78]]]},\"properties\":{\"id\":423,\"height\":225,\"biome\":10,\"type\":\"island\",\"population\":20000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[497,496,422,347,348,424]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.31,34.28],[2.14,33.97],[1.6,34.31],[1.69,34.67],[2.08,34.7],[2.31,34.28]]]},\"properties\":{\"id\":502,\"height\":225,\"biome\":9,\"type\":\"island\",\"population\":17000,\"state\":10,\"province\":136,\"culture\":4,\"religion\":4,\"neighbors\":[503,577,576,501,429]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.19,34.28],[4.39,34.78],[4.42,34.81],[4.81,34.64],[5.06,34.17],[4.56,34.05],[4.19,34.28]]]},\"properties\":{\"id\":507,\"height\":225,\"biome\":11,\"type\":\"island\",\"population\":36128,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[580,506,433,434,508,581]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.16,33.69],[-17.63,33.66],[-17.75,33.78],[-17.66,34.11],[-17.61,34.19],[-17.13,34.11],[-16.99,33.83],[-17.16,33.69]]]},\"properties\":{\"id\":540,\"height\":225,\"biome\":2,\"type\":\"island\",\"population\":6745,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[613,612,611,539,465,466,541]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.4,34.28],[-16.9,33.8],[-16.99,33.83],[-17.13,34.11],[-17.07,34.25],[-16.82,34.39],[-16.4,34.28]]]},\"properties\":{\"id\":541,\"height\":225,\"biome\":3,\"type\":\"island\",\"population\":14000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[468,542,613,540,466,467]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.67,32.49],[-13.89,32.52],[-14.06,32.77],[-14.06,32.85],[-13.78,33.19],[-13.64,33.22],[-13.56,33.13],[-13.3,32.66],[-13.67,32.49]]]},\"properties\":{\"id\":693,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[768,767,766,692,618,619,620,694]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.76,31.59],[-10.01,31.59],[-10.29,32.01],[-10.24,32.07],[-9.87,32.21],[-9.76,31.59]]]},\"properties\":{\"id\":847,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[848,921,846,773,774]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.71,31.87],[-16.26,31.42],[-16.42,31.12],[-16.79,31.42],[-16.71,31.87]]]},\"properties\":{\"id\":909,\"height\":225,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":4,\"province\":29,\"culture\":9,\"religion\":9,\"neighbors\":[834,835,910,908]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.18,31.09],[-8.58,31.26],[-8.61,31.45],[-8.47,31.68],[-8.1,31.65],[-7.99,31.59],[-8.07,31.17],[-8.18,31.09]]]},\"properties\":{\"id\":924,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":12868,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[998,997,923,849,850,851,925]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.12,31.42],[-5.09,31.4],[-4.98,31.09],[-5.4,30.75],[-5.68,31.12],[-5.65,31.12],[-5.12,31.42]]]},\"properties\":{\"id\":930,\"height\":225,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":80,\"culture\":7,\"religion\":7,\"neighbors\":[929,856,931,1003,1002,928]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.36,31.12],[-2.7,31.56],[-2.64,31.87],[-2.19,31.37],[-2.28,31.15],[-2.33,31.12],[-2.36,31.12]]]},\"properties\":{\"id\":935,\"height\":225,\"biome\":9,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1008,934,860,861,936,1009]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.2,31.2],[9.2,31.37],[9.62,31.51],[9.73,31.12],[9.73,31.09],[9.39,30.95],[9.2,31.2]]]},\"properties\":{\"id\":957,\"height\":225,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1029,956,883,958,1032,1030]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.62,31.51],[9.73,31.68],[9.87,31.62],[10.01,31.17],[9.73,31.12],[9.62,31.51]]]},\"properties\":{\"id\":958,\"height\":225,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[957,883,884,959,1032]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.38,30.39],[-12.74,30.31],[-13.05,30.61],[-12.99,31.03],[-12.91,31.09],[-12.66,31.01],[-12.26,30.56],[-12.38,30.39]]]},\"properties\":{\"id\":989,\"height\":225,\"biome\":6,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1062,1061,1060,988,915,916,990]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.31,30.67],[-0.08,30.45],[-0.39,30.45],[-0.31,31.06],[-0.06,31.2],[0.25,30.95],[0.31,30.67]]]},\"properties\":{\"id\":1012,\"height\":225,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1013,1085,1084,1011,939,940]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.37,30.7],[9.39,30.95],[9.73,31.09],[9.9,30.75],[9.79,30.59],[9.37,30.7],[9.37,30.7]]]},\"properties\":{\"id\":1030,\"height\":225,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1101,1029,957,1032,1033,1031]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.37,30.25],[9.37,30.7],[9.79,30.59],[9.84,30.45],[9.82,30.14],[9.73,30.14],[9.37,30.25]]]},\"properties\":{\"id\":1031,\"height\":225,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1102,1101,1030,1033,1103,1174]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.38,29.94],[-17.49,29.97],[-17.97,30.42],[-17.75,30.67],[-17.24,30.56],[-17.1,30.42],[-17.3,30],[-17.38,29.94]]]},\"properties\":{\"id\":1052,\"height\":225,\"biome\":1,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":29,\"culture\":7,\"religion\":7,\"neighbors\":[1125,1124,1051,979,980,981,1053]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.54,29.83],[-16.73,29.63],[-17.3,30],[-17.1,30.42],[-16.73,30.5],[-16.71,30.5],[-16.54,29.83]]]},\"properties\":{\"id\":1053,\"height\":225,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1054,1126,1125,1052,981,982]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.01,29.91],[-12.15,29.89],[-12.38,30.39],[-12.26,30.56],[-11.98,30.67],[-11.67,30.53],[-12.01,29.91]]]},\"properties\":{\"id\":1062,\"height\":225,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1063,1134,1061,989,990,991]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.52,30.22],[-9.06,29.52],[-9.2,29.77],[-8.92,30.47],[-8.63,30.47],[-8.52,30.22]]]},\"properties\":{\"id\":1068,\"height\":225,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1069,1140,1139,1067,996]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.79,30.36],[-8.1,30.05],[-8.41,30.14],[-8.52,30.22],[-8.63,30.47],[-8.58,30.53],[-8.27,30.67],[-7.79,30.59],[-7.79,30.36]]]},\"properties\":{\"id\":1069,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":7071,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1071,1070,1141,1140,1068,996,997,998]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.34,29.97],[0.34,29.94],[-0.45,29.83],[-0.45,30.42],[-0.39,30.45],[-0.08,30.45],[0.34,29.97]]]},\"properties\":{\"id\":1084,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1085,1158,1156,1083,1011,1012]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.78,29.33],[-5.26,29.21],[-5.37,29.35],[-5.32,29.61],[-4.87,30],[-4.84,30],[-4.64,29.66],[-4.78,29.33]]]},\"properties\":{\"id\":1147,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[1222,1221,1220,1146,1074,1075,1148]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.88,28.74],[-4.25,28.82],[-4.27,28.99],[-4.11,29.38],[-4.05,29.41],[-3.83,29.49],[-3.74,29.41],[-3.74,28.85],[-3.88,28.74]]]},\"properties\":{\"id\":1223,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1297,1296,1295,1222,1148,1149,1150,1224]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.43,28.54],[-12.99,28.46],[-12.99,29.1],[-12.43,28.96],[-12.4,28.82],[-12.43,28.54]]]},\"properties\":{\"id\":1280,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1281,1354,1279,1207,1208]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.4,26.36],[-8.02,26.14],[-8.24,26.33],[-8.16,26.53],[-7.48,26.61],[-7.4,26.36]]]},\"properties\":{\"id\":1586,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1587,1661,1660,1585,1511]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.76,17.04],[-11.39,16.85],[-11.36,16.71],[-11.78,16.51],[-11.87,16.57],[-11.9,16.96],[-11.76,17.04]]]},\"properties\":{\"id\":3041,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[2952,2953,3042,3129,3128,3040]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.58,15.28],[-13.56,15.03],[-13.84,14.89],[-14.2,15.03],[-14.09,15.36],[-13.58,15.28]]]},\"properties\":{\"id\":3309,\"height\":225,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3218,3310,3399,3398,3308]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.3,14.47],[-13.36,14.33],[-13.47,14.25],[-14.01,14.47],[-13.84,14.89],[-13.56,15.03],[-13.36,14.83],[-13.3,14.47]]]},\"properties\":{\"id\":3399,\"height\":225,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3400,3401,3491,3490,3398,3309,3310]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.18,14.86],[1.52,14.75],[1.52,14.33],[1.41,14.13],[1.24,14.05],[1.04,14.25],[1.15,14.83],[1.18,14.86]]]},\"properties\":{\"id\":3427,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[3336,3337,3428,3519,3518,3517,3426]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.4,14.75],[5.96,14.81],[5.88,14.27],[5.88,14.27],[5.63,14.22],[5.37,14.44],[5.4,14.75]]]},\"properties\":{\"id\":3435,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3434,3345,3436,3527,3526,3525]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.82,14.61],[10.29,14.72],[10.46,14.67],[10.69,14.41],[10.66,14.33],[10.52,14.16],[9.84,14.16],[9.79,14.41],[9.82,14.61]]]},\"properties\":{\"id\":3443,\"height\":225,\"biome\":12,\"type\":\"island\",\"population\":24000,\"state\":12,\"province\":155,\"culture\":8,\"religion\":10,\"neighbors\":[3442,3353,3354,3444,3445,3535,3534,3533]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.97,14.33],[13.36,14.78],[13.5,14.72],[13.64,14.27],[13.58,14.22],[12.99,14.27],[12.97,14.33]]]},\"properties\":{\"id\":3449,\"height\":225,\"biome\":6,\"type\":\"island\",\"population\":19079,\"state\":8,\"province\":127,\"culture\":8,\"religion\":8,\"neighbors\":[3539,3448,3360,3450,3541,3540]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.44,14.33],[-15.75,13.77],[-16.2,14.02],[-16.14,14.22],[-16.06,14.33],[-15.47,14.36],[-15.44,14.33]]]},\"properties\":{\"id\":3486,\"height\":225,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3396,3487,3573,3485,3394,3395]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.39,13.69],[0.76,13.38],[0.51,13.21],[0.06,13.29],[0.08,13.71],[0.39,13.69]]]},\"properties\":{\"id\":3603,\"height\":225,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":170,\"culture\":8,\"religion\":8,\"neighbors\":[3516,3604,3689,3688,3602]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.1,12.79],[-14.6,12.68],[-14.62,12.2],[-15.1,12.2],[-15.36,12.57],[-15.1,12.79]]]},\"properties\":{\"id\":3743,\"height\":225,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3659,3660,3744,3828,3742]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.73,10.78],[-18.73,10.78],[-19.49,10.89],[-19.52,11.56],[-19.35,11.64],[-18.82,11.5],[-18.73,10.78]]]},\"properties\":{\"id\":3903,\"height\":225,\"biome\":3,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3904,3902,3819,3820]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.52,36.15],[-19.86,36.32],[-19.91,36.38],[-19.97,36.74],[-19.52,36.82],[-19.32,36.49],[-19.52,36.15]]]},\"properties\":{\"id\":163,\"height\":256,\"biome\":2,\"type\":\"island\",\"population\":15000,\"state\":4,\"province\":46,\"culture\":9,\"religion\":9,\"neighbors\":[238,237,236,162,87,164]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.31,36.24],[-9.59,36.46],[-9.65,36.52],[-9.59,36.99],[-9.14,36.96],[-9.03,36.35],[-9.31,36.24]]]},\"properties\":{\"id\":182,\"height\":256,\"biome\":10,\"type\":\"island\",\"population\":25340,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[257,256,255,181,106,183]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.71,36.43],[-4.25,36.29],[-4.44,36.49],[-4.19,36.85],[-3.77,36.66],[-3.71,36.46],[-3.71,36.43]]]},\"properties\":{\"id\":192,\"height\":256,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":1,\"province\":12,\"culture\":4,\"religion\":12,\"neighbors\":[267,266,265,191,116,193]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.8,35.26],[-2.08,35.48],[-2,36.04],[-1.97,36.04],[-1.88,36.04],[-1.57,35.76],[-1.46,35.34],[-1.57,35.23],[-1.8,35.26]]]},\"properties\":{\"id\":347,\"height\":256,\"biome\":10,\"type\":\"island\",\"population\":20000,\"state\":1,\"province\":1,\"culture\":4,\"religion\":12,\"neighbors\":[422,421,346,196,270,271,348,423]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.8,35.26],[-2.31,34.92],[-2.39,34.89],[-2.59,35.4],[-2.59,35.4],[-2.08,35.48],[-1.8,35.26]]]},\"properties\":{\"id\":421,\"height\":256,\"biome\":11,\"type\":\"island\",\"population\":14000,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[347,422,495,420,345,346]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.73,33.86],[7.71,34.08],[8.24,34.45],[8.27,34.39],[8.1,33.83],[7.73,33.86]]]},\"properties\":{\"id\":587,\"height\":256,\"biome\":9,\"type\":\"island\",\"population\":10000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[659,586,513,514,588]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.61,33.05],[-15.95,32.71],[-16.34,32.8],[-16.31,33.3],[-16.2,33.38],[-15.67,33.19],[-15.61,33.05]]]},\"properties\":{\"id\":689,\"height\":256,\"biome\":3,\"type\":\"island\",\"population\":9170,\"state\":4,\"province\":29,\"culture\":9,\"religion\":9,\"neighbors\":[616,764,762,688,614,615]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.43,31.56],[-7.48,31.56],[-7.62,32.24],[-7.51,32.4],[-7.09,32.26],[-7.03,32.1],[-7.14,31.65],[-7.43,31.56]]]},\"properties\":{\"id\":852,\"height\":256,\"biome\":9,\"type\":\"island\",\"population\":21000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[926,925,851,778,779,780,853]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.68,31.12],[-6.1,30.84],[-6.36,30.98],[-6.44,31.15],[-6.38,31.54],[-5.91,31.62],[-5.65,31.12],[-5.68,31.12]]]},\"properties\":{\"id\":928,\"height\":256,\"biome\":9,\"type\":\"island\",\"population\":7883,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[930,1002,1001,1000,927,854,929]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.01,31.17],[9.87,31.62],[10.29,31.68],[10.35,31.28],[10.35,31.28],[10.04,31.17],[10.01,31.17]]]},\"properties\":{\"id\":959,\"height\":256,\"biome\":10,\"type\":\"island\",\"population\":3000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1032,958,884,887,960,961]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.53,29.94],[-9.84,29.77],[-10.12,29.94],[-10.18,30.08],[-10.12,30.42],[-9.87,30.47],[-9.56,30.28],[-9.53,29.94]]]},\"properties\":{\"id\":1066,\"height\":256,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1067,1139,1138,1137,1065,994,995]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.2,29.77],[-9.53,29.94],[-9.56,30.28],[-9.06,30.56],[-8.92,30.47],[-9.2,29.77]]]},\"properties\":{\"id\":1067,\"height\":256,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1068,1139,1066,995,996]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.97,29.83],[2.17,30.33],[2.42,30.47],[2.67,30.36],[2.67,30.03],[2.62,29.8],[2.19,29.66],[1.97,29.83]]]},\"properties\":{\"id\":1089,\"height\":256,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1160,1088,1016,1017,1090,1162,1161]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.56,29.47],[-13.89,29.21],[-13.92,29.27],[-14.03,30.03],[-13.67,29.86],[-13.56,29.47]]]},\"properties\":{\"id\":1131,\"height\":256,\"biome\":6,\"type\":\"island\",\"population\":12569,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[1132,1205,1204,1130,1059]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.37,29.35],[-5.74,29.24],[-6.07,29.89],[-5.91,30.08],[-5.32,29.61],[-5.37,29.35]]]},\"properties\":{\"id\":1146,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1147,1220,1145,1073,1074]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.57,29.33],[-16.96,28.88],[-17.24,29.24],[-16.73,29.58],[-16.57,29.33]]]},\"properties\":{\"id\":1199,\"height\":256,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1126,1200,1198,1125]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.24,28.35],[-8.61,28.35],[-8.66,28.38],[-8.69,28.43],[-8.52,28.96],[-7.99,28.99],[-7.87,28.85],[-7.99,28.46],[-8.24,28.35]]]},\"properties\":{\"id\":1288,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":8970,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1363,1362,1361,1287,1214,1215,1216,1289]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.88,28.04],[-5.96,28.01],[-6.3,28.29],[-6.36,28.46],[-6.07,28.82],[-5.65,28.35],[-5.65,28.26],[-5.88,28.04]]]},\"properties\":{\"id\":1292,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1367,1439,1366,1365,1291,1293,1294]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.98,28.21],[-5.37,28.15],[-5.65,28.26],[-5.65,28.35],[-5.4,28.74],[-5.12,28.88],[-5.06,28.82],[-4.87,28.35],[-4.98,28.21]]]},\"properties\":{\"id\":1294,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1369,1368,1367,1292,1293,1220,1221,1295]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.36,28.46],[-6.3,28.29],[-6.55,27.84],[-6.78,27.9],[-6.86,27.98],[-6.92,28.38],[-6.92,28.43],[-6.36,28.46]]]},\"properties\":{\"id\":1365,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1291,1292,1366,1438,1437,1364,1290]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.85,27.4],[-12.97,27.2],[-13.39,27.48],[-13.36,27.62],[-13.02,27.93],[-12.68,27.76],[-12.85,27.4]]]},\"properties\":{\"id\":1426,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1427,1502,1501,1425,1353,1354]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.68,27.76],[-12.23,27.2],[-12.26,27.14],[-12.85,27.4],[-12.68,27.76],[-12.68,27.76]]]},\"properties\":{\"id\":1427,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1354,1428,1503,1502,1426]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.48,27.2],[-5.79,27.03],[-5.99,27.06],[-6.19,27.42],[-5.71,27.65],[-5.46,27.48],[-5.46,27.26],[-5.48,27.2]]]},\"properties\":{\"id\":1440,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1516,1515,1589,1514,1439,1367,1441]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.39,26.72],[-2.56,26.81],[-2.78,27.12],[-2.76,27.26],[-2.31,27.45],[-2.11,27],[-2.25,26.75],[-2.39,26.72]]]},\"properties\":{\"id\":1521,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":11,\"neighbors\":[1596,1595,1520,1445,1446,1447,1522]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.82,26.28],[-6.33,26.25],[-6.44,26.36],[-6.47,26.67],[-5.99,27.06],[-5.79,27.03],[-5.71,26.72],[-5.82,26.28]]]},\"properties\":{\"id\":1589,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":9000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1590,1664,1663,1588,1514,1440,1515]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.47,16.54],[-13.61,16.37],[-14.03,16.6],[-13.87,16.93],[-13.5,16.96],[-13.47,16.54]]]},\"properties\":{\"id\":3037,\"height\":256,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3038,3126,3125,3036,2949]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.35,16.54],[-12.4,16.48],[-12.85,16.32],[-12.99,16.51],[-12.97,16.88],[-12.46,16.93],[-12.35,16.54]]]},\"properties\":{\"id\":3039,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3040,3128,3127,3126,3038,2951]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.82,16.46],[-9.7,15.95],[-9.76,15.9],[-10.55,15.92],[-10.55,16.04],[-10.38,16.32],[-10.04,16.54],[-9.82,16.46]]]},\"properties\":{\"id\":3132,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3044,3133,3226,3225,3130,3131,3043]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.65,15.67],[-15.1,15.28],[-15.41,15.5],[-15.13,15.95],[-14.77,15.92],[-14.65,15.81],[-14.65,15.67]]]},\"properties\":{\"id\":3216,\"height\":256,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3217,3307,3306,3215,3123,3124]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.99,14.75],[-8.02,14.72],[-8.61,14.72],[-8.66,14.83],[-8.66,15.28],[-8.61,15.31],[-8.04,15.08],[-7.99,14.75]]]},\"properties\":{\"id\":3319,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":10094,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3320,3410,3409,3408,3318,3227,3228]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.5,14.83],[-15.47,14.36],[-16.06,14.33],[-16.12,14.72],[-16.03,14.89],[-15.78,15.06],[-15.5,14.83]]]},\"properties\":{\"id\":3395,\"height\":256,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3306,3396,3486,3394,3304,3305]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.27,14.22],[-10.32,13.83],[-10.74,13.8],[-11.02,14.33],[-10.52,14.39],[-10.27,14.22]]]},\"properties\":{\"id\":3496,\"height\":256,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3405,3497,3583,3495,3404]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.19,14.33],[-5.93,13.91],[-6.33,13.46],[-6.36,13.49],[-6.55,13.88],[-6.19,14.33],[-6.19,14.33]]]},\"properties\":{\"id\":3504,\"height\":256,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3414,3505,3591,3675,3590,3503]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.4,14.25],[-5.4,14.25],[-5.48,13.88],[-5.62,13.83],[-5.93,13.91],[-6.19,14.33],[-5.4,14.25]]]},\"properties\":{\"id\":3505,\"height\":256,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3414,3415,3506,3592,3591,3504]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.88,14.27],[5.88,14.27],[6.52,14.44],[6.61,14.39],[6.52,13.99],[6.19,13.85],[5.88,14.27]]]},\"properties\":{\"id\":3527,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3526,3435,3436,3437,3528,3614]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.29,13.77],[-10.29,13.32],[-10.86,13.32],[-11,13.43],[-10.86,13.71],[-10.74,13.8],[-10.32,13.83],[-10.29,13.77]]]},\"properties\":{\"id\":3583,\"height\":256,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3497,3584,3668,3667,3582,3495,3496]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.3,12.87],[-17.44,12.62],[-17.92,12.68],[-18.03,13.15],[-17.32,13.15],[-17.3,12.87]]]},\"properties\":{\"id\":3655,\"height\":256,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3656,3739,3738,3654,3570]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.61,13.29],[-15.72,12.79],[-16.17,12.87],[-16.4,13.38],[-16.31,13.46],[-15.61,13.29]]]},\"properties\":{\"id\":3658,\"height\":256,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3573,3659,3741,3657,3572]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.57,13.38],[1.69,12.79],[1.1,12.85],[1.07,12.99],[1.57,13.38]]]},\"properties\":{\"id\":3690,\"height\":256,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":170,\"culture\":8,\"religion\":8,\"neighbors\":[3605,3691,3773,3689]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.69,13.04],[9.11,13.01],[9.17,12.9],[9.08,12.59],[8.94,12.51],[8.49,12.65],[8.69,13.04]]]},\"properties\":{\"id\":3704,\"height\":256,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3703,3619,3705,3788,3787,3786]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[13.47,12.59],[14.12,12.73],[14.15,12.68],[14.09,12.37],[13.67,12.18],[13.56,12.26],[13.44,12.54],[13.47,12.59]]]},\"properties\":{\"id\":3796,\"height\":256,\"biome\":12,\"type\":\"island\",\"population\":14760,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3712,3713,3714,3797,3881,3880,3795]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[14.15,12.68],[14.54,12.59],[14.54,12.29],[14.29,12.18],[14.09,12.37],[14.15,12.68]]]},\"properties\":{\"id\":3797,\"height\":256,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":112,\"culture\":8,\"religion\":8,\"neighbors\":[3796,3714,3798,3882,3881]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.81,11],[12.15,11.56],[12.49,11.62],[12.63,11.45],[12.66,10.94],[12.12,10.69],[11.81,11]]]},\"properties\":{\"id\":3961,\"height\":256,\"biome\":12,\"type\":\"island\",\"population\":4000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3960,3878,3879,3962]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.38,37.47],[-12.82,37.55],[-12.71,38.08],[-12.6,38.11],[-12.35,37.55],[-12.38,37.47]]]},\"properties\":{\"id\":26,\"height\":289,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[101,100,25,27]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.79,36.24],[-7.93,36.21],[-7.96,36.24],[-7.99,36.94],[-7.99,36.94],[-7.59,36.74],[-7.48,36.6],[-7.79,36.24]]]},\"properties\":{\"id\":185,\"height\":289,\"biome\":10,\"type\":\"island\",\"population\":16316,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[260,259,258,184,108,109,186]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.83,35.17],[-18.14,35.15],[-18.42,35.48],[-18.28,35.82],[-18.28,35.82],[-17.8,35.85],[-17.63,35.34],[-17.83,35.17]]]},\"properties\":{\"id\":317,\"height\":289,\"biome\":2,\"type\":\"island\",\"population\":24000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[393,392,391,316,239,240,318]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.41,35.2],[-17.63,35.34],[-17.8,35.85],[-17.77,35.87],[-17.04,35.85],[-16.93,35.76],[-17.24,35.29],[-17.41,35.2]]]},\"properties\":{\"id\":318,\"height\":289,\"biome\":2,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[394,393,317,240,241,242,319]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.88,35.4],[-6.3,35.23],[-6.53,35.71],[-6.02,35.82],[-5.93,35.71],[-5.88,35.4]]]},\"properties\":{\"id\":339,\"height\":289,\"biome\":9,\"type\":\"island\",\"population\":19936,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[340,414,338,262,263]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.6,34.64],[-2.31,34.92],[-1.8,35.26],[-1.57,35.23],[-1.57,34.7],[-1.6,34.64]]]},\"properties\":{\"id\":422,\"height\":289,\"biome\":9,\"type\":\"island\",\"population\":4069,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[496,495,421,347,423]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.66,34.11],[-18.31,34.28],[-18.39,34.39],[-18.34,34.56],[-17.86,34.61],[-17.66,34.56],[-17.61,34.19],[-17.66,34.11]]]},\"properties\":{\"id\":465,\"height\":289,\"biome\":2,\"type\":\"island\",\"population\":17000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[540,539,538,464,392,393,466]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.4,34.28],[-16.82,34.39],[-16.85,34.81],[-16.68,34.95],[-16.26,34.59],[-16.23,34.33],[-16.4,34.28]]]},\"properties\":{\"id\":468,\"height\":289,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[542,541,467,394,395,469]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.56,34.31],[0.56,34.59],[1.24,34.75],[1.1,34.19],[0.56,34.31]]]},\"properties\":{\"id\":500,\"height\":289,\"biome\":10,\"type\":\"island\",\"population\":13000,\"state\":10,\"province\":139,\"culture\":4,\"religion\":4,\"neighbors\":[574,499,427,501]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.69,34.31],[6.89,34.67],[7.26,34.17],[7.03,33.97],[6.69,34.31]]]},\"properties\":{\"id\":511,\"height\":289,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[585,510,512,586]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.76,34.33],[-2.76,33.72],[-3.12,33.69],[-3.26,34.36],[-3.21,34.47],[-3.15,34.5],[-2.76,34.33]]]},\"properties\":{\"id\":567,\"height\":289,\"biome\":9,\"type\":\"island\",\"population\":17000,\"state\":1,\"province\":9,\"culture\":4,\"religion\":12,\"neighbors\":[493,568,639,566,492,419]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.08,32.63],[-13.3,32.66],[-13.56,33.13],[-13.02,33.16],[-12.99,33.16],[-13.08,32.63]]]},\"properties\":{\"id\":694,\"height\":289,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[695,768,693,620,621]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.33,32.15],[-15.83,31.59],[-15.92,31.65],[-16.12,31.93],[-15.75,32.29],[-15.33,32.15]]]},\"properties\":{\"id\":836,\"height\":289,\"biome\":3,\"type\":\"island\",\"population\":4803,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[764,837,910,835,763]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.7,31.56],[-9.76,31.59],[-9.87,32.21],[-9.76,32.46],[-9.65,32.49],[-9.14,32.07],[-9.37,31.59],[-9.7,31.56]]]},\"properties\":{\"id\":848,\"height\":289,\"biome\":9,\"type\":\"island\",\"population\":8851,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[922,921,847,774,700,775,849]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.33,30.56],[-11.36,30.56],[-11.84,31.4],[-11.76,31.54],[-11.67,31.56],[-11.33,31.37],[-11.22,31.06],[-11.33,30.56]]]},\"properties\":{\"id\":918,\"height\":289,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[992,1064,991,917,844,845,919]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.67,31.09],[4.95,31.54],[5.29,31.42],[5.29,31.17],[4.87,30.89],[4.67,31.09]]]},\"properties\":{\"id\":949,\"height\":289,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1021,948,875,950,1022]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.1,30.47],[-15.69,30.5],[-15.72,30.53],[-15.61,30.87],[-15.02,30.87],[-15.1,30.47]]]},\"properties\":{\"id\":984,\"height\":289,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[985,1056,1055,983,911]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.12,30.47],[2.95,30.5],[2.84,31.09],[3.26,30.92],[3.12,30.47]]]},\"properties\":{\"id\":1018,\"height\":289,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1019,1090,1017,945]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.12,30.47],[3.26,30.92],[3.43,31.09],[3.82,30.92],[3.57,30.45],[3.23,30.42],[3.12,30.47]]]},\"properties\":{\"id\":1019,\"height\":289,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1090,1018,945,946,1020,1091]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.58,30.17],[-16.12,29.86],[-16.2,30.39],[-16.03,30.5],[-15.72,30.53],[-15.69,30.5],[-15.58,30.17]]]},\"properties\":{\"id\":1055,\"height\":289,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1056,1127,1054,982,983,984]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.29,29.91],[-14.99,30.08],[-14.99,30.14],[-14.68,30.45],[-14.12,30.05],[-14.29,29.91]]]},\"properties\":{\"id\":1057,\"height\":289,\"biome\":4,\"type\":\"island\",\"population\":4874,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[1130,1129,1056,985,1058]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.69,30.03],[-10.83,29.83],[-11.36,30.25],[-11.39,30.53],[-11.36,30.56],[-11.33,30.56],[-10.77,30.56],[-10.69,30.03]]]},\"properties\":{\"id\":1064,\"height\":289,\"biome\":6,\"type\":\"island\",\"population\":19263,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1065,1137,1136,1063,991,918,992]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.7,30.19],[-2.84,30.08],[-3.52,30.5],[-3.15,30.67],[-2.7,30.19]]]},\"properties\":{\"id\":1079,\"height\":289,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1007,1152,1078,1006]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.43,29.58],[-15.1,29.44],[-15.07,30],[-14.99,30.08],[-14.29,29.91],[-14.37,29.63],[-14.43,29.58]]]},\"properties\":{\"id\":1129,\"height\":289,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1204,1203,1128,1056,1057,1130]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.11,29.38],[-4.64,29.66],[-4.84,30],[-4.75,30.11],[-4.73,30.14],[-4.33,30.11],[-4.05,29.41],[-4.11,29.38]]]},\"properties\":{\"id\":1148,\"height\":289,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[1223,1222,1147,1075,1004,1076,1149]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.43,29.58],[-14.4,29.05],[-14.68,28.93],[-15.16,29.21],[-15.19,29.3],[-15.1,29.44],[-14.43,29.58]]]},\"properties\":{\"id\":1203,\"height\":289,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1129,1204,1277,1276,1202,1128]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.43,29.58],[-14.37,29.63],[-13.92,29.27],[-13.89,29.21],[-14.01,28.96],[-14.4,29.05],[-14.43,29.58]]]},\"properties\":{\"id\":1204,\"height\":289,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1203,1129,1130,1131,1205,1277]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.7,28.77],[-11.87,28.24],[-12.32,28.29],[-12.43,28.54],[-12.4,28.82],[-11.7,28.77]]]},\"properties\":{\"id\":1281,\"height\":289,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1208,1282,1355,1354,1280]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.45,28.91],[-7.48,28.24],[-7.62,28.15],[-7.99,28.46],[-7.87,28.85],[-7.48,28.91],[-7.45,28.91]]]},\"properties\":{\"id\":1289,\"height\":289,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1217,1290,1364,1363,1288,1216]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.42,28.38],[-4.87,28.35],[-5.06,28.82],[-4.61,29.05],[-4.27,28.99],[-4.25,28.82],[-4.42,28.38]]]},\"properties\":{\"id\":1295,\"height\":289,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1296,1369,1294,1221,1222,1223]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.86,27.98],[-7.48,27.65],[-7.59,27.73],[-7.62,28.15],[-7.48,28.24],[-6.92,28.38],[-6.86,27.98]]]},\"properties\":{\"id\":1364,\"height\":289,\"biome\":4,\"type\":\"island\",\"population\":6839,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1365,1437,1436,1363,1289,1290]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.03,26.64],[-8.97,26.05],[-9.06,25.97],[-9.59,26.25],[-9.53,26.58],[-9.03,26.64]]]},\"properties\":{\"id\":1583,\"height\":289,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1508,1584,1659,1658,1582]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.85,16.32],[-12.4,16.48],[-12.26,16.01],[-12.8,15.87],[-12.94,16.09],[-12.85,16.32]]]},\"properties\":{\"id\":3127,\"height\":289,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3126,3039,3128,3220,3219]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.95,13.91],[5.51,13.94],[5.54,13.69],[5.29,13.41],[5.06,13.35],[4.89,13.49],[4.89,13.66],[4.95,13.91]]]},\"properties\":{\"id\":3612,\"height\":289,\"biome\":4,\"type\":\"island\",\"population\":17000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3524,3525,3526,3613,3697,3696,3611]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.03,13.15],[-17.92,12.68],[-17.94,12.59],[-18.31,12.48],[-18.37,13.18],[-18.2,13.24],[-18.11,13.24],[-18.03,13.15]]]},\"properties\":{\"id\":3654,\"height\":289,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3570,3655,3738,3737,3653,3568,3569]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.65,13.29],[-16.73,12.68],[-17.3,12.87],[-17.32,13.15],[-17.24,13.27],[-16.73,13.32],[-16.65,13.29]]]},\"properties\":{\"id\":3656,\"height\":289,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3572,3657,3739,3655,3570,3571]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.07,13.38],[-5.74,13.43],[-5.46,13.15],[-5.48,12.9],[-5.82,12.87],[-6.07,13.38]]]},\"properties\":{\"id\":3677,\"height\":289,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3676,3591,3592,3678,3760]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.59,13.55],[8.13,13.24],[8.02,12.79],[7.96,12.76],[7.82,12.79],[7.4,13.29],[7.59,13.55]]]},\"properties\":{\"id\":3702,\"height\":289,\"biome\":6,\"type\":\"island\",\"population\":19000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3616,3617,3703,3785,3784,3701]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.7,13.21],[10.29,13.32],[10.41,13.13],[10.27,12.9],[9.82,12.87],[9.7,13.21]]]},\"properties\":{\"id\":3706,\"height\":289,\"biome\":12,\"type\":\"island\",\"population\":20206,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3705,3621,3622,3707,3789]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.11,11.62],[-18.23,10.92],[-18.73,10.78],[-18.82,11.5],[-18.62,11.67],[-18.39,11.76],[-18.11,11.62]]]},\"properties\":{\"id\":3904,\"height\":289,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3822,3905,3903,3820,3821]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.59,11.5],[-9.62,10.83],[-9.9,10.66],[-10.29,11.03],[-10.27,11.22],[-9.79,11.64],[-9.59,11.5]]]},\"properties\":{\"id\":3920,\"height\":289,\"biome\":6,\"type\":\"island\",\"population\":27000,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3838,3921,3919,3837]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.62,36.27],[0.59,36.85],[0.93,37.02],[1.21,36.82],[1.07,36.49],[0.9,36.27],[0.62,36.27]]]},\"properties\":{\"id\":201,\"height\":324,\"biome\":10,\"type\":\"island\",\"population\":6000,\"state\":1,\"province\":7,\"culture\":3,\"religion\":12,\"neighbors\":[275,200,125,126,202,276]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.9,33.05],[-17.16,33.1],[-17.18,33.16],[-17.16,33.69],[-16.99,33.83],[-16.9,33.8],[-16.76,33.69],[-16.65,33.36],[-16.9,33.05]]]},\"properties\":{\"id\":613,\"height\":324,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":28,\"culture\":9,\"religion\":9,\"neighbors\":[688,687,686,612,540,541,542,614]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.44,32.96],[-15.33,32.96],[-14.79,32.52],[-15.24,32.18],[-15.44,32.96]]]},\"properties\":{\"id\":690,\"height\":324,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[764,616,691,765]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.06,31.62],[9.39,32.1],[9.65,31.96],[9.73,31.68],[9.62,31.51],[9.2,31.37],[9.06,31.62]]]},\"properties\":{\"id\":883,\"height\":324,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[956,882,810,884,958,957]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.73,31.68],[9.65,31.96],[9.98,32.12],[10.29,31.98],[10.35,31.76],[10.29,31.68],[9.87,31.62],[9.73,31.68]]]},\"properties\":{\"id\":884,\"height\":324,\"biome\":11,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[958,883,810,811,885,887,959]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.98,30.67],[-12.26,30.56],[-12.66,31.01],[-12.23,31.23],[-12.01,31.2],[-11.98,30.67]]]},\"properties\":{\"id\":990,\"height\":324,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[991,1062,989,916,917]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.21,30.5],[-10.69,30.61],[-10.63,30.92],[-10.29,31.09],[-10.18,31.03],[-10.21,30.5]]]},\"properties\":{\"id\":993,\"height\":324,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[994,1065,992,920,921]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.43,29.94],[-7.45,29.94],[-7.79,30.36],[-7.79,30.59],[-7.62,30.73],[-7.06,30.53],[-7,30.45],[-7.17,29.94],[-7.43,29.94]]]},\"properties\":{\"id\":1071,\"height\":324,\"biome\":6,\"type\":\"island\",\"population\":18307,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1143,1142,1070,1069,998,999,1000,1072]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.11,29.89],[-2.64,30.22],[-2.56,30.45],[-2.14,30.64],[-1.83,30.5],[-2.08,29.91],[-2.11,29.89]]]},\"properties\":{\"id\":1080,\"height\":324,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1153,1152,1007,1008,1009,1081]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.48,30],[-11.14,29.55],[-11.31,29.41],[-11.62,29.49],[-11.7,29.77],[-11.48,30]]]},\"properties\":{\"id\":1135,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1063,1136,1210,1209,1134]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.83,29.38],[-9.03,29.41],[-9.06,29.52],[-8.52,30.22],[-8.41,30.14],[-8.49,29.52],[-8.83,29.38]]]},\"properties\":{\"id\":1140,\"height\":324,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1215,1214,1139,1068,1069,1141]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.55,29.38],[-10.86,28.96],[-11.19,28.96],[-11.31,29.41],[-11.14,29.55],[-10.83,29.69],[-10.55,29.44],[-10.55,29.38]]]},\"properties\":{\"id\":1210,\"height\":324,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1138,1211,1283,1209,1135,1136,1137]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.99,28.99],[-8.52,28.96],[-8.83,29.38],[-8.49,29.52],[-8.04,29.44],[-7.99,28.99]]]},\"properties\":{\"id\":1215,\"height\":324,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1216,1288,1214,1140,1141]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.11,29.38],[-4.27,28.99],[-4.61,29.05],[-4.78,29.33],[-4.64,29.66],[-4.11,29.38]]]},\"properties\":{\"id\":1222,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1148,1223,1295,1221,1147]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.42,28.46],[-14.06,28.21],[-14.2,28.29],[-13.98,28.93],[-13.53,28.77],[-13.5,28.74],[-13.42,28.46]]]},\"properties\":{\"id\":1278,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1279,1352,1351,1277,1205,1206]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.18,27.2],[-8.44,27.2],[-8.61,27.26],[-8.77,27.76],[-8.72,27.84],[-8.07,27.65],[-8.02,27.59],[-8.18,27.2]]]},\"properties\":{\"id\":1435,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1436,1510,1509,1434,1361,1362,1363]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.99,26.84],[-13.39,26.72],[-13.5,26.78],[-13.78,27.14],[-13.81,27.23],[-13.39,27.48],[-12.97,27.2],[-12.99,26.84]]]},\"properties\":{\"id\":1501,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1502,1576,1575,1500,1499,1425,1426]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.92,26.64],[-12.21,26.61],[-12.43,26.84],[-12.26,27.14],[-12.23,27.2],[-11.87,27.34],[-11.78,27.28],[-11.76,26.72],[-11.92,26.64]]]},\"properties\":{\"id\":1503,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1579,1578,1577,1502,1427,1428,1429,1504]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.38,25.66],[-8.69,25.49],[-9.03,25.66],[-9.06,25.97],[-8.97,26.05],[-8.47,26.22],[-8.47,26.22],[-8.38,25.66]]]},\"properties\":{\"id\":1659,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1660,1738,1737,1658,1583,1584,1585]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.65,25.66],[-7.62,25.21],[-7.99,25.16],[-8.21,25.63],[-7.9,25.83],[-7.76,25.8],[-7.65,25.66]]]},\"properties\":{\"id\":1739,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1662,1740,1815,1738,1660,1661]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.3,14.47],[-13.36,14.83],[-12.88,15.08],[-12.68,14.72],[-13.3,14.47]]]},\"properties\":{\"id\":3400,\"height\":324,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3401,3399,3310,3311]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.41,14.13],[1.52,14.33],[2.11,14.39],[2.17,14.27],[2.17,14.05],[2.02,13.91],[1.41,14.13]]]},\"properties\":{\"id\":3519,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3518,3427,3428,3429,3520,3607]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.18,14.27],[3.29,14.16],[3.38,13.85],[2.7,13.88],[2.81,14.11],[3.18,14.27]]]},\"properties\":{\"id\":3521,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3430,3431,3522,3608,3520]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.74,14.39],[3.82,14.27],[3.71,13.88],[3.38,13.83],[3.38,13.85],[3.29,14.16],[3.74,14.39]]]},\"properties\":{\"id\":3522,\"height\":324,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3431,3432,3523,3609,3608,3521]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[12.85,13.27],[13.47,13.32],[13.47,12.59],[13.44,12.54],[13.11,12.57],[12.85,13.27]]]},\"properties\":{\"id\":3712,\"height\":324,\"biome\":12,\"type\":\"island\",\"population\":21498,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3711,3627,3713,3796,3795]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.06,34.87],[-16.26,34.59],[-16.68,34.95],[-16.65,35.12],[-16.51,35.34],[-16.14,35.37],[-16.03,35.26],[-16.06,34.87]]]},\"properties\":{\"id\":395,\"height\":361,\"biome\":2,\"type\":\"island\",\"population\":21000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[396,469,468,394,319,320,321]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.14,34.14],[-0.34,34.05],[-0.48,34.42],[-0.42,34.53],[-0.17,34.67],[0.14,34.14]]]},\"properties\":{\"id\":498,\"height\":361,\"biome\":9,\"type\":\"island\",\"population\":12000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[499,572,571,497,425]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.46,33.44],[-14.54,33.38],[-14.99,33.97],[-14.51,34.22],[-14.46,33.44]]]},\"properties\":{\"id\":545,\"height\":361,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[546,618,617,471]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.52,33.89],[8.55,34.25],[8.75,34.31],[9.06,34.19],[9.25,33.78],[8.63,33.72],[8.52,33.89]]]},\"properties\":{\"id\":589,\"height\":361,\"biome\":9,\"type\":\"island\",\"population\":17000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[660,588,514,515,590,661]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.02,32.43],[-13.47,31.9],[-13.67,32.49],[-13.3,32.66],[-13.08,32.63],[-13.05,32.63],[-13.02,32.43]]]},\"properties\":{\"id\":768,\"height\":361,\"biome\":6,\"type\":\"island\",\"population\":5285,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[769,841,767,693,694,695]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.43,31.98],[-3.88,31.54],[-4.27,31.62],[-4.25,32.04],[-3.85,32.15],[-3.43,31.98]]]},\"properties\":{\"id\":858,\"height\":361,\"biome\":9,\"type\":\"island\",\"population\":2000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[786,859,932,857,785]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.02,31.12],[7.96,31.54],[8.58,31.51],[8.61,30.95],[8.58,30.92],[8.21,30.98],[8.02,31.12]]]},\"properties\":{\"id\":955,\"height\":361,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1027,954,881,956,1029,1028]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.33,30.45],[-13.56,30.5],[-13.75,30.89],[-13.33,31.12],[-12.99,31.03],[-13.05,30.61],[-13.33,30.45]]]},\"properties\":{\"id\":988,\"height\":361,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[1060,1059,987,914,915,989]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.73,30.14],[-4.75,30.11],[-4.84,30.47],[-4.7,30.92],[-4.39,31.01],[-4.22,30.73],[-4.73,30.14]]]},\"properties\":{\"id\":1004,\"height\":361,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":80,\"culture\":7,\"religion\":7,\"neighbors\":[1076,1148,1075,1003,931,1005]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.38,30.39],[-12.15,29.89],[-12.35,29.63],[-12.85,29.91],[-12.74,30.31],[-12.38,30.39]]]},\"properties\":{\"id\":1061,\"height\":361,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[989,1062,1134,1133,1060]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.87,30],[-5.62,30.36],[-5.4,30.7],[-4.84,30.47],[-4.75,30.11],[-4.84,30],[-4.87,30]]]},\"properties\":{\"id\":1075,\"height\":361,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[1147,1074,1002,1003,1004,1148]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.07,29.89],[-5.74,29.24],[-5.91,29.07],[-6.36,29.63],[-6.27,29.77],[-6.07,29.89]]]},\"properties\":{\"id\":1145,\"height\":361,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1073,1146,1220,1219,1144]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.36,29.55],[4.33,29.8],[4.44,30.05],[5.03,30.03],[5.09,30],[5.09,29.66],[4.87,29.52],[4.36,29.55]]]},\"properties\":{\"id\":1165,\"height\":361,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1239,1164,1092,1093,1094,1166,1240]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.2,29.05],[-9.25,28.32],[-9.37,28.26],[-9.53,28.29],[-9.62,28.82],[-9.2,29.05]]]},\"properties\":{\"id\":1286,\"height\":361,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1213,1287,1361,1360,1285]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.92,28.38],[-7.48,28.24],[-7.45,28.91],[-7.09,28.93],[-7.03,28.85],[-6.92,28.43],[-6.92,28.38]]]},\"properties\":{\"id\":1290,\"height\":361,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1365,1364,1289,1217,1218,1291]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.41,27.79],[-10.49,27.82],[-10.66,28.21],[-10.18,28.63],[-9.93,28.21],[-10.24,27.82],[-10.41,27.79]]]},\"properties\":{\"id\":1358,\"height\":361,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1432,1431,1357,1284,1285,1359]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.87,27.26],[-14.4,27.2],[-14.43,27.68],[-13.92,27.73],[-13.87,27.26]]]},\"properties\":{\"id\":1424,\"height\":361,\"biome\":4,\"type\":\"island\",\"population\":5995,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1425,1499,1423,1351]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.78,27.14],[-14.12,26.64],[-14.46,26.92],[-14.48,27.14],[-14.4,27.2],[-13.87,27.26],[-13.81,27.23],[-13.78,27.14]]]},\"properties\":{\"id\":1499,\"height\":361,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1501,1500,1574,1498,1423,1424,1425]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.61,15.5],[-15.41,15.5],[-15.1,15.28],[-15.05,15.06],[-15.5,14.83],[-15.78,15.06],[-15.75,15.22],[-15.61,15.5]]]},\"properties\":{\"id\":3306,\"height\":361,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3214,3215,3216,3307,3396,3395,3305]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.65,15.67],[-14.51,15.48],[-14.62,14.86],[-14.77,14.83],[-15.05,15.06],[-15.1,15.28],[-14.65,15.67]]]},\"properties\":{\"id\":3307,\"height\":361,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3216,3217,3308,3397,3396,3306]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.48,14.81],[-14.2,14.44],[-14.23,14.36],[-14.29,14.3],[-15.07,14.27],[-14.77,14.83],[-14.62,14.86],[-14.48,14.81]]]},\"properties\":{\"id\":3397,\"height\":361,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3308,3398,3490,3489,3488,3396,3307]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.7,14.36],[2.81,14.11],[2.7,13.88],[2.67,13.83],[2.17,14.05],[2.17,14.27],[2.7,14.36]]]},\"properties\":{\"id\":3520,\"height\":361,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3429,3430,3521,3608,3607,3519]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.26,13.94],[-16.31,13.46],[-16.4,13.38],[-16.65,13.29],[-16.73,13.32],[-16.87,13.83],[-16.62,13.99],[-16.26,13.94]]]},\"properties\":{\"id\":3572,\"height\":361,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3485,3573,3658,3657,3656,3571,3484]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.59,13.71],[-9.56,13.35],[-10.21,13.15],[-10.29,13.32],[-10.29,13.77],[-9.59,13.71]]]},\"properties\":{\"id\":3584,\"height\":361,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3497,3585,3669,3668,3583]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.08,12.59],[9.51,12.23],[9.37,12.01],[8.86,11.95],[8.83,11.98],[8.94,12.51],[9.08,12.59]]]},\"properties\":{\"id\":3787,\"height\":361,\"biome\":12,\"type\":\"island\",\"population\":30658,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3704,3788,3873,3872,3871,3786]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.34,11.62],[-5.2,11],[-5.51,10.75],[-6.1,11],[-5.88,11.45],[-5.34,11.62]]]},\"properties\":{\"id\":3928,\"height\":361,\"biome\":6,\"type\":\"island\",\"population\":45867,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3845,3929,3927]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.93,37.02],[0.59,36.85],[0.39,36.96],[0.31,37.44],[0.56,37.52],[0.96,37.27],[0.93,37.02]]]},\"properties\":{\"id\":125,\"height\":400,\"biome\":10,\"type\":\"island\",\"population\":5000,\"state\":1,\"province\":5,\"culture\":3,\"religion\":12,\"neighbors\":[126,201,200,124,50,51]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7,35.4],[-7.54,35.45],[-7.57,35.76],[-7.48,36.01],[-7.06,36.1],[-6.83,35.82],[-6.83,35.76],[-7,35.4]]]},\"properties\":{\"id\":337,\"height\":400,\"biome\":9,\"type\":\"island\",\"population\":22443,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[338,412,336,259,260,261,262]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.47,34.25],[-15.61,34.25],[-15.69,34.78],[-15.5,35.01],[-15.1,34.75],[-15.47,34.25]]]},\"properties\":{\"id\":470,\"height\":400,\"biome\":2,\"type\":\"island\",\"population\":16600,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[471,544,469,396,397]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.33,34.33],[-4.5,34.7],[-3.71,34.87],[-4.02,34.28],[-4.27,34.28],[-4.33,34.33]]]},\"properties\":{\"id\":491,\"height\":400,\"biome\":10,\"type\":\"island\",\"population\":2000,\"state\":1,\"province\":9,\"culture\":4,\"religion\":12,\"neighbors\":[564,490,418,492,565]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.24,34.05],[1.1,34.19],[1.24,34.75],[1.38,34.87],[1.49,34.87],[1.69,34.67],[1.6,34.31],[1.43,34.11],[1.24,34.05]]]},\"properties\":{\"id\":501,\"height\":400,\"biome\":10,\"type\":\"island\",\"population\":17000,\"state\":10,\"province\":139,\"culture\":4,\"religion\":4,\"neighbors\":[575,574,500,427,428,429,502,576]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.82,33.64],[3.35,33.94],[3.29,34.25],[3.66,34.39],[4.13,34.25],[3.94,33.69],[3.82,33.64]]]},\"properties\":{\"id\":579,\"height\":400,\"biome\":9,\"type\":\"island\",\"population\":22000,\"state\":10,\"province\":134,\"culture\":4,\"religion\":4,\"neighbors\":[652,651,578,505,506,580]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.14,31.98],[-11.53,31.79],[-11.64,32.4],[-11.59,32.52],[-11.39,32.54],[-11.14,31.98]]]},\"properties\":{\"id\":771,\"height\":400,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[772,845,844,770,697]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.29,32.01],[-10.69,32.04],[-10.69,32.38],[-10.55,32.54],[-10.27,32.6],[-10.24,32.07],[-10.29,32.01]]]},\"properties\":{\"id\":773,\"height\":400,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[847,846,772,698,699,774]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.09,32.26],[-7.51,32.4],[-7.54,32.68],[-7.48,32.8],[-6.86,32.82],[-6.83,32.82],[-6.75,32.68],[-7.09,32.26]]]},\"properties\":{\"id\":779,\"height\":400,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[780,852,778,704,705,632,706]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.57,31.68],[-12.8,31.7],[-12.8,32.12],[-12.26,32.29],[-12.21,32.24],[-12.23,31.79],[-12.57,31.68]]]},\"properties\":{\"id\":842,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":7669,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[917,916,841,769,770,843]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.74,31.65],[-11.33,31.37],[-11.67,31.56],[-11.53,31.79],[-11.14,31.98],[-10.77,31.93],[-10.74,31.65]]]},\"properties\":{\"id\":845,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":12276,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[846,919,918,844,771,772]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.14,30.64],[-2.56,30.45],[-2.73,30.92],[-2.36,31.12],[-2.33,31.12],[-2.14,30.64]]]},\"properties\":{\"id\":1008,\"height\":400,\"biome\":9,\"type\":\"island\",\"population\":11086,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1009,1080,1007,934,935]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.15,30.78],[1.04,30.61],[0.62,30.42],[0.48,30.59],[0.87,31.09],[0.98,31.06],[1.15,30.98],[1.15,30.78]]]},\"properties\":{\"id\":1014,\"height\":400,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1015,1087,1086,1085,1013,941,942]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.73,29.58],[-17.24,29.24],[-17.44,29.35],[-17.38,29.94],[-17.3,30],[-16.73,29.63],[-16.73,29.58]]]},\"properties\":{\"id\":1125,\"height\":400,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1126,1199,1198,1124,1052,1053]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.84,29.3],[-12.29,29.27],[-12.35,29.49],[-12.35,29.63],[-12.15,29.89],[-12.01,29.91],[-11.7,29.77],[-11.62,29.49],[-11.84,29.3]]]},\"properties\":{\"id\":1134,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1209,1208,1207,1133,1061,1062,1063,1135]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.68,28.46],[-15.1,28.26],[-15.19,28.35],[-15.27,28.93],[-15.16,29.21],[-14.68,28.93],[-14.68,28.46]]]},\"properties\":{\"id\":1276,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1277,1350,1349,1275,1202,1203]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.39,27.48],[-13.81,27.23],[-13.87,27.26],[-13.92,27.73],[-13.87,27.84],[-13.64,27.87],[-13.36,27.62],[-13.39,27.48]]]},\"properties\":{\"id\":1425,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1426,1501,1499,1424,1351,1352,1353]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.58,27.17],[-4.89,27.12],[-4.92,27.14],[-4.95,27.76],[-4.92,27.82],[-4.42,27.59],[-4.39,27.59],[-4.58,27.17]]]},\"properties\":{\"id\":1442,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1443,1517,1516,1441,1368,1369,1370]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.44,25.66],[-6.92,25.49],[-7.14,25.83],[-7.17,26.16],[-6.86,26.28],[-6.44,26.36],[-6.33,26.25],[-6.38,25.75],[-6.44,25.66]]]},\"properties\":{\"id\":1663,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":11000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1742,1741,1740,1662,1587,1588,1589,1664]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.52,15.2],[-10.86,14.86],[-11.28,14.86],[-11.31,14.95],[-11.25,15.22],[-10.74,15.36],[-10.52,15.2]]]},\"properties\":{\"id\":3314,\"height\":400,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3224,3315,3404,3403,3313,3223]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.81,14.78],[4.84,14.86],[5.37,14.81],[5.4,14.75],[5.37,14.44],[4.75,14.36],[4.73,14.36],[4.81,14.78]]]},\"properties\":{\"id\":3434,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3433,3343,3344,3345,3435,3525,3524]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.86,13.71],[-11,13.43],[-11.31,13.41],[-11.45,13.8],[-11.39,14.08],[-10.86,13.71]]]},\"properties\":{\"id\":3582,\"height\":400,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3495,3583,3667,3581,3494]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.76,13.74],[-0.45,13.6],[-0.42,13.18],[-0.98,13.35],[-1.01,13.63],[-0.76,13.74]]]},\"properties\":{\"id\":3601,\"height\":400,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3514,3515,3602,3686,3600]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.71,13.88],[3.94,13.71],[3.91,13.24],[3.91,13.24],[3.32,13.46],[3.38,13.83],[3.71,13.88]]]},\"properties\":{\"id\":3609,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":17000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3522,3523,3610,3695,3694,3608]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.35,12.59],[10.77,12.48],[10.88,12.26],[10.77,12.09],[10.32,12.06],[10.15,12.26],[10.35,12.59]]]},\"properties\":{\"id\":3790,\"height\":400,\"biome\":12,\"type\":\"island\",\"population\":14000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3789,3707,3791,3876,3875,3874]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.48,12.37],[-18.37,12.09],[-18.39,11.76],[-18.62,11.67],[-18.9,12.09],[-18.76,12.34],[-18.48,12.37],[-18.48,12.37]]]},\"properties\":{\"id\":3821,\"height\":400,\"biome\":3,\"type\":\"island\",\"population\":4800,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3653,3737,3822,3904,3820,3735,3736]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.56,12.32],[-2.14,12.2],[-2.31,11.62],[-2.59,11.7],[-2.64,11.73],[-2.76,12.04],[-2.56,12.32]]]},\"properties\":{\"id\":3851,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3765,3766,3852,3934,3933,3850]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.87,12.23],[11.9,12.2],[11.98,11.73],[11.36,11.56],[11.42,11.98],[11.87,12.23]]]},\"properties\":{\"id\":3877,\"height\":400,\"biome\":12,\"type\":\"island\",\"population\":14000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3792,3793,3878,3960,3876]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.76,11.48],[1.04,11.42],[1.21,10.75],[1.1,10.64],[0.42,11],[0.76,11.48]]]},\"properties\":{\"id\":3940,\"height\":400,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3939,3857,3941]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.93,37.02],[0.96,37.27],[1.15,37.52],[1.43,37.44],[1.63,36.85],[1.21,36.82],[0.93,37.02]]]},\"properties\":{\"id\":126,\"height\":441,\"biome\":10,\"type\":\"island\",\"population\":6000,\"state\":1,\"province\":5,\"culture\":3,\"religion\":12,\"neighbors\":[201,125,51,52,127,202]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.93,34.22],[-1.01,34.31],[-0.9,34.78],[-0.82,34.84],[-0.76,34.84],[-0.42,34.53],[-0.48,34.42],[-0.93,34.22]]]},\"properties\":{\"id\":497,\"height\":441,\"biome\":9,\"type\":\"island\",\"population\":11000,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[571,570,496,423,424,425,498]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.06,34.17],[4.81,34.64],[5.23,34.95],[5.43,34.89],[5.54,34.64],[5.46,34.31],[5.43,34.31],[5.06,34.17],[5.06,34.17]]]},\"properties\":{\"id\":508,\"height\":441,\"biome\":10,\"type\":\"island\",\"population\":20000,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[581,507,434,435,436,509,583,582]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.22,33.52],[-13.5,33.47],[-13.73,33.8],[-13.61,34.03],[-13.33,34.11],[-13.08,33.94],[-13.11,33.64],[-13.22,33.52]]]},\"properties\":{\"id\":548,\"height\":441,\"biome\":9,\"type\":\"island\",\"population\":10644,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[621,620,619,547,473,474,549]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.46,33.36],[-12.99,33.16],[-13.02,33.16],[-13.22,33.52],[-13.11,33.64],[-12.46,33.47],[-12.46,33.36]]]},\"properties\":{\"id\":621,\"height\":441,\"biome\":9,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[622,695,694,620,548,549]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.71,32.54],[-14.79,32.52],[-15.33,32.96],[-14.77,33.22],[-14.74,33.22],[-14.71,32.54]]]},\"properties\":{\"id\":691,\"height\":441,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[692,765,690,616,617]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.66,31.01],[-12.91,31.09],[-12.8,31.68],[-12.8,31.7],[-12.57,31.68],[-12.23,31.23],[-12.66,31.01]]]},\"properties\":{\"id\":916,\"height\":441,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[990,989,915,841,842,917]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.12,29.86],[-16.54,29.83],[-16.71,30.5],[-16.2,30.39],[-16.12,29.86],[-16.12,29.86]]]},\"properties\":{\"id\":1054,\"height\":441,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1127,1126,1053,982,1055]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.99,30.08],[-15.07,30],[-15.5,30.08],[-15.58,30.17],[-15.69,30.5],[-15.1,30.47],[-14.99,30.14],[-14.99,30.08]]]},\"properties\":{\"id\":1056,\"height\":441,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1057,1129,1128,1127,1055,984,985]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.35,29.49],[-13.11,29.41],[-12.97,29.86],[-12.85,29.91],[-12.35,29.63],[-12.35,29.49]]]},\"properties\":{\"id\":1133,\"height\":441,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1134,1207,1132,1060,1061]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.71,29.35],[3.74,29.91],[3.82,30],[4.33,29.8],[4.36,29.55],[4.33,29.47],[3.71,29.35]]]},\"properties\":{\"id\":1164,\"height\":441,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1238,1163,1091,1092,1165,1239]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.09,29.66],[5.09,30],[5.43,30.19],[5.51,30.11],[5.65,29.44],[5.54,29.38],[5.09,29.66]]]},\"properties\":{\"id\":1166,\"height\":441,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1240,1165,1094,1095,1167,1241]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.71,29.47],[5.99,29.91],[6.19,30.03],[6.58,29.77],[6.52,29.63],[6.33,29.38],[6.13,29.3],[5.71,29.47]]]},\"properties\":{\"id\":1168,\"height\":441,\"biome\":6,\"type\":\"island\",\"population\":2000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1241,1167,1095,1096,1169,1243,1242]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.48,28.91],[-7.87,28.85],[-7.99,28.99],[-8.04,29.44],[-7.99,29.49],[-7.59,29.44],[-7.57,29.41],[-7.48,28.91]]]},\"properties\":{\"id\":1216,\"height\":441,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1217,1289,1288,1215,1141,1142,1143]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.99,29.1],[-12.99,28.46],[-13.25,28.32],[-13.42,28.46],[-13.5,28.74],[-12.99,29.1],[-12.99,29.1]]]},\"properties\":{\"id\":1279,\"height\":441,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1207,1280,1354,1352,1278,1206]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,26.61],[-4.08,26.05],[-4.27,25.83],[-4.3,25.83],[-4.53,26.47],[-4.3,26.61]]]},\"properties\":{\"id\":1592,\"height\":441,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1517,1593,1668,1745,1667]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.61,15],[6.89,14.95],[6.92,14.47],[6.61,14.39],[6.52,14.44],[6.36,14.75],[6.61,15]]]},\"properties\":{\"id\":3437,\"height\":441,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3346,3347,3438,3528,3527,3436]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.57,14.69],[8.21,14.81],[8.24,14.27],[7.62,14.25],[7.48,14.41],[7.57,14.69]]]},\"properties\":{\"id\":3439,\"height\":441,\"biome\":4,\"type\":\"island\",\"population\":20000,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3438,3349,3440,3530,3529]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.09,14.16],[-7.03,13.99],[-7.17,13.6],[-7.59,13.55],[-7.71,13.66],[-7.62,14.13],[-7.23,14.22],[-7.09,14.16]]]},\"properties\":{\"id\":3502,\"height\":441,\"biome\":6,\"type\":\"island\",\"population\":20000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3411,3503,3590,3589,3588,3501,3410]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.41,14.13],[2.02,13.91],[1.97,13.69],[1.69,13.49],[1.63,13.49],[1.18,13.8],[1.24,14.05],[1.41,14.13]]]},\"properties\":{\"id\":3518,\"height\":441,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[3427,3519,3607,3606,3691,3605,3517]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.17,14.05],[2.67,13.83],[2.73,13.29],[2.45,13.24],[1.97,13.69],[2.02,13.91],[2.17,14.05]]]},\"properties\":{\"id\":3607,\"height\":441,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3519,3520,3608,3692,3606,3518]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.1,13.15],[-15.1,12.79],[-15.36,12.57],[-15.67,12.62],[-15.72,12.79],[-15.61,13.29],[-15.52,13.38],[-15.27,13.35],[-15.1,13.15]]]},\"properties\":{\"id\":3659,\"height\":441,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3575,3660,3743,3742,3741,3658,3573,3574]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.99,12.93],[-7.99,12.87],[-8.24,12.62],[-8.61,12.68],[-8.66,13.29],[-8.63,13.35],[-7.99,12.93]]]},\"properties\":{\"id\":3672,\"height\":441,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3587,3673,3756,3755,3671,3586]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.23,12.4],[7.68,12.09],[7.65,11.87],[7.06,11.62],[7.2,12.37],[7.23,12.4]]]},\"properties\":{\"id\":3869,\"height\":441,\"biome\":6,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":173,\"culture\":8,\"religion\":8,\"neighbors\":[3783,3784,3870,3952,3868]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.61,35.17],[-13.36,34.59],[-13.78,34.59],[-13.92,34.98],[-13.87,35.23],[-13.61,35.17]]]},\"properties\":{\"id\":400,\"height\":484,\"biome\":9,\"type\":\"island\",\"population\":17263,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[326,401,473,472,399]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.24,32.18],[-15.33,32.15],[-15.75,32.29],[-15.95,32.63],[-15.95,32.71],[-15.61,33.05],[-15.44,32.96],[-15.24,32.18],[-15.24,32.18]]]},\"properties\":{\"id\":764,\"height\":484,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[765,837,836,763,762,689,616,690]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.26,32.29],[-12.8,32.12],[-13.02,32.43],[-13.05,32.63],[-12.54,32.77],[-12.32,32.57],[-12.26,32.29]]]},\"properties\":{\"id\":769,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[770,842,841,768,695,696]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.8,31.15],[-11.22,31.06],[-11.33,31.37],[-10.74,31.65],[-10.69,31.56],[-10.8,31.15]]]},\"properties\":{\"id\":919,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[920,992,918,845,846]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.95,30.98],[-3.04,31.12],[-3.04,31.26],[-2.7,31.56],[-2.36,31.12],[-2.73,30.92],[-2.95,30.98]]]},\"properties\":{\"id\":934,\"height\":484,\"biome\":9,\"type\":\"island\",\"population\":13008,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1007,1006,933,860,935,1008]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.17,30.5],[-14.65,30.5],[-14.74,30.89],[-14.37,31.01],[-14.15,30.92],[-14.17,30.5]]]},\"properties\":{\"id\":986,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[987,1058,985,912,913]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.09,30.05],[-14.09,30.05],[-14.17,30.5],[-14.15,30.92],[-14.01,30.95],[-13.75,30.89],[-13.56,30.5],[-14.09,30.05]]]},\"properties\":{\"id\":987,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":10982,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[1059,1130,1058,986,913,914,988]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.87,30.47],[-10.12,30.42],[-10.21,30.5],[-10.18,31.03],[-9.82,31.03],[-9.7,30.84],[-9.87,30.47]]]},\"properties\":{\"id\":994,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[995,1066,1065,993,921,922]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.26,30.64],[5.43,31.01],[5.99,30.92],[5.96,30.59],[5.51,30.39],[5.26,30.64]]]},\"properties\":{\"id\":1023,\"height\":484,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1094,1022,950,1024,1095]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.75,29.44],[-15.92,29.47],[-16.12,29.86],[-16.12,29.86],[-15.58,30.17],[-15.5,30.08],[-15.75,29.44]]]},\"properties\":{\"id\":1127,\"height\":484,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1128,1201,1126,1054,1055,1056]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.84,29.58],[-10.43,29.35],[-10.55,29.38],[-10.55,29.44],[-10.12,29.94],[-9.84,29.77],[-9.84,29.58]]]},\"properties\":{\"id\":1138,\"height\":484,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1139,1212,1211,1210,1137,1066]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.56,29.47],[-13.47,29.44],[-13.53,28.77],[-13.98,28.93],[-14.01,28.96],[-13.89,29.21],[-13.56,29.47]]]},\"properties\":{\"id\":1205,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1131,1132,1206,1278,1277,1204]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.36,28.82],[-11.59,28.82],[-11.84,29.3],[-11.62,29.49],[-11.31,29.41],[-11.19,28.96],[-11.36,28.82]]]},\"properties\":{\"id\":1209,\"height\":484,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1283,1282,1208,1134,1135,1210]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.58,26.75],[-8.8,26.67],[-8.97,26.7],[-8.97,27.06],[-8.61,27.26],[-8.44,27.2],[-8.58,26.75]]]},\"properties\":{\"id\":1509,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1510,1585,1584,1508,1434,1435]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.79,15.42],[-9.48,14.86],[-9.56,14.81],[-9.84,14.81],[-10.18,15.14],[-10.07,15.39],[-9.93,15.5],[-9.79,15.42]]]},\"properties\":{\"id\":3316,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3226,3317,3407,3406,3405,3224,3225]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.88,15.34],[8.24,15.11],[8.3,15.03],[8.21,14.81],[7.57,14.69],[7.51,15.11],[7.62,15.25],[7.73,15.34],[7.88,15.34]]]},\"properties\":{\"id\":3349,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":41792,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3258,3259,3350,3440,3439,3438,3348,3257]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.48,13.88],[-5.12,13.6],[-5.29,13.32],[-5.46,13.15],[-5.74,13.43],[-5.62,13.83],[-5.48,13.88]]]},\"properties\":{\"id\":3592,\"height\":484,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3505,3506,3593,3678,3677,3591]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.65,13.29],[-16.4,13.38],[-16.17,12.87],[-16.37,12.68],[-16.73,12.65],[-16.73,12.68],[-16.65,13.29]]]},\"properties\":{\"id\":3657,\"height\":484,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3656,3572,3658,3741,3740,3739]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.47,12.71],[6.27,13.35],[7.09,13.13],[7.06,12.99],[6.47,12.71]]]},\"properties\":{\"id\":3700,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3783,3699,3615,3701]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.12,13.18],[7.4,13.29],[7.82,12.79],[7.26,12.62],[7.06,12.99],[7.09,13.13],[7.12,13.18]]]},\"properties\":{\"id\":3701,\"height\":484,\"biome\":6,\"type\":\"island\",\"population\":17000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3615,3616,3702,3784,3783,3700]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.41,12.12],[8.41,12.62],[8.49,12.65],[8.94,12.51],[8.83,11.98],[8.41,12.12]]]},\"properties\":{\"id\":3786,\"height\":484,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3871,3785,3703,3704,3787]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.17,12.9],[9.73,12.73],[9.7,12.34],[9.51,12.23],[9.08,12.59],[9.17,12.9]]]},\"properties\":{\"id\":3788,\"height\":484,\"biome\":12,\"type\":\"island\",\"population\":16000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3704,3705,3789,3873,3787]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.04,11.62],[-7.96,11.34],[-8.16,11.03],[-8.61,11.03],[-8.66,11.73],[-8.04,11.62]]]},\"properties\":{\"id\":3923,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":7802,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3840,3841,3924,3922]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.04,11.45],[-2.64,11.73],[-2.59,11.7],[-2.76,10.92],[-3.15,10.89],[-3.04,11.45]]]},\"properties\":{\"id\":3933,\"height\":484,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3932,3850,3851,3934]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.53,37.05],[-21.01,36.99],[-21.07,37.41],[-20.53,37.64],[-20.42,37.52],[-20.53,37.05]]]},\"properties\":{\"id\":85,\"height\":529,\"biome\":10,\"type\":\"island\",\"population\":30646,\"state\":4,\"province\":45,\"culture\":9,\"religion\":9,\"neighbors\":[86,161,84,11,12]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.18,35.87],[-19.27,35.87],[-19.49,36.1],[-19.52,36.15],[-19.32,36.49],[-18.9,36.68],[-18.82,36.41],[-18.98,35.99],[-19.18,35.87]]]},\"properties\":{\"id\":238,\"height\":529,\"biome\":2,\"type\":\"island\",\"population\":19000,\"state\":4,\"province\":46,\"culture\":9,\"religion\":9,\"neighbors\":[316,315,314,237,163,164,165,239]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.23,35.43],[-5.79,35.31],[-5.88,35.4],[-5.93,35.71],[-5.18,35.87],[-5.23,35.43],[-5.23,35.43]]]},\"properties\":{\"id\":340,\"height\":529,\"biome\":10,\"type\":\"island\",\"population\":16000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[416,415,414,339,263,341]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.75,35.4],[-4.92,34.84],[-5.09,34.84],[-5.23,35.43],[-5.23,35.43],[-4.75,35.4]]]},\"properties\":{\"id\":416,\"height\":529,\"biome\":10,\"type\":\"island\",\"population\":10000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[341,417,489,415,340]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.54,32.77],[-13.05,32.63],[-13.08,32.63],[-12.99,33.16],[-12.46,33.36],[-12.38,33.27],[-12.54,32.77]]]},\"properties\":{\"id\":695,\"height\":529,\"biome\":6,\"type\":\"island\",\"population\":6923,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[696,769,768,694,621,622]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.03,32.24],[-14.43,32.15],[-14.68,32.54],[-14.06,32.77],[-13.89,32.52],[-14.03,32.24]]]},\"properties\":{\"id\":766,\"height\":529,\"biome\":4,\"type\":\"island\",\"population\":11745,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[767,839,765,692,693]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.64,32.4],[-11.95,32.26],[-12.21,32.24],[-12.26,32.29],[-12.32,32.57],[-11.81,32.82],[-11.59,32.52],[-11.64,32.4]]]},\"properties\":{\"id\":770,\"height\":529,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[771,844,843,842,769,696,697]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.68,31.37],[-3.88,31.54],[-3.43,31.98],[-3.26,31.98],[-3.29,31.51],[-3.68,31.37]]]},\"properties\":{\"id\":859,\"height\":529,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[933,932,858,786,860]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.58,31.51],[8.72,31.65],[9.06,31.62],[9.2,31.37],[9.2,31.2],[8.61,30.95],[8.58,31.51]]]},\"properties\":{\"id\":956,\"height\":529,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[955,881,882,883,957,1029]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.57,30.42],[1.15,30.78],[1.15,30.98],[1.49,31.17],[1.83,30.84],[1.72,30.5],[1.57,30.42]]]},\"properties\":{\"id\":1015,\"height\":529,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1088,1087,1014,942,943,1016]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.92,29.47],[-16.2,29.21],[-16.57,29.33],[-16.73,29.58],[-16.73,29.63],[-16.54,29.83],[-16.12,29.86],[-15.92,29.47]]]},\"properties\":{\"id\":1126,\"height\":529,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1127,1201,1200,1199,1125,1053,1054]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.83,29.69],[-11.14,29.55],[-11.48,30],[-11.36,30.25],[-10.83,29.83],[-10.83,29.69]]]},\"properties\":{\"id\":1136,\"height\":529,\"biome\":4,\"type\":\"island\",\"population\":5305,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1137,1210,1135,1063,1064]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.56,29.3],[-2.98,29.86],[-2.84,30.08],[-2.7,30.19],[-2.64,30.22],[-2.11,29.89],[-2.11,29.69],[-2.33,29.38],[-2.56,29.3]]]},\"properties\":{\"id\":1152,\"height\":529,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1226,1151,1078,1079,1007,1080,1153,1227]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.4,28.74],[-5.93,29.02],[-5.91,29.07],[-5.74,29.24],[-5.37,29.35],[-5.26,29.21],[-5.12,28.88],[-5.4,28.74]]]},\"properties\":{\"id\":1220,\"height\":529,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1294,1293,1219,1145,1146,1147,1221]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.64,27.31],[-11.78,27.28],[-11.87,27.34],[-11.92,27.56],[-11.73,27.98],[-11.33,27.59],[-11.64,27.31]]]},\"properties\":{\"id\":1429,\"height\":529,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1430,1504,1503,1428,1355,1356]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.91,27.09],[-4.25,26.84],[-4.58,27.17],[-4.39,27.59],[-3.97,27.62],[-3.88,27.54],[-3.91,27.09]]]},\"properties\":{\"id\":1443,\"height\":529,\"biome\":4,\"type\":\"island\",\"population\":17963,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1444,1518,1517,1442,1370,1371]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.8,15.39],[-12.88,15.08],[-13.36,14.83],[-13.56,15.03],[-13.58,15.28],[-13.44,15.48],[-12.8,15.39]]]},\"properties\":{\"id\":3310,\"height\":529,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3219,3311,3400,3399,3309,3218]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.5,15.5],[6.83,15.5],[6.98,15.08],[6.89,14.95],[6.61,15],[6.38,15.34],[6.5,15.5]]]},\"properties\":{\"id\":3347,\"height\":529,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":147,\"culture\":8,\"religion\":8,\"neighbors\":[3255,3256,3348,3438,3437,3346]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.53,13.8],[-9.59,13.71],[-10.29,13.77],[-10.32,13.83],[-10.27,14.22],[-10.21,14.27],[-9.65,14.13],[-9.53,13.8]]]},\"properties\":{\"id\":3497,\"height\":529,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3498,3585,3584,3583,3496,3405,3406]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.04,14.36],[-8.02,14.33],[-8.21,13.71],[-8.55,13.63],[-8.8,13.91],[-8.72,14.25],[-8.04,14.36]]]},\"properties\":{\"id\":3500,\"height\":529,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3409,3410,3501,3587,3586,3499]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.99,14.3],[-4.19,13.71],[-4.3,13.57],[-4.73,14.05],[-4.73,14.08],[-4.22,14.39],[-3.99,14.3]]]},\"properties\":{\"id\":3507,\"height\":529,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3417,3508,3595,3594,3506,3416]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.88,14.3],[-3.66,13.77],[-4.19,13.71],[-3.99,14.3],[-3.94,14.33],[-3.88,14.3]]]},\"properties\":{\"id\":3508,\"height\":529,\"biome\":9,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3418,3509,3595,3507,3417]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.75,14.36],[5.37,14.44],[5.63,14.22],[5.51,13.94],[4.95,13.91],[4.75,14.36]]]},\"properties\":{\"id\":3525,\"height\":529,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3524,3434,3435,3526,3612]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.68,13.13],[-14.54,12.79],[-14.6,12.68],[-15.1,12.79],[-15.1,13.15],[-14.68,13.13]]]},\"properties\":{\"id\":3660,\"height\":529,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3575,3661,3744,3743,3659]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.66,13.29],[-8.61,12.68],[-8.77,12.59],[-9.11,12.76],[-8.97,13.24],[-8.66,13.29]]]},\"properties\":{\"id\":3671,\"height\":529,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3586,3672,3755,3754,3670]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.33,13.46],[-6.27,13.41],[-6.38,12.76],[-6.72,12.73],[-7.03,13.18],[-7,13.24],[-6.36,13.49],[-6.33,13.46]]]},\"properties\":{\"id\":3675,\"height\":529,\"biome\":9,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3504,3591,3676,3758,3674,3589,3590]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.28,13.38],[9.62,13.32],[9.7,13.21],[9.82,12.87],[9.73,12.73],[9.17,12.9],[9.11,13.01],[9.28,13.38]]]},\"properties\":{\"id\":3705,\"height\":529,\"biome\":12,\"type\":\"island\",\"population\":18000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3619,3620,3621,3706,3789,3788,3704]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.67,12.62],[-15.86,12.32],[-16.12,12.26],[-16.37,12.68],[-16.17,12.87],[-15.72,12.79],[-15.67,12.62]]]},\"properties\":{\"id\":3741,\"height\":529,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3659,3742,3826,3740,3657,3658]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.66,11.73],[-8.61,11.03],[-8.8,10.89],[-8.83,10.89],[-9.31,11.5],[-9.11,11.81],[-8.69,11.87],[-8.66,11.73]]]},\"properties\":{\"id\":3922,\"height\":529,\"biome\":6,\"type\":\"island\",\"population\":30414,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3840,3923,3921,3838,3839]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.66,10.97],[3.85,11.56],[4.28,11.53],[4.5,10.83],[4.42,10.72],[3.66,10.97]]]},\"properties\":{\"id\":3946,\"height\":529,\"biome\":4,\"type\":\"island\",\"population\":8850,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3945,3863,3947]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.39,36.32],[-18.28,35.82],[-18.28,35.82],[-18.98,35.99],[-18.82,36.41],[-18.39,36.32]]]},\"properties\":{\"id\":239,\"height\":576,\"biome\":9,\"type\":\"island\",\"population\":15535,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[165,240,317,316,238]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.73,35.73],[-16.93,35.76],[-17.04,35.85],[-17.07,36.24],[-16.93,36.41],[-16.82,36.38],[-16.59,35.9],[-16.73,35.73]]]},\"properties\":{\"id\":242,\"height\":576,\"biome\":2,\"type\":\"island\",\"population\":32007,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[320,319,318,241,168,169,243]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.69,34.78],[-16.06,34.87],[-16.03,35.26],[-15.58,35.26],[-15.5,35.01],[-15.69,34.78]]]},\"properties\":{\"id\":396,\"height\":576,\"biome\":2,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[470,469,395,321,397]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.33,34.33],[-4.89,34.28],[-4.81,34.78],[-4.56,34.78],[-4.5,34.7],[-4.33,34.33]]]},\"properties\":{\"id\":490,\"height\":576,\"biome\":9,\"type\":\"island\",\"population\":11475,\"state\":1,\"province\":9,\"culture\":4,\"religion\":12,\"neighbors\":[491,564,489,417,418]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.76,34.33],[-3.15,34.5],[-3.04,34.81],[-2.42,34.87],[-2.42,34.75],[-2.56,34.39],[-2.76,34.33]]]},\"properties\":{\"id\":493,\"height\":576,\"biome\":9,\"type\":\"island\",\"population\":19085,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[568,567,419,420,495,494]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.32,33.1],[3.09,33.52],[3.35,33.94],[3.82,33.64],[3.54,33.16],[3.32,33.1]]]},\"properties\":{\"id\":651,\"height\":576,\"biome\":9,\"type\":\"island\",\"population\":19000,\"state\":10,\"province\":134,\"culture\":4,\"religion\":4,\"neighbors\":[725,650,578,579,652]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.87,32.21],[-10.24,32.07],[-10.27,32.6],[-10.07,32.66],[-9.76,32.46],[-9.87,32.21]]]},\"properties\":{\"id\":774,\"height\":576,\"biome\":9,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[848,847,773,699,700]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.94,32.15],[-9.14,32.07],[-9.65,32.49],[-9.62,32.49],[-8.97,32.66],[-8.94,32.15]]]},\"properties\":{\"id\":775,\"height\":576,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[776,849,848,700,701]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.1,31.51],[-15.69,31.34],[-15.83,31.59],[-15.33,32.15],[-15.24,32.18],[-15.07,31.87],[-15.05,31.59],[-15.1,31.51]]]},\"properties\":{\"id\":837,\"height\":576,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[912,911,910,836,764,765,838]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.84,31.4],[-12.01,31.2],[-12.23,31.23],[-12.57,31.68],[-12.23,31.79],[-11.78,31.56],[-11.76,31.54],[-11.84,31.4]]]},\"properties\":{\"id\":917,\"height\":576,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[918,991,990,916,842,843,844]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.99,29.1],[-13.5,28.74],[-13.53,28.77],[-13.47,29.44],[-13.11,29.38],[-12.99,29.1]]]},\"properties\":{\"id\":1206,\"height\":576,\"biome\":6,\"type\":\"island\",\"population\":12051,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1207,1279,1278,1205,1132]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.18,28.68],[-10.74,28.79],[-10.86,28.96],[-10.55,29.38],[-10.43,29.35],[-10.04,28.91],[-10.18,28.68]]]},\"properties\":{\"id\":1211,\"height\":576,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1285,1284,1283,1210,1138,1212]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.66,28.38],[-9.25,28.32],[-9.2,29.05],[-9.2,29.05],[-8.69,28.43],[-8.66,28.38]]]},\"properties\":{\"id\":1287,\"height\":576,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1288,1361,1286,1213,1214]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.4,28.74],[-5.65,28.35],[-6.07,28.82],[-6.07,28.85],[-5.93,29.02],[-5.4,28.74]]]},\"properties\":{\"id\":1293,\"height\":576,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1220,1294,1292,1291,1219]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.83,27.09],[-11.36,27.12],[-11.64,27.31],[-11.33,27.59],[-11.14,27.68],[-10.83,27.56],[-10.83,27.09]]]},\"properties\":{\"id\":1430,\"height\":576,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1431,1505,1504,1429,1356,1357]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.34,27.31],[-9.48,27.28],[-9.7,27.4],[-9.76,27.51],[-9.65,27.79],[-9.23,27.87],[-9.06,27.73],[-9.34,27.31]]]},\"properties\":{\"id\":1433,\"height\":576,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1434,1508,1507,1432,1359,1360,1361]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.74,25.58],[-11.33,25.58],[-11.17,26.22],[-10.83,26.19],[-10.66,25.8],[-10.74,25.58]]]},\"properties\":{\"id\":1655,\"height\":576,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1734,1733,1654,1580,1656]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.61,16.37],[-13.58,15.98],[-14.01,15.92],[-14.17,16.01],[-14.26,16.54],[-14.03,16.6],[-13.61,16.37]]]},\"properties\":{\"id\":3125,\"height\":576,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3037,3126,3218,3217,3124,3036]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.02,14.72],[-8.04,14.36],[-8.72,14.25],[-8.8,14.44],[-8.61,14.72],[-8.02,14.72]]]},\"properties\":{\"id\":3409,\"height\":576,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3319,3410,3500,3499,3408]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.32,12.26],[-17.47,12.04],[-17.61,11.98],[-17.86,12.2],[-17.94,12.59],[-17.92,12.68],[-17.44,12.62],[-17.32,12.26]]]},\"properties\":{\"id\":3738,\"height\":576,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3739,3824,3823,3822,3737,3654,3655]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.01,12.85],[5.37,12.65],[5.43,12.23],[5.01,12.18],[4.84,12.23],[4.61,12.68],[4.64,12.71],[5.01,12.85]]]},\"properties\":{\"id\":3780,\"height\":576,\"biome\":4,\"type\":\"island\",\"population\":36534,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3696,3697,3781,3865,3864,3779,3695]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.26,12.62],[7.82,12.79],[7.96,12.76],[7.79,12.18],[7.68,12.09],[7.23,12.4],[7.26,12.62]]]},\"properties\":{\"id\":3784,\"height\":576,\"biome\":6,\"type\":\"island\",\"population\":36226,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3783,3701,3702,3785,3870,3869]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.87,37.61],[-17.13,37.75],[-17.3,38.06],[-16.51,38.45],[-16.37,38.25],[-16.87,37.61]]]},\"properties\":{\"id\":18,\"height\":625,\"biome\":2,\"type\":\"island\",\"population\":20000,\"state\":0,\"province\":0,\"culture\":9,\"religion\":9,\"neighbors\":[19,92,17]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.24,33.78],[8.1,33.83],[8.27,34.39],[8.55,34.25],[8.52,33.89],[8.24,33.78]]]},\"properties\":{\"id\":588,\"height\":625,\"biome\":9,\"type\":\"island\",\"population\":10565,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[660,659,587,514,589]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.24,32.38],[-8.52,32.21],[-8.69,32.74],[-8.47,32.94],[-8.21,32.77],[-8.18,32.71],[-8.24,32.38]]]},\"properties\":{\"id\":777,\"height\":625,\"biome\":9,\"type\":\"island\",\"population\":23395,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[778,850,776,702,703,704]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.43,31.48],[-15.05,31.59],[-15.07,31.87],[-14.48,32.04],[-14.34,31.62],[-14.43,31.48]]]},\"properties\":{\"id\":838,\"height\":625,\"biome\":3,\"type\":\"island\",\"population\":5613,\"state\":6,\"province\":71,\"culture\":9,\"religion\":9,\"neighbors\":[913,912,837,765,839]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.8,31.68],[-13.42,31.79],[-13.47,31.87],[-13.47,31.9],[-13.02,32.43],[-12.8,32.12],[-12.8,31.7],[-12.8,31.68]]]},\"properties\":{\"id\":841,\"height\":625,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[916,915,840,767,768,769,842]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.12,31.42],[-5.2,31.51],[-5.32,32.12],[-5.03,32.18],[-4.87,31.59],[-5.09,31.4],[-5.12,31.42]]]},\"properties\":{\"id\":856,\"height\":625,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":80,\"culture\":7,\"religion\":7,\"neighbors\":[930,929,855,783,857,931]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.64,30.39],[-6.72,30.42],[-6.36,30.98],[-6.1,30.84],[-5.99,30.36],[-6.64,30.39]]]},\"properties\":{\"id\":1001,\"height\":625,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[1073,1072,1000,928,1002]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.48,30],[-11.7,29.77],[-12.01,29.91],[-11.67,30.53],[-11.39,30.53],[-11.36,30.25],[-11.48,30]]]},\"properties\":{\"id\":1063,\"height\":625,\"biome\":6,\"type\":\"island\",\"population\":5904,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1136,1135,1134,1062,991,1064]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.01,15.92],[-14.09,15.36],[-14.51,15.48],[-14.65,15.67],[-14.65,15.81],[-14.17,16.01],[-14.01,15.92]]]},\"properties\":{\"id\":3217,\"height\":625,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3125,3218,3308,3307,3216,3124]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.8,15.87],[-12.74,15.45],[-12.8,15.39],[-13.44,15.48],[-13.53,15.95],[-12.94,16.09],[-12.8,15.87]]]},\"properties\":{\"id\":3219,\"height\":625,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3127,3220,3311,3310,3218,3126]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.66,15.28],[-8.66,14.83],[-9.25,14.86],[-9.31,14.95],[-9.14,15.34],[-9.11,15.36],[-8.66,15.28]]]},\"properties\":{\"id\":3318,\"height\":625,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3227,3319,3408,3407,3317,3226]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.95,15.62],[7.62,15.25],[7.51,15.11],[6.98,15.08],[6.83,15.5],[6.95,15.62]]]},\"properties\":{\"id\":3348,\"height\":625,\"biome\":4,\"type\":\"island\",\"population\":15923,\"state\":12,\"province\":153,\"culture\":8,\"religion\":10,\"neighbors\":[3256,3257,3349,3438,3347]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7,13.24],[-7.03,13.18],[-7.34,13.01],[-7.65,13.35],[-7.59,13.55],[-7.17,13.6],[-7,13.24]]]},\"properties\":{\"id\":3589,\"height\":625,\"biome\":6,\"type\":\"island\",\"population\":14000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3590,3675,3674,3673,3588,3502]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.61,11.98],[-17.66,11.87],[-18.11,11.62],[-18.11,11.62],[-18.39,11.76],[-18.37,12.09],[-17.86,12.2],[-17.61,11.98]]]},\"properties\":{\"id\":3822,\"height\":625,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3738,3823,3906,3905,3904,3821,3737]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.9,12.2],[12.54,12.06],[12.57,12.04],[12.49,11.62],[12.15,11.56],[11.98,11.73],[11.9,12.2]]]},\"properties\":{\"id\":3878,\"height\":625,\"biome\":12,\"type\":\"island\",\"population\":1000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3877,3793,3794,3879,3961,3960]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.07,34.75],[-15.1,34.75],[-15.5,35.01],[-15.58,35.26],[-15.5,35.37],[-15.07,35.31],[-15.07,34.75]]]},\"properties\":{\"id\":397,\"height\":676,\"biome\":9,\"type\":\"island\",\"population\":13000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[398,471,470,396,321,322]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.66,34.14],[-13.08,33.94],[-13.33,34.11],[-13.27,34.56],[-13.02,34.7],[-12.66,34.14]]]},\"properties\":{\"id\":474,\"height\":676,\"biome\":9,\"type\":\"island\",\"population\":19713,\"state\":6,\"province\":70,\"culture\":7,\"religion\":7,\"neighbors\":[475,549,548,473,401]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.14,34.14],[-0.17,34.67],[-0.03,34.81],[0.56,34.61],[0.56,34.59],[0.56,34.31],[0.53,34.25],[0.25,34.11],[0.14,34.14]]]},\"properties\":{\"id\":499,\"height\":676,\"biome\":9,\"type\":\"island\",\"population\":33114,\"state\":10,\"province\":139,\"culture\":4,\"religion\":4,\"neighbors\":[572,498,425,426,427,500,574,573]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.73,33.8],[-13.98,33.78],[-14.37,34.28],[-13.89,34.36],[-13.61,34.03],[-13.73,33.8]]]},\"properties\":{\"id\":547,\"height\":676,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[548,619,546,472,473]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.14,33.61],[-0.48,33.69],[-0.34,34.05],[0.14,34.14],[0.25,34.11],[0.14,33.61]]]},\"properties\":{\"id\":572,\"height\":676,\"biome\":9,\"type\":\"island\",\"population\":20006,\"state\":1,\"province\":7,\"culture\":4,\"religion\":12,\"neighbors\":[573,644,571,498,499]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.49,32.35],[10.57,32.4],[11.03,32.43],[11,32.21],[10.77,32.07],[10.49,32.21],[10.49,32.35]]]},\"properties\":{\"id\":812,\"height\":676,\"biome\":10,\"type\":\"island\",\"population\":6960,\"state\":2,\"province\":159,\"culture\":6,\"religion\":6,\"neighbors\":[811,739,740,814,886,885]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.2,31.03],[-9.23,30.87],[-9.7,30.84],[-9.82,31.03],[-9.7,31.56],[-9.37,31.59],[-9.23,31.45],[-9.2,31.03]]]},\"properties\":{\"id\":922,\"height\":676,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[923,996,995,994,921,848,849]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.7,30.19],[-3.15,30.67],[-2.95,30.98],[-2.73,30.92],[-2.56,30.45],[-2.64,30.22],[-2.7,30.19]]]},\"properties\":{\"id\":1007,\"height\":676,\"biome\":4,\"type\":\"island\",\"population\":6727,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1152,1079,1006,934,1008,1080]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.33,30.5],[4.22,30.81],[4.67,31.09],[4.67,31.09],[4.87,30.89],[4.95,30.67],[4.87,30.53],[4.42,30.42],[4.33,30.5]]]},\"properties\":{\"id\":1021,\"height\":676,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1092,1020,947,948,949,1022,1094,1093]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.19,30.03],[6.13,30.36],[6.5,30.45],[6.75,30.39],[6.83,29.89],[6.58,29.77],[6.19,30.03]]]},\"properties\":{\"id\":1096,\"height\":676,\"biome\":6,\"type\":\"island\",\"population\":2000,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1168,1095,1024,1025,1097,1169]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.7,28.77],[-12.4,28.82],[-12.43,28.96],[-12.29,29.27],[-11.84,29.3],[-11.59,28.82],[-11.7,28.77]]]},\"properties\":{\"id\":1208,\"height\":676,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1282,1281,1280,1207,1134,1209]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.13,27.87],[-15.44,27.73],[-15.95,28.32],[-15.83,28.4],[-15.19,28.35],[-15.1,28.26],[-15.13,27.87]]]},\"properties\":{\"id\":1349,\"height\":676,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1350,1422,1348,1274,1275,1276]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.88,27.2],[-15.16,27.03],[-15.58,27.37],[-15.55,27.59],[-15.44,27.73],[-15.13,27.87],[-15.02,27.79],[-14.88,27.2]]]},\"properties\":{\"id\":1422,\"height\":676,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1423,1498,1497,1421,1348,1349,1350]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.32,26.28],[-10.77,26.25],[-10.6,26.89],[-10.21,26.75],[-10.21,26.39],[-10.32,26.28]]]},\"properties\":{\"id\":1581,\"height\":676,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1657,1656,1580,1506,1582]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.33,25.58],[-11.36,25.55],[-11.78,25.86],[-11.7,26.14],[-11.33,26.39],[-11.17,26.22],[-11.33,25.58]]]},\"properties\":{\"id\":1654,\"height\":676,\"biome\":4,\"type\":\"island\",\"population\":6951,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1655,1733,1732,1653,1579,1580]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.17,26.16],[-7.14,25.83],[-7.65,25.66],[-7.76,25.8],[-7.37,26.3],[-7.17,26.16]]]},\"properties\":{\"id\":1662,\"height\":676,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1587,1663,1740,1739,1661]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.92,14.27],[-4.73,14.08],[-4.73,14.05],[-5.09,13.63],[-5.12,13.6],[-5.48,13.88],[-5.4,14.25],[-4.92,14.27]]]},\"properties\":{\"id\":3506,\"height\":676,\"biome\":6,\"type\":\"island\",\"population\":16956,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3415,3416,3507,3594,3593,3592,3505]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11,13.43],[-10.86,13.32],[-10.86,12.71],[-11.08,12.76],[-11.42,13.21],[-11.31,13.41],[-11,13.43]]]},\"properties\":{\"id\":3667,\"height\":676,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3582,3583,3668,3750,3666,3581]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.93,13.13],[-7.65,13.35],[-7.34,13.01],[-7.54,12.71],[-7.99,12.87],[-7.99,12.93],[-7.93,13.13]]]},\"properties\":{\"id\":3673,\"height\":676,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3587,3588,3589,3674,3756,3672]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.86,11.95],[9.37,12.01],[9.53,11.62],[9.25,11.22],[8.83,11.67],[8.86,11.95]]]},\"properties\":{\"id\":3872,\"height\":676,\"biome\":12,\"type\":\"island\",\"population\":20502,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3871,3787,3873,3956,3955]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.09,11.48],[-14.17,10.78],[-14.32,10.64],[-14.65,10.89],[-14.62,11.48],[-14.09,11.48]]]},\"properties\":{\"id\":3912,\"height\":676,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3829,3913,3911]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.63,36.85],[-11.17,36.68],[-11.28,36.91],[-11.17,37.41],[-11.02,37.44],[-10.88,37.36],[-10.58,36.99],[-10.63,36.85]]]},\"properties\":{\"id\":103,\"height\":729,\"biome\":10,\"type\":\"island\",\"population\":2000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[180,179,178,102,29,30,104]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.21,35.85],[-8.49,35.9],[-8.66,36.04],[-8.72,36.27],[-8.49,36.6],[-7.96,36.24],[-7.93,36.21],[-8.13,35.9],[-8.21,35.85]]]},\"properties\":{\"id\":258,\"height\":729,\"biome\":10,\"type\":\"island\",\"population\":27433,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[336,335,334,257,183,184,185,259]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.14,35.37],[-16.51,35.34],[-16.73,35.73],[-16.59,35.9],[-16.2,36.13],[-16,35.85],[-16.14,35.37]]]},\"properties\":{\"id\":320,\"height\":729,\"biome\":2,\"type\":\"island\",\"population\":23622,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[321,395,319,242,243,244]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.89,34.36],[-14.37,34.28],[-14.46,34.31],[-14.54,34.5],[-13.92,34.98],[-13.78,34.59],[-13.89,34.36]]]},\"properties\":{\"id\":472,\"height\":729,\"biome\":2,\"type\":\"island\",\"population\":11485,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[473,547,546,471,399,400]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.22,34.36],[6.13,34.67],[6.81,34.87],[6.92,34.75],[6.89,34.67],[6.69,34.31],[6.47,34.22],[6.22,34.36]]]},\"properties\":{\"id\":510,\"height\":729,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[584,509,437,438,512,511,585]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.81,32.82],[-12.32,32.57],[-12.54,32.77],[-12.38,33.27],[-11.92,33.13],[-11.84,33.02],[-11.81,32.82]]]},\"properties\":{\"id\":696,\"height\":729,\"biome\":6,\"type\":\"island\",\"population\":20684,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[697,770,769,695,622,623]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.04,31.26],[-3.29,31.51],[-3.26,31.98],[-3.04,32.15],[-2.64,32.01],[-2.64,31.87],[-2.7,31.56],[-3.04,31.26]]]},\"properties\":{\"id\":860,\"height\":729,\"biome\":9,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[934,933,859,786,787,861,935]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.06,30.56],[-9.56,30.28],[-9.87,30.47],[-9.7,30.84],[-9.23,30.87],[-9.06,30.56]]]},\"properties\":{\"id\":995,\"height\":729,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[996,1067,1066,994,922]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.07,28.82],[-6.36,28.46],[-6.92,28.43],[-7.03,28.85],[-6.38,29.02],[-6.07,28.85],[-6.07,28.82]]]},\"properties\":{\"id\":1291,\"height\":729,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1293,1292,1365,1290,1218,1219]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.49,27.82],[-10.83,27.56],[-11.14,27.68],[-11.31,28.21],[-11.22,28.32],[-10.8,28.32],[-10.66,28.21],[-10.49,27.82]]]},\"properties\":{\"id\":1357,\"height\":729,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1358,1431,1430,1356,1282,1283,1284]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.27,27.51],[-6.55,27.34],[-6.86,27.42],[-6.78,27.9],[-6.55,27.84],[-6.33,27.68],[-6.27,27.51]]]},\"properties\":{\"id\":1438,\"height\":729,\"biome\":4,\"type\":\"island\",\"population\":8186,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1439,1514,1513,1437,1365,1366]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.86,14.86],[-10.55,14.67],[-10.52,14.39],[-11.02,14.33],[-11.28,14.39],[-11.28,14.86],[-10.86,14.86]]]},\"properties\":{\"id\":3404,\"height\":729,\"biome\":6,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3314,3315,3405,3496,3495,3403]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.75,14.36],[4.95,13.91],[4.89,13.66],[4.33,13.88],[4.3,13.94],[4.33,14.13],[4.53,14.33],[4.73,14.36],[4.75,14.36]]]},\"properties\":{\"id\":3524,\"height\":729,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3434,3525,3612,3611,3610,3523,3432,3433]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.88,14.27],[6.19,13.85],[6.1,13.43],[6.08,13.43],[5.54,13.69],[5.51,13.94],[5.63,14.22],[5.88,14.27]]]},\"properties\":{\"id\":3526,\"height\":729,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3435,3527,3614,3699,3613,3612,3525]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.63,13.49],[1.69,13.49],[2.14,12.96],[2.08,12.85],[1.77,12.73],[1.69,12.79],[1.57,13.38],[1.63,13.49]]]},\"properties\":{\"id\":3691,\"height\":729,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":128,\"culture\":8,\"religion\":8,\"neighbors\":[3605,3518,3606,3692,3774,3773,3690]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.12,13.32],[3.32,13.46],[3.91,13.24],[3.82,12.85],[3.54,12.76],[3.12,13.32]]]},\"properties\":{\"id\":3694,\"height\":729,\"biome\":4,\"type\":\"island\",\"population\":29386,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3693,3608,3609,3695,3777]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.37,12.68],[-16.12,12.26],[-16.37,12.04],[-16.79,12.2],[-16.82,12.26],[-16.73,12.65],[-16.37,12.68]]]},\"properties\":{\"id\":3740,\"height\":729,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3657,3741,3826,3825,3824,3739]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.31,10.8],[-16.51,10.58],[-17.27,11.06],[-16.45,11.48],[-16.31,10.8]]]},\"properties\":{\"id\":3908,\"height\":729,\"biome\":3,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3909,3907]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.55,11.11],[10.86,11.56],[11.33,11.5],[11.56,11.06],[11.03,10.61],[10.49,11],[10.55,11.11]]]},\"properties\":{\"id\":3959,\"height\":729,\"biome\":12,\"type\":\"island\",\"population\":38641,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3957,3958,3876,3960]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.04,35.85],[-17.77,35.87],[-17.72,36.21],[-17.63,36.29],[-17.27,36.29],[-17.07,36.24],[-17.04,35.85]]]},\"properties\":{\"id\":241,\"height\":784,\"biome\":2,\"type\":\"island\",\"population\":5000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[242,318,240,166,167,168]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.46,34.31],[5.54,34.64],[6.1,34.7],[6.13,34.67],[6.22,34.36],[5.85,34.11],[5.46,34.31]]]},\"properties\":{\"id\":509,\"height\":784,\"biome\":10,\"type\":\"island\",\"population\":17000,\"state\":10,\"province\":137,\"culture\":3,\"religion\":3,\"neighbors\":[583,508,436,437,510,584]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.56,33.66],[4.33,33.44],[3.94,33.69],[4.13,34.25],[4.19,34.28],[4.56,34.05],[4.56,33.66]]]},\"properties\":{\"id\":580,\"height\":784,\"biome\":9,\"type\":\"island\",\"population\":18000,\"state\":10,\"province\":134,\"culture\":3,\"religion\":3,\"neighbors\":[581,653,652,579,506,507]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.25,33.78],[9.06,34.19],[9.2,34.33],[9.65,34.25],[9.73,33.92],[9.56,33.72],[9.37,33.66],[9.25,33.78]]]},\"properties\":{\"id\":590,\"height\":784,\"biome\":10,\"type\":\"island\",\"population\":16000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[661,589,515,516,517,663,662]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.92,33.13],[-12.38,33.27],[-12.46,33.36],[-12.46,33.47],[-12.38,33.78],[-11.78,33.55],[-11.92,33.13]]]},\"properties\":{\"id\":622,\"height\":784,\"biome\":9,\"type\":\"island\",\"population\":16000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[623,696,695,621,549,550]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.58,33.38],[8.63,33.72],[9.25,33.78],[9.37,33.66],[9.28,33.38],[8.77,33.19],[8.58,33.38]]]},\"properties\":{\"id\":661,\"height\":784,\"biome\":9,\"type\":\"island\",\"population\":18000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[734,660,589,590,662,735]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.63,32.1],[-8.94,32.15],[-8.97,32.66],[-8.97,32.68],[-8.69,32.74],[-8.52,32.21],[-8.63,32.1]]]},\"properties\":{\"id\":776,\"height\":784,\"biome\":9,\"type\":\"island\",\"population\":13000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[850,849,775,701,702,777]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.32,31.42],[-10.69,31.56],[-10.74,31.65],[-10.77,31.93],[-10.69,32.04],[-10.29,32.01],[-10.01,31.59],[-10.32,31.42]]]},\"properties\":{\"id\":846,\"height\":784,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[921,920,919,845,772,773,847]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.99,30.92],[6.02,30.98],[6.44,30.98],[6.55,30.92],[6.5,30.45],[6.13,30.36],[5.96,30.59],[5.99,30.92]]]},\"properties\":{\"id\":1024,\"height\":784,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1023,950,951,952,1025,1096,1095]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.86,27.42],[-7.12,27.26],[-7.4,27.48],[-7.48,27.65],[-6.86,27.98],[-6.78,27.9],[-6.86,27.42]]]},\"properties\":{\"id\":1437,\"height\":784,\"biome\":4,\"type\":\"island\",\"population\":14982,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1438,1513,1512,1436,1364,1365]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.99,27.06],[-6.47,26.67],[-6.61,26.84],[-6.55,27.34],[-6.27,27.51],[-6.19,27.42],[-5.99,27.06]]]},\"properties\":{\"id\":1514,\"height\":784,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1440,1589,1588,1513,1438,1439]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.61,14.72],[-8.8,14.44],[-8.97,14.5],[-9.25,14.86],[-8.66,14.83],[-8.61,14.72]]]},\"properties\":{\"id\":3408,\"height\":784,\"biome\":6,\"type\":\"island\",\"population\":2000,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3319,3409,3499,3407,3318]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.76,13.38],[0.87,13.38],[1.07,12.99],[1.1,12.85],[1.01,12.71],[0.65,12.54],[0.42,12.73],[0.51,13.21],[0.76,13.38]]]},\"properties\":{\"id\":3689,\"height\":784,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":9,\"province\":170,\"culture\":8,\"religion\":8,\"neighbors\":[3603,3604,3605,3690,3773,3772,3771,3688]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.68,12.82],[-0.65,12.2],[-0.87,12.18],[-1.38,12.65],[-0.98,12.96],[-0.68,12.82]]]},\"properties\":{\"id\":3769,\"height\":784,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":0,\"religion\":0,\"neighbors\":[3686,3770,3854,3768,3685]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.82,12.87],[10.27,12.9],[10.35,12.59],[10.15,12.26],[9.9,12.26],[9.7,12.34],[9.73,12.73],[9.82,12.87]]]},\"properties\":{\"id\":3789,\"height\":784,\"biome\":12,\"type\":\"island\",\"population\":20000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3705,3706,3707,3790,3874,3873,3788]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.61,11.67],[-4.56,11.62],[-5.18,11],[-5.2,11],[-5.34,11.62],[-5.32,11.76],[-4.61,11.67]]]},\"properties\":{\"id\":3929,\"height\":784,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3846,3847,3930,3928,3845]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.33,11.59],[-4.25,10.89],[-4.42,10.72],[-5.18,11],[-4.56,11.62],[-4.33,11.59]]]},\"properties\":{\"id\":3930,\"height\":784,\"biome\":4,\"type\":\"island\",\"population\":10076,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3847,3931,3929]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.67,11.84],[0.76,11.48],[0.42,11],[0.2,10.97],[0.22,11.7],[0.67,11.84]]]},\"properties\":{\"id\":3939,\"height\":784,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3856,3857,3940,3938]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.9,11.59],[10.21,11.73],[10.55,11.11],[10.49,11],[10.13,10.89],[9.9,11.59]]]},\"properties\":{\"id\":3957,\"height\":784,\"biome\":12,\"type\":\"island\",\"population\":19975,\"state\":8,\"province\":169,\"culture\":8,\"religion\":8,\"neighbors\":[3956,3874,3958,3959]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.07,35.31],[-15.5,35.37],[-15.5,35.82],[-15.38,35.9],[-15.36,35.9],[-15.16,35.85],[-14.99,35.4],[-15.07,35.31]]]},\"properties\":{\"id\":322,\"height\":841,\"biome\":2,\"type\":\"island\",\"population\":23693,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[398,397,321,244,245,246,323]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.48,35.43],[-14.99,35.4],[-15.16,35.85],[-14.57,35.93],[-14.48,35.43]]]},\"properties\":{\"id\":323,\"height\":841,\"biome\":2,\"type\":\"island\",\"population\":14000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[324,398,322,246]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.35,34.53],[10.49,35.15],[10.72,34.87],[10.57,34.56],[10.35,34.53]]]},\"properties\":{\"id\":445,\"height\":841,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[519,444,372,518]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.52,34.33],[-1.6,34.53],[-1.6,34.64],[-1.57,34.7],[-0.9,34.78],[-1.01,34.31],[-1.52,34.33]]]},\"properties\":{\"id\":496,\"height\":841,\"biome\":9,\"type\":\"island\",\"population\":14000,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[570,569,495,422,423,497]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.59,33.69],[-11.78,33.55],[-12.38,33.78],[-12.35,34],[-12.26,34.05],[-11.59,33.69]]]},\"properties\":{\"id\":550,\"height\":841,\"biome\":9,\"type\":\"island\",\"population\":12713,\"state\":6,\"province\":70,\"culture\":7,\"religion\":7,\"neighbors\":[551,623,622,549,476]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.48,32.04],[-15.07,31.87],[-15.24,32.18],[-15.24,32.18],[-14.79,32.52],[-14.71,32.54],[-14.68,32.54],[-14.43,32.15],[-14.48,32.04]]]},\"properties\":{\"id\":765,\"height\":841,\"biome\":3,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[839,838,837,764,690,691,692,766]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.67,31.56],[-11.76,31.54],[-11.78,31.56],[-11.95,32.26],[-11.64,32.4],[-11.53,31.79],[-11.67,31.56]]]},\"properties\":{\"id\":844,\"height\":841,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[845,918,917,843,770,771]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.99,31.03],[-13.33,31.12],[-13.56,31.56],[-13.42,31.79],[-12.8,31.68],[-12.91,31.09],[-12.99,31.03]]]},\"properties\":{\"id\":915,\"height\":841,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[989,988,914,840,841,916]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.52,14.64],[-12.94,14.05],[-13.36,14.33],[-13.3,14.47],[-12.68,14.72],[-12.54,14.64],[-12.52,14.64]]]},\"properties\":{\"id\":3401,\"height\":841,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3402,3492,3491,3399,3400,3311]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.48,14.41],[7.62,14.25],[7.57,13.77],[6.98,13.83],[7.03,14.41],[7.48,14.41]]]},\"properties\":{\"id\":3529,\"height\":841,\"biome\":4,\"type\":\"island\",\"population\":21000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3438,3439,3530,3616,3528]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.09,13.63],[-4.53,13.24],[-4.7,13.01],[-5.29,13.32],[-5.12,13.6],[-5.09,13.63]]]},\"properties\":{\"id\":3593,\"height\":841,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3506,3594,3679,3678,3592]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.69,13.15],[-1.01,13.29],[-0.98,12.96],[-1.38,12.65],[-1.43,12.65],[-1.72,13.1],[-1.69,13.15]]]},\"properties\":{\"id\":3685,\"height\":841,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":132,\"culture\":0,\"religion\":0,\"neighbors\":[3599,3600,3686,3769,3768,3684]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.27,11.06],[-17.27,11.06],[-17.38,10.97],[-18.11,11.62],[-17.66,11.87],[-17.27,11.06]]]},\"properties\":{\"id\":3906,\"height\":841,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3823,3907,3905,3822]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.05,11.87],[-5.88,11.45],[-6.1,11],[-6.38,11],[-6.5,11.59],[-6.05,11.9],[-6.05,11.87]]]},\"properties\":{\"id\":3927,\"height\":841,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3759,3845,3928,3926,3844]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.11,11.78],[0.22,11.7],[0.2,10.97],[0,10.89],[-0.39,11.08],[-0.39,11.73],[-0.39,11.78],[0.11,11.78]]]},\"properties\":{\"id\":3938,\"height\":841,\"biome\":4,\"type\":\"island\",\"population\":8961,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3855,3856,3939,3937,3854]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.71,38.08],[-12.82,37.55],[-13.05,37.36],[-13.47,37.8],[-13.5,38.03],[-13.22,38.31],[-12.71,38.08]]]},\"properties\":{\"id\":25,\"height\":900,\"biome\":10,\"type\":\"island\",\"population\":25000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[26,100,99,24]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.28,36.41],[-11.7,36.35],[-11.73,36.96],[-11.28,36.91],[-11.17,36.68],[-11.25,36.43],[-11.28,36.41]]]},\"properties\":{\"id\":178,\"height\":900,\"biome\":10,\"type\":\"island\",\"population\":16744,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[253,252,177,102,103,179]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.8,35.85],[-18.28,35.82],[-18.39,36.32],[-18.23,36.6],[-17.72,36.21],[-17.77,35.87],[-17.8,35.85]]]},\"properties\":{\"id\":240,\"height\":900,\"biome\":10,\"type\":\"island\",\"population\":22183,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[318,317,239,165,166,241]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.61,35.03],[-7,35.37],[-7,35.4],[-6.83,35.76],[-6.53,35.71],[-6.3,35.23],[-6.47,35.01],[-6.61,35.03]]]},\"properties\":{\"id\":338,\"height\":900,\"biome\":9,\"type\":\"island\",\"population\":17000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[486,413,412,337,262,339,414]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.61,35.03],[-6.97,34.5],[-7.2,34.87],[-7,35.37],[-6.61,35.03]]]},\"properties\":{\"id\":413,\"height\":900,\"biome\":9,\"type\":\"island\",\"population\":24755,\"state\":1,\"province\":11,\"culture\":4,\"religion\":12,\"neighbors\":[338,486,485,412]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.24,34.7],[-6.47,35.01],[-6.3,35.23],[-5.88,35.4],[-5.79,35.31],[-5.77,34.75],[-6.24,34.7]]]},\"properties\":{\"id\":414,\"height\":900,\"biome\":9,\"type\":\"island\",\"population\":29062,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[487,486,338,339,340,415]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.38,33.78],[-12.46,33.47],[-13.11,33.64],[-13.08,33.94],[-12.66,34.14],[-12.52,34.11],[-12.35,34],[-12.38,33.78]]]},\"properties\":{\"id\":549,\"height\":900,\"biome\":9,\"type\":\"island\",\"population\":33596,\"state\":6,\"province\":70,\"culture\":7,\"religion\":7,\"neighbors\":[550,622,621,548,474,475,476]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.71,32.74],[7.37,33.19],[7.71,33.5],[8.1,33.3],[8.1,32.82],[7.71,32.74]]]},\"properties\":{\"id\":733,\"height\":900,\"biome\":9,\"type\":\"island\",\"population\":2000,\"state\":0,\"province\":0,\"culture\":3,\"religion\":3,\"neighbors\":[807,732,658,659,734]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.43,28.96],[-12.99,29.1],[-12.99,29.1],[-13.11,29.38],[-13.11,29.41],[-12.35,29.49],[-12.29,29.27],[-12.43,28.96]]]},\"properties\":{\"id\":1207,\"height\":900,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1208,1280,1279,1206,1132,1133,1134]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.6,26.16],[-5.71,26.19],[-5.82,26.28],[-5.71,26.72],[-5.34,26.64],[-5.43,26.22],[-5.6,26.16]]]},\"properties\":{\"id\":1590,\"height\":900,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1666,1665,1664,1589,1515,1591]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.14,13.88],[-9.14,13.29],[-9.48,13.27],[-9.56,13.35],[-9.59,13.71],[-9.53,13.8],[-9.14,13.88]]]},\"properties\":{\"id\":3585,\"height\":900,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3498,3586,3670,3669,3584,3497]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,13.57],[-4.33,13.32],[-4.53,13.24],[-5.09,13.63],[-4.73,14.05],[-4.3,13.57]]]},\"properties\":{\"id\":3594,\"height\":900,\"biome\":9,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3507,3595,3679,3593,3506]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.7,12.34],[9.9,12.26],[9.87,11.59],[9.53,11.62],[9.37,12.01],[9.51,12.23],[9.7,12.34]]]},\"properties\":{\"id\":3873,\"height\":900,\"biome\":12,\"type\":\"island\",\"population\":18000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3788,3789,3874,3956,3872,3787]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.73,11.42],[-7.26,10.89],[-7.71,10.58],[-8.16,11.03],[-7.96,11.34],[-7.73,11.42]]]},\"properties\":{\"id\":3924,\"height\":900,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3841,3925,3923]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.39,11.73],[-0.39,11.08],[-1.1,10.92],[-1.12,10.94],[-1.15,11.39],[-1.04,11.59],[-0.39,11.73]]]},\"properties\":{\"id\":3937,\"height\":900,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3854,3938,3936,3853]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.87,11.59],[9.9,11.59],[10.13,10.89],[9.9,10.69],[9.25,11.03],[9.25,11.22],[9.53,11.62],[9.87,11.59]]]},\"properties\":{\"id\":3956,\"height\":900,\"biome\":12,\"type\":\"island\",\"population\":29000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3873,3874,3957,3955,3872]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.58,35.26],[-16.03,35.26],[-16.14,35.37],[-16,35.85],[-15.5,35.82],[-15.5,35.37],[-15.58,35.26]]]},\"properties\":{\"id\":321,\"height\":961,\"biome\":2,\"type\":\"island\",\"population\":6000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[397,396,395,320,244,322]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.65,35.37],[-8.07,35.51],[-8.21,35.85],[-8.13,35.9],[-7.57,35.76],[-7.54,35.45],[-7.65,35.37]]]},\"properties\":{\"id\":336,\"height\":961,\"biome\":9,\"type\":\"island\",\"population\":13679,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[412,411,335,258,259,337]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.31,33.27],[-11.84,33.02],[-11.92,33.13],[-11.78,33.55],[-11.59,33.69],[-11.39,33.78],[-11.31,33.27]]]},\"properties\":{\"id\":623,\"height\":961,\"biome\":9,\"type\":\"island\",\"population\":16000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[624,697,696,622,550,551]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.54,32.68],[-8.18,32.71],[-8.21,32.77],[-7.9,33.19],[-7.57,33.13],[-7.48,32.8],[-7.54,32.68]]]},\"properties\":{\"id\":704,\"height\":961,\"biome\":11,\"type\":\"island\",\"population\":15000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[779,778,777,703,630,705]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.95,32.26],[-11.78,31.56],[-12.23,31.79],[-12.21,32.24],[-11.95,32.26]]]},\"properties\":{\"id\":843,\"height\":961,\"biome\":6,\"type\":\"island\",\"population\":5730,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[770,844,917,842]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.7,31.56],[-9.82,31.03],[-10.18,31.03],[-10.29,31.09],[-10.32,31.42],[-10.01,31.59],[-9.76,31.59],[-9.7,31.56]]]},\"properties\":{\"id\":921,\"height\":961,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[848,922,994,993,920,846,847]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.94,30.98],[4.02,31.51],[4.22,31.51],[4.3,31.48],[4.67,31.09],[4.22,30.81],[3.94,30.98]]]},\"properties\":{\"id\":947,\"height\":961,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1020,946,873,874,948,1021]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.53,28.29],[-9.67,28.21],[-9.93,28.21],[-10.18,28.63],[-10.18,28.68],[-10.04,28.91],[-10.01,28.93],[-9.62,28.82],[-9.53,28.29]]]},\"properties\":{\"id\":1285,\"height\":961,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1286,1360,1359,1358,1284,1211,1212,1213]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.98,15.39],[-11.9,14.97],[-11.92,14.95],[-12.35,14.95],[-12.46,15.39],[-12.32,15.45],[-11.98,15.39]]]},\"properties\":{\"id\":3312,\"height\":961,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3221,3313,3403,3402,3311,3220]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.77,14.83],[-15.07,14.27],[-15.13,14.25],[-15.22,14.25],[-15.44,14.33],[-15.47,14.36],[-15.5,14.83],[-15.05,15.06],[-14.77,14.83]]]},\"properties\":{\"id\":3396,\"height\":961,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3307,3397,3488,3574,3487,3486,3395,3306]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.02,14.33],[-10.74,13.8],[-10.86,13.71],[-11.39,14.08],[-11.39,14.27],[-11.28,14.39],[-11.02,14.33]]]},\"properties\":{\"id\":3495,\"height\":961,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3404,3496,3583,3582,3494,3403]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.62,14.13],[-7.71,13.66],[-8.16,13.69],[-8.21,13.71],[-8.02,14.33],[-7.62,14.13]]]},\"properties\":{\"id\":3501,\"height\":961,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3410,3502,3588,3587,3500]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.59,13.55],[-7.65,13.35],[-7.93,13.13],[-8.16,13.69],[-7.71,13.66],[-7.59,13.55]]]},\"properties\":{\"id\":3588,\"height\":961,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3502,3589,3673,3587,3501]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,13.32],[-3.71,13.27],[-3.68,12.76],[-3.83,12.62],[-4.08,12.76],[-4.3,13.32]]]},\"properties\":{\"id\":3680,\"height\":961,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":0,\"religion\":0,\"neighbors\":[3679,3595,3681,3764,3763]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.08,13.07],[0.06,12.76],[-0.11,12.54],[-0.59,12.87],[-0.37,13.13],[-0.08,13.07]]]},\"properties\":{\"id\":3687,\"height\":961,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":170,\"culture\":0,\"religion\":0,\"neighbors\":[3602,3688,3771,3770,3686]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.06,13.29],[0.51,13.21],[0.42,12.73],[0.06,12.76],[-0.08,13.07],[0.06,13.29]]]},\"properties\":{\"id\":3688,\"height\":961,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3602,3603,3689,3771,3687]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.84,12.23],[5.01,12.18],[4.87,11.59],[4.53,11.76],[4.47,11.92],[4.84,12.23]]]},\"properties\":{\"id\":3864,\"height\":961,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3779,3780,3865,3947,3863]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.32,12.06],[10.77,12.09],[10.86,11.59],[10.27,11.76],[10.32,12.06]]]},\"properties\":{\"id\":3875,\"height\":961,\"biome\":12,\"type\":\"island\",\"population\":12000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3874,3790,3876,3958]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.87,11.59],[5.01,11.48],[5.09,11.06],[4.5,10.83],[4.28,11.53],[4.53,11.76],[4.87,11.59]]]},\"properties\":{\"id\":3947,\"height\":961,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3864,3865,3948,3946,3863]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.46,37.19],[-14.68,37.33],[-14.6,38.08],[-14.32,38.2],[-14.26,38.14],[-14.2,37.72],[-14.46,37.19]]]},\"properties\":{\"id\":23,\"height\":1024,\"biome\":11,\"type\":\"island\",\"population\":18723,\"state\":1,\"province\":10,\"culture\":4,\"religion\":4,\"neighbors\":[97,96,22,24]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.33,35.79],[-13.89,35.4],[-13.92,36.01],[-13.47,36.15],[-13.33,35.79]]]},\"properties\":{\"id\":325,\"height\":1024,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[249,326,324,248]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.09,33.64],[5.06,34.17],[5.43,34.31],[5.54,33.66],[5.37,33.61],[5.09,33.64]]]},\"properties\":{\"id\":582,\"height\":1024,\"biome\":9,\"type\":\"island\",\"population\":27225,\"state\":10,\"province\":138,\"culture\":3,\"religion\":3,\"neighbors\":[654,581,508,583,655]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.69,34.03],[10.86,34.45],[11.03,34.47],[11.14,34.03],[10.88,33.78],[10.69,34.03]]]},\"properties\":{\"id\":593,\"height\":1024,\"biome\":11,\"type\":\"island\",\"population\":11000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[592,519,518,520,521]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.77,31.93],[-11.14,31.98],[-11.39,32.54],[-11.22,32.6],[-10.69,32.38],[-10.69,32.04],[-10.77,31.93]]]},\"properties\":{\"id\":772,\"height\":1024,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[846,845,771,697,698,773]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.75,30.89],[-14.01,30.95],[-13.81,31.51],[-13.56,31.56],[-13.33,31.12],[-13.75,30.89]]]},\"properties\":{\"id\":914,\"height\":1024,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[988,987,913,840,915]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.55,31.01],[-2.28,31.15],[-2.19,31.37],[-1.97,31.56],[-1.69,31.59],[-1.52,31.09],[-1.55,31.01]]]},\"properties\":{\"id\":936,\"height\":1024,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[1010,1009,935,861,862,937]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.03,30.03],[4.87,30.53],[4.95,30.67],[5.26,30.64],[5.51,30.39],[5.43,30.19],[5.09,30],[5.03,30.03]]]},\"properties\":{\"id\":1094,\"height\":1024,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1165,1093,1021,1022,1023,1095,1166]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.45,28.91],[-7.48,28.91],[-7.57,29.41],[-7.03,29.55],[-7,29.49],[-7.09,28.93],[-7.45,28.91]]]},\"properties\":{\"id\":1217,\"height\":1024,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1290,1289,1216,1143,1144,1218]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.64,27.31],[-11.36,27.12],[-11.36,26.5],[-11.76,26.72],[-11.78,27.28],[-11.64,27.31]]]},\"properties\":{\"id\":1504,\"height\":1024,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1429,1430,1505,1579,1503]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.47,26.22],[-8.97,26.05],[-9.03,26.64],[-8.97,26.7],[-8.8,26.67],[-8.47,26.22]]]},\"properties\":{\"id\":1584,\"height\":1024,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1585,1659,1583,1508,1509]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.16,13.69],[-7.93,13.13],[-7.99,12.93],[-8.63,13.35],[-8.55,13.63],[-8.21,13.71],[-8.16,13.69]]]},\"properties\":{\"id\":3587,\"height\":1024,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3501,3588,3673,3672,3586,3500]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.42,13.18],[-0.37,13.13],[-0.59,12.87],[-0.68,12.82],[-0.98,12.96],[-1.01,13.29],[-0.98,13.35],[-0.42,13.18]]]},\"properties\":{\"id\":3686,\"height\":1024,\"biome\":9,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3601,3602,3687,3770,3769,3685,3600]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.48,12.9],[-5.26,12.62],[-5.51,12.15],[-6.19,12.62],[-5.82,12.87],[-5.48,12.9]]]},\"properties\":{\"id\":3760,\"height\":1024,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3677,3678,3761,3759,3676]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.69,12.79],[1.77,12.73],[1.69,12.15],[1.24,12.32],[1.01,12.71],[1.1,12.85],[1.69,12.79]]]},\"properties\":{\"id\":3773,\"height\":1024,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":0,\"religion\":0,\"neighbors\":[3690,3691,3774,3858,3772,3689]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.56,11.34],[-13.56,10.89],[-14.17,10.78],[-14.09,11.48],[-13.92,11.59],[-13.56,11.34]]]},\"properties\":{\"id\":3913,\"height\":1024,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3830,3914,3912,3829]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[11.36,11.56],[11.98,11.73],[12.15,11.56],[11.81,11],[11.56,11.06],[11.33,11.5],[11.36,11.56]]]},\"properties\":{\"id\":3960,\"height\":1024,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3876,3877,3878,3961,3959]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.73,37.72],[-19.38,37.61],[-19.57,38.08],[-18.82,38.36],[-18.73,37.72]]]},\"properties\":{\"id\":14,\"height\":1089,\"biome\":10,\"type\":\"island\",\"population\":23000,\"state\":0,\"province\":0,\"culture\":2,\"religion\":2,\"neighbors\":[15,88,13]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.27,34.56],[-13.33,34.11],[-13.61,34.03],[-13.89,34.36],[-13.78,34.59],[-13.36,34.59],[-13.27,34.56]]]},\"properties\":{\"id\":473,\"height\":1089,\"biome\":9,\"type\":\"island\",\"population\":15000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[401,474,548,547,472,400]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.22,34.19],[-2.56,34.39],[-2.42,34.75],[-1.94,34.45],[-2.22,34.19]]]},\"properties\":{\"id\":494,\"height\":1089,\"biome\":9,\"type\":\"island\",\"population\":21539,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[569,568,493,495]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.15,33.52],[-14.46,33.44],[-14.51,34.22],[-14.46,34.31],[-14.37,34.28],[-13.98,33.78],[-14.15,33.52]]]},\"properties\":{\"id\":546,\"height\":1089,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[619,618,545,471,472,547]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.76,33.02],[2.5,33.27],[2.73,33.64],[3.09,33.52],[3.32,33.1],[3.26,33.02],[2.76,33.02]]]},\"properties\":{\"id\":650,\"height\":1089,\"biome\":9,\"type\":\"island\",\"population\":25212,\"state\":10,\"province\":134,\"culture\":4,\"religion\":4,\"neighbors\":[724,723,649,578,651,725]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.31,30.98],[2.19,31.4],[2.19,31.42],[2.93,31.59],[3.01,31.54],[2.84,31.12],[2.31,30.98]]]},\"properties\":{\"id\":944,\"height\":1089,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1017,943,869,870,871,945]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.72,30.5],[1.83,30.84],[2.28,30.95],[2.42,30.47],[2.17,30.33],[1.72,30.5]]]},\"properties\":{\"id\":1016,\"height\":1089,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1088,1015,943,1017,1089]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.18,30.08],[-10.69,30.03],[-10.77,30.56],[-10.69,30.61],[-10.21,30.5],[-10.12,30.42],[-10.18,30.08]]]},\"properties\":{\"id\":1065,\"height\":1089,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1066,1137,1064,992,993,994]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.11,29.38],[-13.47,29.44],[-13.56,29.47],[-13.67,29.86],[-13.3,30.03],[-12.97,29.86],[-13.11,29.41],[-13.11,29.38]]]},\"properties\":{\"id\":1132,\"height\":1089,\"biome\":6,\"type\":\"island\",\"population\":8358,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1207,1206,1205,1131,1059,1060,1133]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.85,16.32],[-12.94,16.09],[-13.53,15.95],[-13.58,15.98],[-13.61,16.37],[-13.47,16.54],[-12.99,16.51],[-12.85,16.32]]]},\"properties\":{\"id\":3126,\"height\":1089,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3039,3127,3219,3218,3125,3037,3038]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.35,14.95],[-12.54,14.64],[-12.68,14.72],[-12.88,15.08],[-12.8,15.39],[-12.74,15.45],[-12.46,15.39],[-12.35,14.95]]]},\"properties\":{\"id\":3311,\"height\":1089,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3312,3402,3401,3400,3310,3219,3220]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.29,14.3],[-14.48,13.83],[-14.77,13.74],[-14.77,13.74],[-15.13,14.25],[-15.07,14.27],[-14.29,14.3]]]},\"properties\":{\"id\":3488,\"height\":1089,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3397,3489,3576,3575,3574,3396]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.23,14.36],[-13.87,13.8],[-14.23,13.71],[-14.48,13.83],[-14.29,14.3],[-14.23,14.36]]]},\"properties\":{\"id\":3489,\"height\":1089,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3397,3490,3577,3576,3488]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.14,13.71],[-2.19,13.24],[-2.53,13.24],[-2.7,13.88],[-2.25,13.91],[-2.14,13.71]]]},\"properties\":{\"id\":3598,\"height\":1089,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3512,3599,3683,3597,3511]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.52,13.99],[6.81,13.69],[6.27,13.35],[6.1,13.43],[6.19,13.85],[6.52,13.99]]]},\"properties\":{\"id\":3614,\"height\":1089,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3527,3528,3615,3699,3526]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.79,12.2],[-16.93,11.73],[-17.07,11.67],[-17.47,12.04],[-17.32,12.26],[-16.82,12.26],[-16.79,12.2]]]},\"properties\":{\"id\":3824,\"height\":1089,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3740,3825,3907,3823,3738,3739]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.84,10.94],[2.76,11.7],[3.15,11.78],[3.29,10.86],[2.84,10.94]]]},\"properties\":{\"id\":3944,\"height\":1089,\"biome\":1,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3943,3861,3945]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20.08,37.47],[-20.42,37.52],[-20.53,37.64],[-20.56,38.06],[-19.83,38.31],[-19.69,38.17],[-20.08,37.47]]]},\"properties\":{\"id\":12,\"height\":1156,\"biome\":10,\"type\":\"island\",\"population\":23000,\"state\":4,\"province\":45,\"culture\":2,\"religion\":2,\"neighbors\":[13,86,85,11]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.58,35.26],[-8.75,35.45],[-8.49,35.9],[-8.21,35.85],[-8.07,35.51],[-8.27,35.2],[-8.58,35.26]]]},\"properties\":{\"id\":335,\"height\":1156,\"biome\":9,\"type\":\"island\",\"population\":17000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[410,409,334,258,336,411]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.67,33.69],[-2.76,33.72],[-2.76,34.33],[-2.56,34.39],[-2.22,34.19],[-2.14,33.8],[-2.67,33.69]]]},\"properties\":{\"id\":568,\"height\":1156,\"biome\":9,\"type\":\"island\",\"population\":28468,\"state\":1,\"province\":9,\"culture\":4,\"religion\":12,\"neighbors\":[640,639,567,493,494,569]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.72,33.52],[1.13,33.66],[1.24,34.05],[1.43,34.11],[1.83,33.61],[1.72,33.52]]]},\"properties\":{\"id\":575,\"height\":1156,\"biome\":9,\"type\":\"island\",\"population\":12000,\"state\":10,\"province\":139,\"culture\":4,\"religion\":4,\"neighbors\":[648,647,574,501,576]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.39,32.54],[-11.59,32.52],[-11.81,32.82],[-11.84,33.02],[-11.31,33.27],[-11.08,33.08],[-11.22,32.6],[-11.39,32.54]]]},\"properties\":{\"id\":697,\"height\":1156,\"biome\":9,\"type\":\"island\",\"population\":23000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[772,771,770,696,623,624,698]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.03,29.55],[-7.57,29.41],[-7.59,29.44],[-7.43,29.94],[-7.17,29.94],[-7.14,29.89],[-7.03,29.55]]]},\"properties\":{\"id\":1143,\"height\":1156,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1144,1217,1216,1142,1071,1072]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.59,26.25],[-9.73,26.14],[-10.21,26.39],[-10.21,26.75],[-10.1,26.81],[-9.56,26.61],[-9.53,26.58],[-9.59,26.25]]]},\"properties\":{\"id\":1582,\"height\":1156,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1583,1658,1657,1581,1506,1507,1508]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.53,15.95],[-13.44,15.48],[-13.58,15.28],[-14.09,15.36],[-14.09,15.36],[-14.01,15.92],[-13.58,15.98],[-13.53,15.95]]]},\"properties\":{\"id\":3218,\"height\":1156,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":79,\"culture\":7,\"religion\":7,\"neighbors\":[3126,3219,3310,3309,3308,3217,3125]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.87,14.75],[-7.43,14.64],[-7.23,14.22],[-7.62,14.13],[-8.02,14.33],[-8.04,14.36],[-8.02,14.72],[-7.99,14.75],[-7.87,14.75]]]},\"properties\":{\"id\":3410,\"height\":1156,\"biome\":6,\"type\":\"island\",\"population\":21517,\"state\":9,\"province\":131,\"culture\":7,\"religion\":7,\"neighbors\":[3320,3321,3411,3502,3501,3500,3409,3319]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.98,13.83],[7.57,13.77],[7.59,13.69],[7.59,13.55],[7.4,13.29],[7.12,13.18],[6.83,13.69],[6.98,13.83]]]},\"properties\":{\"id\":3616,\"height\":1156,\"biome\":4,\"type\":\"island\",\"population\":18000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3528,3529,3530,3617,3702,3701,3615]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.24,12.62],[-8.13,12.15],[-8.66,11.95],[-8.83,12.34],[-8.77,12.59],[-8.61,12.68],[-8.24,12.62]]]},\"properties\":{\"id\":3755,\"height\":1156,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3672,3756,3840,3839,3754,3671]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.84,12.01],[-9.79,11.64],[-10.27,11.22],[-10.58,11.78],[-9.84,12.01]]]},\"properties\":{\"id\":3837,\"height\":1156,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3836,3838,3920,3919]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.07,36.88],[-16.93,36.41],[-17.07,36.24],[-17.27,36.29],[-17.21,36.91],[-17.07,36.88]]]},\"properties\":{\"id\":168,\"height\":1225,\"biome\":2,\"type\":\"island\",\"population\":2000,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[92,169,242,241,167]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.17,35.76],[-9.37,35.82],[-9.31,36.24],[-9.03,36.35],[-8.72,36.27],[-8.66,36.04],[-9.17,35.76]]]},\"properties\":{\"id\":257,\"height\":1225,\"biome\":10,\"type\":\"island\",\"population\":14000,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[334,333,256,182,183,258]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.33,33.36],[3.97,32.88],[3.54,33.16],[3.82,33.64],[3.94,33.69],[4.33,33.44],[4.33,33.36]]]},\"properties\":{\"id\":652,\"height\":1225,\"biome\":9,\"type\":\"island\",\"population\":18000,\"state\":10,\"province\":134,\"culture\":4,\"religion\":4,\"neighbors\":[653,726,725,651,579,580]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.95,32.88],[5.01,33.13],[5.51,33.16],[5.63,33.1],[5.4,32.66],[4.95,32.88]]]},\"properties\":{\"id\":728,\"height\":1225,\"biome\":9,\"type\":\"island\",\"population\":3000,\"state\":0,\"province\":0,\"culture\":3,\"religion\":3,\"neighbors\":[802,727,654,655,729]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.84,31.09],[-0.96,30.61],[-1.52,30.7],[-1.55,31.01],[-1.52,31.09],[-1.12,31.26],[-0.84,31.09]]]},\"properties\":{\"id\":1010,\"height\":1225,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":106,\"culture\":7,\"religion\":7,\"neighbors\":[938,1011,1082,1009,936,937]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.42,30.47],[2.28,30.95],[2.31,30.98],[2.84,31.12],[2.84,31.09],[2.95,30.5],[2.67,30.36],[2.42,30.47]]]},\"properties\":{\"id\":1017,\"height\":1225,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1089,1016,943,944,945,1018,1090]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.64,30.39],[-6.5,29.97],[-7.14,29.89],[-7.17,29.94],[-7,30.45],[-6.72,30.42],[-6.64,30.39]]]},\"properties\":{\"id\":1072,\"height\":1225,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1001,1073,1144,1143,1071,1000]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.28,14.86],[-11.28,14.39],[-11.39,14.27],[-12.01,14.33],[-12.01,14.33],[-11.92,14.95],[-11.9,14.97],[-11.31,14.95],[-11.28,14.86]]]},\"properties\":{\"id\":3403,\"height\":1225,\"biome\":6,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3314,3404,3495,3494,3493,3402,3312,3313]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.7,13.88],[3.38,13.85],[3.38,13.83],[3.32,13.46],[3.12,13.32],[2.78,13.27],[2.73,13.29],[2.67,13.83],[2.7,13.88]]]},\"properties\":{\"id\":3608,\"height\":1225,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3520,3521,3522,3609,3694,3693,3692,3607]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.11,12.76],[-8.77,12.59],[-8.83,12.34],[-9.37,12.26],[-9.39,12.71],[-9.11,12.76]]]},\"properties\":{\"id\":3754,\"height\":1225,\"biome\":9,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3670,3671,3755,3839,3753]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.19,12.73],[-2.02,12.23],[-2.14,12.2],[-2.56,12.32],[-2.59,12.57],[-2.19,12.73]]]},\"properties\":{\"id\":3766,\"height\":1225,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3683,3767,3852,3851,3765]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.28,11.64],[-16.45,11.48],[-16.93,11.73],[-16.79,12.2],[-16.37,12.04],[-16.28,11.64]]]},\"properties\":{\"id\":3825,\"height\":1225,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3826,3909,3907,3824,3740]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.4,12.32],[3.94,12.15],[3.77,11.76],[3.21,11.81],[3.4,12.32]]]},\"properties\":{\"id\":3862,\"height\":1225,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":11,\"province\":172,\"culture\":8,\"religion\":8,\"neighbors\":[3776,3777,3863,3945]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.28,11.34],[2.39,10.89],[2.19,10.66],[1.55,10.92],[1.63,11.59],[2.28,11.34]]]},\"properties\":{\"id\":3942,\"height\":1225,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":9,\"province\":170,\"culture\":8,\"religion\":8,\"neighbors\":[3859,3943,3941]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.41,37.41],[-19.24,37.13],[-19.52,36.82],[-19.97,36.74],[-20,36.77],[-19.86,37.27],[-19.41,37.41]]]},\"properties\":{\"id\":87,\"height\":1296,\"biome\":2,\"type\":\"island\",\"population\":16000,\"state\":4,\"province\":46,\"culture\":2,\"religion\":2,\"neighbors\":[13,88,164,163,162,86]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.49,35.9],[-8.75,35.45],[-8.97,35.43],[-9.17,35.76],[-8.66,36.04],[-8.49,35.9]]]},\"properties\":{\"id\":334,\"height\":1296,\"biome\":10,\"type\":\"island\",\"population\":30339,\"state\":1,\"province\":3,\"culture\":4,\"religion\":12,\"neighbors\":[258,335,409,333,257]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.73,34.84],[-8.24,35.03],[-8.27,35.2],[-8.07,35.51],[-7.65,35.37],[-7.73,34.84]]]},\"properties\":{\"id\":411,\"height\":1296,\"biome\":9,\"type\":\"island\",\"population\":15471,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[412,483,410,335,336]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.52,34.11],[-12.66,34.14],[-13.02,34.7],[-12.97,34.84],[-12.4,34.78],[-12.52,34.11]]]},\"properties\":{\"id\":475,\"height\":1296,\"biome\":9,\"type\":\"island\",\"population\":17679,\"state\":6,\"province\":70,\"culture\":7,\"religion\":7,\"neighbors\":[476,549,474,401,402]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.51,33.69],[-0.87,33.83],[-0.93,34.22],[-0.48,34.42],[-0.34,34.05],[-0.48,33.69],[-0.51,33.69]]]},\"properties\":{\"id\":571,\"height\":1296,\"biome\":9,\"type\":\"island\",\"population\":16542,\"state\":1,\"province\":157,\"culture\":4,\"religion\":12,\"neighbors\":[644,643,570,497,498,572]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.01,33.55],[0.73,33.69],[0.53,34.25],[0.56,34.31],[1.1,34.19],[1.24,34.05],[1.13,33.66],[1.01,33.55]]]},\"properties\":{\"id\":574,\"height\":1296,\"biome\":9,\"type\":\"island\",\"population\":24947,\"state\":10,\"province\":139,\"culture\":4,\"religion\":4,\"neighbors\":[647,646,573,499,500,501,575]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.69,32.74],[-8.97,32.68],[-9.23,33.1],[-9,33.24],[-8.75,33.22],[-8.52,33.1],[-8.47,32.94],[-8.69,32.74]]]},\"properties\":{\"id\":702,\"height\":1296,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[777,776,701,627,628,629,703]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.28,32.63],[2.28,33.24],[2.5,33.27],[2.76,33.02],[2.59,32.71],[2.28,32.63]]]},\"properties\":{\"id\":723,\"height\":1296,\"biome\":10,\"type\":\"island\",\"population\":3000,\"state\":0,\"province\":0,\"culture\":4,\"religion\":4,\"neighbors\":[797,722,649,650,724]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.28,31.96],[-0.34,32.38],[0.06,32.68],[0.22,32.63],[0.03,31.82],[-0.28,31.96]]]},\"properties\":{\"id\":792,\"height\":1296,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[865,791,718,719,793]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.45,30.42],[-0.79,30.5],[-0.96,30.61],[-0.84,31.09],[-0.53,31.17],[-0.31,31.06],[-0.39,30.45],[-0.45,30.42]]]},\"properties\":{\"id\":1011,\"height\":1296,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1084,1083,1082,1010,938,939,1012]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.98,15.08],[7.51,15.11],[7.57,14.69],[7.48,14.41],[7.03,14.41],[6.92,14.47],[6.89,14.95],[6.98,15.08]]]},\"properties\":{\"id\":3438,\"height\":1296,\"biome\":4,\"type\":\"island\",\"population\":24000,\"state\":11,\"province\":174,\"culture\":8,\"religion\":8,\"neighbors\":[3347,3348,3349,3439,3529,3528,3437]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.45,13.6],[0,13.8],[0.08,13.71],[0.06,13.29],[-0.08,13.07],[-0.37,13.13],[-0.42,13.18],[-0.45,13.6]]]},\"properties\":{\"id\":3602,\"height\":1296,\"biome\":6,\"type\":\"island\",\"population\":11757,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3601,3515,3516,3603,3688,3687,3686]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.72,13.1],[-1.43,12.65],[-1.6,12.48],[-2.19,12.73],[-2.08,13.15],[-1.72,13.1]]]},\"properties\":{\"id\":3684,\"height\":1296,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3599,3685,3768,3767,3683]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.19,12.73],[-1.6,12.48],[-1.74,12.2],[-2.02,12.23],[-2.19,12.73],[-2.19,12.73]]]},\"properties\":{\"id\":3767,\"height\":1296,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3683,3684,3768,3852,3766]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.02,12.79],[8.41,12.62],[8.41,12.12],[8.35,12.09],[7.79,12.18],[7.96,12.76],[8.02,12.79]]]},\"properties\":{\"id\":3785,\"height\":1296,\"biome\":12,\"type\":\"island\",\"population\":18000,\"state\":12,\"province\":152,\"culture\":8,\"religion\":10,\"neighbors\":[3702,3703,3786,3871,3870,3784]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.83,12.34],[-8.66,11.95],[-8.69,11.87],[-9.11,11.81],[-9.42,12.18],[-9.37,12.26],[-8.83,12.34]]]},\"properties\":{\"id\":3839,\"height\":1296,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3754,3755,3840,3922,3838,3753]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.85,11.59],[6.05,11.59],[6.3,11.22],[6.36,10.89],[5.51,10.78],[5.4,10.92],[5.85,11.59]]]},\"properties\":{\"id\":3949,\"height\":1296,\"biome\":6,\"type\":\"island\",\"population\":39453,\"state\":11,\"province\":173,\"culture\":8,\"religion\":8,\"neighbors\":[3948,3866,3950,3951]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.21,36.41],[-10.49,36.49],[-10.63,36.85],[-10.58,36.99],[-10.55,36.99],[-10.07,36.82],[-10.21,36.41]]]},\"properties\":{\"id\":180,\"height\":1369,\"biome\":11,\"type\":\"island\",\"population\":1000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":4,\"neighbors\":[181,254,179,103,104,105]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.92,34.98],[-14.54,34.5],[-14.71,34.7],[-14.46,35.4],[-13.92,35.31],[-13.87,35.23],[-13.92,34.98]]]},\"properties\":{\"id\":399,\"height\":1369,\"biome\":2,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":96,\"culture\":7,\"religion\":7,\"neighbors\":[400,472,471,398,324,326]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.27,32.6],[-10.55,32.54],[-10.69,33.02],[-10.41,33.19],[-10.07,32.88],[-10.07,32.66],[-10.27,32.6]]]},\"properties\":{\"id\":699,\"height\":1369,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[774,773,698,625,626,700]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.43,30.19],[5.51,30.39],[5.96,30.59],[6.13,30.36],[6.19,30.03],[5.99,29.91],[5.51,30.11],[5.43,30.19]]]},\"properties\":{\"id\":1095,\"height\":1369,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":53,\"culture\":7,\"religion\":7,\"neighbors\":[1166,1094,1023,1024,1096,1168,1167]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.12,29.94],[-10.55,29.44],[-10.83,29.69],[-10.83,29.83],[-10.69,30.03],[-10.18,30.08],[-10.12,29.94]]]},\"properties\":{\"id\":1137,\"height\":1369,\"biome\":6,\"type\":\"island\",\"population\":8724,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[1066,1138,1210,1136,1064,1065]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.76,29.41],[-10.01,28.93],[-10.04,28.91],[-10.43,29.35],[-9.84,29.58],[-9.76,29.41]]]},\"properties\":{\"id\":1212,\"height\":1369,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1139,1213,1285,1211,1138]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.16,26.53],[-8.24,26.33],[-8.47,26.22],[-8.47,26.22],[-8.8,26.67],[-8.58,26.75],[-8.18,26.56],[-8.16,26.53]]]},\"properties\":{\"id\":1585,\"height\":1369,\"biome\":4,\"type\":\"island\",\"population\":3859,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1511,1586,1660,1659,1584,1509,1510]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.52,14.64],[-12.15,14.33],[-12.68,13.83],[-12.85,13.94],[-12.94,14.05],[-12.52,14.64]]]},\"properties\":{\"id\":3492,\"height\":1369,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3401,3402,3493,3578,3491]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.77,13.74],[-14.62,13.29],[-14.68,13.13],[-15.1,13.15],[-15.27,13.35],[-14.77,13.74],[-14.77,13.74]]]},\"properties\":{\"id\":3575,\"height\":1369,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3488,3576,3661,3660,3659,3574]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.97,13.24],[-9.11,12.76],[-9.39,12.71],[-9.48,12.79],[-9.48,13.27],[-9.14,13.29],[-8.97,13.24]]]},\"properties\":{\"id\":3670,\"height\":1369,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3586,3671,3754,3753,3669,3585]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.07,13.38],[-5.82,12.87],[-6.19,12.62],[-6.22,12.62],[-6.38,12.76],[-6.27,13.41],[-6.07,13.38]]]},\"properties\":{\"id\":3676,\"height\":1369,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3591,3677,3760,3759,3758,3675]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.02,34.7],[-13.27,34.56],[-13.36,34.59],[-13.61,35.17],[-13.02,35.2],[-12.97,34.84],[-13.02,34.7]]]},\"properties\":{\"id\":401,\"height\":1444,\"biome\":9,\"type\":\"island\",\"population\":16000,\"state\":6,\"province\":70,\"culture\":7,\"religion\":7,\"neighbors\":[475,474,473,400,326,402]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.94,34.45],[-2.42,34.75],[-2.42,34.87],[-2.39,34.89],[-2.31,34.92],[-1.6,34.64],[-1.6,34.53],[-1.94,34.45]]]},\"properties\":{\"id\":495,\"height\":1444,\"biome\":9,\"type\":\"island\",\"population\":10000,\"state\":1,\"province\":2,\"culture\":4,\"religion\":12,\"neighbors\":[569,494,493,420,421,422,496]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.22,33.47],[0.14,33.61],[0.25,34.11],[0.53,34.25],[0.73,33.69],[0.34,33.5],[0.22,33.47]]]},\"properties\":{\"id\":573,\"height\":1444,\"biome\":9,\"type\":\"island\",\"population\":15387,\"state\":10,\"province\":139,\"culture\":4,\"religion\":4,\"neighbors\":[645,644,572,499,574,646]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.7,33.69],[2.14,33.92],[2.14,33.97],[2.31,34.28],[2.73,34.31],[2.84,34.22],[2.7,33.69]]]},\"properties\":{\"id\":577,\"height\":1444,\"biome\":9,\"type\":\"island\",\"population\":15000,\"state\":10,\"province\":141,\"culture\":4,\"religion\":4,\"neighbors\":[578,649,576,502,503,504]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.55,32.54],[-10.69,32.38],[-11.22,32.6],[-11.08,33.08],[-10.94,33.1],[-10.69,33.02],[-10.55,32.54]]]},\"properties\":{\"id\":698,\"height\":1444,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[699,773,772,697,624,625]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.47,31.9],[-13.47,31.87],[-13.95,31.98],[-14.03,32.24],[-13.89,32.52],[-13.67,32.49],[-13.47,31.9]]]},\"properties\":{\"id\":767,\"height\":1444,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[768,841,840,839,766,693]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.26,26.72],[-3.57,26.64],[-3.71,27.03],[-3.35,27.14],[-3.18,27],[-3.26,26.72]]]},\"properties\":{\"id\":1519,\"height\":1444,\"biome\":4,\"type\":\"island\",\"population\":3901,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1520,1594,1518,1444,1445]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.36,26.5],[-11.33,26.39],[-11.7,26.14],[-11.9,26.25],[-11.92,26.64],[-11.76,26.72],[-11.36,26.5],[-11.36,26.5]]]},\"properties\":{\"id\":1579,\"height\":1444,\"biome\":4,\"type\":\"island\",\"population\":4854,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1505,1580,1654,1653,1578,1503,1504]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.07,11.67],[-17.27,11.06],[-17.66,11.87],[-17.61,11.98],[-17.47,12.04],[-17.07,11.67]]]},\"properties\":{\"id\":3823,\"height\":1444,\"biome\":3,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3824,3907,3906,3822,3738]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.51,12.12],[-0.17,12.34],[0.22,12.18],[0.11,11.78],[-0.39,11.78],[-0.51,12.12]]]},\"properties\":{\"id\":3855,\"height\":1444,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3854,3770,3771,3856,3938]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.43,12.23],[5.48,12.2],[5.51,11.98],[5.01,11.48],[4.87,11.59],[5.01,12.18],[5.43,12.23]]]},\"properties\":{\"id\":3865,\"height\":1444,\"biome\":10,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3780,3781,3866,3948,3947,3864]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.19,11.53],[-2.25,10.8],[-2.76,10.92],[-2.59,11.7],[-2.31,11.62],[-2.19,11.53]]]},\"properties\":{\"id\":3934,\"height\":1444,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3852,3935,3933,3851]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.88,11.62],[-1.63,11.92],[-1.6,11.9],[-1.15,11.39],[-1.12,10.94],[-1.38,10.97],[-1.88,11.62]]]},\"properties\":{\"id\":3936,\"height\":1444,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3935,3852,3768,3853,3937]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.89,11.62],[7.03,11.56],[7.14,11.06],[6.61,10.69],[6.36,10.89],[6.3,11.22],[6.89,11.62]]]},\"properties\":{\"id\":3951,\"height\":1444,\"biome\":6,\"type\":\"island\",\"population\":27000,\"state\":11,\"province\":173,\"culture\":8,\"religion\":8,\"neighbors\":[3950,3868,3952,3949]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.9,36.68],[-19.32,36.49],[-19.52,36.82],[-19.24,37.13],[-18.96,36.99],[-18.87,36.77],[-18.9,36.68]]]},\"properties\":{\"id\":164,\"height\":1521,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":4,\"province\":46,\"culture\":2,\"religion\":2,\"neighbors\":[165,238,163,87,88,89]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.67,35.68],[-9.84,35.87],[-9.59,36.46],[-9.31,36.24],[-9.37,35.82],[-9.67,35.68]]]},\"properties\":{\"id\":256,\"height\":1521,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":4,\"neighbors\":[333,332,255,182,257]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.71,34.7],[-15.07,34.75],[-15.07,35.31],[-14.99,35.4],[-14.48,35.43],[-14.46,35.4],[-14.71,34.7]]]},\"properties\":{\"id\":398,\"height\":1521,\"biome\":9,\"type\":\"island\",\"population\":35003,\"state\":4,\"province\":160,\"culture\":9,\"religion\":9,\"neighbors\":[399,471,397,322,323,324]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.51,34.22],[-14.99,33.97],[-15.1,33.94],[-15.47,34.25],[-15.1,34.75],[-15.07,34.75],[-14.71,34.7],[-14.54,34.5],[-14.46,34.31],[-14.51,34.22]]]},\"properties\":{\"id\":471,\"height\":1521,\"biome\":2,\"type\":\"island\",\"population\":34096,\"state\":4,\"province\":160,\"culture\":9,\"religion\":9,\"neighbors\":[546,545,617,544,470,397,398,399,472]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.97,32.66],[-9.62,32.49],[-9.34,33.1],[-9.23,33.1],[-8.97,32.68],[-8.97,32.66]]]},\"properties\":{\"id\":701,\"height\":1521,\"biome\":9,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[776,775,700,627,702]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.19,31.42],[2.17,31.98],[2.28,32.12],[2.62,32.07],[2.93,31.59],[2.19,31.42]]]},\"properties\":{\"id\":870,\"height\":1521,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[944,869,796,797,871]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.4,27.2],[-14.48,27.14],[-14.88,27.2],[-15.02,27.79],[-14.51,27.82],[-14.43,27.68],[-14.4,27.2]]]},\"properties\":{\"id\":1423,\"height\":1521,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1424,1499,1498,1422,1350,1351]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.21,13.15],[-10.24,13.1],[-10.55,12.73],[-10.74,12.65],[-10.86,12.71],[-10.86,13.32],[-10.29,13.32],[-10.21,13.15]]]},\"properties\":{\"id\":3668,\"height\":1521,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3584,3669,3752,3751,3750,3667,3583]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.83,11.67],[9.25,11.22],[9.25,11.03],[8.8,10.72],[8.69,10.8],[8.55,11.48],[8.83,11.67]]]},\"properties\":{\"id\":3955,\"height\":1521,\"biome\":8,\"type\":\"island\",\"population\":21000,\"state\":12,\"province\":154,\"culture\":8,\"religion\":10,\"neighbors\":[3871,3872,3956,3954]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.88,36.32],[-13.16,36.43],[-12.68,37.02],[-12.38,36.94],[-12.35,36.38],[-12.38,36.35],[-12.88,36.32]]]},\"properties\":{\"id\":176,\"height\":1600,\"biome\":10,\"type\":\"island\",\"population\":33342,\"state\":1,\"province\":156,\"culture\":4,\"religion\":12,\"neighbors\":[250,249,175,100,177,251]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.7,35.96],[-11.59,35.71],[-12.21,35.48],[-12.29,35.73],[-11.7,35.96]]]},\"properties\":{\"id\":328,\"height\":1600,\"biome\":10,\"type\":\"island\",\"population\":2000,\"state\":0,\"province\":0,\"culture\":4,\"religion\":4,\"neighbors\":[251,252,329,327]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.26,34.73],[-5.77,34.75],[-5.77,34.75],[-5.79,35.31],[-5.23,35.43],[-5.09,34.84],[-5.26,34.73]]]},\"properties\":{\"id\":415,\"height\":1600,\"biome\":10,\"type\":\"island\",\"population\":2000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[489,488,487,414,340,416]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.57,34.56],[10.72,34.87],[11.05,34.89],[11.05,34.5],[11.03,34.47],[10.86,34.45],[10.57,34.56]]]},\"properties\":{\"id\":518,\"height\":1600,\"biome\":10,\"type\":\"island\",\"population\":10000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[519,445,372,447,520,593]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.27,34.22],[10.29,34.47],[10.35,34.53],[10.57,34.56],[10.86,34.45],[10.69,34.03],[10.27,34.22]]]},\"properties\":{\"id\":519,\"height\":1600,\"biome\":10,\"type\":\"island\",\"population\":10000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[592,517,444,445,518,593]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.65,32.49],[-9.76,32.46],[-10.07,32.66],[-10.07,32.88],[-9.67,33.36],[-9.34,33.1],[-9.62,32.49],[-9.65,32.49]]]},\"properties\":{\"id\":700,\"height\":1600,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[775,848,774,699,626,627,701]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.1,26.81],[-10.21,26.75],[-10.6,26.89],[-10.63,26.95],[-10.27,27.31],[-9.98,27.17],[-10.1,26.81]]]},\"properties\":{\"id\":1506,\"height\":1600,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1507,1582,1581,1580,1431,1432]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.03,26.64],[-9.53,26.58],[-9.56,26.61],[-9.48,27.28],[-9.34,27.31],[-8.97,27.06],[-8.97,26.7],[-9.03,26.64]]]},\"properties\":{\"id\":1508,\"height\":1600,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1584,1583,1582,1507,1433,1434,1509]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.55,27.34],[-6.61,26.84],[-7.09,26.98],[-7.12,27.26],[-6.86,27.42],[-6.55,27.34]]]},\"properties\":{\"id\":1513,\"height\":1600,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1438,1514,1588,1512,1437]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.44,26.36],[-6.86,26.28],[-7.12,26.95],[-7.09,26.98],[-6.61,26.84],[-6.47,26.67],[-6.44,26.36]]]},\"properties\":{\"id\":1588,\"height\":1600,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1589,1663,1587,1512,1513,1514]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.1,13.43],[6.27,13.35],[6.27,13.35],[6.47,12.71],[6.47,12.68],[6.05,12.68],[5.96,12.79],[6.02,13.35],[6.08,13.43],[6.1,13.43]]]},\"properties\":{\"id\":3699,\"height\":1600,\"biome\":4,\"type\":\"island\",\"population\":9173,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3526,3614,3615,3700,3783,3782,3781,3698,3613]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.38,35.85],[-12.97,35.65],[-12.88,36.32],[-12.38,36.35],[-12.38,35.85]]]},\"properties\":{\"id\":250,\"height\":1681,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":1,\"province\":156,\"culture\":4,\"religion\":4,\"neighbors\":[251,327,249,176]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.76,36.32],[-11.7,35.96],[-12.29,35.73],[-12.38,35.85],[-12.38,36.35],[-12.35,36.38],[-11.76,36.32]]]},\"properties\":{\"id\":251,\"height\":1681,\"biome\":2,\"type\":\"island\",\"population\":2000,\"state\":1,\"province\":156,\"culture\":4,\"religion\":4,\"neighbors\":[177,252,328,327,250,176]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.44,34.33],[-6.97,34.42],[-6.97,34.5],[-6.61,35.03],[-6.47,35.01],[-6.24,34.7],[-6.44,34.33]]]},\"properties\":{\"id\":486,\"height\":1681,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":1,\"province\":8,\"culture\":4,\"religion\":4,\"neighbors\":[487,560,485,413,338,414]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.16,33.33],[8.24,33.78],[8.52,33.89],[8.63,33.72],[8.58,33.38],[8.16,33.33]]]},\"properties\":{\"id\":660,\"height\":1681,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":10,\"province\":140,\"culture\":3,\"religion\":3,\"neighbors\":[734,659,588,589,661]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.54,32.12],[-5.74,31.98],[-6.19,32.57],[-5.85,32.68],[-5.62,32.68],[-5.54,32.12]]]},\"properties\":{\"id\":782,\"height\":1681,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[783,855,781,707,708]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.98,32.12],[10.04,32.63],[10.49,32.35],[10.49,32.21],[10.29,31.98],[9.98,32.12]]]},\"properties\":{\"id\":811,\"height\":1681,\"biome\":10,\"type\":\"island\",\"population\":17869,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[884,810,739,812,885]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.01,30.95],[-14.15,30.92],[-14.37,31.01],[-14.43,31.48],[-14.34,31.62],[-14.06,31.65],[-13.81,31.51],[-14.01,30.95]]]},\"properties\":{\"id\":913,\"height\":1681,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[914,987,986,912,838,839,840]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.98,31.06],[1.01,31.68],[1.21,31.82],[1.6,31.37],[1.6,31.37],[1.49,31.17],[1.15,30.98],[0.98,31.06]]]},\"properties\":{\"id\":942,\"height\":1681,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1014,941,867,868,869,943,1015]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.43,31.09],[3.23,31.48],[3.85,31.76],[4.02,31.51],[3.94,30.98],[3.82,30.92],[3.43,31.09]]]},\"properties\":{\"id\":946,\"height\":1681,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1019,945,872,873,947,1020]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.07,29.89],[-6.27,29.77],[-6.5,29.97],[-6.64,30.39],[-5.99,30.36],[-5.88,30.25],[-5.91,30.08],[-6.07,29.89]]]},\"properties\":{\"id\":1073,\"height\":1681,\"biome\":6,\"type\":\"island\",\"population\":20004,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1146,1145,1144,1072,1001,1002,1074]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.2,29.05],[-9.62,28.82],[-10.01,28.93],[-9.76,29.41],[-9.11,29.3],[-9.2,29.05],[-9.2,29.05]]]},\"properties\":{\"id\":1213,\"height\":1681,\"biome\":6,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1287,1286,1285,1212,1139,1214]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.39,14.08],[-11.45,13.8],[-11.95,13.66],[-12.04,13.74],[-12.01,14.33],[-11.39,14.27],[-11.39,14.08]]]},\"properties\":{\"id\":3494,\"height\":1681,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3495,3582,3581,3580,3493,3403]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.91,13.24],[4.39,13.29],[4.64,12.71],[4.61,12.68],[4.5,12.62],[4.05,12.57],[3.82,12.85],[3.91,13.24],[3.91,13.24]]]},\"properties\":{\"id\":3695,\"height\":1681,\"biome\":4,\"type\":\"island\",\"population\":35118,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3609,3610,3696,3780,3779,3778,3777,3694]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.88,12.26],[11.11,12.26],[11.42,11.98],[11.36,11.56],[11.33,11.5],[10.86,11.56],[10.86,11.59],[10.77,12.09],[10.88,12.26]]]},\"properties\":{\"id\":3876,\"height\":1681,\"biome\":12,\"type\":\"island\",\"population\":2000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3790,3791,3792,3877,3960,3959,3958,3875]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.62,11.48],[-14.65,10.89],[-15.16,10.83],[-15.19,11.53],[-14.71,11.59],[-14.62,11.48]]]},\"properties\":{\"id\":3911,\"height\":1681,\"biome\":3,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3829,3912,3910,3828]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.91,11.53],[-12.29,11.76],[-12.09,11.56],[-12.68,10.97],[-12.74,11],[-12.91,11.53]]]},\"properties\":{\"id\":3915,\"height\":1681,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3914,3832,3833,3916]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.04,11.56],[-11.95,10.8],[-12.12,10.64],[-12.68,10.97],[-12.09,11.56],[-12.04,11.56]]]},\"properties\":{\"id\":3916,\"height\":1681,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3833,3917,3915]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-20,36.77],[-20.36,36.85],[-20.53,37.05],[-20.42,37.52],[-20.08,37.47],[-19.86,37.27],[-20,36.77]]]},\"properties\":{\"id\":86,\"height\":1764,\"biome\":10,\"type\":\"island\",\"population\":2000,\"state\":4,\"province\":46,\"culture\":2,\"religion\":2,\"neighbors\":[87,162,161,85,12,13]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.38,36.94],[-12.68,37.02],[-13.02,37.22],[-13.05,37.36],[-12.82,37.55],[-12.38,37.47],[-12.35,36.96],[-12.38,36.94]]]},\"properties\":{\"id\":100,\"height\":1764,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":12,\"neighbors\":[177,176,175,99,25,26,101]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.15,36.35],[-9.65,36.52],[-9.59,36.46],[-9.84,35.87],[-10.1,35.99],[-10.15,36.35]]]},\"properties\":{\"id\":255,\"height\":1764,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":1,\"province\":6,\"culture\":4,\"religion\":4,\"neighbors\":[254,181,182,256,332]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.96,33.75],[-6.47,33.72],[-6.38,34.19],[-6.05,34.14],[-5.85,33.89],[-5.96,33.75]]]},\"properties\":{\"id\":561,\"height\":1764,\"biome\":11,\"type\":\"island\",\"population\":3000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[634,633,560,487,562]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.83,32.82],[-6.86,32.82],[-7.09,33.38],[-6.81,33.64],[-6.53,33.64],[-6.47,33.47],[-6.83,32.82]]]},\"properties\":{\"id\":632,\"height\":1764,\"biome\":11,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[706,779,705,631,560,633]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.98,26.7],[-5.29,26.67],[-5.48,27.2],[-5.46,27.26],[-4.92,27.14],[-4.89,27.12],[-4.98,26.7]]]},\"properties\":{\"id\":1516,\"height\":1764,\"biome\":4,\"type\":\"island\",\"population\":5911,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1517,1591,1515,1440,1441,1442]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.35,14.95],[-11.92,14.95],[-12.01,14.33],[-12.15,14.33],[-12.52,14.64],[-12.54,14.64],[-12.35,14.95]]]},\"properties\":{\"id\":3402,\"height\":1764,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3311,3312,3403,3493,3492,3401]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.72,14.25],[-8.8,13.91],[-9.11,13.88],[-9.25,14.27],[-8.97,14.5],[-8.8,14.44],[-8.72,14.25]]]},\"properties\":{\"id\":3499,\"height\":1764,\"biome\":6,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3409,3500,3586,3498,3407,3408]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.92,14.47],[7.03,14.41],[6.98,13.83],[6.83,13.69],[6.81,13.69],[6.52,13.99],[6.61,14.39],[6.92,14.47]]]},\"properties\":{\"id\":3528,\"height\":1764,\"biome\":4,\"type\":\"island\",\"population\":16000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3437,3438,3529,3616,3615,3614,3527]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.8,13.91],[-8.55,13.63],[-8.63,13.35],[-8.66,13.29],[-8.97,13.24],[-9.14,13.29],[-9.14,13.88],[-9.11,13.88],[-8.8,13.91]]]},\"properties\":{\"id\":3586,\"height\":1764,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3499,3500,3587,3672,3671,3670,3585,3498]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.48,13.27],[-9.48,12.79],[-9.84,12.73],[-10.24,13.1],[-10.21,13.15],[-9.56,13.35],[-9.48,13.27]]]},\"properties\":{\"id\":3669,\"height\":1764,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3585,3670,3753,3752,3668,3584]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.1,12.2],[-15.1,12.2],[-15.78,12.12],[-15.86,12.32],[-15.67,12.62],[-15.36,12.57],[-15.1,12.2]]]},\"properties\":{\"id\":3742,\"height\":1764,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3743,3828,3827,3826,3741,3659]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.04,12.09],[-8.04,11.62],[-8.66,11.73],[-8.69,11.87],[-8.66,11.95],[-8.13,12.15],[-8.04,12.09]]]},\"properties\":{\"id\":3840,\"height\":1764,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3756,3841,3923,3922,3839,3755]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.04,12.04],[-1.04,11.59],[-1.15,11.39],[-1.6,11.9],[-1.04,12.04]]]},\"properties\":{\"id\":3853,\"height\":1764,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3768,3854,3937,3936]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.92,37.66],[-18.31,37.58],[-18.31,38.25],[-17.63,38.31],[-17.58,38.2],[-17.92,37.66]]]},\"properties\":{\"id\":16,\"height\":1849,\"biome\":2,\"type\":\"island\",\"population\":2000,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[17,90,15]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.75,37.36],[-13.81,37.3],[-14.2,37.72],[-14.26,38.14],[-13.5,38.03],[-13.47,37.8],[-13.75,37.36]]]},\"properties\":{\"id\":24,\"height\":1849,\"biome\":2,\"type\":\"island\",\"population\":2000,\"state\":0,\"province\":0,\"culture\":4,\"religion\":4,\"neighbors\":[99,98,97,23,25]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.33,36.46],[-13.36,36.43],[-13.92,36.66],[-14.03,36.94],[-13.3,36.96],[-13.33,36.46]]]},\"properties\":{\"id\":174,\"height\":1849,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[175,249,248,173,98]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.19,32.57],[-6.36,32.57],[-6.19,33.24],[-6.07,33.24],[-5.85,32.68],[-6.19,32.57]]]},\"properties\":{\"id\":707,\"height\":1849,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[782,781,706,633,708]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.69,30.61],[-10.77,30.56],[-11.33,30.56],[-11.22,31.06],[-10.8,31.15],[-10.63,30.92],[-10.69,30.61]]]},\"properties\":{\"id\":992,\"height\":1849,\"biome\":6,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":63,\"culture\":7,\"religion\":7,\"neighbors\":[993,1065,1064,918,919,920]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.92,27.73],[-14.43,27.68],[-14.51,27.82],[-14.32,28.26],[-14.2,28.29],[-14.06,28.21],[-13.87,27.84],[-13.92,27.73]]]},\"properties\":{\"id\":1351,\"height\":1849,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":90,\"culture\":7,\"religion\":7,\"neighbors\":[1425,1424,1423,1350,1277,1278,1352]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.81,13.69],[6.83,13.69],[7.12,13.18],[7.09,13.13],[6.27,13.35],[6.27,13.35],[6.81,13.69]]]},\"properties\":{\"id\":3615,\"height\":1849,\"biome\":4,\"type\":\"island\",\"population\":12000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3614,3528,3616,3701,3700,3699]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.18,12.09],[-2.76,12.04],[-2.64,11.73],[-3.04,11.45],[-3.23,11.62],[-3.18,12.09]]]},\"properties\":{\"id\":3850,\"height\":1849,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3849,3765,3851,3933,3932]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.45,11.48],[-16.45,11.48],[-17.27,11.06],[-17.27,11.06],[-17.27,11.06],[-17.07,11.67],[-16.93,11.73],[-16.45,11.48]]]},\"properties\":{\"id\":3907,\"height\":1849,\"biome\":3,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3825,3909,3908,3906,3823,3824]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.37,36.82],[-16.71,37.08],[-16.68,37.38],[-16.2,37.64],[-15.97,37.36],[-16.37,36.82]]]},\"properties\":{\"id\":93,\"height\":1936,\"biome\":11,\"type\":\"island\",\"population\":2000,\"state\":0,\"province\":0,\"culture\":9,\"religion\":9,\"neighbors\":[94,169,92,19,20]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.75,33.22],[-9,33.24],[-9,33.75],[-8.63,33.72],[-8.61,33.66],[-8.75,33.22]]]},\"properties\":{\"id\":628,\"height\":1936,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[629,702,627,556,557]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.19,33.24],[-6.36,32.57],[-6.41,32.57],[-6.75,32.68],[-6.83,32.82],[-6.47,33.47],[-6.19,33.24]]]},\"properties\":{\"id\":706,\"height\":1936,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[633,707,781,780,779,632]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.38,32.85],[10.43,32.99],[10.88,33.19],[10.86,32.77],[10.57,32.74],[10.38,32.85]]]},\"properties\":{\"id\":738,\"height\":1936,\"biome\":11,\"type\":\"island\",\"population\":1132,\"state\":2,\"province\":159,\"culture\":6,\"religion\":6,\"neighbors\":[739,737,665,741,740]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.49,32.35],[10.04,32.63],[10.01,32.66],[10.38,32.85],[10.57,32.74],[10.57,32.4],[10.49,32.35]]]},\"properties\":{\"id\":739,\"height\":1936,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":2,\"province\":159,\"culture\":6,\"religion\":6,\"neighbors\":[812,811,810,737,738,740]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.57,32.4],[10.57,32.74],[10.86,32.77],[11.03,32.57],[11.03,32.46],[11.03,32.43],[10.57,32.4]]]},\"properties\":{\"id\":740,\"height\":1936,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":2,\"province\":159,\"culture\":6,\"religion\":6,\"neighbors\":[812,739,738,741,813,814]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.27,31.62],[-4.87,31.59],[-5.03,32.18],[-5.01,32.21],[-4.3,32.12],[-4.25,32.04],[-4.27,31.62],[-4.27,31.62]]]},\"properties\":{\"id\":857,\"height\":1936,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":80,\"culture\":7,\"religion\":7,\"neighbors\":[932,931,856,783,784,785,858]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.29,31.09],[-10.63,30.92],[-10.8,31.15],[-10.69,31.56],[-10.32,31.42],[-10.29,31.09]]]},\"properties\":{\"id\":920,\"height\":1936,\"biome\":6,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[921,993,992,919,846]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.34,26.64],[-5.71,26.72],[-5.79,27.03],[-5.48,27.2],[-5.29,26.67],[-5.34,26.64]]]},\"properties\":{\"id\":1515,\"height\":1936,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1591,1590,1589,1440,1516]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.23,13.71],[-14.17,13.32],[-14.62,13.29],[-14.77,13.74],[-14.48,13.83],[-14.23,13.71]]]},\"properties\":{\"id\":3576,\"height\":1936,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3489,3577,3661,3575,3488]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.66,13.77],[-3.46,13.69],[-3.66,13.29],[-3.71,13.27],[-4.3,13.32],[-4.33,13.32],[-4.3,13.57],[-4.19,13.71],[-3.66,13.77]]]},\"properties\":{\"id\":3595,\"height\":1936,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3508,3509,3596,3681,3680,3679,3594,3507]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.7,13.88],[-2.53,13.24],[-2.56,13.21],[-2.95,13.21],[-3.12,13.8],[-2.76,13.88],[-2.7,13.88]]]},\"properties\":{\"id\":3597,\"height\":1936,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3511,3598,3683,3682,3596,3510]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.74,12.65],[-10.74,12.45],[-11.36,12.09],[-11.56,12.26],[-11.31,12.62],[-11.08,12.76],[-10.86,12.71],[-10.74,12.65]]]},\"properties\":{\"id\":3750,\"height\":1936,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3668,3751,3835,3834,3749,3666,3667]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.51,11.98],[5.85,11.59],[5.4,10.92],[5.09,11.06],[5.01,11.48],[5.51,11.98]]]},\"properties\":{\"id\":3948,\"height\":1936,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":11,\"province\":173,\"culture\":8,\"religion\":8,\"neighbors\":[3865,3866,3949,3947]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.27,11.76],[10.86,11.59],[10.86,11.56],[10.55,11.11],[10.21,11.73],[10.27,11.76]]]},\"properties\":{\"id\":3958,\"height\":1936,\"biome\":12,\"type\":\"island\",\"population\":9000,\"state\":8,\"province\":126,\"culture\":8,\"religion\":8,\"neighbors\":[3874,3875,3876,3959,3957]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.7,33.69],[2.84,34.22],[3.18,34.31],[3.29,34.25],[3.35,33.94],[3.09,33.52],[2.73,33.64],[2.7,33.69]]]},\"properties\":{\"id\":578,\"height\":2025,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":10,\"province\":134,\"culture\":4,\"religion\":4,\"neighbors\":[649,577,504,505,579,651,650]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.86,32.82],[-7.48,32.8],[-7.57,33.13],[-7.45,33.33],[-7.09,33.38],[-6.86,32.82]]]},\"properties\":{\"id\":705,\"height\":2025,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":73,\"culture\":7,\"religion\":7,\"neighbors\":[632,779,704,630,631]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.06,31.65],[-14.34,31.62],[-14.48,32.04],[-14.43,32.15],[-14.03,32.24],[-13.95,31.98],[-14.06,31.65]]]},\"properties\":{\"id\":839,\"height\":2025,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[840,913,838,765,766,767]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.41,27.79],[-10.27,27.31],[-10.63,26.95],[-10.8,27.03],[-10.83,27.09],[-10.83,27.56],[-10.49,27.82],[-10.41,27.79]]]},\"properties\":{\"id\":1431,\"height\":2025,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1358,1432,1506,1580,1505,1430,1357]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.2,36.13],[-16.59,35.9],[-16.82,36.38],[-16.26,36.52],[-16.17,36.27],[-16.2,36.13]]]},\"properties\":{\"id\":243,\"height\":2116,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":4,\"province\":31,\"culture\":9,\"religion\":9,\"neighbors\":[244,320,242,169,170]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.2,35.09],[-9.7,35.45],[-9.67,35.68],[-9.37,35.82],[-9.17,35.76],[-8.97,35.43],[-9.2,35.09]]]},\"properties\":{\"id\":333,\"height\":2116,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":3,\"culture\":4,\"religion\":4,\"neighbors\":[409,408,332,256,257,334]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.56,33.72],[9.73,33.92],[9.96,33.97],[10.24,33.61],[10.21,33.36],[10.04,33.3],[9.56,33.72]]]},\"properties\":{\"id\":663,\"height\":2116,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":3,\"religion\":3,\"neighbors\":[662,590,517,591,664,737]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.05,32.85],[6.02,32.94],[6.52,33.36],[6.81,33.13],[6.61,32.8],[6.05,32.85]]]},\"properties\":{\"id\":730,\"height\":2116,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[804,729,656,657,731]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,32.12],[-5.01,32.21],[-4.98,32.68],[-4.73,32.77],[-4.3,32.54],[-4.3,32.12]]]},\"properties\":{\"id\":784,\"height\":2116,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":1,\"province\":158,\"culture\":7,\"religion\":7,\"neighbors\":[785,857,783,709,710]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.95,30.67],[6.98,30.84],[7.09,30.95],[7.37,30.95],[7.59,30.81],[7.65,30.64],[7.23,30.36],[6.95,30.67]]]},\"properties\":{\"id\":1026,\"height\":2116,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[1097,1025,952,953,954,1027,1098]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.16,27.14],[-8.18,26.56],[-8.58,26.75],[-8.44,27.2],[-8.18,27.2],[-8.16,27.14]]]},\"properties\":{\"id\":1510,\"height\":2116,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1436,1511,1585,1509,1435]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.14,13.71],[-1.52,13.71],[-1.69,13.15],[-1.72,13.1],[-2.08,13.15],[-2.19,13.24],[-2.14,13.71]]]},\"properties\":{\"id\":3599,\"height\":2116,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3598,3512,3600,3685,3684,3683]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.78,12.12],[-15.1,12.2],[-15.38,11.67],[-15.61,11.67],[-15.78,12.12]]]},\"properties\":{\"id\":3827,\"height\":2116,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3826,3742,3828,3910]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.37,11.95],[-5.32,11.76],[-5.34,11.62],[-5.88,11.45],[-6.05,11.87],[-5.51,12.12],[-5.37,11.95]]]},\"properties\":{\"id\":3845,\"height\":2116,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3761,3846,3929,3928,3927,3759]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.63,11.5],[-3.23,11.62],[-3.04,11.45],[-3.15,10.89],[-3.29,10.8],[-3.54,10.94],[-3.63,11.5]]]},\"properties\":{\"id\":3932,\"height\":2116,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3931,3849,3850,3933]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.6,11.64],[1.63,11.59],[1.55,10.92],[1.21,10.75],[1.04,11.42],[1.49,11.64],[1.6,11.64]]]},\"properties\":{\"id\":3941,\"height\":2116,\"biome\":4,\"type\":\"island\",\"population\":5889,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3858,3859,3942,3940,3857]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-19.41,37.41],[-19.86,37.27],[-20.08,37.47],[-19.69,38.17],[-19.57,38.08],[-19.38,37.61],[-19.41,37.41]]]},\"properties\":{\"id\":13,\"height\":2209,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":4,\"province\":46,\"culture\":2,\"religion\":2,\"neighbors\":[88,87,86,12,14]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.49,33.64],[-3.77,34],[-3.77,34.11],[-3.26,34.36],[-3.12,33.69],[-3.26,33.61],[-3.49,33.64]]]},\"properties\":{\"id\":566,\"height\":2209,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":9,\"culture\":4,\"religion\":12,\"neighbors\":[638,637,565,492,567,639]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.53,31.17],[-0.84,31.09],[-1.12,31.26],[-0.98,31.65],[-0.68,31.65],[-0.53,31.17]]]},\"properties\":{\"id\":938,\"height\":2209,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":168,\"culture\":7,\"religion\":7,\"neighbors\":[939,1011,1010,937,864]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.87,31.09],[0.65,31.17],[0.48,31.59],[0.62,31.7],[1.01,31.68],[0.98,31.06],[0.87,31.09]]]},\"properties\":{\"id\":941,\"height\":2209,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[1014,1013,940,866,867,942]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.11,29.3],[-9.76,29.41],[-9.84,29.58],[-9.84,29.77],[-9.53,29.94],[-9.2,29.77],[-9.06,29.52],[-9.03,29.41],[-9.11,29.3]]]},\"properties\":{\"id\":1139,\"height\":2209,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1214,1213,1212,1138,1066,1067,1068,1140]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.71,27.03],[-3.91,27.09],[-3.88,27.54],[-3.4,27.59],[-3.35,27.14],[-3.71,27.03]]]},\"properties\":{\"id\":1444,\"height\":2209,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1519,1518,1443,1371,1445]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.8,27.03],[-11.36,26.5],[-11.36,26.5],[-11.36,27.12],[-10.83,27.09],[-10.8,27.03]]]},\"properties\":{\"id\":1505,\"height\":2209,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1431,1580,1579,1504,1430]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.68,12.82],[-0.59,12.87],[-0.11,12.54],[-0.17,12.34],[-0.51,12.12],[-0.65,12.2],[-0.68,12.82]]]},\"properties\":{\"id\":3770,\"height\":2209,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3769,3686,3687,3771,3855,3854]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.58,11.78],[-10.27,11.22],[-10.29,11.03],[-10.58,10.97],[-11.14,11.67],[-10.66,11.87],[-10.58,11.78]]]},\"properties\":{\"id\":3919,\"height\":2209,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3836,3837,3920,3918,3835]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.3,37.5],[-17.8,37.5],[-17.92,37.66],[-17.58,38.2],[-17.3,38.06],[-17.13,37.75],[-17.3,37.5]]]},\"properties\":{\"id\":17,\"height\":2304,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[92,91,90,16,18]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.41,35.34],[-10.8,35.51],[-10.86,35.82],[-10.66,36.01],[-10.21,35.93],[-10.41,35.34]]]},\"properties\":{\"id\":331,\"height\":2304,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[332,406,330,253,254]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.56,33.66],[4.56,34.05],[5.06,34.17],[5.06,34.17],[5.09,33.64],[5.03,33.55],[4.56,33.66]]]},\"properties\":{\"id\":581,\"height\":2304,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":10,\"province\":144,\"culture\":3,\"religion\":3,\"neighbors\":[653,580,507,508,582,654]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.42,31.79],[-13.56,31.56],[-13.81,31.51],[-14.06,31.65],[-13.95,31.98],[-13.47,31.87],[-13.42,31.79]]]},\"properties\":{\"id\":840,\"height\":2304,\"biome\":4,\"type\":\"island\",\"population\":13776,\"state\":6,\"province\":71,\"culture\":7,\"religion\":7,\"neighbors\":[841,915,914,913,839,767]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.65,31.17],[0.25,30.95],[-0.06,31.2],[-0.03,31.31],[0.14,31.59],[0.48,31.59],[0.65,31.17]]]},\"properties\":{\"id\":940,\"height\":2304,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":164,\"culture\":7,\"religion\":7,\"neighbors\":[941,1013,1012,939,865,866]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.55,29.49],[-7,29.49],[-7.03,29.55],[-7.14,29.89],[-6.5,29.97],[-6.27,29.77],[-6.36,29.63],[-6.55,29.49]]]},\"properties\":{\"id\":1144,\"height\":2304,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1219,1218,1217,1143,1072,1073,1145]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.12,26.95],[-7.45,26.64],[-7.73,27.03],[-7.4,27.48],[-7.12,27.26],[-7.09,26.98],[-7.12,26.95]]]},\"properties\":{\"id\":1512,\"height\":2304,\"biome\":4,\"type\":\"island\",\"population\":6873,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1588,1587,1511,1436,1437,1513]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.03,13.18],[-6.72,12.73],[-6.83,12.59],[-7.51,12.65],[-7.54,12.71],[-7.34,13.01],[-7.03,13.18]]]},\"properties\":{\"id\":3674,\"height\":2304,\"biome\":9,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3589,3675,3758,3757,3756,3673]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,13.32],[-4.08,12.76],[-4.42,12.48],[-4.84,12.73],[-4.7,13.01],[-4.53,13.24],[-4.33,13.32],[-4.3,13.32]]]},\"properties\":{\"id\":3679,\"height\":2304,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3595,3680,3763,3762,3678,3593,3594]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.73,13.29],[2.78,13.27],[2.93,12.65],[2.22,12.68],[2.08,12.85],[2.14,12.96],[2.45,13.24],[2.73,13.29]]]},\"properties\":{\"id\":3692,\"height\":2304,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3607,3608,3693,3775,3774,3691,3606]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.12,13.32],[3.54,12.76],[3.32,12.57],[2.93,12.62],[2.93,12.65],[2.78,13.27],[3.12,13.32]]]},\"properties\":{\"id\":3693,\"height\":2304,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":11,\"province\":148,\"culture\":8,\"religion\":8,\"neighbors\":[3608,3694,3777,3776,3775,3692]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.42,11.98],[4.5,12.62],[4.61,12.68],[4.84,12.23],[4.47,11.92],[4.42,11.98]]]},\"properties\":{\"id\":3779,\"height\":2304,\"biome\":4,\"type\":\"island\",\"population\":2000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3863,3778,3695,3780,3864]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.51,12.79],[5.96,12.79],[6.05,12.68],[5.88,12.29],[5.48,12.2],[5.43,12.23],[5.37,12.65],[5.51,12.79]]]},\"properties\":{\"id\":3781,\"height\":2304,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":11,\"province\":146,\"culture\":8,\"religion\":8,\"neighbors\":[3697,3698,3699,3782,3866,3865,3780]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.59,12.23],[0.7,11.95],[0.67,11.84],[0.22,11.7],[0.11,11.78],[0.22,12.18],[0.59,12.23]]]},\"properties\":{\"id\":3856,\"height\":2304,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3771,3772,3857,3939,3938,3855]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.98,11.95],[1.49,11.64],[1.04,11.42],[0.76,11.48],[0.67,11.84],[0.7,11.95],[0.98,11.95]]]},\"properties\":{\"id\":3857,\"height\":2304,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":170,\"culture\":8,\"religion\":8,\"neighbors\":[3772,3858,3941,3940,3939,3856]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.67,11.73],[2.76,11.7],[2.84,10.94],[2.39,10.89],[2.28,11.34],[2.5,11.73],[2.67,11.73]]]},\"properties\":{\"id\":3943,\"height\":2304,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":8,\"religion\":8,\"neighbors\":[3860,3861,3944,3942,3859]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.3,37.47],[-15.36,37.44],[-16.06,38.06],[-15.41,38.39],[-15.1,38.08],[-15.3,37.47]]]},\"properties\":{\"id\":21,\"height\":2401,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[22,95,20]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.66,36.29],[-11.25,36.43],[-11.17,36.68],[-10.63,36.85],[-10.49,36.49],[-10.66,36.29]]]},\"properties\":{\"id\":179,\"height\":2401,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":6,\"culture\":4,\"religion\":4,\"neighbors\":[254,253,178,103,180]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.02,35.2],[-13.61,35.17],[-13.87,35.23],[-13.92,35.31],[-13.89,35.4],[-13.33,35.79],[-13.02,35.62],[-12.99,35.23],[-13.02,35.2]]]},\"properties\":{\"id\":326,\"height\":2401,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":70,\"culture\":7,\"religion\":7,\"neighbors\":[402,401,400,399,324,325,249,327]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.83,33.61],[1.43,34.11],[1.6,34.31],[2.14,33.97],[2.14,33.92],[1.94,33.61],[1.83,33.61]]]},\"properties\":{\"id\":576,\"height\":2401,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":10,\"province\":139,\"culture\":4,\"religion\":4,\"neighbors\":[648,575,501,502,577,649]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.09,33.38],[-7.45,33.33],[-7.57,33.66],[-6.92,33.75],[-6.81,33.64],[-7.09,33.38]]]},\"properties\":{\"id\":631,\"height\":2401,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[632,705,630,559,560]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.61,32.8],[6.81,33.13],[7.09,33.19],[7.12,32.68],[6.69,32.49],[6.61,32.8]]]},\"properties\":{\"id\":731,\"height\":2401,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[804,730,657,732,805]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.91,31.62],[-6.38,31.54],[-6.41,31.56],[-6.53,32.1],[-6.44,32.24],[-5.77,31.96],[-5.85,31.7],[-5.91,31.62]]]},\"properties\":{\"id\":854,\"height\":2401,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":88,\"culture\":7,\"religion\":7,\"neighbors\":[929,928,927,853,780,781,855]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.28,30.95],[1.83,30.84],[1.49,31.17],[1.6,31.37],[2.19,31.4],[2.31,30.98],[2.28,30.95]]]},\"properties\":{\"id\":943,\"height\":2401,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":7,\"religion\":7,\"neighbors\":[1017,1016,1015,942,869,944]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.93,29.02],[-6.07,28.85],[-6.38,29.02],[-6.55,29.49],[-6.36,29.63],[-5.91,29.07],[-5.93,29.02]]]},\"properties\":{\"id\":1219,\"height\":2401,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1220,1293,1291,1218,1144,1145]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.32,28.26],[-14.51,27.82],[-15.02,27.79],[-15.13,27.87],[-15.1,28.26],[-14.68,28.46],[-14.32,28.26]]]},\"properties\":{\"id\":1350,\"height\":2401,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1277,1351,1423,1422,1349,1276]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.07,26.22],[-3.6,26.14],[-3.66,26.16],[-3.71,26.44],[-3.57,26.64],[-3.26,26.72],[-3.09,26.5],[-3.07,26.22]]]},\"properties\":{\"id\":1594,\"height\":2401,\"biome\":4,\"type\":\"island\",\"population\":10479,\"state\":6,\"province\":101,\"culture\":7,\"religion\":11,\"neighbors\":[1595,1669,1668,1593,1518,1519,1520]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.84,12.73],[-9.98,12.29],[-10.55,12.73],[-10.24,13.1],[-9.84,12.73]]]},\"properties\":{\"id\":3752,\"height\":2401,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3669,3753,3751,3668]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.11,11.81],[-9.31,11.5],[-9.59,11.5],[-9.79,11.64],[-9.84,12.01],[-9.84,12.04],[-9.42,12.18],[-9.11,11.81]]]},\"properties\":{\"id\":3838,\"height\":2401,\"biome\":6,\"type\":\"island\",\"population\":29617,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3839,3922,3921,3920,3837,3836,3753]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.2,37.64],[-16.68,37.38],[-16.87,37.61],[-16.37,38.25],[-16.09,38.03],[-16.2,37.64]]]},\"properties\":{\"id\":19,\"height\":2500,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":9,\"religion\":9,\"neighbors\":[20,93,92,18]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.4,34.78],[-12.97,34.84],[-13.02,35.2],[-12.99,35.23],[-12.23,35.31],[-12.38,34.81],[-12.4,34.78]]]},\"properties\":{\"id\":402,\"height\":2500,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":70,\"culture\":7,\"religion\":7,\"neighbors\":[476,475,401,326,327,403]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.55,34.5],[-8.89,34.75],[-8.58,35.26],[-8.27,35.2],[-8.24,35.03],[-8.55,34.5]]]},\"properties\":{\"id\":410,\"height\":2500,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":3,\"culture\":4,\"religion\":4,\"neighbors\":[483,482,409,335,411]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.01,33.19],[1.01,33.55],[1.13,33.66],[1.72,33.52],[1.52,33.08],[1.01,33.19]]]},\"properties\":{\"id\":647,\"height\":2500,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":4,\"religion\":4,\"neighbors\":[721,646,574,575,648]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.06,31.79],[0.03,31.82],[0.22,32.63],[0.42,32.6],[0.48,32.18],[0.06,31.79]]]},\"properties\":{\"id\":793,\"height\":2500,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[866,865,792,719,794]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.29,13.32],[-4.7,13.01],[-4.84,12.73],[-4.89,12.68],[-5.26,12.62],[-5.48,12.9],[-5.46,13.15],[-5.29,13.32]]]},\"properties\":{\"id\":3678,\"height\":2500,\"biome\":9,\"type\":\"island\",\"population\":5000,\"state\":9,\"province\":133,\"culture\":7,\"religion\":7,\"neighbors\":[3592,3593,3679,3762,3761,3760,3677]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.01,34.14],[-5.2,34.11],[-5.26,34.73],[-5.09,34.84],[-4.92,34.84],[-4.81,34.78],[-4.89,34.28],[-5.01,34.14]]]},\"properties\":{\"id\":489,\"height\":2601,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":8,\"culture\":4,\"religion\":12,\"neighbors\":[564,563,488,415,416,417,490]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.52,33.1],[-8.75,33.22],[-8.61,33.66],[-8.21,33.47],[-8.52,33.1]]]},\"properties\":{\"id\":629,\"height\":2601,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[703,702,628,557]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.49,33.64],[-3.83,33.3],[-4.3,33.41],[-4.3,33.41],[-3.77,34],[-3.49,33.64]]]},\"properties\":{\"id\":637,\"height\":2601,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":9,\"culture\":4,\"religion\":12,\"neighbors\":[566,638,711,636,565]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.67,32.18],[6.69,32.49],[7.12,32.68],[7.37,32.43],[7.09,32.01],[7.09,32.01],[6.67,32.18]]]},\"properties\":{\"id\":805,\"height\":2601,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[878,804,731,732,806,879]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.37,32.12],[9.51,32.57],[9.87,32.74],[10.01,32.66],[10.04,32.63],[9.98,32.12],[9.65,31.96],[9.39,32.1],[9.37,32.12]]]},\"properties\":{\"id\":810,\"height\":2601,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":5,\"province\":163,\"culture\":6,\"religion\":6,\"neighbors\":[882,809,736,737,739,811,884,883]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.55,29.49],[-6.38,29.02],[-7.03,28.85],[-7.09,28.93],[-7,29.49],[-6.55,29.49]]]},\"properties\":{\"id\":1218,\"height\":2601,\"biome\":4,\"type\":\"island\",\"population\":14872,\"state\":6,\"province\":65,\"culture\":7,\"religion\":7,\"neighbors\":[1144,1219,1291,1290,1217]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.01,12.71],[1.24,12.32],[0.98,11.95],[0.7,11.95],[0.59,12.23],[0.65,12.54],[1.01,12.71]]]},\"properties\":{\"id\":3772,\"height\":2601,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":9,\"province\":170,\"culture\":8,\"religion\":8,\"neighbors\":[3689,3773,3858,3857,3856,3771]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.33,12.2],[2.81,12.4],[2.67,11.73],[2.5,11.73],[2.28,12.09],[2.33,12.2]]]},\"properties\":{\"id\":3860,\"height\":2601,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":8,\"religion\":8,\"neighbors\":[3774,3775,3861,3943,3859]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.88,11.62],[-1.38,10.97],[-2.19,10.72],[-2.25,10.8],[-2.19,11.53],[-1.88,11.62]]]},\"properties\":{\"id\":3935,\"height\":2601,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3852,3936,3934]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.06,36.96],[-14.34,37.02],[-14.46,37.19],[-14.2,37.72],[-13.81,37.3],[-14.06,36.96]]]},\"properties\":{\"id\":97,\"height\":2704,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[98,173,96,23,24]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.98,33.16],[5.03,33.55],[5.09,33.64],[5.37,33.61],[5.51,33.16],[5.01,33.13],[4.98,33.16]]]},\"properties\":{\"id\":654,\"height\":2704,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[727,653,581,582,655,728]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.06,32.68],[-0.34,32.38],[-0.7,32.46],[-0.62,33.16],[-0.56,33.19],[-0.06,32.94],[0.06,32.68]]]},\"properties\":{\"id\":718,\"height\":2704,\"biome\":10,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[719,792,791,717,643,644]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.23,32.85],[2.78,32.54],[2.59,32.71],[2.76,33.02],[3.26,33.02],[3.23,32.85]]]},\"properties\":{\"id\":724,\"height\":2704,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[725,798,797,723,650]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.48,27.28],[-9.56,26.61],[-10.1,26.81],[-9.98,27.17],[-9.7,27.4],[-9.48,27.28]]]},\"properties\":{\"id\":1507,\"height\":2704,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1433,1508,1582,1506,1432]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.51,14.36],[-9.65,14.13],[-10.21,14.27],[-9.84,14.81],[-9.56,14.81],[-9.51,14.36]]]},\"properties\":{\"id\":3406,\"height\":2704,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3407,3498,3497,3405,3316]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.42,12.73],[0.65,12.54],[0.59,12.23],[0.22,12.18],[-0.17,12.34],[-0.11,12.54],[0.06,12.76],[0.42,12.73]]]},\"properties\":{\"id\":3771,\"height\":2704,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":9,\"province\":170,\"culture\":8,\"religion\":8,\"neighbors\":[3688,3689,3772,3856,3855,3770,3687]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.73,12.06],[-4.61,11.67],[-5.32,11.76],[-5.37,11.95],[-4.78,12.12],[-4.73,12.06]]]},\"properties\":{\"id\":3846,\"height\":2704,\"biome\":4,\"type\":\"island\",\"population\":3000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3762,3847,3929,3845,3761]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.51,12.12],[-0.39,11.78],[-0.39,11.73],[-1.04,11.59],[-1.04,12.04],[-0.87,12.18],[-0.65,12.2],[-0.51,12.12]]]},\"properties\":{\"id\":3854,\"height\":2704,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3770,3855,3938,3937,3853,3768,3769]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.05,35.31],[-11.36,35.23],[-11.36,35.23],[-11.53,35.68],[-11.17,35.96],[-10.86,35.82],[-10.8,35.51],[-11.05,35.31]]]},\"properties\":{\"id\":330,\"height\":2809,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[406,405,404,329,252,253,331]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.58,35.26],[-8.89,34.75],[-9.03,34.78],[-9.17,35.01],[-9.2,35.09],[-8.97,35.43],[-8.75,35.45],[-8.58,35.26]]]},\"properties\":{\"id\":409,\"height\":2809,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":3,\"culture\":0,\"religion\":0,\"neighbors\":[335,410,482,481,408,333,334]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.65,34.25],[9.7,34.78],[9.82,34.84],[10.29,34.47],[10.27,34.22],[10.21,34.14],[9.96,33.97],[9.73,33.92],[9.65,34.25]]]},\"properties\":{\"id\":517,\"height\":2809,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":10,\"province\":140,\"culture\":0,\"religion\":0,\"neighbors\":[590,516,443,444,519,592,591,663]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.5,33.86],[-5.01,34.14],[-4.89,34.28],[-4.33,34.33],[-4.27,34.28],[-4.5,33.86]]]},\"properties\":{\"id\":564,\"height\":2809,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":9,\"culture\":4,\"religion\":12,\"neighbors\":[565,563,489,490,491]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.69,33.8],[-10.94,33.1],[-11.08,33.08],[-11.31,33.27],[-11.39,33.78],[-11.33,33.83],[-10.77,33.86],[-10.69,33.8]]]},\"properties\":{\"id\":624,\"height\":2809,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[553,625,698,697,623,551,552]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.85,32.74],[-4.16,32.71],[-4.33,33.33],[-4.3,33.41],[-3.83,33.3],[-3.74,33.1],[-3.85,32.74]]]},\"properties\":{\"id\":711,\"height\":2809,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":4,\"religion\":4,\"neighbors\":[712,785,710,636,637,638]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.44,32.24],[-6.53,32.1],[-7.03,32.1],[-7.09,32.26],[-6.75,32.68],[-6.41,32.57],[-6.44,32.24]]]},\"properties\":{\"id\":780,\"height\":2809,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":73,\"culture\":0,\"religion\":0,\"neighbors\":[781,854,853,852,779,706]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.6,31.37],[1.21,31.82],[1.24,31.96],[1.49,32.1],[1.83,31.93],[1.6,31.37]]]},\"properties\":{\"id\":868,\"height\":2809,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[869,942,867,795,796]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.4,27.48],[-7.73,27.03],[-8.16,27.14],[-8.18,27.2],[-8.02,27.59],[-7.59,27.73],[-7.48,27.65],[-7.4,27.48]]]},\"properties\":{\"id\":1436,\"height\":2809,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":97,\"culture\":7,\"religion\":7,\"neighbors\":[1437,1512,1511,1510,1435,1363,1364]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.6,26.89],[-10.77,26.25],[-10.83,26.19],[-11.17,26.22],[-11.33,26.39],[-11.36,26.5],[-10.8,27.03],[-10.63,26.95],[-10.6,26.89]]]},\"properties\":{\"id\":1580,\"height\":2809,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":100,\"culture\":7,\"religion\":7,\"neighbors\":[1506,1581,1656,1655,1654,1579,1505,1431]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.66,26.16],[-4.08,26.05],[-4.3,26.61],[-4.25,26.7],[-3.71,26.44],[-3.66,26.16]]]},\"properties\":{\"id\":1593,\"height\":2809,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1594,1668,1592,1517,1518]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.66,13.29],[-3.12,13.01],[-3.12,12.79],[-3.68,12.76],[-3.71,13.27],[-3.66,13.29]]]},\"properties\":{\"id\":3681,\"height\":2809,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":7,\"religion\":7,\"neighbors\":[3595,3596,3682,3764,3680]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.36,12.29],[-4.16,12.12],[-4.22,11.67],[-4.33,11.59],[-4.56,11.62],[-4.61,11.67],[-4.73,12.06],[-4.36,12.29]]]},\"properties\":{\"id\":3847,\"height\":2809,\"biome\":4,\"type\":\"island\",\"population\":4000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3762,3763,3848,3931,3930,3929,3846]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.77,11.76],[3.94,12.15],[3.97,12.18],[4.42,11.98],[4.47,11.92],[4.53,11.76],[4.28,11.53],[3.85,11.56],[3.77,11.76]]]},\"properties\":{\"id\":3863,\"height\":2809,\"biome\":10,\"type\":\"island\",\"population\":13538,\"state\":11,\"province\":172,\"culture\":8,\"religion\":8,\"neighbors\":[3945,3862,3777,3778,3779,3864,3947,3946]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.2,11.5],[-7.03,10.97],[-7.26,10.89],[-7.73,11.42],[-7.68,11.48],[-7.2,11.5]]]},\"properties\":{\"id\":3925,\"height\":2809,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":171,\"culture\":7,\"religion\":7,\"neighbors\":[3842,3926,3924,3841]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.39,36.32],[-18.82,36.41],[-18.9,36.68],[-18.87,36.77],[-18.25,36.8],[-18.23,36.6],[-18.39,36.32]]]},\"properties\":{\"id\":165,\"height\":2916,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":4,\"province\":31,\"culture\":0,\"religion\":0,\"neighbors\":[240,239,238,164,89,166]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-16.26,36.52],[-16.82,36.38],[-16.93,36.41],[-17.07,36.88],[-16.71,37.08],[-16.37,36.82],[-16.26,36.66],[-16.26,36.52]]]},\"properties\":{\"id\":169,\"height\":2916,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":4,\"province\":31,\"culture\":0,\"religion\":0,\"neighbors\":[170,243,242,168,92,93,94]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.15,36.35],[-10.21,36.41],[-10.07,36.82],[-9.62,37.02],[-9.59,36.99],[-9.65,36.52],[-10.15,36.35]]]},\"properties\":{\"id\":181,\"height\":2916,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":6,\"culture\":0,\"religion\":0,\"neighbors\":[255,254,180,105,106,182]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.87,33.08],[0.34,33.5],[0.73,33.69],[1.01,33.55],[1.01,33.19],[0.93,33.1],[0.87,33.08]]]},\"properties\":{\"id\":646,\"height\":2916,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[720,645,573,574,647,721]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,32.54],[-4.73,32.77],[-4.58,33.13],[-4.33,33.33],[-4.16,32.71],[-4.3,32.54]]]},\"properties\":{\"id\":710,\"height\":2916,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":158,\"culture\":7,\"religion\":7,\"neighbors\":[785,784,709,636,711]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.87,32.38],[-1.18,32.74],[-0.87,33.13],[-0.62,33.16],[-0.7,32.46],[-0.87,32.38]]]},\"properties\":{\"id\":717,\"height\":2916,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[791,790,716,643,718]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.48,26.61],[-8.16,26.53],[-8.18,26.56],[-8.16,27.14],[-7.73,27.03],[-7.45,26.64],[-7.48,26.61]]]},\"properties\":{\"id\":1511,\"height\":2916,\"biome\":4,\"type\":\"island\",\"population\":6000,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1587,1586,1585,1510,1436,1512]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.95,26.14],[-5.43,26.22],[-5.34,26.64],[-5.29,26.67],[-4.98,26.7],[-4.84,26.39],[-4.95,26.14]]]},\"properties\":{\"id\":1591,\"height\":2916,\"biome\":4,\"type\":\"island\",\"population\":9087,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1667,1666,1590,1515,1516,1517]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.63,13.71],[-13.05,13.29],[-13.42,13.41],[-12.85,13.94],[-12.68,13.83],[-12.63,13.71]]]},\"properties\":{\"id\":3578,\"height\":2916,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3493,3579,3663,3491,3492]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.47,12.71],[7.06,12.99],[7.26,12.62],[7.23,12.4],[7.2,12.37],[6.75,12.26],[6.52,12.48],[6.47,12.68],[6.47,12.71]]]},\"properties\":{\"id\":3783,\"height\":2916,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":11,\"province\":173,\"culture\":8,\"religion\":8,\"neighbors\":[3699,3700,3701,3784,3869,3868,3867,3782]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.64,37.22],[-15.97,37.36],[-16.2,37.64],[-16.09,38.03],[-16.06,38.06],[-15.36,37.44],[-15.64,37.22]]]},\"properties\":{\"id\":20,\"height\":3025,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[95,94,93,19,21]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.07,37.3],[-15.3,37.47],[-15.1,38.08],[-14.6,38.08],[-14.68,37.33],[-15.07,37.3]]]},\"properties\":{\"id\":22,\"height\":3025,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[96,95,21,23]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.21,36.91],[-17.27,36.29],[-17.63,36.29],[-17.52,36.91],[-17.41,36.94],[-17.21,36.91]]]},\"properties\":{\"id\":167,\"height\":3025,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[92,168,241,166,91]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.53,35.68],[-11.59,35.71],[-11.7,35.96],[-11.76,36.32],[-11.7,36.35],[-11.28,36.41],[-11.17,35.96],[-11.53,35.68]]]},\"properties\":{\"id\":252,\"height\":3025,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[330,329,328,251,177,178,253]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.68,34.81],[-7.71,34.81],[-7.73,34.84],[-7.65,35.37],[-7.54,35.45],[-7,35.4],[-7,35.37],[-7.2,34.87],[-7.68,34.81]]]},\"properties\":{\"id\":412,\"height\":3025,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":8,\"culture\":0,\"religion\":0,\"neighbors\":[485,484,483,411,336,337,338,413]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.03,33.8],[7.03,33.97],[7.26,34.17],[7.51,34.25],[7.71,34.08],[7.73,33.86],[7.68,33.75],[7.06,33.78],[7.03,33.8]]]},\"properties\":{\"id\":586,\"height\":3025,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[657,585,511,512,513,587,659,658]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.19,33.24],[-6.47,33.47],[-6.53,33.64],[-6.47,33.72],[-5.96,33.75],[-5.82,33.33],[-6.07,33.24],[-6.19,33.24]]]},\"properties\":{\"id\":633,\"height\":3025,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[707,706,632,560,561,634,708]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.23,32.85],[3.26,33.02],[3.32,33.1],[3.54,33.16],[3.97,32.88],[4.05,32.68],[3.71,32.4],[3.32,32.57],[3.23,32.85]]]},\"properties\":{\"id\":725,\"height\":3025,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[798,724,650,651,652,726,800,799]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.82,31.96],[7.09,32.01],[7.37,32.43],[7.57,32.49],[7.88,32.12],[7.82,31.96]]]},\"properties\":{\"id\":806,\"height\":3025,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[880,879,805,732,807]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.19,31.37],[-2.64,31.87],[-2.64,32.01],[-2.59,32.04],[-2.45,32.07],[-1.97,31.56],[-2.19,31.37]]]},\"properties\":{\"id\":861,\"height\":3025,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[936,935,860,787,788,862]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.05,12.57],[4.5,12.62],[4.42,11.98],[3.97,12.18],[4.05,12.57]]]},\"properties\":{\"id\":3778,\"height\":3025,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":11,\"province\":172,\"culture\":8,\"religion\":8,\"neighbors\":[3777,3695,3779,3863]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.6,12.15],[-14.71,11.59],[-15.19,11.53],[-15.38,11.67],[-15.1,12.2],[-15.1,12.2],[-14.62,12.2],[-14.6,12.15]]]},\"properties\":{\"id\":3828,\"height\":3025,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3744,3829,3911,3910,3827,3742,3743]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.78,12.09],[-13.16,11.59],[-13.56,11.34],[-13.92,11.59],[-13.92,12.06],[-13.78,12.09]]]},\"properties\":{\"id\":3830,\"height\":3025,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3745,3831,3914,3913,3829]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.63,11.5],[-3.54,10.94],[-4.25,10.89],[-4.33,11.59],[-4.22,11.67],[-3.71,11.62],[-3.63,11.5]]]},\"properties\":{\"id\":3931,\"height\":3025,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3849,3932,3930,3847,3848]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.21,11.56],[8.55,11.48],[8.69,10.8],[8.38,10.86],[8.16,11.53],[8.21,11.56]]]},\"properties\":{\"id\":3954,\"height\":3025,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":8,\"religion\":8,\"neighbors\":[3870,3871,3955,3953]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.37,33.92],[-5.74,34.33],[-5.77,34.75],[-5.26,34.73],[-5.2,34.11],[-5.37,33.92]]]},\"properties\":{\"id\":488,\"height\":3136,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[563,562,487,415,489]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.02,33.3],[-2.14,33.8],[-1.57,33.94],[-1.38,33.66],[-1.69,33.3],[-2.02,33.3]]]},\"properties\":{\"id\":641,\"height\":3136,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[715,640,569,570,642]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.68,33.75],[7.73,33.86],[8.1,33.83],[8.24,33.78],[8.16,33.33],[8.1,33.3],[7.71,33.5],[7.68,33.75]]]},\"properties\":{\"id\":659,\"height\":3136,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[658,586,587,588,660,734,733]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.63,31.73],[-1.72,31.96],[-1.55,32.35],[-1.1,32.18],[-1.15,31.82],[-1.63,31.73]]]},\"properties\":{\"id\":863,\"height\":3136,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[937,862,789,790,864]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.67,31.09],[4.3,31.48],[4.87,31.7],[4.95,31.54],[4.67,31.09],[4.67,31.09]]]},\"properties\":{\"id\":948,\"height\":3136,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":0,\"religion\":0,\"neighbors\":[1021,947,874,875,949]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.12,13.8],[-2.95,13.21],[-3.12,13.01],[-3.66,13.29],[-3.46,13.69],[-3.15,13.83],[-3.12,13.8]]]},\"properties\":{\"id\":3596,\"height\":3136,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":9,\"province\":132,\"culture\":7,\"religion\":7,\"neighbors\":[3510,3597,3682,3681,3595,3509]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.17,13.29],[-14.26,12.85],[-14.54,12.79],[-14.68,13.13],[-14.62,13.29],[-14.17,13.32],[-14.17,13.29]]]},\"properties\":{\"id\":3661,\"height\":3136,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3577,3662,3744,3660,3575,3576]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.55,12.73],[-9.98,12.29],[-9.98,12.26],[-10.66,12.18],[-10.74,12.45],[-10.74,12.65],[-10.55,12.73]]]},\"properties\":{\"id\":3751,\"height\":3136,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3668,3752,3753,3836,3835,3750]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.76,36.32],[-12.35,36.38],[-12.38,36.94],[-12.35,36.96],[-11.9,37.1],[-11.73,36.96],[-11.7,36.35],[-11.76,36.32]]]},\"properties\":{\"id\":177,\"height\":3249,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":6,\"culture\":0,\"religion\":0,\"neighbors\":[252,251,176,100,101,102,178]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.83,31.93],[1.49,32.1],[1.69,32.66],[2.14,32.49],[2.28,32.12],[2.17,31.98],[1.83,31.93]]]},\"properties\":{\"id\":796,\"height\":3249,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[869,868,795,722,797,870]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.26,32.1],[3.12,32.29],[3.32,32.57],[3.71,32.4],[3.71,32.04],[3.26,32.1]]]},\"properties\":{\"id\":799,\"height\":3249,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[872,871,798,725,800]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.29,31.17],[5.29,31.42],[5.48,31.54],[5.96,31.54],[6.02,30.98],[5.99,30.92],[5.43,31.01],[5.29,31.17]]]},\"properties\":{\"id\":950,\"height\":3249,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1022,949,875,876,951,1024,1023]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.77,12.32],[-3.49,12.15],[-3.71,11.62],[-4.22,11.67],[-4.16,12.12],[-3.77,12.32]]]},\"properties\":{\"id\":3848,\"height\":3249,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3763,3764,3849,3931,3847]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.75,12.26],[7.2,12.37],[7.06,11.62],[7.03,11.56],[6.89,11.62],[6.69,11.81],[6.75,12.26]]]},\"properties\":{\"id\":3868,\"height\":3249,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":11,\"province\":173,\"culture\":8,\"religion\":8,\"neighbors\":[3867,3783,3869,3952,3951,3950]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.87,11.59],[9.9,12.26],[10.15,12.26],[10.32,12.06],[10.27,11.76],[10.21,11.73],[9.9,11.59],[9.87,11.59]]]},\"properties\":{\"id\":3874,\"height\":3249,\"biome\":12,\"type\":\"island\",\"population\":0,\"state\":12,\"province\":154,\"culture\":8,\"religion\":8,\"neighbors\":[3956,3873,3789,3790,3875,3958,3957]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.75,11.53],[-15.75,10.92],[-16.31,10.8],[-16.45,11.48],[-16.45,11.48],[-16.28,11.64],[-15.75,11.53]]]},\"properties\":{\"id\":3909,\"height\":3249,\"biome\":3,\"type\":\"island\",\"population\":1000,\"state\":6,\"province\":166,\"culture\":7,\"religion\":7,\"neighbors\":[3826,3910,3908,3907,3825]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.91,11.53],[-12.74,11],[-13.22,10.64],[-13.56,10.89],[-13.56,11.34],[-13.16,11.59],[-12.99,11.62],[-12.91,11.53]]]},\"properties\":{\"id\":3914,\"height\":3249,\"biome\":2,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":7,\"religion\":7,\"neighbors\":[3832,3915,3913,3830,3831]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.52,36.91],[-17.63,36.96],[-17.8,37.5],[-17.3,37.5],[-17.41,36.94],[-17.52,36.91]]]},\"properties\":{\"id\":91,\"height\":3364,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[167,166,90,17,92]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.86,35.82],[-11.17,35.96],[-11.28,36.41],[-11.25,36.43],[-10.66,36.29],[-10.66,36.01],[-10.86,35.82]]]},\"properties\":{\"id\":253,\"height\":3364,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[331,330,252,178,179,254]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,33.41],[-4.5,33.69],[-4.5,33.86],[-4.27,34.28],[-4.02,34.28],[-3.77,34.11],[-3.77,34],[-4.3,33.41]]]},\"properties\":{\"id\":565,\"height\":3364,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":1,\"province\":9,\"culture\":0,\"religion\":0,\"neighbors\":[637,636,563,564,491,492,566]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.87,33.08],[0.73,32.94],[0.2,33.36],[0.22,33.47],[0.34,33.5],[0.87,33.08]]]},\"properties\":{\"id\":645,\"height\":3364,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[646,720,719,644,573]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.05,32.68],[3.97,32.88],[4.33,33.36],[4.39,33.33],[4.56,32.74],[4.33,32.57],[4.05,32.68]]]},\"properties\":{\"id\":726,\"height\":3364,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[800,725,652,653,727,801]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.69,32.68],[8.77,33.19],[9.28,33.38],[9.34,33.3],[9.25,32.74],[8.69,32.68]]]},\"properties\":{\"id\":735,\"height\":3364,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[809,734,661,662,736]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.85,31.76],[3.85,31.79],[4.42,32.24],[4.67,32.07],[4.22,31.51],[4.02,31.51],[3.85,31.76]]]},\"properties\":{\"id\":873,\"height\":3364,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[946,872,800,801,874,947]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.42,13.21],[-11.08,12.76],[-11.31,12.62],[-11.73,12.87],[-11.73,13.1],[-11.42,13.21]]]},\"properties\":{\"id\":3666,\"height\":3364,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3581,3667,3750,3749,3665]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.01,12.76],[-13.95,12.06],[-14.6,12.15],[-14.62,12.2],[-14.6,12.68],[-14.54,12.79],[-14.26,12.85],[-14.01,12.76]]]},\"properties\":{\"id\":3744,\"height\":3364,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3662,3745,3829,3828,3743,3660,3661]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.69,12.15],[1.74,12.01],[1.6,11.64],[1.49,11.64],[0.98,11.95],[1.24,12.32],[1.69,12.15]]]},\"properties\":{\"id\":3858,\"height\":3364,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":0,\"religion\":0,\"neighbors\":[3773,3774,3859,3941,3857,3772]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.3,36.96],[-14.03,36.94],[-14.06,36.96],[-13.81,37.3],[-13.75,37.36],[-13.27,37.02],[-13.3,36.96]]]},\"properties\":{\"id\":98,\"height\":3481,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[175,174,173,97,24,99]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.5,35.82],[-16,35.85],[-16.2,36.13],[-16.17,36.27],[-15.55,36.35],[-15.5,36.32],[-15.38,35.9],[-15.5,35.82]]]},\"properties\":{\"id\":244,\"height\":3481,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[322,321,320,243,170,171,245]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.54,33.66],[5.43,34.31],[5.46,34.31],[5.85,34.11],[5.96,33.66],[5.91,33.61],[5.54,33.66]]]},\"properties\":{\"id\":583,\"height\":3481,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[655,582,508,509,584,656]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.63,33.1],[5.51,33.16],[5.37,33.61],[5.54,33.66],[5.91,33.61],[5.82,33.16],[5.63,33.1]]]},\"properties\":{\"id\":655,\"height\":3481,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[729,728,654,582,583,656]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.84,32.94],[9.34,33.3],[9.28,33.38],[9.37,33.66],[9.56,33.72],[10.04,33.3],[9.84,32.94]]]},\"properties\":{\"id\":662,\"height\":3481,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[737,736,735,661,590,663]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.53,31.17],[-0.68,31.65],[-0.59,31.73],[-0.03,31.31],[-0.06,31.2],[-0.31,31.06],[-0.53,31.17]]]},\"properties\":{\"id\":939,\"height\":3481,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":164,\"culture\":0,\"religion\":0,\"neighbors\":[1011,938,864,865,940,1012]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.2,28.29],[-14.32,28.26],[-14.68,28.46],[-14.68,28.93],[-14.4,29.05],[-14.01,28.96],[-13.98,28.93],[-14.2,28.29]]]},\"properties\":{\"id\":1277,\"height\":3481,\"biome\":4,\"type\":\"island\",\"population\":7000,\"state\":6,\"province\":102,\"culture\":7,\"religion\":7,\"neighbors\":[1278,1351,1350,1276,1203,1204,1205]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.25,14.86],[-8.97,14.5],[-9.25,14.27],[-9.51,14.36],[-9.56,14.81],[-9.48,14.86],[-9.31,14.95],[-9.25,14.86]]]},\"properties\":{\"id\":3407,\"height\":3481,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3318,3408,3499,3498,3406,3316,3317]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.32,12.57],[3.4,12.32],[3.21,11.81],[3.18,11.81],[2.84,12.4],[2.93,12.62],[3.32,12.57]]]},\"properties\":{\"id\":3776,\"height\":3481,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3693,3777,3862,3945,3861,3775]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.3,12.23],[-6.05,11.9],[-6.5,11.59],[-6.55,11.64],[-6.38,12.2],[-6.3,12.23]]]},\"properties\":{\"id\":3844,\"height\":3481,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3758,3759,3927,3926,3843]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.52,12.48],[6.75,12.26],[6.69,11.81],[6.24,11.81],[6.19,12.15],[6.52,12.48]]]},\"properties\":{\"id\":3867,\"height\":3481,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":11,\"province\":173,\"culture\":8,\"religion\":8,\"neighbors\":[3782,3783,3868,3950,3866]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.24,11.81],[6.69,11.81],[6.89,11.62],[6.3,11.22],[6.05,11.59],[6.24,11.81]]]},\"properties\":{\"id\":3950,\"height\":3481,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":11,\"province\":173,\"culture\":8,\"religion\":8,\"neighbors\":[3866,3867,3868,3951,3949]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.59,10.92],[7.93,11.5],[8.16,11.53],[8.38,10.86],[7.71,10.75],[7.59,10.92]]]},\"properties\":{\"id\":3953,\"height\":3481,\"biome\":9,\"type\":\"island\",\"population\":1000,\"state\":0,\"province\":0,\"culture\":8,\"religion\":8,\"neighbors\":[3952,3870,3954]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.67,36.88],[-16.26,36.66],[-16.37,36.82],[-15.97,37.36],[-15.64,37.22],[-15.67,36.88]]]},\"properties\":{\"id\":94,\"height\":3600,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[95,170,169,93,20]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.7,35.45],[-9.93,35.26],[-10.29,35.2],[-10.41,35.34],[-10.21,35.93],[-10.1,35.99],[-9.84,35.87],[-9.67,35.68],[-9.7,35.45]]]},\"properties\":{\"id\":332,\"height\":3600,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[333,408,407,406,331,254,255,256]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.39,33.78],[-11.59,33.69],[-12.26,34.05],[-11.9,34.33],[-11.56,34.33],[-11.42,34.08],[-11.33,33.83],[-11.39,33.78]]]},\"properties\":{\"id\":551,\"height\":3600,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[624,623,550,476,477,478,552]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.12,32.68],[7.09,33.19],[7.12,33.19],[7.37,33.19],[7.71,32.74],[7.57,32.49],[7.37,32.43],[7.12,32.68]]]},\"properties\":{\"id\":732,\"height\":3600,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[805,731,657,658,733,807,806]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.25,32.74],[9.34,33.3],[9.84,32.94],[9.87,32.74],[9.51,32.57],[9.25,32.74]]]},\"properties\":{\"id\":736,\"height\":3600,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[809,735,662,737,810]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.37,30.95],[7.57,31.51],[7.9,31.59],[7.96,31.54],[8.02,31.12],[7.59,30.81],[7.37,30.95]]]},\"properties\":{\"id\":954,\"height\":3600,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1026,953,879,881,955,1027]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.12,26.95],[-6.86,26.28],[-7.17,26.16],[-7.37,26.3],[-7.4,26.36],[-7.48,26.61],[-7.45,26.64],[-7.12,26.95]]]},\"properties\":{\"id\":1587,\"height\":3600,\"biome\":4,\"type\":\"island\",\"population\":5942,\"state\":6,\"province\":93,\"culture\":7,\"religion\":7,\"neighbors\":[1512,1588,1663,1662,1661,1586,1511]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.51,14.36],[-9.25,14.27],[-9.11,13.88],[-9.14,13.88],[-9.53,13.8],[-9.65,14.13],[-9.51,14.36]]]},\"properties\":{\"id\":3498,\"height\":3600,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3406,3407,3499,3586,3585,3497]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.83,12.62],[-3.77,12.32],[-4.16,12.12],[-4.36,12.29],[-4.42,12.48],[-4.08,12.76],[-3.83,12.62]]]},\"properties\":{\"id\":3763,\"height\":3600,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3680,3764,3848,3847,3762,3679]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.05,12.68],[6.47,12.68],[6.52,12.48],[6.19,12.15],[5.88,12.29],[6.05,12.68]]]},\"properties\":{\"id\":3782,\"height\":3600,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":11,\"province\":173,\"culture\":8,\"religion\":8,\"neighbors\":[3781,3699,3783,3867,3866]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.27,37.02],[-13.75,37.36],[-13.47,37.8],[-13.05,37.36],[-13.02,37.22],[-13.27,37.02]]]},\"properties\":{\"id\":99,\"height\":3721,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[175,98,24,25,100]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.35,34],[-12.52,34.11],[-12.4,34.78],[-12.38,34.81],[-12.04,34.64],[-11.9,34.33],[-12.26,34.05],[-12.35,34]]]},\"properties\":{\"id\":476,\"height\":3721,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[550,549,475,402,403,477,551]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.42,34.33],[-9.56,34.31],[-9.7,34.78],[-9.17,35.01],[-9.03,34.78],[-9.42,34.33]]]},\"properties\":{\"id\":481,\"height\":3721,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[482,555,480,408,409]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.49,34.42],[-9,34.05],[-9.42,34.33],[-9.03,34.78],[-8.89,34.75],[-8.55,34.5],[-8.49,34.42]]]},\"properties\":{\"id\":482,\"height\":3721,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[483,556,555,481,409,410]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.2,34.19],[-7.34,34.17],[-7.68,34.81],[-7.2,34.87],[-6.97,34.5],[-6.97,34.42],[-7.2,34.19]]]},\"properties\":{\"id\":485,\"height\":3721,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[560,559,484,412,413,486]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.24,32.57],[0.93,33.1],[1.01,33.19],[1.52,33.08],[1.66,32.82],[1.69,32.66],[1.24,32.57]]]},\"properties\":{\"id\":721,\"height\":3721,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[795,720,646,647,648,722]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.64,32.01],[-3.04,32.15],[-3.12,32.43],[-2.76,32.88],[-2.53,32.8],[-2.59,32.04],[-2.64,32.01]]]},\"properties\":{\"id\":787,\"height\":3721,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[861,860,786,713,714,788]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.56,31.79],[-0.9,32.35],[-0.87,32.38],[-0.7,32.46],[-0.34,32.38],[-0.28,31.96],[-0.56,31.79]]]},\"properties\":{\"id\":791,\"height\":3721,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[865,864,790,717,718,792]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.68,31.65],[-0.98,31.65],[-1.15,31.82],[-1.1,32.18],[-0.9,32.35],[-0.56,31.79],[-0.59,31.73],[-0.68,31.65]]]},\"properties\":{\"id\":864,\"height\":3721,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[939,938,937,863,790,791,865]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.71,27.03],[-3.57,26.64],[-3.71,26.44],[-4.25,26.7],[-4.25,26.84],[-3.91,27.09],[-3.71,27.03]]]},\"properties\":{\"id\":1518,\"height\":3721,\"biome\":4,\"type\":\"island\",\"population\":5000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1444,1519,1594,1593,1517,1443]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.85,13.94],[-13.42,13.41],[-13.5,13.38],[-13.67,13.8],[-13.47,14.25],[-13.36,14.33],[-12.94,14.05],[-12.85,13.94]]]},\"properties\":{\"id\":3491,\"height\":3721,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3492,3578,3663,3577,3490,3399,3401]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.38,12.65],[-0.87,12.18],[-1.04,12.04],[-1.6,11.9],[-1.63,11.92],[-1.74,12.2],[-1.6,12.48],[-1.43,12.65],[-1.38,12.65]]]},\"properties\":{\"id\":3768,\"height\":3721,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":0,\"religion\":0,\"neighbors\":[3685,3769,3854,3853,3936,3852,3767,3684]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.99,11.98],[-12.99,11.62],[-13.16,11.59],[-13.78,12.09],[-13.5,12.26],[-12.99,11.98]]]},\"properties\":{\"id\":3831,\"height\":3721,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3746,3832,3914,3830,3745]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.84,12.4],[3.18,11.81],[3.15,11.78],[2.76,11.7],[2.67,11.73],[2.81,12.4],[2.84,12.4]]]},\"properties\":{\"id\":3861,\"height\":3721,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3775,3776,3945,3944,3943,3860]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.96,36.99],[-19.24,37.13],[-19.41,37.41],[-19.38,37.61],[-18.73,37.72],[-18.51,37.52],[-18.96,36.99]]]},\"properties\":{\"id\":88,\"height\":3844,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[89,164,87,13,14,15]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.05,34.14],[-6.38,34.19],[-6.44,34.33],[-6.24,34.7],[-5.77,34.75],[-5.77,34.75],[-5.74,34.33],[-6.05,34.14]]]},\"properties\":{\"id\":487,\"height\":3844,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[562,561,560,486,414,415,488]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.06,32.94],[-0.56,33.19],[-0.51,33.69],[-0.48,33.69],[0.14,33.61],[0.22,33.47],[0.2,33.36],[-0.06,32.94]]]},\"properties\":{\"id\":644,\"height\":3844,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[719,718,643,571,572,573,645]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.71,32.04],[3.71,32.4],[4.05,32.68],[4.33,32.57],[4.42,32.24],[3.85,31.79],[3.71,32.04]]]},\"properties\":{\"id\":800,\"height\":3844,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[872,799,725,726,801,873]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.3,26.61],[-4.53,26.47],[-4.84,26.39],[-4.98,26.7],[-4.89,27.12],[-4.58,27.17],[-4.25,26.84],[-4.25,26.7],[-4.3,26.61]]]},\"properties\":{\"id\":1517,\"height\":3844,\"biome\":4,\"type\":\"island\",\"population\":8000,\"state\":6,\"province\":101,\"culture\":7,\"religion\":7,\"neighbors\":[1593,1592,1667,1591,1516,1442,1443,1518]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.19,12.62],[-5.51,12.15],[-5.51,12.12],[-6.05,11.87],[-6.05,11.9],[-6.3,12.23],[-6.22,12.62],[-6.19,12.62]]]},\"properties\":{\"id\":3759,\"height\":3844,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3676,3760,3761,3845,3927,3844,3758]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.88,12.29],[6.19,12.15],[6.24,11.81],[6.05,11.59],[5.85,11.59],[5.51,11.98],[5.48,12.2],[5.88,12.29]]]},\"properties\":{\"id\":3866,\"height\":3844,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":11,\"province\":173,\"culture\":0,\"religion\":0,\"neighbors\":[3781,3782,3867,3950,3949,3948,3865]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.19,11.53],[-15.16,10.83],[-15.41,10.66],[-15.75,10.92],[-15.75,11.53],[-15.61,11.67],[-15.38,11.67],[-15.19,11.53]]]},\"properties\":{\"id\":3910,\"height\":3844,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3828,3911,3909,3826,3827]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.14,33.8],[-2.14,33.8],[-2.22,34.19],[-1.94,34.45],[-1.6,34.53],[-1.52,34.33],[-1.57,33.94],[-2.14,33.8]]]},\"properties\":{\"id\":569,\"height\":3969,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[641,640,568,494,495,496,570]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.51,12.65],[-7.54,12.18],[-7.62,12.12],[-8.04,12.09],[-8.13,12.15],[-8.24,12.62],[-7.99,12.87],[-7.54,12.71],[-7.51,12.65]]]},\"properties\":{\"id\":3756,\"height\":3969,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3674,3757,3842,3841,3840,3755,3672,3673]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.83,12.59],[-6.89,12.15],[-7.03,11.95],[-7.54,12.18],[-7.51,12.65],[-6.83,12.59]]]},\"properties\":{\"id\":3757,\"height\":3969,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3674,3758,3843,3842,3756]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.89,12.68],[-4.78,12.12],[-5.37,11.95],[-5.51,12.12],[-5.51,12.15],[-5.26,12.62],[-4.89,12.68]]]},\"properties\":{\"id\":3761,\"height\":3969,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3678,3762,3846,3845,3759,3760]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.84,12.04],[-9.84,12.01],[-10.58,11.78],[-10.66,11.87],[-10.66,12.18],[-9.98,12.26],[-9.84,12.04]]]},\"properties\":{\"id\":3836,\"height\":3969,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":171,\"culture\":0,\"religion\":0,\"neighbors\":[3753,3838,3837,3919,3835,3751]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.02,12.23],[-1.74,12.2],[-1.63,11.92],[-1.88,11.62],[-2.19,11.53],[-2.31,11.62],[-2.14,12.2],[-2.02,12.23]]]},\"properties\":{\"id\":3852,\"height\":3969,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":0,\"religion\":0,\"neighbors\":[3766,3767,3768,3936,3935,3934,3851]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.57,35.93],[-15.16,35.85],[-15.36,35.9],[-14.93,36.32],[-14.62,36.27],[-14.54,35.99],[-14.57,35.93]]]},\"properties\":{\"id\":246,\"height\":4096,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[324,323,322,245,172,247]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.04,34.64],[-12.38,34.81],[-12.23,35.31],[-12.21,35.31],[-11.95,35.17],[-11.9,34.89],[-12.04,34.64]]]},\"properties\":{\"id\":403,\"height\":4096,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[477,476,402,327,329,404]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.67,33.36],[-10.07,32.88],[-10.41,33.19],[-10.27,33.66],[-9.73,33.52],[-9.67,33.36]]]},\"properties\":{\"id\":626,\"height\":4096,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[627,700,699,625,554]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.58,33.13],[-5.01,33.24],[-5.06,33.58],[-4.5,33.69],[-4.3,33.41],[-4.3,33.41],[-4.33,33.33],[-4.58,33.13]]]},\"properties\":{\"id\":636,\"height\":4096,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[710,709,635,563,565,637,711]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.55,32.35],[-1.72,31.96],[-2.25,32.15],[-1.94,32.66],[-1.66,32.63],[-1.55,32.35]]]},\"properties\":{\"id\":789,\"height\":4096,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[790,863,862,788,715]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.52,31.09],[-1.69,31.59],[-1.63,31.73],[-1.15,31.82],[-0.98,31.65],[-1.12,31.26],[-1.52,31.09]]]},\"properties\":{\"id\":937,\"height\":4096,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1010,936,862,863,864,938]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.19,13.24],[-2.08,13.15],[-2.19,12.73],[-2.19,12.73],[-2.59,12.57],[-2.62,12.59],[-2.56,13.21],[-2.53,13.24],[-2.19,13.24]]]},\"properties\":{\"id\":3683,\"height\":4096,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":0,\"religion\":0,\"neighbors\":[3598,3599,3684,3767,3766,3765,3682,3597]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.39,12.71],[-9.37,12.26],[-9.42,12.18],[-9.84,12.04],[-9.98,12.26],[-9.98,12.29],[-9.84,12.73],[-9.48,12.79],[-9.39,12.71]]]},\"properties\":{\"id\":3753,\"height\":4096,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":171,\"culture\":0,\"religion\":0,\"neighbors\":[3670,3754,3839,3838,3836,3751,3752,3669]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.41,12.12],[8.83,11.98],[8.86,11.95],[8.83,11.67],[8.55,11.48],[8.21,11.56],[8.35,12.09],[8.41,12.12]]]},\"properties\":{\"id\":3871,\"height\":4096,\"biome\":12,\"type\":\"island\",\"population\":0,\"state\":12,\"province\":154,\"culture\":0,\"religion\":0,\"neighbors\":[3785,3786,3787,3872,3955,3954,3870]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.14,11.67],[-10.58,10.97],[-11.02,10.64],[-11.42,10.94],[-11.36,11.48],[-11.19,11.67],[-11.14,11.67]]]},\"properties\":{\"id\":3918,\"height\":4096,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3835,3919,3917,3834]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.39,37.5],[-18.51,37.52],[-18.73,37.72],[-18.82,38.36],[-18.73,38.48],[-18.31,38.25],[-18.31,37.58],[-18.39,37.5]]]},\"properties\":{\"id\":15,\"height\":4225,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[90,89,88,14,16]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.6,36.74],[-15.05,36.82],[-15.07,37.3],[-14.68,37.33],[-14.46,37.19],[-14.34,37.02],[-14.6,36.74]]]},\"properties\":{\"id\":96,\"height\":4225,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[173,172,95,22,23,97]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.32,33.66],[-1.38,33.66],[-1.57,33.94],[-1.52,34.33],[-1.01,34.31],[-0.93,34.22],[-0.87,33.83],[-1.32,33.66]]]},\"properties\":{\"id\":570,\"height\":4225,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[643,642,641,569,496,497,571]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.12,33.19],[7.06,33.78],[7.68,33.75],[7.71,33.5],[7.37,33.19],[7.12,33.19]]]},\"properties\":{\"id\":658,\"height\":4225,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[732,657,586,659,733]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.57,32.49],[7.71,32.74],[8.1,32.82],[8.24,32.71],[8.02,32.21],[7.88,32.12],[7.57,32.49]]]},\"properties\":{\"id\":807,\"height\":4225,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[806,732,733,734,808,880]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.35,12.2],[-12.29,11.76],[-12.91,11.53],[-12.99,11.62],[-12.99,11.98],[-12.8,12.2],[-12.46,12.29],[-12.35,12.2]]]},\"properties\":{\"id\":3832,\"height\":4225,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3748,3833,3915,3914,3831,3746,3747]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.77,11.76],[3.85,11.56],[3.66,10.97],[3.29,10.83],[3.29,10.86],[3.15,11.78],[3.18,11.81],[3.21,11.81],[3.77,11.76]]]},\"properties\":{\"id\":3945,\"height\":4225,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3862,3863,3946,3944,3861,3776]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.06,11.62],[7.65,11.87],[7.93,11.5],[7.59,10.92],[7.14,11.06],[7.03,11.56],[7.06,11.62]]]},\"properties\":{\"id\":3952,\"height\":4225,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":11,\"province\":173,\"culture\":0,\"religion\":0,\"neighbors\":[3868,3869,3870,3953,3951]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.92,35.31],[-14.46,35.4],[-14.48,35.43],[-14.57,35.93],[-14.54,35.99],[-14.03,36.07],[-13.92,36.01],[-13.89,35.4],[-13.92,35.31]]]},\"properties\":{\"id\":324,\"height\":4356,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[326,399,398,323,246,247,248,325]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.95,35.17],[-12.21,35.31],[-12.21,35.48],[-11.59,35.71],[-11.53,35.68],[-11.36,35.23],[-11.95,35.17]]]},\"properties\":{\"id\":329,\"height\":4356,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[404,403,327,328,252,330]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.41,33.19],[-10.69,33.02],[-10.94,33.1],[-10.69,33.8],[-10.35,33.75],[-10.27,33.66],[-10.41,33.19]]]},\"properties\":{\"id\":625,\"height\":4356,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[626,699,698,624,553,554]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.81,33.05],[-3.21,33.16],[-3.26,33.61],[-3.12,33.69],[-2.76,33.72],[-2.67,33.69],[-2.64,33.33],[-2.81,33.05]]]},\"properties\":{\"id\":639,\"height\":4356,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[714,713,638,566,567,568,640]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.66,32.82],[1.52,33.08],[1.72,33.52],[1.83,33.61],[1.94,33.61],[2.19,33.27],[1.66,32.82]]]},\"properties\":{\"id\":648,\"height\":4356,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[722,721,647,575,576,649]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.21,32.77],[-8.47,32.94],[-8.52,33.1],[-8.21,33.47],[-8.18,33.5],[-7.9,33.19],[-8.21,32.77]]]},\"properties\":{\"id\":703,\"height\":4356,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[704,777,702,629,557,630]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.58,33.13],[-4.73,32.77],[-4.98,32.68],[-5.23,32.88],[-5.01,33.24],[-4.58,33.13]]]},\"properties\":{\"id\":709,\"height\":4356,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[636,710,784,783,635]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.06,32.68],[-0.06,32.94],[0.2,33.36],[0.73,32.94],[0.53,32.63],[0.42,32.6],[0.22,32.63],[0.06,32.68]]]},\"properties\":{\"id\":719,\"height\":4356,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[792,718,644,645,720,794,793]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.03,31.31],[-0.59,31.73],[-0.56,31.79],[-0.28,31.96],[0.03,31.82],[0.06,31.79],[0.14,31.59],[-0.03,31.31]]]},\"properties\":{\"id\":865,\"height\":4356,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[940,939,864,791,792,793,866]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.92,12.06],[-13.92,11.59],[-14.09,11.48],[-14.62,11.48],[-14.71,11.59],[-14.6,12.15],[-13.95,12.06],[-13.92,12.06]]]},\"properties\":{\"id\":3829,\"height\":4356,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3745,3830,3913,3912,3911,3828,3744]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.36,35.9],[-15.38,35.9],[-15.5,36.32],[-15.13,36.52],[-14.93,36.32],[-15.36,35.9]]]},\"properties\":{\"id\":245,\"height\":4489,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[246,322,244,171,172]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.38,33.69],[5.96,33.66],[5.85,34.11],[6.22,34.36],[6.47,34.22],[6.38,33.69]]]},\"properties\":{\"id\":584,\"height\":4489,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[585,656,583,509,510]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.84,32.26],[2.78,32.54],[3.23,32.85],[3.32,32.57],[3.12,32.29],[2.84,32.26]]]},\"properties\":{\"id\":798,\"height\":4489,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[871,797,724,725,799]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.01,14.33],[-12.04,13.74],[-12.6,13.69],[-12.63,13.71],[-12.68,13.83],[-12.15,14.33],[-12.01,14.33],[-12.01,14.33]]]},\"properties\":{\"id\":3493,\"height\":4489,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3403,3494,3580,3579,3578,3492,3402]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.22,12.62],[-6.3,12.23],[-6.38,12.2],[-6.89,12.15],[-6.83,12.59],[-6.72,12.73],[-6.38,12.76],[-6.22,12.62]]]},\"properties\":{\"id\":3758,\"height\":4489,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3676,3759,3844,3843,3757,3674,3675]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.47,36.15],[-13.92,36.01],[-14.03,36.07],[-14.03,36.49],[-13.92,36.66],[-13.36,36.43],[-13.47,36.15]]]},\"properties\":{\"id\":248,\"height\":4624,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[249,325,324,247,173,174]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.19,33.27],[1.94,33.61],[2.14,33.92],[2.7,33.69],[2.73,33.64],[2.5,33.27],[2.28,33.24],[2.19,33.27]]]},\"properties\":{\"id\":649,\"height\":4624,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":10,\"province\":134,\"culture\":0,\"religion\":0,\"neighbors\":[722,648,576,577,578,650,723]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.33,33.36],[4.33,33.44],[4.56,33.66],[5.03,33.55],[4.98,33.16],[4.39,33.33],[4.33,33.36]]]},\"properties\":{\"id\":653,\"height\":4624,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[726,652,580,581,654,727]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.45,32.07],[-2.59,32.04],[-2.53,32.8],[-2.14,32.88],[-1.94,32.66],[-2.25,32.15],[-2.45,32.07]]]},\"properties\":{\"id\":788,\"height\":4624,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[862,861,787,714,715,789]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.37,30.95],[7.09,30.95],[6.95,31.45],[7.14,31.73],[7.57,31.51],[7.37,30.95]]]},\"properties\":{\"id\":953,\"height\":4624,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[954,1026,952,878,879]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.62,12.12],[-7.68,11.48],[-7.73,11.42],[-7.96,11.34],[-8.04,11.62],[-8.04,12.09],[-7.62,12.12]]]},\"properties\":{\"id\":3841,\"height\":4624,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":171,\"culture\":0,\"religion\":0,\"neighbors\":[3756,3842,3925,3924,3923,3840]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.03,11.9],[-6.55,11.64],[-6.5,11.59],[-6.38,11],[-6.61,10.83],[-7.03,10.97],[-7.2,11.5],[-7.03,11.9]]]},\"properties\":{\"id\":3926,\"height\":4624,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3842,3843,3844,3927,3925]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.88,36.32],[-12.97,35.65],[-13.02,35.62],[-13.33,35.79],[-13.47,36.15],[-13.36,36.43],[-13.33,36.46],[-13.16,36.43],[-12.88,36.32]]]},\"properties\":{\"id\":249,\"height\":4761,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[176,250,327,326,325,248,174,175]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.23,35.31],[-12.99,35.23],[-13.02,35.62],[-12.97,35.65],[-12.38,35.85],[-12.29,35.73],[-12.21,35.48],[-12.21,35.31],[-12.23,35.31]]]},\"properties\":{\"id\":327,\"height\":4761,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[403,402,326,249,250,251,328,329]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.77,31.96],[-6.44,32.24],[-6.41,32.57],[-6.36,32.57],[-6.19,32.57],[-5.74,31.98],[-5.77,31.96]]]},\"properties\":{\"id\":781,\"height\":4761,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":73,\"culture\":0,\"religion\":0,\"neighbors\":[855,854,780,706,707,782]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.28,32.12],[2.14,32.49],[2.28,32.63],[2.59,32.71],[2.78,32.54],[2.84,32.26],[2.62,32.07],[2.28,32.12]]]},\"properties\":{\"id\":797,\"height\":4761,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[870,796,722,723,724,798,871]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.46,32.24],[5.48,32.49],[6.02,32.74],[6.16,32.35],[5.85,32.07],[5.46,32.24]]]},\"properties\":{\"id\":803,\"height\":4761,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[876,802,729,804,877]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.3,31.48],[4.22,31.51],[4.67,32.07],[4.81,32.01],[4.87,31.7],[4.3,31.48]]]},\"properties\":{\"id\":874,\"height\":4761,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[948,947,873,801,875]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.84,31.09],[2.84,31.12],[3.01,31.54],[3.07,31.54],[3.23,31.48],[3.43,31.09],[3.26,30.92],[2.84,31.09]]]},\"properties\":{\"id\":945,\"height\":4761,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":0,\"religion\":0,\"neighbors\":[1018,1017,944,871,872,946,1019]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.36,12.09],[-11.19,11.67],[-11.36,11.48],[-11.9,11.59],[-11.73,12.29],[-11.56,12.26],[-11.36,12.09]]]},\"properties\":{\"id\":3834,\"height\":4761,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3750,3835,3918,3917,3833,3749]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.28,12.09],[2.5,11.73],[2.28,11.34],[1.63,11.59],[1.6,11.64],[1.74,12.01],[2.28,12.09]]]},\"properties\":{\"id\":3859,\"height\":4761,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":9,\"province\":170,\"culture\":0,\"religion\":0,\"neighbors\":[3774,3860,3943,3942,3941,3858]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.79,12.18],[8.35,12.09],[8.21,11.56],[8.16,11.53],[7.93,11.5],[7.65,11.87],[7.68,12.09],[7.79,12.18]]]},\"properties\":{\"id\":3870,\"height\":4761,\"biome\":12,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3784,3785,3871,3954,3953,3952,3869]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.36,11.48],[-11.42,10.94],[-11.95,10.8],[-12.04,11.56],[-11.9,11.59],[-11.36,11.48]]]},\"properties\":{\"id\":3917,\"height\":4761,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3834,3918,3916,3833]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.03,36.49],[-14.6,36.38],[-14.6,36.74],[-14.34,37.02],[-14.06,36.96],[-14.03,36.94],[-13.92,36.66],[-14.03,36.49]]]},\"properties\":{\"id\":173,\"height\":4900,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[248,247,172,96,97,98,174]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[9.84,32.94],[10.04,33.3],[10.21,33.36],[10.27,33.3],[10.43,32.99],[10.38,32.85],[10.01,32.66],[9.87,32.74],[9.84,32.94]]]},\"properties\":{\"id\":737,\"height\":4900,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[736,662,663,664,665,738,739,810]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.95,13.66],[-11.45,13.8],[-11.31,13.41],[-11.42,13.21],[-11.73,13.1],[-11.95,13.24],[-11.95,13.66]]]},\"properties\":{\"id\":3581,\"height\":4900,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3580,3494,3582,3667,3666,3665]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-4.42,12.48],[-4.36,12.29],[-4.73,12.06],[-4.78,12.12],[-4.89,12.68],[-4.84,12.73],[-4.42,12.48]]]},\"properties\":{\"id\":3762,\"height\":4900,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3679,3763,3847,3846,3761,3678]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.82,12.85],[4.05,12.57],[3.97,12.18],[3.94,12.15],[3.4,12.32],[3.32,12.57],[3.54,12.76],[3.82,12.85]]]},\"properties\":{\"id\":3777,\"height\":4900,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":11,\"province\":172,\"culture\":0,\"religion\":0,\"neighbors\":[3694,3695,3778,3863,3862,3776,3693]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.07,36.88],[-17.21,36.91],[-17.41,36.94],[-17.3,37.5],[-17.13,37.75],[-16.87,37.61],[-16.68,37.38],[-16.71,37.08],[-17.07,36.88]]]},\"properties\":{\"id\":92,\"height\":5041,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[169,168,167,91,17,18,19,93]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.63,36.29],[-17.72,36.21],[-18.23,36.6],[-18.25,36.8],[-18.17,36.91],[-17.63,36.96],[-17.52,36.91],[-17.63,36.29]]]},\"properties\":{\"id\":166,\"height\":5041,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[167,241,240,165,89,90,91]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.15,36.35],[-10.1,35.99],[-10.21,35.93],[-10.66,36.01],[-10.66,36.29],[-10.49,36.49],[-10.21,36.41],[-10.15,36.35]]]},\"properties\":{\"id\":254,\"height\":5041,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[181,255,332,331,253,179,180]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.46,33.72],[10.24,33.61],[9.96,33.97],[10.21,34.14],[10.46,33.72]]]},\"properties\":{\"id\":591,\"height\":5041,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[592,664,663,517]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.87,33.13],[-1.15,33.3],[-1.32,33.66],[-0.87,33.83],[-0.51,33.69],[-0.56,33.19],[-0.62,33.16],[-0.87,33.13]]]},\"properties\":{\"id\":643,\"height\":5041,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[717,716,642,570,571,644,718]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.68,32.6],[-3.85,32.74],[-3.74,33.1],[-3.32,33.02],[-3.32,32.6],[-3.68,32.6]]]},\"properties\":{\"id\":712,\"height\":5041,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[786,785,711,638,713]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.32,32.12],[-5.2,31.51],[-5.85,31.7],[-5.77,31.96],[-5.74,31.98],[-5.54,32.12],[-5.32,32.12]]]},\"properties\":{\"id\":855,\"height\":5041,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":80,\"culture\":0,\"religion\":0,\"neighbors\":[783,856,929,854,781,782]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.6,31.37],[1.6,31.37],[1.83,31.93],[2.17,31.98],[2.19,31.42],[2.19,31.4],[1.6,31.37]]]},\"properties\":{\"id\":869,\"height\":5041,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":5,\"province\":163,\"culture\":0,\"religion\":0,\"neighbors\":[943,942,868,796,870,944]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.52,12.85],[-12.46,12.29],[-12.8,12.2],[-13.13,12.71],[-12.88,12.87],[-12.52,12.85]]]},\"properties\":{\"id\":3747,\"height\":5041,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3664,3748,3832,3746,3663]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.78,12.12],[-15.61,11.67],[-15.75,11.53],[-16.28,11.64],[-16.37,12.04],[-16.12,12.26],[-15.86,12.32],[-15.78,12.12]]]},\"properties\":{\"id\":3826,\"height\":5041,\"biome\":3,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3742,3827,3910,3909,3825,3740,3741]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.46,34.75],[-10.69,34.7],[-11.05,35.31],[-10.8,35.51],[-10.41,35.34],[-10.29,35.2],[-10.46,34.75]]]},\"properties\":{\"id\":406,\"height\":5184,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[407,479,405,330,331,332]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.62,32.68],[-5.85,32.68],[-6.07,33.24],[-5.82,33.33],[-5.62,33.3],[-5.43,32.91],[-5.62,32.68]]]},\"properties\":{\"id\":708,\"height\":5184,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[783,782,707,633,634,635]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.12,32.43],[-3.32,32.6],[-3.32,33.02],[-3.21,33.16],[-2.81,33.05],[-2.76,32.88],[-3.12,32.43]]]},\"properties\":{\"id\":713,\"height\":5184,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[787,786,712,638,639,714]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.53,32.8],[-2.76,32.88],[-2.81,33.05],[-2.64,33.33],[-2.11,33.1],[-2.14,32.88],[-2.53,32.8]]]},\"properties\":{\"id\":714,\"height\":5184,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[788,787,713,639,640,715]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.56,32.74],[4.39,33.33],[4.98,33.16],[5.01,33.13],[4.95,32.88],[4.92,32.85],[4.56,32.74]]]},\"properties\":{\"id\":727,\"height\":5184,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[801,726,653,654,728,802]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.01,32.15],[4.92,32.85],[4.95,32.88],[5.4,32.66],[5.48,32.49],[5.46,32.24],[5.34,32.18],[5.01,32.15]]]},\"properties\":{\"id\":802,\"height\":5184,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[875,801,727,728,729,803,876]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.66,12.18],[-10.66,11.87],[-11.14,11.67],[-11.19,11.67],[-11.36,12.09],[-10.74,12.45],[-10.66,12.18]]]},\"properties\":{\"id\":3835,\"height\":5184,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3751,3836,3919,3918,3834,3750]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.11,33.1],[-2.64,33.33],[-2.67,33.69],[-2.14,33.8],[-2.14,33.8],[-2.02,33.3],[-2.11,33.1]]]},\"properties\":{\"id\":640,\"height\":5329,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[715,714,639,568,569,641]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.03,32.18],[-5.32,32.12],[-5.54,32.12],[-5.62,32.68],[-5.43,32.91],[-5.23,32.88],[-4.98,32.68],[-5.01,32.21],[-5.03,32.18]]]},\"properties\":{\"id\":783,\"height\":5329,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[857,856,855,782,708,635,709,784]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.87,31.7],[4.81,32.01],[5.01,32.15],[5.34,32.18],[5.48,31.54],[5.29,31.42],[4.95,31.54],[4.87,31.7]]]},\"properties\":{\"id\":875,\"height\":5329,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[948,874,801,802,876,950,949]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.37,33.92],[-5.85,33.89],[-6.05,34.14],[-5.74,34.33],[-5.37,33.92],[-5.37,33.92]]]},\"properties\":{\"id\":562,\"height\":5476,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[563,634,561,487,488]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.43,31.98],[-3.85,32.15],[-3.68,32.6],[-3.32,32.6],[-3.12,32.43],[-3.04,32.15],[-3.26,31.98],[-3.43,31.98]]]},\"properties\":{\"id\":786,\"height\":5476,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[859,858,785,712,713,787,860]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.02,31.56],[5.85,32.07],[6.16,32.35],[6.64,32.18],[6.33,31.68],[6.02,31.56]]]},\"properties\":{\"id\":877,\"height\":5476,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[951,876,803,804,878]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.16,36.43],[-13.33,36.46],[-13.3,36.96],[-13.27,37.02],[-13.02,37.22],[-12.68,37.02],[-13.16,36.43]]]},\"properties\":{\"id\":175,\"height\":5625,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[176,249,174,98,99,100]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.7,34.78],[-9.76,34.84],[-9.93,35.26],[-9.7,35.45],[-9.2,35.09],[-9.17,35.01],[-9.7,34.78]]]},\"properties\":{\"id\":408,\"height\":5625,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[481,480,407,332,333,409]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.56,34.33],[-11.9,34.33],[-12.04,34.64],[-11.9,34.89],[-11.36,34.73],[-11.36,34.64],[-11.56,34.33]]]},\"properties\":{\"id\":477,\"height\":5625,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[478,551,476,403,404,405]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.38,33.69],[6.47,34.22],[6.69,34.31],[7.03,33.97],[7.03,33.8],[6.41,33.66],[6.38,33.69]]]},\"properties\":{\"id\":585,\"height\":5625,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[656,584,510,511,586,657]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.48,31.54],[5.34,32.18],[5.46,32.24],[5.85,32.07],[6.02,31.56],[5.96,31.54],[5.48,31.54]]]},\"properties\":{\"id\":876,\"height\":5625,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[950,875,802,803,877,951]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.13,12.71],[-12.8,12.2],[-12.99,11.98],[-13.5,12.26],[-13.33,12.71],[-13.13,12.71]]]},\"properties\":{\"id\":3746,\"height\":5625,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3663,3747,3832,3831,3745]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.22,12.68],[2.33,12.2],[2.28,12.09],[1.74,12.01],[1.69,12.15],[1.77,12.73],[2.08,12.85],[2.22,12.68]]]},\"properties\":{\"id\":3774,\"height\":5625,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3692,3775,3860,3859,3858,3773,3691]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.36,34.73],[-11.9,34.89],[-11.95,35.17],[-11.36,35.23],[-11.36,35.23],[-11.36,34.73]]]},\"properties\":{\"id\":404,\"height\":5776,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[405,477,403,329,330]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.21,34.45],[-10.77,34.11],[-10.83,34.36],[-10.83,34.56],[-10.69,34.7],[-10.46,34.75],[-10.24,34.53],[-10.21,34.45]]]},\"properties\":{\"id\":479,\"height\":5776,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[480,553,552,478,405,406,407]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.68,32.6],[-3.85,32.15],[-4.25,32.04],[-4.3,32.12],[-4.3,32.54],[-4.16,32.71],[-3.85,32.74],[-3.68,32.6]]]},\"properties\":{\"id\":785,\"height\":5776,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[712,786,858,857,784,710,711]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.02,32.74],[6.05,32.85],[6.61,32.8],[6.69,32.49],[6.67,32.18],[6.64,32.18],[6.16,32.35],[6.02,32.74]]]},\"properties\":{\"id\":804,\"height\":5776,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[803,729,730,731,805,878,877]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.14,31.59],[0.06,31.79],[0.48,32.18],[0.62,31.98],[0.62,31.7],[0.48,31.59],[0.14,31.59]]]},\"properties\":{\"id\":866,\"height\":5776,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[940,865,793,794,867,941]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.07,31.54],[3.26,32.1],[3.71,32.04],[3.85,31.79],[3.85,31.76],[3.23,31.48],[3.07,31.54]]]},\"properties\":{\"id\":872,\"height\":5776,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[945,871,799,800,873,946]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.44,30.98],[6.67,31.45],[6.95,31.45],[7.09,30.95],[6.98,30.84],[6.55,30.92],[6.44,30.98]]]},\"properties\":{\"id\":952,\"height\":5776,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[1024,951,878,953,1026,1025]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.31,12.62],[-11.56,12.26],[-11.73,12.29],[-11.84,12.37],[-11.87,12.54],[-11.73,12.87],[-11.31,12.62]]]},\"properties\":{\"id\":3749,\"height\":5776,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3666,3750,3834,3833,3748,3665]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.59,12.57],[-2.56,12.32],[-2.76,12.04],[-3.18,12.09],[-3.29,12.18],[-3.12,12.79],[-2.62,12.59],[-2.59,12.57]]]},\"properties\":{\"id\":3765,\"height\":5776,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3683,3766,3851,3850,3849,3764,3682]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.34,33.1],[-9.67,33.36],[-9.73,33.52],[-9.59,33.75],[-9.03,33.78],[-9,33.75],[-9,33.24],[-9.23,33.1],[-9.34,33.1]]]},\"properties\":{\"id\":627,\"height\":5929,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[701,700,626,554,555,556,628,702]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.69,32.66],[1.69,32.66],[1.66,32.82],[2.19,33.27],[2.28,33.24],[2.28,32.63],[2.14,32.49],[1.69,32.66]]]},\"properties\":{\"id\":722,\"height\":5929,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[796,795,721,648,649,723,797]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.1,32.18],[-1.55,32.35],[-1.66,32.63],[-1.52,32.74],[-1.18,32.74],[-0.87,32.38],[-0.9,32.35],[-1.1,32.18]]]},\"properties\":{\"id\":790,\"height\":5929,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[864,863,789,715,716,717,791]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.14,31.73],[7.09,32.01],[7.09,32.01],[7.82,31.96],[7.93,31.59],[7.9,31.59],[7.57,31.51],[7.14,31.73]]]},\"properties\":{\"id\":879,\"height\":5929,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[953,878,805,806,880,881,954]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-18.25,36.8],[-18.87,36.77],[-18.96,36.99],[-18.51,37.52],[-18.39,37.5],[-18.17,36.91],[-18.25,36.8]]]},\"properties\":{\"id\":89,\"height\":6084,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[166,165,164,88,15,90]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.21,33.47],[-8.61,33.66],[-8.63,33.72],[-8.35,34.28],[-8.32,34.28],[-8.1,33.61],[-8.18,33.5],[-8.21,33.47]]]},\"properties\":{\"id\":557,\"height\":6084,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[703,629,628,556,483,558,630]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.94,32.66],[-2.14,32.88],[-2.11,33.1],[-2.02,33.3],[-1.69,33.3],[-1.49,32.99],[-1.52,32.74],[-1.66,32.63],[-1.94,32.66]]]},\"properties\":{\"id\":715,\"height\":6084,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[789,788,714,640,641,642,716,790]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.24,32.57],[0.98,32.38],[0.53,32.63],[0.73,32.94],[0.87,33.08],[0.93,33.1],[1.24,32.57]]]},\"properties\":{\"id\":720,\"height\":6084,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[721,795,794,719,645,646]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.67,31.45],[6.33,31.68],[6.64,32.18],[6.67,32.18],[7.09,32.01],[7.14,31.73],[6.95,31.45],[6.67,31.45]]]},\"properties\":{\"id\":878,\"height\":6084,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[952,951,877,804,805,879,953]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.96,31.54],[6.02,31.56],[6.33,31.68],[6.67,31.45],[6.44,30.98],[6.02,30.98],[5.96,31.54]]]},\"properties\":{\"id\":951,\"height\":6084,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[950,876,877,878,952,1024]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.12,12.79],[-3.12,12.79],[-3.29,12.18],[-3.49,12.15],[-3.77,12.32],[-3.83,12.62],[-3.68,12.76],[-3.12,12.79]]]},\"properties\":{\"id\":3764,\"height\":6084,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3681,3682,3765,3849,3848,3763,3680]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[2.22,12.68],[2.93,12.65],[2.93,12.62],[2.84,12.4],[2.81,12.4],[2.33,12.2],[2.22,12.68]]]},\"properties\":{\"id\":3775,\"height\":6084,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3774,3692,3693,3776,3861,3860]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.13,36.52],[-15.5,36.32],[-15.55,36.35],[-15.64,36.85],[-15.13,36.77],[-15.13,36.52]]]},\"properties\":{\"id\":171,\"height\":6241,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[172,245,244,170,95]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.83,34.36],[-11.42,34.08],[-11.56,34.33],[-11.36,34.64],[-10.83,34.56],[-10.83,34.36]]]},\"properties\":{\"id\":478,\"height\":6241,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[479,552,551,477,405]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.59,34.25],[-10.1,34.28],[-10.21,34.45],[-10.24,34.53],[-9.76,34.84],[-9.7,34.78],[-9.56,34.31],[-9.59,34.25]]]},\"properties\":{\"id\":480,\"height\":6241,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[555,554,553,479,407,408,481]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.77,33.86],[-11.33,33.83],[-11.42,34.08],[-10.83,34.36],[-10.77,34.11],[-10.77,33.86]]]},\"properties\":{\"id\":552,\"height\":6241,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[553,624,551,478,479]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.69,33.8],[-10.77,33.86],[-10.77,34.11],[-10.21,34.45],[-10.1,34.28],[-10.35,33.75],[-10.69,33.8]]]},\"properties\":{\"id\":553,\"height\":6241,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[625,624,552,479,480,554]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.73,33.52],[-10.27,33.66],[-10.35,33.75],[-10.1,34.28],[-9.59,34.25],[-9.59,33.75],[-9.73,33.52]]]},\"properties\":{\"id\":554,\"height\":6241,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[627,626,625,553,480,555]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.03,33.78],[-9.59,33.75],[-9.59,34.25],[-9.56,34.31],[-9.42,34.33],[-9,34.05],[-9.03,33.78]]]},\"properties\":{\"id\":555,\"height\":6241,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[556,627,554,480,481,482]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.53,33.64],[-6.81,33.64],[-6.92,33.75],[-7.2,34.19],[-6.97,34.42],[-6.44,34.33],[-6.38,34.19],[-6.47,33.72],[-6.53,33.64]]]},\"properties\":{\"id\":560,\"height\":6241,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[633,632,631,559,485,486,487,561]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.32,33.02],[-3.74,33.1],[-3.83,33.3],[-3.49,33.64],[-3.26,33.61],[-3.21,33.16],[-3.32,33.02]]]},\"properties\":{\"id\":638,\"height\":6241,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[713,712,711,637,566,639]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.81,33.13],[6.52,33.36],[6.41,33.66],[7.03,33.8],[7.06,33.78],[7.12,33.19],[7.09,33.19],[6.81,33.13]]]},\"properties\":{\"id\":657,\"height\":6241,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[731,730,656,585,586,658,732]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.58,32.1],[8.69,32.35],[9.37,32.12],[9.39,32.1],[9.06,31.62],[8.72,31.65],[8.58,32.1]]]},\"properties\":{\"id\":882,\"height\":6241,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[881,808,809,810,883,956]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.95,13.66],[-11.95,13.24],[-12.35,13.13],[-12.52,13.38],[-12.6,13.69],[-12.04,13.74],[-11.95,13.66]]]},\"properties\":{\"id\":3580,\"height\":6241,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3494,3581,3665,3664,3579,3493]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.94,13.21],[-12.88,12.87],[-13.13,12.71],[-13.33,12.71],[-13.53,12.96],[-13.53,13.29],[-13.5,13.38],[-13.42,13.41],[-13.05,13.29],[-12.94,13.21]]]},\"properties\":{\"id\":3663,\"height\":6241,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3579,3664,3747,3746,3745,3662,3577,3491,3578]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-17.63,36.96],[-18.17,36.91],[-18.39,37.5],[-18.31,37.58],[-17.92,37.66],[-17.8,37.5],[-17.63,36.96]]]},\"properties\":{\"id\":90,\"height\":6400,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[91,166,89,15,16,17]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.13,36.77],[-15.64,36.85],[-15.67,36.88],[-15.64,37.22],[-15.36,37.44],[-15.3,37.47],[-15.07,37.3],[-15.05,36.82],[-15.13,36.77]]]},\"properties\":{\"id\":95,\"height\":6400,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[172,171,170,94,20,21,22,96]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-15.55,36.35],[-16.17,36.27],[-16.26,36.52],[-16.26,36.66],[-15.67,36.88],[-15.64,36.85],[-15.55,36.35]]]},\"properties\":{\"id\":170,\"height\":6400,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[171,244,243,169,94,95]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.35,34.28],[-8.49,34.42],[-8.55,34.5],[-8.24,35.03],[-7.73,34.84],[-7.71,34.81],[-8.13,34.31],[-8.32,34.28],[-8.35,34.28]]]},\"properties\":{\"id\":483,\"height\":6400,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[557,556,482,410,411,412,484,558]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.57,34.03],[-8.13,34.31],[-7.71,34.81],[-7.68,34.81],[-7.34,34.17],[-7.57,34.03]]]},\"properties\":{\"id\":484,\"height\":6400,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[559,558,483,412,485]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.57,33.13],[-7.9,33.19],[-8.18,33.5],[-8.1,33.61],[-7.62,33.75],[-7.57,33.66],[-7.45,33.33],[-7.57,33.13]]]},\"properties\":{\"id\":630,\"height\":6400,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[705,704,703,557,558,559,631]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.49,32.99],[-1.69,33.3],[-1.38,33.66],[-1.32,33.66],[-1.15,33.3],[-1.49,32.99]]]},\"properties\":{\"id\":642,\"height\":6400,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[716,715,641,570,643]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-0.87,33.13],[-1.18,32.74],[-1.52,32.74],[-1.49,32.99],[-1.15,33.3],[-0.87,33.13]]]},\"properties\":{\"id\":716,\"height\":6400,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[643,717,790,715,642]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-1.97,31.56],[-2.45,32.07],[-2.25,32.15],[-1.72,31.96],[-1.63,31.73],[-1.69,31.59],[-1.97,31.56]]]},\"properties\":{\"id\":862,\"height\":6400,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[936,861,788,789,863,937]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[3.01,31.54],[2.93,31.59],[2.62,32.07],[2.84,32.26],[3.12,32.29],[3.26,32.1],[3.07,31.54],[3.01,31.54]]]},\"properties\":{\"id\":871,\"height\":6400,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[945,944,870,797,798,799,872]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.5,13.38],[-13.53,13.29],[-14.17,13.29],[-14.17,13.32],[-14.23,13.71],[-13.87,13.8],[-13.67,13.8],[-13.5,13.38]]]},\"properties\":{\"id\":3577,\"height\":6400,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":6,\"province\":166,\"culture\":0,\"religion\":0,\"neighbors\":[3491,3663,3662,3661,3576,3489,3490]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.6,13.69],[-12.52,13.38],[-12.94,13.21],[-13.05,13.29],[-12.63,13.71],[-12.6,13.69]]]},\"properties\":{\"id\":3579,\"height\":6400,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3493,3580,3664,3663,3578]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.73,13.1],[-11.73,12.87],[-11.87,12.54],[-12.43,12.93],[-12.35,13.13],[-11.95,13.24],[-11.73,13.1]]]},\"properties\":{\"id\":3665,\"height\":6400,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3581,3666,3749,3748,3664,3580]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.33,12.71],[-13.5,12.26],[-13.78,12.09],[-13.92,12.06],[-13.95,12.06],[-14.01,12.76],[-13.53,12.96],[-13.33,12.71]]]},\"properties\":{\"id\":3745,\"height\":6400,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3663,3746,3831,3830,3829,3744,3662]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.89,12.15],[-6.38,12.2],[-6.55,11.64],[-7.03,11.9],[-7.03,11.95],[-6.89,12.15]]]},\"properties\":{\"id\":3843,\"height\":6400,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3757,3758,3844,3926,3842]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.03,36.07],[-14.54,35.99],[-14.62,36.27],[-14.6,36.38],[-14.03,36.49],[-14.03,36.07]]]},\"properties\":{\"id\":247,\"height\":6561,\"biome\":2,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[248,324,246,172,173]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-9.76,34.84],[-10.24,34.53],[-10.46,34.75],[-10.29,35.2],[-9.93,35.26],[-9.76,34.84]]]},\"properties\":{\"id\":407,\"height\":6561,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[408,480,479,406,332]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-8.35,34.28],[-8.63,33.72],[-9,33.75],[-9.03,33.78],[-9,34.05],[-8.49,34.42],[-8.35,34.28]]]},\"properties\":{\"id\":556,\"height\":6561,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[483,557,628,627,555,482]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-6.92,33.75],[-7.57,33.66],[-7.62,33.75],[-7.57,34.03],[-7.34,34.17],[-7.2,34.19],[-6.92,33.75]]]},\"properties\":{\"id\":559,\"height\":6561,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[560,631,630,558,484,485]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.62,33.3],[-5.82,33.33],[-5.96,33.75],[-5.85,33.89],[-5.37,33.92],[-5.34,33.75],[-5.62,33.3]]]},\"properties\":{\"id\":634,\"height\":6561,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[635,708,633,561,562,563]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.23,32.88],[-5.43,32.91],[-5.62,33.3],[-5.34,33.75],[-5.06,33.58],[-5.01,33.24],[-5.23,32.88]]]},\"properties\":{\"id\":635,\"height\":6561,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[709,783,708,634,563,636]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.62,31.98],[0.48,32.18],[0.42,32.6],[0.53,32.63],[0.98,32.38],[1.04,32.21],[0.62,31.98]]]},\"properties\":{\"id\":794,\"height\":6561,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[867,866,793,719,720,795]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[4.67,32.07],[4.42,32.24],[4.33,32.57],[4.56,32.74],[4.92,32.85],[5.01,32.15],[4.81,32.01],[4.67,32.07]]]},\"properties\":{\"id\":801,\"height\":6561,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[874,873,800,726,727,802,875]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.02,32.21],[8.24,32.71],[8.63,32.63],[8.69,32.35],[8.58,32.1],[8.44,32.07],[8.02,32.21]]]},\"properties\":{\"id\":808,\"height\":6561,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[880,807,734,809,882,881]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.63,32.63],[8.69,32.68],[9.25,32.74],[9.51,32.57],[9.37,32.12],[8.69,32.35],[8.63,32.63]]]},\"properties\":{\"id\":809,\"height\":6561,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[808,734,735,736,810,882]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.93,31.59],[8.44,32.07],[8.58,32.1],[8.72,31.65],[8.58,31.51],[7.96,31.54],[7.9,31.59],[7.93,31.59]]]},\"properties\":{\"id\":881,\"height\":6561,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[879,880,808,882,956,955,954]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-12.35,13.13],[-12.43,12.93],[-12.52,12.85],[-12.88,12.87],[-12.94,13.21],[-12.52,13.38],[-12.35,13.13]]]},\"properties\":{\"id\":3664,\"height\":6561,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3580,3665,3748,3747,3663,3579]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-14.62,36.27],[-14.93,36.32],[-15.13,36.52],[-15.13,36.77],[-15.05,36.82],[-14.6,36.74],[-14.6,36.38],[-14.62,36.27]]]},\"properties\":{\"id\":172,\"height\":6724,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[247,246,245,171,95,96,173]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-10.83,34.56],[-11.36,34.64],[-11.36,34.73],[-11.36,35.23],[-11.05,35.31],[-10.69,34.7],[-10.83,34.56]]]},\"properties\":{\"id\":405,\"height\":6724,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[479,478,477,404,330,406]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.62,33.75],[-8.1,33.61],[-8.32,34.28],[-8.13,34.31],[-7.57,34.03],[-7.62,33.75]]]},\"properties\":{\"id\":558,\"height\":6724,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[559,630,557,483,484]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-5.06,33.58],[-5.34,33.75],[-5.37,33.92],[-5.37,33.92],[-5.2,34.11],[-5.01,34.14],[-4.5,33.86],[-4.5,33.69],[-5.06,33.58]]]},\"properties\":{\"id\":563,\"height\":6724,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[636,635,634,562,488,489,564,565]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.88,33.64],[10.46,33.72],[10.21,34.14],[10.27,34.22],[10.69,34.03],[10.88,33.78],[10.88,33.64]]]},\"properties\":{\"id\":592,\"height\":6724,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":10,\"province\":140,\"culture\":0,\"religion\":0,\"neighbors\":[521,664,591,517,519,593]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[5.82,33.16],[5.91,33.61],[5.96,33.66],[6.38,33.69],[6.41,33.66],[6.52,33.36],[6.02,32.94],[5.82,33.16]]]},\"properties\":{\"id\":656,\"height\":6724,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[729,655,583,584,585,657,730]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.21,33.36],[10.24,33.61],[10.46,33.72],[10.88,33.64],[10.91,33.55],[10.27,33.3],[10.21,33.36]]]},\"properties\":{\"id\":664,\"height\":6724,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[737,663,591,592,521,665]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[10.88,33.19],[10.43,32.99],[10.27,33.3],[10.91,33.55],[10.91,33.55],[10.91,33.52],[10.88,33.19],[10.88,33.19]]]},\"properties\":{\"id\":665,\"height\":6724,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[741,738,737,664,521,666,667]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[6.02,32.74],[5.48,32.49],[5.4,32.66],[5.63,33.1],[5.82,33.16],[6.02,32.94],[6.05,32.85],[6.02,32.74]]]},\"properties\":{\"id\":729,\"height\":6724,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[804,803,802,728,655,656,730]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.24,32.71],[8.1,32.82],[8.1,33.3],[8.16,33.33],[8.58,33.38],[8.77,33.19],[8.69,32.68],[8.63,32.63],[8.24,32.71]]]},\"properties\":{\"id\":734,\"height\":6724,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[808,807,733,659,660,661,735,809]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[1.04,32.21],[0.98,32.38],[1.24,32.57],[1.69,32.66],[1.69,32.66],[1.49,32.1],[1.24,31.96],[1.04,32.21]]]},\"properties\":{\"id\":795,\"height\":6724,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[867,794,720,721,722,796,868]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.62,31.7],[0.62,31.98],[1.04,32.21],[1.24,31.96],[1.21,31.82],[1.01,31.68],[0.62,31.7]]]},\"properties\":{\"id\":867,\"height\":6724,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[941,866,794,795,868,942]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[7.93,31.59],[7.82,31.96],[7.88,32.12],[8.02,32.21],[8.44,32.07],[7.93,31.59]]]},\"properties\":{\"id\":880,\"height\":6724,\"biome\":10,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[881,879,806,807,808]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-13.53,13.29],[-13.53,12.96],[-14.01,12.76],[-14.26,12.85],[-14.17,13.29],[-13.53,13.29]]]},\"properties\":{\"id\":3662,\"height\":6724,\"biome\":6,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3577,3663,3745,3744,3661]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-2.95,13.21],[-2.56,13.21],[-2.62,12.59],[-3.12,12.79],[-3.12,12.79],[-3.12,13.01],[-2.95,13.21]]]},\"properties\":{\"id\":3682,\"height\":6724,\"biome\":9,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3596,3597,3683,3765,3764,3681]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.87,12.54],[-11.84,12.37],[-12.35,12.2],[-12.46,12.29],[-12.52,12.85],[-12.43,12.93],[-11.87,12.54]]]},\"properties\":{\"id\":3748,\"height\":6724,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3665,3749,3833,3832,3747,3664]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-11.84,12.37],[-11.73,12.29],[-11.9,11.59],[-12.04,11.56],[-12.09,11.56],[-12.29,11.76],[-12.35,12.2],[-11.84,12.37]]]},\"properties\":{\"id\":3833,\"height\":6724,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3748,3749,3834,3917,3916,3915,3832]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-7.03,11.9],[-7.2,11.5],[-7.68,11.48],[-7.62,12.12],[-7.54,12.18],[-7.03,11.95],[-7.03,11.9]]]},\"properties\":{\"id\":3842,\"height\":6724,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3843,3926,3925,3841,3756,3757]}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[-3.18,12.09],[-3.23,11.62],[-3.63,11.5],[-3.71,11.62],[-3.49,12.15],[-3.29,12.18],[-3.18,12.09]]]},\"properties\":{\"id\":3849,\"height\":6724,\"biome\":11,\"type\":\"island\",\"population\":0,\"state\":0,\"province\":0,\"culture\":0,\"religion\":0,\"neighbors\":[3765,3850,3932,3931,3848,3764]}}]}\n\n//# sourceURL=webpack://innestra/./src/cells.geojson?");

/***/ }),

/***/ "./src/rivers.geojson":
/*!****************************!*\
  !*** ./src/rivers.geojson ***!
  \****************************/
/***/ ((module) => {

eval("module.exports = {\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[12.3763,21.2282],[12.3763,21.2282],[12.3737,21.2266],[12.3696,21.224],[12.3655,21.2213],[12.3613,21.2187],[12.3571,21.2161],[12.3528,21.2134],[12.3485,21.2108],[12.3441,21.2082],[12.3396,21.2055],[12.3351,21.2029],[12.3305,21.2002],[12.3258,21.1976],[12.321,21.195],[12.3162,21.1924],[12.3112,21.1898],[12.3062,21.1873],[12.301,21.1848],[12.2957,21.1823],[12.2903,21.1799],[12.2847,21.1775],[12.279,21.1752],[12.2731,21.173],[12.2671,21.171],[12.2609,21.169],[12.2546,21.1672],[12.2481,21.1656],[12.2415,21.1641],[12.2348,21.1627],[12.228,21.1616],[12.2211,21.1605],[12.2142,21.1596],[12.2072,21.1587],[12.2002,21.1578],[12.1933,21.1569],[12.1863,21.1559],[12.1795,21.1547],[12.1726,21.1534],[12.1659,21.1519],[12.1592,21.1503],[12.1526,21.1483],[12.146,21.1461],[12.1396,21.1434],[12.1334,21.1403],[12.1272,21.1369],[12.1213,21.1333],[12.1154,21.1294],[12.1097,21.1254],[12.1041,21.1212],[12.0985,21.1169],[12.093,21.1125],[12.0876,21.1081],[12.0822,21.1036],[12.0768,21.0992],[12.0714,21.0947],[12.066,21.0902],[12.0605,21.0858],[12.0551,21.0814],[12.0495,21.0771],[12.0439,21.0729],[12.0382,21.0688],[12.0324,21.0649],[12.0265,21.0612],[12.0204,21.0577],[12.0142,21.0545],[12.0079,21.0515],[12.0014,21.0491],[11.9947,21.047],[11.988,21.0452],[11.9811,21.044],[11.9743,21.043],[11.9673,21.0424],[11.9604,21.0421],[11.9534,21.0421],[11.9464,21.0423],[11.9395,21.0428],[11.9325,21.0433],[11.9255,21.044],[11.9186,21.0448],[11.9116,21.0456],[11.9046,21.0465],[11.8976,21.0473],[11.8907,21.0481],[11.8837,21.0487],[11.8767,21.0493],[11.8696,21.0498],[11.8626,21.0501],[11.8556,21.0502],[11.8486,21.0502],[11.8416,21.05],[11.8347,21.0496],[11.8277,21.0489],[11.8208,21.0481],[11.8139,21.0472],[11.807,21.0461],[11.8001,21.0448],[11.7932,21.0434],[11.7864,21.0418],[11.7796,21.0401],[11.7728,21.0383],[11.766,21.0365],[11.7592,21.0346],[11.7525,21.0327],[11.7458,21.0307],[11.7391,21.0286],[11.7324,21.0265],[11.7257,21.0242],[11.7191,21.0219],[11.7125,21.0196],[11.7059,21.0171],[11.6993,21.0146],[11.6928,21.0119],[11.6863,21.0092],[11.6799,21.0064],[11.6735,21.0035],[11.6671,21.0006],[11.6608,20.9975],[11.6545,20.9944],[11.6483,20.9911],[11.6421,20.9878],[11.636,20.9844],[11.6299,20.9809],[11.6239,20.9773],[11.618,20.9736],[11.6121,20.9698],[11.6062,20.966],[11.6003,20.9621],[11.5946,20.9581],[11.589,20.9539],[11.5835,20.9496],[11.5781,20.9452],[11.5729,20.9407],[11.5677,20.936],[11.5626,20.9312],[11.5577,20.9263],[11.5529,20.9212],[11.5481,20.9161],[11.5435,20.9109],[11.5389,20.9056],[11.5344,20.9002],[11.5299,20.8948],[11.5255,20.8894],[11.5212,20.8839],[11.5168,20.8784],[11.5125,20.8729],[11.5082,20.8674],[11.5039,20.8618],[11.4996,20.8563],[11.4953,20.8508],[11.4909,20.8453],[11.4865,20.8398],[11.4821,20.8344],[11.4776,20.8291],[11.4731,20.8238],[11.4685,20.8185],[11.4638,20.8133],[11.459,20.8082],[11.4541,20.8033],[11.4492,20.7984],[11.4441,20.7936],[11.439,20.7889],[11.4338,20.7843],[11.4285,20.7797],[11.4231,20.7753],[11.4176,20.7709],[11.4121,20.7667],[11.4064,20.7626],[11.4006,20.7587],[11.3947,20.7548],[11.3889,20.7509],[11.383,20.7471],[11.377,20.7434],[11.3711,20.7397],[11.3651,20.736],[11.3591,20.7324],[11.353,20.7288],[11.3469,20.7253],[11.3408,20.7219],[11.3347,20.7185],[11.3285,20.7151],[11.3223,20.7118],[11.3161,20.7086],[11.3098,20.7054],[11.3035,20.7023],[11.2972,20.6993],[11.2908,20.6963],[11.2844,20.6934],[11.2779,20.6906],[11.2715,20.6879],[11.2649,20.6853],[11.2584,20.6828],[11.2518,20.6804],[11.2452,20.6781],[11.2385,20.676],[11.2317,20.6743],[11.2249,20.6728],[11.2181,20.6717],[11.2112,20.6709],[11.2044,20.6704],[11.1975,20.6704],[11.1906,20.6707],[11.1838,20.6713],[11.1769,20.6723],[11.17,20.6735],[11.1632,20.6749],[11.1563,20.6765],[11.1495,20.6782],[11.1427,20.6799],[11.1359,20.6815],[11.129,20.6828],[11.1221,20.6839],[11.1153,20.6846],[11.1085,20.6845],[11.1018,20.6838],[11.0951,20.6825],[11.0886,20.6806],[11.0822,20.6781],[11.076,20.6751],[11.0699,20.6716],[11.0641,20.6677],[11.0584,20.6636],[11.0529,20.6592],[11.0475,20.6548],[11.0422,20.6502],[11.037,20.6455],[11.0317,20.6409],[11.0264,20.6363],[11.0211,20.6318],[11.0156,20.6274],[11.0101,20.6232],[11.0043,20.6192],[10.9983,20.6156],[10.9921,20.6125],[10.9857,20.6098],[10.979,20.6077],[10.9723,20.6061],[10.9655,20.605],[10.9586,20.6043],[10.9517,20.604],[10.9447,20.604],[10.9378,20.6041],[10.9308,20.6042],[10.9238,20.6043],[10.9168,20.6043],[10.9097,20.6042],[10.9027,20.604],[10.8957,20.6037],[10.8887,20.6033],[10.8817,20.6028],[10.8747,20.6023],[10.8677,20.6018],[10.8607,20.6013],[10.8537,20.6007],[10.8467,20.6001],[10.8397,20.5994],[10.8328,20.5986],[10.8258,20.5977],[10.8189,20.5966],[10.8119,20.5956],[10.805,20.5945],[10.798,20.5934],[10.7911,20.5923],[10.7841,20.5913],[10.7772,20.5901],[10.7702,20.589],[10.7633,20.5878],[10.7564,20.5866],[10.7495,20.5853],[10.7426,20.5839],[10.7357,20.5825],[10.7288,20.5811],[10.722,20.5795],[10.7152,20.5778],[10.7084,20.5761],[10.7016,20.5743],[10.6948,20.5723],[10.6881,20.5702],[10.6814,20.568],[10.6748,20.5657],[10.6682,20.5632],[10.6617,20.5606],[10.6553,20.5578],[10.6489,20.5549],[10.6426,20.5517],[10.6365,20.5483],[10.6304,20.5448],[10.6245,20.541],[10.6186,20.5371],[10.6129,20.5331],[10.6072,20.529],[10.6016,20.5247],[10.5961,20.5204],[10.5907,20.516],[10.5852,20.5115],[10.5799,20.507],[10.5745,20.5025],[10.5692,20.4979],[10.5639,20.4934],[10.5585,20.4888],[10.5532,20.4843],[10.5478,20.4798],[10.5424,20.4753],[10.5369,20.4709],[10.5314,20.4665],[10.5259,20.4623],[10.5202,20.4581],[10.5145,20.454],[10.5087,20.4501],[10.5028,20.4463],[10.4968,20.4426],[10.4907,20.4392],[10.4845,20.4359],[10.4782,20.4328],[10.4719,20.4297],[10.4656,20.4267],[10.4592,20.4237],[10.4528,20.4208],[10.4464,20.4179],[10.44,20.415],[10.4336,20.4122],[10.4271,20.4095],[10.4206,20.4068],[10.4141,20.4042],[10.4075,20.4017],[10.4009,20.3993],[10.3943,20.397],[10.3876,20.3948],[10.3809,20.3928],[10.3741,20.3908],[10.3674,20.389],[10.3605,20.3873],[10.3537,20.3857],[10.3469,20.3842],[10.34,20.3828],[10.3331,20.3815],[10.3262,20.3803],[10.3193,20.3792],[10.3123,20.3783],[10.3054,20.3775],[10.2984,20.3768],[10.2914,20.3762],[10.2845,20.3758],[10.2775,20.3755],[10.2705,20.3752],[10.2635,20.375],[10.2566,20.375],[10.2496,20.375],[10.2426,20.375],[10.2356,20.3751],[10.2286,20.3753],[10.2216,20.3756],[10.2147,20.376],[10.2077,20.3764],[10.2007,20.377],[10.1937,20.3776],[10.1867,20.3782],[10.1797,20.3789],[10.1727,20.3797],[10.1657,20.3805],[10.1587,20.3812],[10.1517,20.382],[10.1448,20.3828],[10.1378,20.3836],[10.1308,20.3844],[10.1238,20.3852],[10.1168,20.3859],[10.1098,20.3866],[10.1028,20.3873],[10.0958,20.3879],[10.0888,20.3884],[10.0818,20.3889],[10.0748,20.3893],[10.0678,20.3896],[10.0608,20.3897],[10.0538,20.3899],[10.0468,20.3899],[10.0398,20.3899],[10.0328,20.3897],[10.0259,20.3895],[10.0189,20.3891],[10.0119,20.3886],[10.0049,20.3881],[9.998,20.3874],[9.991,20.3866],[9.9841,20.3857],[9.9772,20.3846],[9.9703,20.3834],[9.9634,20.382],[9.9565,20.3806],[9.9497,20.379],[9.9428,20.3774],[9.936,20.3758],[9.9292,20.374],[9.9224,20.3722],[9.9156,20.3704],[9.9089,20.3685],[9.9021,20.3665],[9.8953,20.3646],[9.8886,20.3626],[9.8819,20.3606],[9.8751,20.3587],[9.8684,20.3567],[9.8616,20.3547],[9.8549,20.3528],[9.8481,20.3508],[9.8414,20.3489],[9.8346,20.3471],[9.8278,20.3453],[9.821,20.3436],[9.8142,20.3419],[9.8074,20.3403],[9.8005,20.3388],[9.7936,20.3375],[9.7868,20.3361],[9.7799,20.3347],[9.773,20.3334],[9.7661,20.3322],[9.7592,20.3311],[9.7522,20.3301],[9.7453,20.3291],[9.7383,20.3282],[9.7313,20.3274],[9.7243,20.3268],[9.7173,20.3262],[9.7103,20.3257],[9.7033,20.3252],[9.6963,20.3248],[9.6893,20.3245],[9.6823,20.3242],[9.6752,20.324],[9.6682,20.3239],[9.6612,20.3237],[9.6542,20.3237],[9.6471,20.3237],[9.6401,20.3237],[9.6331,20.3238],[9.6261,20.3239],[9.6191,20.3241],[9.612,20.3243],[9.605,20.3246],[9.598,20.3249],[9.591,20.3253],[9.584,20.3257],[9.577,20.3261],[9.57,20.3266],[9.563,20.3271],[9.556,20.3277],[9.549,20.3283],[9.542,20.3291],[9.5351,20.3299],[9.5281,20.3308],[9.5212,20.3318],[9.5143,20.3328],[9.5074,20.334],[9.5005,20.3351],[9.4936,20.3363],[9.4867,20.3376],[9.4799,20.3389],[9.473,20.3403],[9.4662,20.3417],[9.4593,20.3431],[9.4525,20.3446],[9.4457,20.3461],[9.4388,20.3476],[9.432,20.3491],[9.4252,20.3506],[9.4183,20.3521],[9.4115,20.3537],[9.4047,20.3553],[9.3979,20.357],[9.3911,20.3588],[9.3843,20.3606],[9.3775,20.3624],[9.3707,20.3642],[9.3639,20.366],[9.3571,20.3678],[9.3504,20.3696],[9.3436,20.3714],[9.3368,20.3732],[9.33,20.3749],[9.3232,20.3765],[9.3164,20.378],[9.3096,20.3795],[9.3028,20.3809],[9.296,20.3822],[9.2891,20.3834],[9.2823,20.3846],[9.2755,20.3856],[9.2686,20.3866],[9.2618,20.3874],[9.2549,20.3882],[9.248,20.3889],[9.2411,20.3895],[9.2342,20.39],[9.2273,20.3904],[9.2204,20.3907],[9.2134,20.3909],[9.2064,20.391],[9.1995,20.391],[9.1925,20.3909],[9.1855,20.3907],[9.1785,20.3904],[9.1715,20.39],[9.1645,20.3896],[9.1575,20.3891],[9.1505,20.3886],[9.1435,20.388],[9.1365,20.3874],[9.1294,20.3868],[9.1224,20.3862],[9.1154,20.3856],[9.1084,20.385],[9.1014,20.3845],[9.0944,20.384],[9.0875,20.3836],[9.0805,20.3832],[9.0735,20.383],[9.0665,20.3828],[9.0595,20.3826],[9.0526,20.3826],[9.0456,20.3826],[9.0386,20.3826],[9.0317,20.3828],[9.0247,20.383],[9.0178,20.3833],[9.0108,20.3836],[9.0039,20.3841],[8.9969,20.3847],[8.99,20.3853],[8.983,20.386],[8.9761,20.3869],[8.9692,20.3878],[8.9622,20.3889],[8.9553,20.39],[8.9484,20.3912],[8.9415,20.3924],[8.9346,20.3937],[8.9277,20.395],[8.9208,20.3964],[8.9139,20.3978],[8.9071,20.3992],[8.9002,20.4007],[8.8933,20.4021],[8.8864,20.4035],[8.8795,20.405],[8.8727,20.4064],[8.8658,20.4078],[8.8589,20.4092],[8.852,20.4105],[8.8451,20.4117],[8.8382,20.413],[8.8313,20.4143],[8.8244,20.4156],[8.8175,20.4169],[8.8106,20.4182],[8.8037,20.4196],[8.7968,20.4209],[8.7899,20.4223],[8.783,20.4236],[8.7761,20.4249],[8.7692,20.4262],[8.7623,20.4275],[8.7554,20.4288],[8.7485,20.43],[8.7416,20.4311],[8.7347,20.4322],[8.7277,20.4333],[8.7208,20.4342],[8.7138,20.4351],[8.7068,20.4358],[8.6998,20.4365],[8.6929,20.4372],[8.6859,20.438],[8.6789,20.4386],[8.672,20.4393],[8.6651,20.4398],[8.6581,20.4403],[8.6512,20.4404],[8.6443,20.4403],[8.6375,20.4399],[8.6306,20.4393],[8.6238,20.4383],[8.617,20.4371],[8.6103,20.4356],[8.6035,20.4338],[8.5969,20.4318],[8.5903,20.4297],[8.5837,20.4275],[8.5771,20.4251],[8.5706,20.4224],[8.5642,20.4197],[8.5578,20.4168],[8.5514,20.4139],[8.545,20.411],[8.5386,20.4081],[8.5322,20.4052],[8.5258,20.4023],[8.5193,20.3996],[8.5128,20.397],[8.5062,20.3946],[8.4996,20.3924],[8.493,20.3904],[8.4863,20.3885],[8.4795,20.3869],[8.4727,20.3855],[8.4659,20.3843],[8.459,20.3834],[8.4521,20.3827],[8.4451,20.3822],[8.4382,20.382],[8.4312,20.382],[8.4242,20.382],[8.4171,20.3822],[8.4101,20.3824],[8.4031,20.3827],[8.3961,20.383],[8.3891,20.3833],[8.382,20.3836],[8.375,20.3839],[8.368,20.3841],[8.361,20.3842],[8.354,20.3842],[8.3469,20.3841],[8.3399,20.3839],[8.333,20.3836],[8.326,20.3832],[8.319,20.3828],[8.312,20.3824],[8.305,20.3818],[8.298,20.3812],[8.291,20.3805],[8.2841,20.3797],[8.2771,20.3788],[8.2702,20.3778],[8.2632,20.3767],[8.2563,20.3757],[8.2493,20.3746],[8.2424,20.3735],[8.2355,20.3724],[8.2285,20.3712],[8.2216,20.37],[8.2147,20.3687],[8.2078,20.3673],[8.201,20.3659],[8.1941,20.3644],[8.1873,20.3627],[8.1805,20.361],[8.1737,20.3592],[8.1669,20.3572],[8.1602,20.3552],[8.1535,20.353],[8.1469,20.3506],[8.1403,20.3481],[8.1338,20.3455],[8.1274,20.3427],[8.1211,20.3396],[8.1149,20.3363],[8.1088,20.3327],[8.1029,20.329],[8.0971,20.3251],[8.0913,20.3211],[8.0857,20.3169],[8.0801,20.3127],[8.0745,20.3084],[8.0691,20.304],[8.0636,20.2996],[8.0582,20.2951],[8.0528,20.2906],[8.0474,20.2862],[8.042,20.2817],[8.0365,20.2773],[8.0311,20.2729],[8.0256,20.2685],[8.02,20.2642],[8.0144,20.26],[8.0087,20.2559],[8.0029,20.2519],[7.9971,20.2481],[7.9911,20.2444],[7.9851,20.2408],[7.9789,20.2375],[7.9726,20.2343],[7.9663,20.2314],[7.9599,20.2285],[7.9534,20.2257],[7.947,20.2229],[7.9405,20.2201],[7.934,20.2175],[7.9275,20.2148],[7.9209,20.2123],[7.9144,20.2098],[7.9078,20.2074],[7.9011,20.2051],[7.8945,20.2029],[7.8878,20.2008],[7.881,20.1988],[7.8743,20.1969],[7.8675,20.1951],[7.8606,20.1934],[7.8538,20.1919],[7.8469,20.1904],[7.8401,20.189],[7.8332,20.1878],[7.8262,20.1868],[7.8193,20.1861],[7.8124,20.1855],[7.8054,20.1851],[7.7985,20.1848],[7.7915,20.1846],[7.7846,20.1846],[7.7776,20.1846],[7.7707,20.1848],[7.7637,20.185],[7.7568,20.1853],[7.7498,20.1857],[7.7428,20.1861],[7.7359,20.1867],[7.7289,20.1874],[7.7219,20.1881],[7.7149,20.1889],[7.7079,20.1898],[7.701,20.1907],[7.694,20.1916],[7.687,20.1925],[7.6801,20.1933],[7.6731,20.1941],[7.6661,20.1949],[7.6591,20.1955],[7.6522,20.196],[7.6452,20.1964],[7.6383,20.1967],[7.6313,20.1967],[7.6244,20.1966],[7.6175,20.1964],[7.6106,20.196],[7.6037,20.1954],[7.5968,20.1946],[7.59,20.1937],[7.5831,20.1926],[7.5763,20.1914],[7.5695,20.19],[7.5627,20.1884],[7.5559,20.1867],[7.5491,20.1849],[7.5424,20.183],[7.5357,20.1811],[7.529,20.1791],[7.5222,20.177],[7.5155,20.175],[7.5088,20.1729],[7.5021,20.1708],[7.4954,20.1688],[7.4886,20.1668],[7.4819,20.1649],[7.4751,20.1631],[7.4683,20.1613],[7.4615,20.1597],[7.4547,20.1582],[7.4478,20.157],[7.441,20.156],[7.4342,20.1553],[7.4273,20.1547],[7.4205,20.1543],[7.4138,20.1541],[7.407,20.1541],[7.4002,20.1542],[7.3935,20.1544],[7.3868,20.1547],[7.38,20.1552],[7.3733,20.1557],[7.3666,20.1562],[7.3598,20.1567],[7.3531,20.1572],[7.3463,20.1577],[7.3395,20.1582],[7.3327,20.1586],[7.3259,20.159],[7.319,20.1593],[7.3121,20.1596],[7.3052,20.1597],[7.2982,20.1598],[7.2913,20.1597],[7.2843,20.1595],[7.2773,20.1592],[7.2703,20.1588],[7.2633,20.1583],[7.2563,20.1576],[7.2494,20.1568],[7.2424,20.1558],[7.2354,20.1548],[7.2285,20.1538],[7.2215,20.1527],[7.2146,20.1515],[7.2077,20.1503],[7.2008,20.1491],[7.1938,20.1479],[7.1869,20.1466],[7.18,20.1454],[7.1731,20.1441],[7.1662,20.1428],[7.1593,20.1416],[7.1524,20.1403],[7.1455,20.139],[7.1386,20.1376],[7.1317,20.1363],[7.1249,20.1349],[7.118,20.1336],[7.1111,20.1322],[7.1043,20.1307],[7.0974,20.1293],[7.0905,20.1278],[7.0837,20.1264],[7.0769,20.1248],[7.07,20.1233],[7.0632,20.1217],[7.0564,20.1201],[7.0496,20.1185],[7.0428,20.1169],[7.036,20.1152],[7.0292,20.1135],[7.0224,20.1117],[7.0156,20.1099],[7.0088,20.1081],[7.0021,20.1062],[6.9954,20.1043],[6.9886,20.1024],[6.9819,20.1004],[6.9752,20.0983],[6.9685,20.0963],[6.9618,20.0941],[6.9551,20.092],[6.9485,20.0897],[6.9419,20.0874],[6.9353,20.0849],[6.9288,20.0822],[6.9224,20.0794],[6.916,20.0766],[6.9097,20.0736],[6.9034,20.0705],[6.8971,20.0673],[6.8909,20.0641],[6.8848,20.0608],[6.8786,20.0574],[6.8725,20.054],[6.8664,20.0506],[6.8603,20.0471],[6.8543,20.0436],[6.8482,20.0402],[6.8421,20.0367],[6.8361,20.0332],[6.83,20.0298],[6.8239,20.0264],[6.8177,20.023],[6.8116,20.0197],[6.8053,20.0165],[6.7991,20.0133],[6.7928,20.0102],[6.7865,20.0072],[6.7801,20.0043],[6.7737,20.0015],[6.7672,19.9988],[6.7606,19.9963],[6.754,19.9939],[6.7474,19.9916],[6.7407,19.9894],[6.734,19.9874],[6.7272,19.9856],[6.7204,19.9839],[6.7135,19.9823],[6.7066,19.9809],[6.6997,19.9796],[6.6928,19.9784],[6.6858,19.9774],[6.6789,19.9764],[6.6719,19.9756],[6.6649,19.9749],[6.6579,19.9743],[6.6509,19.9739],[6.6439,19.9735],[6.6368,19.9732],[6.6298,19.973],[6.6228,19.9729],[6.6158,19.9728],[6.6087,19.9728],[6.6017,19.9729],[6.5947,19.973],[6.5877,19.9732],[6.5806,19.9734],[6.5736,19.9737],[6.5666,19.974],[6.5596,19.9744],[6.5525,19.9748],[6.5455,19.9752],[6.5385,19.9756],[6.5315,19.976],[6.5245,19.9765],[6.5175,19.977],[6.5104,19.9775],[6.5034,19.978],[6.4964,19.9785],[6.4894,19.979],[6.4824,19.9795],[6.4754,19.98],[6.4684,19.9804],[6.4614,19.9809],[6.4543,19.9814],[6.4473,19.9818],[6.4403,19.9822],[6.4333,19.9826],[6.4263,19.983],[6.4192,19.9833],[6.4122,19.9836],[6.4052,19.9839],[6.3982,19.9841],[6.3911,19.9843],[6.3841,19.9844],[6.3771,19.9845],[6.37,19.9845],[6.363,19.9845],[6.356,19.9843],[6.349,19.984],[6.342,19.9837],[6.335,19.9833],[6.3279,19.9828],[6.3209,19.9823],[6.314,19.9817],[6.307,19.9811],[6.3,19.9803],[6.293,19.9794],[6.2861,19.9785],[6.2791,19.9775],[6.2722,19.9764],[6.2652,19.9753],[6.2583,19.9741],[6.2514,19.9729],[6.2445,19.9717],[6.2376,19.9704],[6.2307,19.9691],[6.2238,19.9677],[6.2169,19.9663],[6.21,19.9649],[6.2031,19.9635],[6.1962,19.9621],[6.1893,19.9606],[6.1824,19.9592],[6.1756,19.9578],[6.1687,19.9563],[6.1618,19.9549],[6.1549,19.9535],[6.148,19.9521],[6.1411,19.9507],[6.1342,19.9494],[6.1273,19.9481],[6.1204,19.9468],[6.1135,19.9455],[6.1066,19.9443],[6.0997,19.9432],[6.0927,19.942],[6.0858,19.941],[6.0788,19.94],[6.0719,19.939],[6.0649,19.9382],[6.0579,19.9374],[6.0509,19.9366],[6.044,19.9359],[6.037,19.9354],[6.03,19.9348],[6.023,19.9344],[6.016,19.9341],[6.0089,19.9338],[6.0019,19.9337],[5.9949,19.9336],[5.9879,19.9336],[5.9809,19.9337],[5.9739,19.9339],[5.9669,19.9342],[5.9599,19.9346],[5.9529,19.9351],[5.9459,19.9356],[5.939,19.9362],[5.932,19.9369],[5.925,19.9378],[5.9181,19.9387],[5.9111,19.9397],[5.9042,19.9408],[5.8972,19.9419],[5.8903,19.9431],[5.8834,19.9443],[5.8765,19.9456],[5.8696,19.947],[5.8627,19.9484],[5.8559,19.9498],[5.849,19.9513],[5.8421,19.9528],[5.8353,19.9544],[5.8284,19.9559],[5.8216,19.9576],[5.8148,19.9592],[5.8079,19.9609],[5.8011,19.9625],[5.7943,19.9642],[5.7875,19.966],[5.7807,19.9677],[5.7739,19.9695],[5.7671,19.9712],[5.7603,19.973],[5.7535,19.9748],[5.7467,19.9766],[5.7399,19.9784],[5.7331,19.9801],[5.7263,19.9819],[5.7195,19.9837],[5.7127,19.9855],[5.7059,19.9873],[5.6991,19.989],[5.6923,19.9908],[5.6855,19.9925],[5.6786,19.9942],[5.6718,19.996],[5.665,19.9976],[5.6582,19.9993],[5.6513,20.001],[5.6445,20.0026],[5.6377,20.0042],[5.6308,20.0057],[5.624,20.0073],[5.6171,20.0087],[5.6102,20.0102],[5.6033,20.0116],[5.5965,20.013],[5.5896,20.0143],[5.5827,20.0157],[5.5758,20.017],[5.5689,20.0183],[5.562,20.0196],[5.555,20.0208],[5.5481,20.022],[5.5412,20.0231],[5.5343,20.0242],[5.5273,20.0253],[5.5204,20.0263],[5.5134,20.0273],[5.5065,20.0283],[5.4995,20.0292],[5.4925,20.0301],[5.4856,20.0309],[5.4786,20.0317],[5.4716,20.0325],[5.4646,20.0333],[5.4576,20.034],[5.4506,20.0347],[5.4436,20.0353],[5.4366,20.036],[5.4296,20.0366],[5.4226,20.0372],[5.4156,20.0377],[5.4086,20.0383],[5.4016,20.0388],[5.3946,20.0394],[5.3876,20.0399],[5.3806,20.0404],[5.3735,20.0408],[5.3665,20.0413],[5.3595,20.0418],[5.3525,20.0422],[5.3455,20.0427],[5.3385,20.0431],[5.3314,20.0435],[5.3244,20.044],[5.3174,20.0444],[5.3104,20.0448],[5.3034,20.0452],[5.2963,20.0457],[5.2893,20.0461],[5.2823,20.0465],[5.2753,20.047],[5.2683,20.0474],[5.2613,20.0479],[5.2543,20.0484],[5.2472,20.0488],[5.2402,20.0493],[5.2332,20.0498],[5.2262,20.0504],[5.2192,20.0509],[5.2122,20.0515],[5.2052,20.0521],[5.1982,20.0527],[5.1912,20.0534],[5.1842,20.0541],[5.1772,20.0548],[5.1702,20.0556],[5.1633,20.0564],[5.1563,20.0574],[5.1494,20.0583],[5.1424,20.0594],[5.1355,20.0605],[5.1286,20.0617],[5.1217,20.063],[5.1148,20.0643],[5.108,20.0658],[5.1012,20.0673],[5.0944,20.0689],[5.0876,20.0706],[5.0809,20.0723],[5.0741,20.0742],[5.0674,20.0761],[5.0608,20.0781],[5.0541,20.0802],[5.0475,20.0824],[5.0409,20.0846],[5.0343,20.0868],[5.0277,20.0891],[5.0211,20.0914],[5.0145,20.0937],[5.0079,20.0961],[5.0013,20.0984],[4.9946,20.1007],[4.988,20.1031],[4.9814,20.1053],[4.9747,20.1076],[4.968,20.1098],[4.9614,20.112],[4.9547,20.1141],[4.948,20.1162],[4.9413,20.1183],[4.9346,20.1203],[4.928,20.1225],[4.9213,20.1246],[4.9146,20.1267],[4.908,20.1289],[4.9014,20.131],[4.8947,20.1332],[4.8881,20.1353],[4.8814,20.1374],[4.8747,20.1394],[4.868,20.1414],[4.8613,20.1434],[4.8545,20.1452],[4.8478,20.147],[4.841,20.1487],[4.8341,20.1503],[4.8273,20.1518],[4.8204,20.1532],[4.8135,20.1546],[4.8066,20.1559],[4.7998,20.1573],[4.7929,20.1586],[4.786,20.1599],[4.7791,20.1611],[4.7722,20.1623],[4.7653,20.1634],[4.7584,20.1645],[4.7515,20.1654],[4.7445,20.1663],[4.7376,20.1671],[4.7306,20.1678],[4.7237,20.1684],[4.7167,20.1688],[4.7097,20.1691],[4.7027,20.1692],[4.6957,20.1691],[4.6887,20.1689],[4.6817,20.1685],[4.6747,20.1679],[4.6677,20.1672],[4.6608,20.1662],[4.6538,20.165],[4.6469,20.1637],[4.6401,20.1622],[4.6332,20.1605],[4.6265,20.1587],[4.6197,20.1568],[4.613,20.1547],[4.6063,20.1524],[4.5997,20.1501],[4.5931,20.1476],[4.5866,20.1451],[4.5801,20.1424],[4.5736,20.1396],[4.5672,20.1368],[4.5608,20.1339],[4.5545,20.1309],[4.5481,20.1279],[4.5418,20.1248],[4.5356,20.1216],[4.5293,20.1184],[4.5231,20.1151],[4.5169,20.1118],[4.5107,20.1085],[4.5046,20.1051],[4.4984,20.1017],[4.4923,20.0983],[4.4862,20.0948],[4.4801,20.0914],[4.474,20.0879],[4.4679,20.0843],[4.4619,20.0808],[4.4558,20.0773],[4.4497,20.0737],[4.4437,20.0702],[4.4376,20.0666],[4.4316,20.063],[4.4257,20.0592],[4.4198,20.0555],[4.4139,20.0516],[4.4081,20.0477],[4.4023,20.0438],[4.3965,20.0399],[4.3908,20.0358],[4.3852,20.0317],[4.3796,20.0274],[4.3741,20.0231],[4.3687,20.0187],[4.3633,20.0141],[4.358,20.0096],[4.3527,20.0049],[4.3475,20.0002],[4.3423,19.9955],[4.3372,19.9908],[4.332,19.986],[4.3269,19.9812],[4.3218,19.9764],[4.3167,19.9717],[4.3115,19.9669],[4.3063,19.9622],[4.3011,19.9576],[4.2959,19.9529],[4.2905,19.9484],[4.2851,19.944],[4.2797,19.9396],[4.2741,19.9353],[4.2685,19.9312],[4.2627,19.9272],[4.2568,19.9234],[4.2509,19.9197],[4.2448,19.9162],[4.2386,19.9129],[4.2323,19.9097],[4.226,19.9068],[4.2195,19.9041],[4.2129,19.9016],[4.2063,19.8993],[4.1996,19.8971],[4.1929,19.8951],[4.1861,19.8933],[4.1793,19.8916],[4.1724,19.8901],[4.1655,19.8887],[4.1586,19.8875],[4.1516,19.8864],[4.1447,19.8854],[4.1377,19.8845],[4.1307,19.8837],[4.1237,19.883],[4.1167,19.8824],[4.1097,19.8818],[4.1027,19.8814],[4.0957,19.881],[4.0887,19.8806],[4.0816,19.8803],[4.0746,19.8801],[4.0676,19.8799],[4.0605,19.8797],[4.0535,19.8796],[4.0465,19.8795],[4.0395,19.8794],[4.0324,19.8794],[4.0254,19.8793],[4.0184,19.8793],[4.0113,19.8793],[4.0043,19.8794],[3.9973,19.8794],[3.9902,19.8794],[3.9832,19.8795],[3.9762,19.8795],[3.9691,19.8795],[3.9621,19.8796],[3.9551,19.8796],[3.9481,19.8796],[3.941,19.8796],[3.934,19.8795],[3.927,19.8795],[3.9199,19.8794],[3.9129,19.8793],[3.9059,19.8792],[3.8988,19.8791],[3.8918,19.8789],[3.8848,19.8786],[3.8778,19.8784],[3.8707,19.878],[3.8637,19.8776],[3.8567,19.8772],[3.8497,19.8767],[3.8427,19.8761],[3.8357,19.8755],[3.8287,19.8747],[3.8217,19.8738],[3.8148,19.8729],[3.8078,19.8718],[3.8009,19.8707],[3.794,19.8695],[3.7871,19.8682],[3.7802,19.8668],[3.7733,19.8654],[3.7665,19.8639],[3.7596,19.8623],[3.7528,19.8607],[3.746,19.859],[3.7392,19.8573],[3.7324,19.8555],[3.7256,19.8537],[3.7188,19.8519],[3.712,19.85],[3.7052,19.8481],[3.6985,19.8462],[3.6917,19.8442],[3.685,19.8423],[3.6782,19.8403],[3.6715,19.8384],[3.6647,19.8364],[3.658,19.8344],[3.6513,19.8324],[3.6445,19.8305],[3.6378,19.8285],[3.631,19.8266],[3.6243,19.8246],[3.6175,19.8227],[3.6107,19.8208],[3.6039,19.819],[3.5971,19.8172],[3.5903,19.8154],[3.5835,19.8137],[3.5767,19.812],[3.5699,19.8104],[3.563,19.8088],[3.5561,19.8074],[3.5492,19.806],[3.5423,19.8047],[3.5354,19.8036],[3.5285,19.8025],[3.5215,19.8016],[3.5146,19.8009],[3.5076,19.8003],[3.5007,19.7999],[3.4937,19.7998],[3.4868,19.7999],[3.4799,19.8003],[3.4731,19.8009],[3.4664,19.8018],[3.4597,19.803],[3.4532,19.8044],[3.4467,19.806],[3.4403,19.8079],[3.4341,19.81],[3.4279,19.8122],[3.4219,19.8147],[3.4159,19.8174],[3.41,19.8202],[3.4042,19.8232],[3.3985,19.8264],[3.3928,19.8297],[3.3872,19.8332],[3.3816,19.8368],[3.3761,19.8406],[3.3706,19.8445],[3.3652,19.8485],[3.3597,19.8526],[3.3543,19.8567],[3.3489,19.8609],[3.3435,19.8652],[3.338,19.8695],[3.3326,19.8738],[3.3271,19.8781],[3.3216,19.8824],[3.316,19.8867],[3.3104,19.8909],[3.3048,19.8951],[3.2991,19.8991],[3.2934,19.9033],[3.2877,19.9074],[3.2821,19.9115],[3.2764,19.9157],[3.2708,19.9198],[3.2651,19.9239],[3.2595,19.928],[3.2539,19.9322],[3.2482,19.9362],[3.2426,19.9403],[3.2369,19.9444],[3.2313,19.9484],[3.2256,19.9525],[3.2199,19.9565],[3.2142,19.9605],[3.2085,19.9644],[3.2028,19.9684],[3.197,19.9723],[3.1913,19.9762],[3.1855,19.98],[3.1796,19.9838],[3.1738,19.9876],[3.1679,19.9913],[3.1619,19.995],[3.156,19.9986],[3.15,20.0021],[3.1439,20.0056],[3.1378,20.0091],[3.1316,20.0124],[3.1254,20.0157],[3.1192,20.019],[3.1131,20.0223],[3.1068,20.0256],[3.1006,20.0288],[3.0944,20.0321],[3.0882,20.0353],[3.0819,20.0385],[3.0757,20.0417],[3.0694,20.0449],[3.0631,20.0481],[3.0569,20.0512],[3.0506,20.0544],[3.0443,20.0576],[3.0381,20.0607],[3.0318,20.0639],[3.0255,20.067],[3.0192,20.0701],[3.0129,20.0733],[3.0066,20.0764],[3.0004,20.0795],[2.9941,20.0827],[2.9878,20.0858],[2.9815,20.0889],[2.9752,20.0921],[2.9689,20.0952],[2.9626,20.0983],[2.9564,20.1015],[2.9501,20.1046],[2.9438,20.1078],[2.9375,20.1109],[2.9313,20.1141],[2.925,20.1173],[2.9187,20.1205],[2.9125,20.1236],[2.9062,20.1268],[2.9,20.13],[2.8937,20.1332],[2.8874,20.1364],[2.8812,20.1395],[2.8749,20.1427],[2.8686,20.1459],[2.8624,20.1491],[2.8561,20.1522],[2.8498,20.1554],[2.8436,20.1586],[2.8373,20.1618],[2.831,20.1649],[2.8248,20.1681],[2.8185,20.1713],[2.8122,20.1744],[2.8059,20.1776],[2.7997,20.1807],[2.7934,20.1838],[2.7871,20.187],[2.7808,20.1901],[2.7745,20.1932],[2.7682,20.1963],[2.7619,20.1994],[2.7556,20.2025],[2.7493,20.2056],[2.743,20.2086],[2.7366,20.2117],[2.7303,20.2147],[2.724,20.2178],[2.7176,20.2208],[2.7113,20.2238],[2.7049,20.2268],[2.6986,20.2298],[2.6922,20.2327],[2.6858,20.2357],[2.6795,20.2386],[2.6731,20.2416],[2.6667,20.2445],[2.6603,20.2475],[2.654,20.2504],[2.6476,20.2534],[2.6412,20.2563],[2.6349,20.2593],[2.6285,20.2622],[2.6221,20.2652],[2.6157,20.2681],[2.6093,20.271],[2.6029,20.2739],[2.5965,20.2768],[2.5901,20.2797],[2.5837,20.2826],[2.5773,20.2854],[2.5709,20.2883],[2.5644,20.2911],[2.558,20.2939],[2.5516,20.2967],[2.5451,20.2995],[2.5387,20.3023],[2.5322,20.305],[2.5257,20.3078],[2.5192,20.3104],[2.5127,20.3131],[2.5063,20.3158],[2.4998,20.3185],[2.4933,20.3212],[2.4868,20.3238],[2.4803,20.3265],[2.4737,20.3291],[2.4672,20.3318],[2.4607,20.3344],[2.4542,20.337],[2.4477,20.3396],[2.4411,20.3422],[2.4346,20.3448],[2.4281,20.3473],[2.4215,20.3498],[2.415,20.3523],[2.4084,20.3548],[2.4018,20.3573],[2.3952,20.3597],[2.3886,20.3622],[2.3821,20.3646],[2.3754,20.3669],[2.3688,20.3692],[2.3622,20.3715],[2.3555,20.3738],[2.3489,20.376],[2.3422,20.3782],[2.3356,20.3804],[2.3289,20.3825],[2.3222,20.3846],[2.3154,20.3866],[2.3087,20.3886],[2.302,20.3905],[2.2952,20.3924],[2.2885,20.3943],[2.2817,20.3961],[2.2749,20.3978],[2.2681,20.3994],[2.2612,20.401],[2.2544,20.4026],[2.2476,20.4041],[2.2407,20.4055],[2.2338,20.4068],[2.2269,20.4081],[2.22,20.4093],[2.2131,20.4104],[2.2062,20.4115],[2.1993,20.4125],[2.1923,20.4134],[2.1853,20.4142],[2.1784,20.415],[2.1714,20.4157],[2.1644,20.4163],[2.1574,20.4169],[2.1504,20.4174],[2.1434,20.4178],[2.1364,20.4181],[2.1294,20.4184],[2.1224,20.4186],[2.1154,20.4187],[2.1084,20.4187],[2.1013,20.4187],[2.0943,20.4186],[2.0873,20.4184],[2.0803,20.4182],[2.0733,20.4179],[2.0662,20.4176],[2.0592,20.4172],[2.0522,20.4167],[2.0452,20.4162],[2.0382,20.4156],[2.0312,20.415],[2.0242,20.4143],[2.0172,20.4136],[2.0102,20.4129],[2.0032,20.4121],[1.9962,20.4112],[1.9893,20.4104],[1.9823,20.4095],[1.9753,20.4085],[1.9684,20.4076],[1.9614,20.4066],[1.9544,20.4056],[1.9475,20.4045],[1.9405,20.4035],[1.9336,20.4024],[1.9266,20.4014],[1.9197,20.4003],[1.9127,20.3992],[1.9058,20.3981],[1.8988,20.3971],[1.8919,20.396],[1.885,20.3949],[1.878,20.3938],[1.8711,20.3928],[1.8641,20.3917],[1.8571,20.3907],[1.8502,20.3896],[1.8433,20.3885],[1.8363,20.3874],[1.8294,20.3863],[1.8225,20.3851],[1.8155,20.3838],[1.8087,20.3824],[1.8018,20.3809],[1.7949,20.3794],[1.7881,20.3778],[1.7813,20.3762],[1.7744,20.3744],[1.7676,20.3727],[1.7609,20.3708],[1.7541,20.369],[1.7473,20.3671],[1.7406,20.3652],[1.7338,20.3632],[1.7271,20.3612],[1.7203,20.3592],[1.7136,20.3572],[1.7069,20.3552],[1.7001,20.3531],[1.6934,20.3511],[1.6867,20.3491],[1.6799,20.3471],[1.6732,20.3451],[1.6665,20.3431],[1.6597,20.3411],[1.653,20.3392],[1.6462,20.3373],[1.6394,20.3354],[1.6326,20.3336],[1.6258,20.3318],[1.619,20.3301],[1.6122,20.3285],[1.6053,20.3269],[1.5985,20.3254],[1.5916,20.324],[1.5847,20.3226],[1.5778,20.3214],[1.5709,20.3202],[1.5639,20.3192],[1.557,20.3183],[1.55,20.3175],[1.543,20.3169],[1.536,20.3163],[1.5291,20.316],[1.5221,20.3158],[1.5151,20.3157],[1.5081,20.3158],[1.5012,20.3161],[1.4942,20.3166],[1.4873,20.3172],[1.4804,20.318],[1.4735,20.3189],[1.4667,20.32],[1.4598,20.3213],[1.4531,20.3227],[1.4463,20.3243],[1.4396,20.326],[1.4329,20.3279],[1.4262,20.3299],[1.4196,20.332],[1.413,20.3343],[1.4065,20.3366],[1.4,20.3391],[1.3935,20.3416],[1.387,20.3443],[1.3806,20.347],[1.3742,20.3498],[1.3679,20.3527],[1.3615,20.3556],[1.3552,20.3586],[1.3489,20.3616],[1.3426,20.3646],[1.3363,20.3677],[1.33,20.3709],[1.3237,20.374],[1.3175,20.3771],[1.3112,20.3803],[1.3049,20.3835],[1.2987,20.3866],[1.2924,20.3898],[1.2861,20.3929],[1.2798,20.396],[1.2735,20.3991],[1.2672,20.4022],[1.2608,20.4052],[1.2545,20.4081],[1.2481,20.4111],[1.2417,20.4139],[1.2352,20.4167],[1.2288,20.4195],[1.2223,20.4222],[1.2159,20.4249],[1.2094,20.4276],[1.2029,20.4302],[1.1964,20.4328],[1.1899,20.4354],[1.1834,20.438],[1.1769,20.4405],[1.1703,20.443],[1.1638,20.4455],[1.1572,20.4479],[1.1506,20.4503],[1.144,20.4526],[1.1374,20.4549],[1.1307,20.4572],[1.1241,20.4594],[1.1174,20.4615],[1.1107,20.4636],[1.104,20.4656],[1.0972,20.4676],[1.0905,20.4696],[1.0837,20.4715],[1.077,20.4734],[1.0702,20.4753],[1.0634,20.4772],[1.0567,20.4791],[1.0499,20.4809],[1.0431,20.4827],[1.0363,20.4846],[1.0295,20.4864],[1.0227,20.4882],[1.0159,20.4899],[1.0091,20.4917],[1.0023,20.4935],[0.9955,20.4952],[0.9887,20.4969],[0.9819,20.4987],[0.9751,20.5004],[0.9683,20.5021],[0.9614,20.5038],[0.9546,20.5055],[0.9478,20.5072],[0.941,20.5089],[0.9342,20.5106],[0.9273,20.5123],[0.9205,20.514],[0.9137,20.5156],[0.9069,20.5173],[0.9,20.519],[0.8932,20.5206],[0.8863,20.5222],[0.8795,20.5238],[0.8727,20.5254],[0.8658,20.527],[0.859,20.5286],[0.8521,20.5302],[0.8453,20.5318],[0.8384,20.5334],[0.8316,20.535],[0.8247,20.5366],[0.8179,20.5382],[0.8111,20.5398],[0.8042,20.5414],[0.7974,20.543],[0.7905,20.5446],[0.7837,20.5461],[0.7768,20.5477],[0.77,20.5493],[0.7631,20.5508],[0.7562,20.5524],[0.7494,20.5539],[0.7425,20.5554],[0.7357,20.5569],[0.7288,20.5584],[0.7219,20.5598],[0.715,20.5613],[0.7081,20.5627],[0.7013,20.564],[0.6944,20.5654],[0.6875,20.5667],[0.6805,20.568],[0.6736,20.5693],[0.6667,20.5705],[0.6598,20.5717],[0.6529,20.5728],[0.6459,20.5739],[0.639,20.575],[0.632,20.576],[0.6251,20.577],[0.6181,20.578],[0.6112,20.5789],[0.6042,20.5798],[0.5972,20.5807],[0.5902,20.5815],[0.5832,20.5822],[0.5763,20.5829],[0.5693,20.5835],[0.5623,20.5841],[0.5553,20.5847],[0.5483,20.5852],[0.5412,20.5857],[0.5342,20.5861],[0.5272,20.5864],[0.5202,20.5867],[0.5132,20.587],[0.5061,20.5872],[0.4991,20.5873],[0.4921,20.5874],[0.485,20.5875],[0.478,20.5876],[0.471,20.5876],[0.464,20.5876],[0.4569,20.5876],[0.4499,20.5876],[0.4429,20.5876],[0.4358,20.5875],[0.4288,20.5874],[0.4218,20.5873],[0.4147,20.5873],[0.4077,20.5872],[0.4007,20.5871],[0.3937,20.587],[0.3866,20.587],[0.3796,20.5869],[0.3726,20.5869],[0.3655,20.5869],[0.3585,20.5869],[0.3515,20.5869],[0.3444,20.5869],[0.3374,20.5869],[0.3304,20.587],[0.3234,20.587],[0.3163,20.5872],[0.3093,20.5873],[0.3023,20.5875],[0.2952,20.5878],[0.2882,20.5881],[0.2812,20.5884],[0.2742,20.5887],[0.2672,20.589],[0.2601,20.5893],[0.2531,20.5897],[0.2461,20.5902],[0.2391,20.5906],[0.2321,20.5911],[0.225,20.5916],[0.218,20.5921],[0.211,20.5925],[0.204,20.5929],[0.197,20.5933],[0.19,20.5936],[0.1829,20.5938],[0.1759,20.5938],[0.1689,20.5938],[0.1619,20.5935],[0.1549,20.593],[0.148,20.5919],[0.1412,20.5905],[0.1346,20.5888],[0.1281,20.5866],[0.1218,20.5843],[0.1156,20.5818],[0.1095,20.579],[0.1034,20.5761],[0.0973,20.573],[0.0911,20.57],[0.0848,20.5671],[0.0784,20.5645],[0.0717,20.5622],[0.065,20.5602],[0.0582,20.5587],[0.0513,20.5576],[0.0445,20.5568],[0.0377,20.5563],[0.031,20.556],[0.0244,20.5562],[0.0178,20.5565],[0.0112,20.557],[0.0047,20.5576],[-0.0018,20.5585],[-0.0083,20.5594],[-0.0148,20.5605],[-0.0213,20.5618],[-0.0278,20.5632],[-0.0342,20.5648],[-0.0407,20.5666],[-0.0471,20.5685],[-0.0535,20.5705],[-0.0599,20.5727],[-0.0663,20.5751],[-0.0727,20.5777],[-0.079,20.5804],[-0.0852,20.5832],[-0.0915,20.5862],[-0.0977,20.5894],[-0.1038,20.5926],[-0.1099,20.596],[-0.116,20.5995],[-0.122,20.603],[-0.128,20.6066],[-0.1339,20.6103],[-0.1399,20.614],[-0.1458,20.6177],[-0.1516,20.6215],[-0.1575,20.6254],[-0.1634,20.6292],[-0.1692,20.6331],[-0.175,20.6371],[-0.1808,20.641],[-0.1866,20.645],[-0.1924,20.6489],[-0.1982,20.6529],[-0.2039,20.6569],[-0.2097,20.6609],[-0.2155,20.6649],[-0.2212,20.6689],[-0.227,20.6729],[-0.2328,20.6769],[-0.2386,20.6809],[-0.2443,20.6849],[-0.2501,20.6889],[-0.2559,20.6928],[-0.2617,20.6968],[-0.2675,20.7007],[-0.2734,20.7046],[-0.2792,20.7085],[-0.285,20.7124],[-0.2909,20.7162],[-0.2968,20.72],[-0.3027,20.7238],[-0.3086,20.7276],[-0.3145,20.7313],[-0.3205,20.7351],[-0.3264,20.7388],[-0.3323,20.7425],[-0.3383,20.7462],[-0.3442,20.7499],[-0.3502,20.7536],[-0.3562,20.7572],[-0.3622,20.7608],[-0.3682,20.7644],[-0.3742,20.768],[-0.3803,20.7716],[-0.3863,20.7752],[-0.3924,20.7787],[-0.3985,20.7822],[-0.4045,20.7856],[-0.4107,20.7891],[-0.4168,20.7925],[-0.4229,20.7959],[-0.4291,20.7992],[-0.4353,20.8026],[-0.4415,20.8058],[-0.4477,20.8091],[-0.4539,20.8124],[-0.4601,20.8156],[-0.4663,20.8189],[-0.4726,20.8222],[-0.4788,20.8254],[-0.485,20.8286],[-0.4913,20.8318],[-0.4975,20.835],[-0.5038,20.8382],[-0.5101,20.8413],[-0.5163,20.8445],[-0.5226,20.8476],[-0.5289,20.8507],[-0.5352,20.8538],[-0.5415,20.8569],[-0.5478,20.86],[-0.5542,20.863],[-0.5605,20.8661],[-0.5668,20.8692],[-0.5731,20.8722],[-0.5795,20.8752],[-0.5858,20.8782],[-0.5922,20.8812],[-0.5985,20.8842],[-0.6049,20.8872],[-0.6112,20.8902],[-0.6176,20.8932],[-0.624,20.8962],[-0.6303,20.8991],[-0.6367,20.9021],[-0.6431,20.905],[-0.6494,20.908],[-0.6558,20.9109],[-0.6622,20.9139],[-0.6686,20.9168],[-0.675,20.9197],[-0.6814,20.9227],[-0.6877,20.9256],[-0.6941,20.9285],[-0.7005,20.9315],[-0.7069,20.9344],[-0.7133,20.9373],[-0.7197,20.9402],[-0.7261,20.9431],[-0.7325,20.9461],[-0.7388,20.949],[-0.7452,20.9519],[-0.7516,20.9548],[-0.758,20.9577],[-0.7644,20.9606],[-0.7708,20.9635],[-0.7772,20.9664],[-0.7836,20.9693],[-0.79,20.9722],[-0.7964,20.9751],[-0.8028,20.978],[-0.8092,20.9809],[-0.8156,20.9838],[-0.822,20.9866],[-0.8285,20.9895],[-0.8349,20.9923],[-0.8413,20.9952],[-0.8477,20.998],[-0.8541,21.0009],[-0.8606,21.0037],[-0.867,21.0065],[-0.8734,21.0094],[-0.8799,21.0122],[-0.8863,21.015],[-0.8927,21.0178],[-0.8992,21.0206],[-0.9056,21.0234],[-0.9121,21.0262],[-0.9186,21.0289],[-0.925,21.0317],[-0.9315,21.0344],[-0.9379,21.0372],[-0.9444,21.0399],[-0.9509,21.0426],[-0.9574,21.0453],[-0.9639,21.048],[-0.9704,21.0507],[-0.9769,21.0534],[-0.9834,21.056],[-0.9899,21.0586],[-0.9964,21.0613],[-1.0029,21.0639],[-1.0094,21.0665],[-1.016,21.0691],[-1.0225,21.0716],[-1.0291,21.0742],[-1.0356,21.0767],[-1.0422,21.0792],[-1.0487,21.0817],[-1.0553,21.0842],[-1.0618,21.0867],[-1.0684,21.0892],[-1.075,21.0918],[-1.0815,21.0943],[-1.0881,21.0968],[-1.0946,21.0993],[-1.1012,21.1018],[-1.1078,21.1043],[-1.1143,21.1068],[-1.1209,21.1093],[-1.1275,21.1118],[-1.1341,21.1142],[-1.1407,21.1167],[-1.1473,21.1191],[-1.1539,21.1215],[-1.1604,21.124],[-1.167,21.1264],[-1.1736,21.1288],[-1.1802,21.1313],[-1.1868,21.1337],[-1.1934,21.1362],[-1.2,21.1387],[-1.2065,21.1411],[-1.2131,21.1436],[-1.2197,21.146],[-1.2263,21.1485],[-1.2329,21.1509],[-1.2395,21.1533],[-1.2461,21.1557],[-1.2527,21.1581],[-1.2593,21.1604],[-1.2659,21.1628],[-1.2725,21.1651],[-1.2792,21.1674],[-1.2858,21.1697],[-1.2925,21.1719],[-1.2991,21.1741],[-1.3058,21.1763],[-1.3125,21.1784],[-1.3192,21.1805],[-1.3259,21.1826],[-1.3326,21.1846],[-1.3394,21.1865],[-1.3461,21.1884],[-1.3529,21.1902],[-1.3597,21.192],[-1.3665,21.1937],[-1.3733,21.1953],[-1.3801,21.1969],[-1.387,21.1984],[-1.3939,21.1997],[-1.4007,21.201],[-1.4076,21.2022],[-1.4146,21.2033],[-1.4215,21.2043],[-1.4285,21.2051],[-1.4354,21.2058],[-1.4424,21.2064],[-1.4494,21.2068],[-1.4564,21.2071],[-1.4634,21.2072],[-1.4704,21.2071],[-1.4774,21.2069],[-1.4844,21.2065],[-1.4914,21.2059],[-1.4984,21.2052],[-1.5053,21.2043],[-1.5122,21.2033],[-1.5192,21.202],[-1.526,21.2006],[-1.5329,21.199],[-1.5397,21.1972],[-1.5464,21.1953],[-1.5531,21.1931],[-1.5598,21.1909],[-1.5664,21.1884],[-1.5729,21.1859],[-1.5794,21.1832],[-1.5858,21.1804],[-1.5922,21.1775],[-1.5985,21.1744],[-1.6048,21.1713],[-1.6111,21.1681],[-1.6173,21.1649],[-1.6234,21.1616],[-1.6296,21.1582],[-1.6357,21.1547],[-1.6418,21.1513],[-1.6479,21.1478],[-1.6539,21.1443],[-1.66,21.1407],[-1.6661,21.1372],[-1.6721,21.1336],[-1.6782,21.1301],[-1.6842,21.1266],[-1.6903,21.1231],[-1.6964,21.1196],[-1.7025,21.1161],[-1.7087,21.1127],[-1.7148,21.1093],[-1.721,21.106],[-1.7271,21.1026],[-1.7333,21.0992],[-1.7394,21.0957],[-1.7455,21.0923],[-1.7516,21.0888],[-1.7577,21.0854],[-1.7638,21.0819],[-1.77,21.0785],[-1.7761,21.075],[-1.7822,21.0717],[-1.7884,21.0683],[-1.7945,21.0648],[-1.8006,21.0614],[-1.8067,21.0579],[-1.8127,21.0544],[-1.8188,21.0508],[-1.8248,21.0472],[-1.8309,21.0437],[-1.8369,21.04],[-1.8429,21.0364],[-1.8489,21.0327],[-1.8548,21.029],[-1.8608,21.0254],[-1.8668,21.0217],[-1.8727,21.0179],[-1.8787,21.0142],[-1.8846,21.0105],[-1.8906,21.0067],[-1.8965,21.003],[-1.9024,20.9992],[-1.9084,20.9955],[-1.9143,20.9917],[-1.9202,20.988],[-1.9262,20.9842],[-1.9321,20.9805],[-1.9381,20.9768],[-1.944,20.9731],[-1.95,20.9694],[-1.956,20.9657],[-1.962,20.962],[-1.968,20.9584],[-1.974,20.9549],[-1.9801,20.9513],[-1.9862,20.9479],[-1.9924,20.9446],[-1.9986,20.9414],[-2.0049,20.9384],[-2.0113,20.9355],[-2.0177,20.9328],[-2.0242,20.9304],[-2.0307,20.9281],[-2.0373,20.9261],[-2.044,20.9241],[-2.0506,20.9221],[-2.0572,20.92],[-2.0639,20.9177],[-2.0705,20.9153],[-2.077,20.9129],[-2.0836,20.9104],[-2.0901,20.9079],[-2.0965,20.9052],[-2.1027,20.9024],[-2.1088,20.8996],[-2.1148,20.8967],[-2.1208,20.8937],[-2.1267,20.8904],[-2.1325,20.8868],[-2.1381,20.8827],[-2.1432,20.878],[-2.147,20.8724],[-2.1495,20.8668],[-2.1517,20.8613],[-2.1539,20.856],[-2.1567,20.8508],[-2.1609,20.846],[-2.1669,20.8424],[-2.1735,20.8401],[-2.1803,20.8386],[-2.1873,20.8375],[-2.1942,20.8369],[-2.2012,20.8366],[-2.2082,20.8365],[-2.2153,20.8367],[-2.2223,20.8371],[-2.2293,20.8375],[-2.2363,20.8381],[-2.2433,20.8388],[-2.2502,20.8396],[-2.2572,20.8405],[-2.2642,20.8414],[-2.2711,20.8424],[-2.2781,20.8434],[-2.285,20.8445],[-2.292,20.8456],[-2.2989,20.8467],[-2.3058,20.8479],[-2.3128,20.8491],[-2.3197,20.8503],[-2.3266,20.8515],[-2.3335,20.8528],[-2.3404,20.8541],[-2.3474,20.8554],[-2.3543,20.8566],[-2.3612,20.858],[-2.3681,20.8593],[-2.375,20.8606],[-2.3819,20.8619],[-2.3888,20.8632],[-2.3957,20.8645],[-2.4026,20.8658],[-2.4095,20.8671],[-2.4164,20.8684],[-2.4233,20.8697],[-2.4302,20.871],[-2.4372,20.8723],[-2.4441,20.8736],[-2.451,20.8748],[-2.4579,20.876],[-2.4648,20.8773],[-2.4718,20.8785],[-2.4787,20.8796],[-2.4856,20.8808],[-2.4926,20.8819],[-2.4995,20.883],[-2.5065,20.8841],[-2.5134,20.8851],[-2.5204,20.8861],[-2.5273,20.887],[-2.5343,20.888],[-2.5413,20.8888],[-2.5483,20.8896],[-2.5552,20.8903],[-2.5622,20.891],[-2.5692,20.8916],[-2.5762,20.8922],[-2.5832,20.8927],[-2.5903,20.8931],[-2.5973,20.8935],[-2.6043,20.8939],[-2.6113,20.8943],[-2.6183,20.8946],[-2.6253,20.8948],[-2.6324,20.895],[-2.6394,20.8951],[-2.6464,20.8952],[-2.6535,20.8953],[-2.6605,20.8953],[-2.6675,20.8953],[-2.6745,20.8953],[-2.6816,20.8952],[-2.6886,20.8951],[-2.6956,20.895],[-2.7027,20.8949],[-2.7097,20.8948],[-2.7167,20.8947],[-2.7237,20.8945],[-2.7308,20.8944],[-2.7378,20.8942],[-2.7448,20.8941],[-2.7519,20.894],[-2.7589,20.8938],[-2.7659,20.8937],[-2.773,20.8937],[-2.78,20.8936],[-2.787,20.8935],[-2.794,20.8935],[-2.8011,20.8935],[-2.8081,20.8936],[-2.8151,20.8937],[-2.8222,20.8938],[-2.8292,20.894],[-2.8362,20.8942],[-2.8432,20.8945],[-2.8502,20.8949],[-2.8573,20.8953],[-2.8643,20.8958],[-2.8713,20.8963],[-2.8782,20.897],[-2.8852,20.8977],[-2.8922,20.8986],[-2.8991,20.8995],[-2.906,20.9005],[-2.9129,20.9017],[-2.9198,20.903],[-2.9267,20.9043],[-2.9335,20.9058],[-2.9403,20.9074],[-2.947,20.9092],[-2.9538,20.911],[-2.9605,20.9129],[-2.9671,20.915],[-2.9737,20.9171],[-2.9803,20.9194],[-2.9869,20.9217],[-2.9934,20.9242],[-2.9998,20.9268],[-3.0063,20.9295],[-3.0127,20.9323],[-3.019,20.9352],[-3.0253,20.9382],[-3.0316,20.9413],[-3.0379,20.9444],[-3.0441,20.9476],[-3.0503,20.9509],[-3.0564,20.9542],[-3.0626,20.9576],[-3.0687,20.961],[-3.0748,20.9644],[-3.0809,20.9679],[-3.0869,20.9715],[-3.093,20.975],[-3.099,20.9786],[-3.105,20.9822],[-3.1111,20.9857],[-3.1171,20.9893],[-3.1232,20.9929],[-3.1292,20.9965],[-3.1353,21],[-3.1414,21.0035],[-3.1474,21.007],[-3.1536,21.0105],[-3.1597,21.0139],[-3.1658,21.0172],[-3.172,21.0205],[-3.1782,21.0238],[-3.1844,21.027],[-3.1907,21.0303],[-3.1969,21.0334],[-3.2032,21.0365],[-3.2095,21.0396],[-3.2158,21.0426],[-3.2221,21.0456],[-3.2285,21.0485],[-3.2348,21.0514],[-3.2412,21.0543],[-3.2476,21.057],[-3.2541,21.0598],[-3.2605,21.0625],[-3.267,21.0651],[-3.2735,21.0677],[-3.2801,21.0703],[-3.2866,21.0728],[-3.2932,21.0753],[-3.2998,21.0776],[-3.3064,21.0801],[-3.313,21.0824],[-3.3196,21.0848],[-3.3262,21.087],[-3.3329,21.0893],[-3.3395,21.0915],[-3.3462,21.0938],[-3.3529,21.096],[-3.3595,21.0981],[-3.3662,21.1003],[-3.3729,21.1024],[-3.3796,21.1046],[-3.3863,21.1067],[-3.393,21.1089],[-3.3997,21.1111],[-3.4063,21.1133],[-3.413,21.1155],[-3.4197,21.1177],[-3.4263,21.12],[-3.4329,21.1223],[-3.4395,21.1248],[-3.4461,21.1273],[-3.4525,21.1299],[-3.4589,21.1327],[-3.4651,21.1358],[-3.4711,21.1392],[-3.4764,21.1431],[-3.4805,21.1476],[-3.4831,21.152],[-3.4849,21.1562],[-3.4864,21.1602],[-3.4878,21.1643],[-3.4896,21.1685],[-3.4918,21.173],[-3.4948,21.1776],[-3.4988,21.1822],[-3.5034,21.1867],[-3.5084,21.1909],[-3.5135,21.1952],[-3.5185,21.1996],[-3.5236,21.2039],[-3.5286,21.2083],[-3.5337,21.2127],[-3.5388,21.2172],[-3.5438,21.2217],[-3.5489,21.2262],[-3.5539,21.2308],[-3.559,21.2355],[-3.564,21.2403],[-3.5689,21.2451],[-3.5739,21.25],[-3.5787,21.2551],[-3.5835,21.2602],[-3.5882,21.2653],[-3.5929,21.2706],[-3.5974,21.2759],[-3.6019,21.2812],[-3.6064,21.2866],[-3.6107,21.292],[-3.6151,21.2974],[-3.6193,21.3028],[-3.6235,21.3082],[-3.6277,21.3135],[-3.6318,21.3187],[-3.636,21.324],[-3.6401,21.3291],[-3.6442,21.3341],[-3.6483,21.3391],[-3.6524,21.3439],[-3.6565,21.3486],[-3.6607,21.3533],[-3.6648,21.3578],[-3.669,21.3622],[-3.6733,21.3666],[-3.6776,21.3708],[-3.6821,21.375],[-3.6868,21.379],[-3.6913,21.383],[-3.6952,21.3872],[-3.6983,21.3912],[-3.7007,21.3951],[-3.7037,21.399],[-3.7095,21.402],[-3.7162,21.4039],[-3.723,21.4056],[-3.7299,21.407],[-3.7368,21.4082],[-3.7437,21.4092],[-3.7507,21.4102],[-3.7576,21.411],[-3.7646,21.4118],[-3.7716,21.4125],[-3.7786,21.4132],[-3.7856,21.4138],[-3.7926,21.4143],[-3.7996,21.4149],[-3.8066,21.4153],[-3.8137,21.4158],[-3.8207,21.4162],[-3.8277,21.4165],[-3.8347,21.4169],[-3.8417,21.4172],[-3.8488,21.4175],[-3.8558,21.4178],[-3.8628,21.418],[-3.8698,21.4183],[-3.8769,21.4185],[-3.8839,21.4187],[-3.8909,21.4189],[-3.898,21.4191],[-3.905,21.4192],[-3.912,21.4194],[-3.919,21.4196],[-3.9261,21.4198],[-3.9331,21.4199],[-3.9401,21.42],[-3.9472,21.4202],[-3.9542,21.4202],[-3.9612,21.4202],[-3.9683,21.4202],[-3.9753,21.42],[-3.9823,21.4199],[-3.9893,21.4197],[-3.9964,21.4195],[-4.0034,21.4192],[-4.0104,21.4189],[-4.0174,21.4185],[-4.0245,21.4182],[-4.0315,21.4178],[-4.0385,21.4174],[-4.0455,21.4169],[-4.0525,21.4165],[-4.0596,21.416],[-4.0666,21.4155],[-4.0736,21.415],[-4.0806,21.4145],[-4.0876,21.414],[-4.0946,21.4135],[-4.1016,21.413],[-4.1086,21.4125],[-4.1157,21.412],[-4.1227,21.4115],[-4.1297,21.411],[-4.1367,21.4105],[-4.1437,21.4101],[-4.1507,21.4097],[-4.1578,21.4093],[-4.1648,21.4089],[-4.1718,21.4087],[-4.1788,21.4085],[-4.1859,21.4084],[-4.1929,21.4084],[-4.1999,21.4085],[-4.2069,21.4088],[-4.214,21.4093],[-4.2209,21.41],[-4.2279,21.4112],[-4.2347,21.4127],[-4.2415,21.4143],[-4.2485,21.4151],[-4.2554,21.4152],[-4.2623,21.4143],[-4.2688,21.4126],[-4.2751,21.4103],[-4.2812,21.4072],[-4.2869,21.4031],[-4.2916,21.3982],[-4.2963,21.3935],[-4.3018,21.3895],[-4.3081,21.3866],[-4.3148,21.3844],[-4.3216,21.3828],[-4.3286,21.3816],[-4.3355,21.3807],[-4.3425,21.3802],[-4.3496,21.38],[-4.3566,21.3798],[-4.3636,21.3798],[-4.3706,21.3799],[-4.3777,21.38],[-4.3847,21.3802],[-4.3917,21.3805],[-4.3988,21.3807],[-4.4058,21.3811],[-4.4128,21.3814],[-4.4198,21.3818],[-4.4268,21.3822],[-4.4339,21.3826],[-4.4409,21.383],[-4.4479,21.3834],[-4.4549,21.3839],[-4.4619,21.3843],[-4.4689,21.3848],[-4.476,21.3853],[-4.483,21.3857],[-4.49,21.3862],[-4.497,21.3867],[-4.504,21.3872],[-4.511,21.3877],[-4.518,21.3881],[-4.5251,21.3886],[-4.5321,21.3891],[-4.5391,21.3895],[-4.5461,21.39],[-4.5531,21.3904],[-4.5601,21.3909],[-4.5672,21.3913],[-4.5742,21.3917],[-4.5812,21.3921],[-4.5882,21.3925],[-4.5952,21.3929],[-4.6023,21.3933],[-4.6093,21.3936],[-4.6163,21.394],[-4.6233,21.3943],[-4.6304,21.3945],[-4.6374,21.3948],[-4.6444,21.395],[-4.6514,21.3953],[-4.6585,21.3954],[-4.6655,21.3956],[-4.6725,21.3957],[-4.6796,21.3958],[-4.6866,21.3958],[-4.6936,21.3958],[-4.7007,21.3957],[-4.7077,21.3955],[-4.7147,21.3954],[-4.7217,21.3952],[-4.7288,21.395],[-4.7358,21.3947],[-4.7428,21.3945],[-4.7498,21.3942],[-4.7569,21.3939],[-4.7639,21.3935],[-4.7709,21.3932],[-4.7779,21.3928],[-4.785,21.3924],[-4.792,21.3921],[-4.799,21.3916],[-4.806,21.3912],[-4.813,21.3908],[-4.8201,21.3903],[-4.8271,21.3899],[-4.8341,21.3894],[-4.8411,21.3889],[-4.8481,21.3885],[-4.8551,21.388],[-4.8621,21.3875],[-4.8692,21.3869],[-4.8762,21.3864],[-4.8832,21.3859],[-4.8902,21.3854],[-4.8972,21.3848],[-4.9042,21.3843],[-4.9112,21.3837],[-4.9182,21.3831],[-4.9252,21.3826],[-4.9322,21.382],[-4.9392,21.3814],[-4.9462,21.3808],[-4.9533,21.3802],[-4.9603,21.3796],[-4.9673,21.379],[-4.9743,21.3784],[-4.9813,21.3778],[-4.9883,21.3772],[-4.9953,21.3766],[-5.0023,21.3759],[-5.0093,21.3753],[-5.0163,21.3746],[-5.0233,21.374],[-5.0303,21.3733],[-5.0373,21.3727],[-5.0443,21.372],[-5.0513,21.3713],[-5.0583,21.3707]]},\"properties\":{\"i\":1,\"source\":2406,\"mouth\":2293,\"discharge\":0,\"length\":666.57,\"width\":7.31,\"widthFactor\":1,\"sourceWidth\":4,\"parent\":1,\"cells\":[2408,2406,2489,2488,2487,2486,2485,2484,2573,2572,2571,2569,2568,2567,2566,2565,2564,2472,2471,2470,2469,2468,2383,2382,2381,2380,2379,2378,2297,2296,2295,2293],\"basin\":1,\"name\":\"Araine\",\"type\":\"River\",\"points\":[[1399.5,603.1],[1379.8,605.9],[1359.09,619.34],[1346.09,621.81],[1325.64,630.01],[1297.48,631.48],[1272.39,628.13],[1255.51,629.61],[1237.25,636.85],[1217.01,637.87],[1198.25,644.09],[1172.2,645.73],[1141.4,641.06],[1125.58,637.38],[1109.36,647.02],[1082.31,650.56],[1065.86,640.11],[1038.46,628.52],[1012.76,632.12],[989.96,624.29],[971.33,622.39],[958.76,623.56],[934.25,609.66],[907.82,600.12],[888.47,610],[881.94,613.44],[855.21,610.94],[834.01,601.58],[829.7,593.59],[811.1,593.02],[805.74,593.98],[780.08,594.34]],\"id\":\"river1\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[4.7504,20.177],[4.7504,20.1771],[4.7506,20.1774],[4.7508,20.178],[4.751,20.1788],[4.7514,20.1798],[4.7518,20.1812],[4.7523,20.1828],[4.7527,20.1849],[4.7532,20.1873],[4.7536,20.1902],[4.7538,20.1935],[4.7538,20.1972],[4.7536,20.2013],[4.7532,20.2057],[4.7491,20.2101],[4.7435,20.2143],[4.738,20.2186],[4.7324,20.2229],[4.7269,20.2272],[4.7213,20.2314],[4.7158,20.2357],[4.7102,20.24],[4.7046,20.2443],[4.6991,20.2485],[4.6935,20.2527],[4.6879,20.2569],[4.6822,20.2611],[4.6765,20.2652],[4.6708,20.2692],[4.665,20.2732],[4.6592,20.277],[4.6533,20.2808],[4.6474,20.2845],[4.6415,20.2881],[4.6355,20.2917],[4.6295,20.2953],[4.6235,20.2988],[4.6175,20.3022],[4.6114,20.3056],[4.6053,20.309],[4.5992,20.3124],[4.5931,20.3157],[4.587,20.319],[4.5809,20.3223],[4.5748,20.3256],[4.5686,20.3289],[4.5625,20.3321],[4.5563,20.3354],[4.5501,20.3386],[4.544,20.3419],[4.5378,20.3452],[4.5316,20.3484],[4.5253,20.3516],[4.5191,20.3548],[4.5128,20.358],[4.5066,20.3612],[4.5003,20.3644],[4.4941,20.3675],[4.4878,20.3708],[4.4816,20.374],[4.4754,20.3773],[4.4693,20.3806],[4.4632,20.384],[4.4572,20.3874],[4.4512,20.3909],[4.4453,20.3945],[4.4395,20.3981],[4.4337,20.4018],[4.428,20.4055],[4.4223,20.4094],[4.4167,20.4132],[4.4112,20.4172],[4.4057,20.4212],[4.4003,20.4252],[4.3949,20.4293],[4.3896,20.4335],[4.3843,20.4378],[4.3791,20.4421],[4.3739,20.4466],[4.3688,20.4511],[4.3638,20.4556],[4.3588,20.4603],[4.3539,20.465],[4.349,20.4699],[4.3443,20.4748],[4.3395,20.4798],[4.3349,20.4849],[4.3303,20.49],[4.3258,20.4953],[4.3214,20.5007],[4.3171,20.5062],[4.3129,20.5117],[4.3087,20.5173],[4.3045,20.523],[4.3004,20.5286],[4.2964,20.5343],[4.2924,20.5401],[4.2884,20.5458],[4.2844,20.5516],[4.2804,20.5574],[4.2765,20.5631],[4.2725,20.5689],[4.2686,20.5747],[4.2646,20.5805],[4.2606,20.5862],[4.2566,20.5919],[4.2525,20.5976],[4.2484,20.6033],[4.2443,20.6089],[4.24,20.6145],[4.2358,20.62],[4.2315,20.6254],[4.2271,20.6309],[4.2228,20.6363],[4.2183,20.6416],[4.2139,20.6469],[4.2094,20.6522],[4.2048,20.6575],[4.2003,20.6627],[4.1956,20.6678],[4.191,20.673],[4.1862,20.6781],[4.1815,20.6831],[4.1767,20.6882],[4.1719,20.6932],[4.167,20.6981],[4.1621,20.7031],[4.1571,20.708],[4.1521,20.7128],[4.147,20.7177],[4.142,20.7225],[4.1369,20.7273],[4.1318,20.7321],[4.1266,20.7368],[4.1214,20.7415],[4.1162,20.7462],[4.111,20.7509],[4.1058,20.7556],[4.1005,20.7603],[4.0953,20.765],[4.0901,20.7697],[4.0849,20.7744],[4.0798,20.7791],[4.0747,20.7838],[4.0696,20.7886],[4.0645,20.7935],[4.0595,20.7983],[4.0546,20.8032],[4.0497,20.8082],[4.0448,20.8132],[4.0401,20.8182],[4.0354,20.8233],[4.0307,20.8284],[4.0261,20.8336],[4.0216,20.8389],[4.0172,20.8442],[4.0128,20.8495],[4.0085,20.8549],[4.0043,20.8604],[4.0001,20.8659],[3.9961,20.8715],[3.992,20.8771],[3.9881,20.8828],[3.9842,20.8885],[3.9804,20.8943],[3.9767,20.9002],[3.9731,20.9061],[3.9695,20.912],[3.966,20.918],[3.9626,20.9241],[3.9592,20.9302],[3.956,20.9364],[3.9528,20.9426],[3.9497,20.9488],[3.9467,20.9551],[3.9437,20.9614],[3.9407,20.9678],[3.9379,20.9741],[3.935,20.9805],[3.9322,20.987],[3.9295,20.9934],[3.9267,20.9998],[3.9241,21.0063],[3.9214,21.0128],[3.9187,21.0192],[3.9161,21.0257],[3.9135,21.0322],[3.9109,21.0387],[3.9083,21.0452],[3.9057,21.0517],[3.9031,21.0582],[3.9005,21.0647],[3.8979,21.0712],[3.8953,21.0777],[3.8927,21.0842],[3.8901,21.0907],[3.8874,21.0972],[3.8847,21.1036],[3.882,21.1101],[3.8793,21.1165],[3.8765,21.1229],[3.8737,21.1293],[3.8708,21.1357],[3.8679,21.142],[3.8649,21.1483],[3.8618,21.1545],[3.8587,21.1608],[3.8555,21.167],[3.8523,21.1732],[3.849,21.1793],[3.8457,21.1854],[3.8423,21.1915],[3.8389,21.1976],[3.8355,21.2036],[3.832,21.2097],[3.8284,21.2157],[3.8248,21.2216],[3.8212,21.2276],[3.8175,21.2335],[3.8137,21.2394],[3.8099,21.2452],[3.8061,21.2511],[3.8023,21.2569],[3.7983,21.2627],[3.7944,21.2685],[3.7904,21.2742],[3.7863,21.2799],[3.7823,21.2856],[3.7782,21.2913],[3.7741,21.297],[3.7699,21.3026],[3.7658,21.3083],[3.7616,21.3139],[3.7574,21.3195],[3.7533,21.3252],[3.7491,21.3308],[3.745,21.3365],[3.7408,21.3421],[3.7367,21.3478],[3.7326,21.3535],[3.7286,21.3592],[3.7246,21.3649],[3.7206,21.3707],[3.7166,21.3764],[3.7127,21.3822],[3.7089,21.3881],[3.7051,21.3939],[3.7014,21.3998],[3.6977,21.4058],[3.6942,21.4118],[3.6907,21.4178],[3.6873,21.4239],[3.684,21.43],[3.6808,21.4362],[3.6777,21.4424],[3.6749,21.4487],[3.6722,21.455],[3.6696,21.4614],[3.6671,21.4678],[3.6648,21.4743],[3.6626,21.4808],[3.6605,21.4874],[3.6586,21.494],[3.6568,21.5006],[3.6551,21.5073],[3.6536,21.514],[3.6522,21.5207],[3.651,21.5275],[3.6499,21.5343],[3.649,21.5411],[3.6482,21.548],[3.6476,21.5549],[3.6471,21.5618],[3.6467,21.5687],[3.6465,21.5756],[3.6464,21.5826],[3.6464,21.5896],[3.6465,21.5965],[3.6467,21.6035],[3.647,21.6105],[3.6474,21.6174],[3.6479,21.6244],[3.6485,21.6314],[3.6491,21.6383],[3.6497,21.6453],[3.6504,21.6522],[3.6512,21.6592],[3.652,21.6661],[3.6528,21.6731],[3.6536,21.68],[3.6545,21.687],[3.6553,21.6939],[3.6562,21.7008],[3.657,21.7078],[3.6579,21.7147],[3.6587,21.7217],[3.6595,21.7286],[3.6603,21.7356],[3.661,21.7425],[3.6617,21.7495],[3.6624,21.7564],[3.663,21.7634],[3.6635,21.7703],[3.664,21.7773],[3.6644,21.7842],[3.6647,21.7912],[3.665,21.7982],[3.6651,21.8051],[3.6652,21.8121],[3.6651,21.819],[3.665,21.826],[3.6647,21.8329],[3.6644,21.8399],[3.664,21.8468],[3.6635,21.8538],[3.6629,21.8607],[3.6622,21.8676],[3.6615,21.8745],[3.6606,21.8815],[3.6596,21.8884],[3.6585,21.8953],[3.6573,21.9021],[3.6561,21.909],[3.6548,21.9159],[3.6534,21.9227],[3.6519,21.9296],[3.6505,21.9364],[3.649,21.9433],[3.6474,21.9501],[3.6458,21.9569],[3.6443,21.9637],[3.6427,21.9705],[3.6411,21.9773],[3.6395,21.9841],[3.6379,21.991],[3.6363,21.9978],[3.6347,22.0046],[3.6332,22.0114],[3.6317,22.0182],[3.6302,22.0251],[3.6288,22.0319],[3.6275,22.0388],[3.6262,22.0456],[3.625,22.0525],[3.6239,22.0594],[3.6228,22.0663],[3.6219,22.0732],[3.6211,22.0801],[3.6204,22.0871],[3.6199,22.094],[3.6196,22.101],[3.6194,22.1079],[3.6195,22.1149],[3.6198,22.1218],[3.6203,22.1287],[3.6211,22.1356],[3.6222,22.1424],[3.6236,22.1491],[3.6253,22.1558],[3.6273,22.1624],[3.6297,22.1689],[3.6324,22.1753],[3.6355,22.1815],[3.639,22.1875],[3.6428,22.1933],[3.647,22.1988],[3.6515,22.2042],[3.6562,22.2093],[3.6612,22.2142],[3.6664,22.2189],[3.6718,22.2234],[3.6774,22.2277],[3.6831,22.2318],[3.6889,22.2357],[3.6948,22.2395],[3.7008,22.2432],[3.7068,22.2467],[3.713,22.2502],[3.7191,22.2535],[3.7253,22.2568],[3.7316,22.26],[3.7379,22.2631],[3.7442,22.2662],[3.7505,22.2693],[3.7568,22.2723],[3.7631,22.2753],[3.7695,22.2783],[3.7758,22.2813],[3.7822,22.2843],[3.7885,22.2874],[3.7948,22.2904],[3.8011,22.2936],[3.8074,22.2967],[3.8136,22.2999],[3.8198,22.3032],[3.826,22.3065],[3.8321,22.31],[3.8382,22.3135],[3.8442,22.3172],[3.8501,22.3209],[3.8559,22.3248],[3.8617,22.3289],[3.8673,22.3331],[3.8728,22.3374],[3.8782,22.3419],[3.8836,22.3464],[3.8889,22.351],[3.8942,22.3555],[3.8995,22.3602],[3.9047,22.3648],[3.91,22.3695],[3.9152,22.3742],[3.9203,22.379],[3.9255,22.3837],[3.9306,22.3885],[3.9357,22.3933],[3.9408,22.3981],[3.9459,22.4029],[3.951,22.4078],[3.9561,22.4126],[3.9611,22.4175],[3.9662,22.4224],[3.9712,22.4273],[3.9762,22.4322],[3.9812,22.4371],[3.9862,22.442],[3.9912,22.4469],[3.9962,22.4519],[4.0012,22.4568],[4.0061,22.4618],[4.0111,22.4667],[4.016,22.4717],[4.021,22.4767],[4.0259,22.4816],[4.0308,22.4866],[4.0357,22.4916],[4.0407,22.4966],[4.0456,22.5017],[4.0505,22.5067],[4.0554,22.5117],[4.0602,22.5167],[4.0651,22.5218],[4.07,22.5268],[4.0749,22.5319],[4.0797,22.5369],[4.0846,22.542]]},\"properties\":{\"i\":2,\"source\":2567,\"mouth\":2161,\"discharge\":0,\"length\":111.75,\"width\":1.6,\"widthFactor\":2,\"sourceWidth\":1.5,\"parent\":2,\"cells\":[2567,2477,2392,2310,2236,2161],\"basin\":2,\"name\":\"Widereton\",\"type\":\"River\",\"points\":[[1131.2,637.8],[1115.7,628.1],[1101.9,612.3],[1089.9,590],[1089,565.8],[1105.4,552.3]],\"id\":\"river2\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[12.6377,20.9849],[12.6377,20.9849],[12.6376,20.9849],[12.6376,20.9849],[12.6375,20.9849],[12.6374,20.9849],[12.6373,20.9849],[12.6372,20.9849],[12.6371,20.9849],[12.637,20.9849],[12.637,20.9849],[12.6372,20.9849],[12.6375,20.985],[12.6378,20.9851],[12.6381,20.9851],[12.6383,20.9852],[12.6384,20.9853],[12.6384,20.9853],[12.6382,20.9851],[12.6378,20.9849],[12.6372,20.9845],[12.6364,20.9839],[12.6355,20.983],[12.6344,20.9819],[12.6331,20.9806],[12.6317,20.9791],[12.6303,20.9773],[12.6287,20.9753],[12.6288,20.9698],[12.6291,20.9636],[12.6294,20.9574],[12.6296,20.9511],[12.6299,20.9448],[12.63,20.9385],[12.6302,20.9321],[12.6302,20.9257],[12.6302,20.9193],[12.6301,20.9128],[12.6299,20.9062],[12.6297,20.8997],[12.6293,20.893],[12.6288,20.8864],[12.6281,20.8797],[12.6274,20.8729],[12.6265,20.8662],[12.6256,20.8594],[12.6247,20.8526],[12.6237,20.8458],[12.6227,20.839],[12.6217,20.8322],[12.6208,20.8253],[12.6198,20.8185],[12.6188,20.8116],[12.6178,20.8048],[12.6169,20.7979],[12.6159,20.791],[12.615,20.7841],[12.6142,20.7772],[12.6134,20.7702],[12.6126,20.7633],[12.6119,20.7563],[12.6113,20.7494],[12.6109,20.7424],[12.6106,20.7354],[12.6104,20.7284],[12.6104,20.7215],[12.6104,20.7146],[12.6105,20.7076],[12.6108,20.7008],[12.611,20.6939],[12.6113,20.6871],[12.6117,20.6803],[12.612,20.6735],[12.6124,20.6668],[12.6128,20.6601],[12.6131,20.6534],[12.6135,20.6468],[12.6138,20.6402],[12.614,20.6336],[12.6142,20.6271],[12.6143,20.6206],[12.6143,20.6142],[12.6141,20.6078],[12.6139,20.6015],[12.6134,20.5953],[12.6127,20.5893],[12.6117,20.5835],[12.6104,20.578],[12.6088,20.5728],[12.6069,20.5679],[12.6049,20.5632],[12.6027,20.5588],[12.6004,20.5547],[12.5979,20.5507],[12.5953,20.5469],[12.5925,20.5432],[12.5896,20.5395],[12.5865,20.536],[12.5834,20.5326],[12.5803,20.5292],[12.5771,20.5259],[12.5738,20.5226],[12.5705,20.5194],[12.5671,20.5162],[12.5636,20.513],[12.5601,20.5097],[12.5565,20.5065],[12.5528,20.5032],[12.549,20.5],[12.5452,20.4966],[12.5412,20.4932],[12.537,20.4898],[12.5327,20.4863],[12.5283,20.4826],[12.5236,20.4789],[12.5187,20.4751],[12.5135,20.4712],[12.508,20.4673],[12.502,20.4637],[12.4956,20.461],[12.489,20.4591],[12.4826,20.4577],[12.4762,20.4566],[12.4701,20.4556],[12.464,20.4547],[12.458,20.4538],[12.4521,20.4528],[12.4462,20.4519],[12.4404,20.4509],[12.4345,20.4498],[12.4286,20.4487],[12.4227,20.4475],[12.4167,20.4461],[12.4106,20.4447],[12.4045,20.443],[12.3982,20.4412],[12.3919,20.4391],[12.3856,20.4366],[12.3792,20.4337],[12.3729,20.4306],[12.3667,20.4274],[12.3604,20.4243],[12.3541,20.4211],[12.3479,20.418],[12.3417,20.4149],[12.3355,20.4118],[12.3293,20.4087],[12.3232,20.4057],[12.317,20.4027],[12.3109,20.3997],[12.3047,20.3968],[12.2986,20.3939],[12.2924,20.3911],[12.2863,20.3883],[12.2801,20.3855],[12.2739,20.3829],[12.2676,20.3803],[12.2613,20.3777],[12.255,20.3753],[12.2487,20.3729],[12.2423,20.3707],[12.2358,20.3685],[12.2292,20.3666],[12.2226,20.3648],[12.2158,20.3633],[12.209,20.3619],[12.2022,20.3606],[12.1953,20.3596],[12.1883,20.3586],[12.1814,20.3579],[12.1744,20.3572],[12.1674,20.3568],[12.1604,20.3567],[12.1534,20.3568],[12.1464,20.3572],[12.1395,20.3577],[12.1325,20.3585],[12.1256,20.3594],[12.1187,20.3605],[12.1118,20.3616],[12.105,20.3628],[12.0981,20.3639],[12.0913,20.3651],[12.0844,20.3662],[12.0775,20.3672],[12.0706,20.3683],[12.0637,20.3694],[12.0568,20.3703],[12.0498,20.3712],[12.0428,20.3719],[12.0358,20.3724],[12.0288,20.3727],[12.0218,20.3728],[12.0149,20.3725],[12.008,20.372],[12.0012,20.3713],[11.9945,20.3703],[11.9878,20.3692],[11.9812,20.3679],[11.9746,20.3665],[11.9681,20.3649],[11.9616,20.3633],[11.955,20.3616],[11.9485,20.3598],[11.942,20.3579],[11.9354,20.356],[11.9288,20.354],[11.9222,20.3519],[11.9156,20.3497],[11.909,20.3475],[11.9023,20.3452],[11.8957,20.343],[11.889,20.3407],[11.8824,20.3385],[11.8758,20.3365],[11.8692,20.3344],[11.8626,20.3322],[11.8561,20.33],[11.8496,20.3278],[11.8431,20.3256],[11.8367,20.3235],[11.8302,20.3213],[11.8238,20.3192],[11.8174,20.3171],[11.8109,20.315],[11.8045,20.3131],[11.798,20.3111],[11.7915,20.3093],[11.785,20.3076],[11.7784,20.3059],[11.7718,20.3044],[11.7652,20.3031],[11.7585,20.302],[11.7517,20.3011],[11.7449,20.3004],[11.7381,20.2996],[11.7314,20.2989],[11.7247,20.2983],[11.718,20.2978],[11.7113,20.2974],[11.7046,20.2971],[11.6979,20.2971],[11.6912,20.2974],[11.6845,20.2981],[11.6778,20.2992],[11.6712,20.3008],[11.6648,20.3031],[11.6585,20.3059],[11.6525,20.3093],[11.6468,20.3132],[11.6413,20.3175],[11.6362,20.3223],[11.6314,20.3274],[11.6268,20.3327],[11.6225,20.3382],[11.6183,20.3438],[11.6143,20.3496],[11.6104,20.3554],[11.6065,20.3612],[11.6028,20.3671],[11.599,20.373],[11.5953,20.379],[11.5915,20.3849],[11.5877,20.3908],[11.5839,20.3967],[11.58,20.4025],[11.5761,20.4083],[11.572,20.414],[11.5678,20.4196],[11.5634,20.4251],[11.5589,20.4304],[11.5542,20.4356],[11.5493,20.4406],[11.5442,20.4454],[11.5388,20.4498],[11.5331,20.454],[11.5274,20.4581],[11.5215,20.4619],[11.5155,20.4655],[11.5094,20.4689],[11.5031,20.4721],[11.4968,20.4751],[11.4904,20.478],[11.484,20.4808],[11.4775,20.4835],[11.4709,20.486],[11.4644,20.4885],[11.4578,20.491],[11.4512,20.4934],[11.4446,20.4958],[11.438,20.4982],[11.4314,20.5006],[11.4248,20.503],[11.4182,20.5055],[11.4117,20.5081],[11.4052,20.5107],[11.3987,20.5135],[11.3923,20.5164],[11.386,20.5194],[11.3797,20.5226],[11.3735,20.526],[11.3675,20.5295],[11.3616,20.5334],[11.3559,20.5374],[11.3503,20.5416],[11.3449,20.546],[11.3395,20.5505],[11.3342,20.5552],[11.329,20.5598],[11.3238,20.5646],[11.3187,20.5694],[11.3137,20.5743],[11.3087,20.5792],[11.3037,20.5841],[11.2988,20.5891],[11.2939,20.5941],[11.289,20.5992],[11.2842,20.6043],[11.2794,20.6094],[11.2746,20.6145],[11.2698,20.6197],[11.2651,20.6248],[11.2604,20.63],[11.2557,20.6353],[11.2511,20.6405],[11.2464,20.6458],[11.2418,20.651],[11.2372,20.6563],[11.2326,20.6616],[11.2281,20.667]]},\"properties\":{\"i\":3,\"source\":2409,\"mouth\":2490,\"discharge\":53,\"length\":82.44,\"width\":2.17,\"widthFactor\":1,\"sourceWidth\":2,\"parent\":1,\"cells\":[2409,2492,2491,2490,2489],\"basin\":1,\"name\":\"Carcarinha\",\"type\":\"River\",\"points\":[[1408.9,603],[1408.5,626.2],[1391.2,630.6],[1374.6,632.5],[1359.09,619.34]],\"id\":\"river3\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[-4.7191,13.6363],[-4.7191,13.6364],[-4.7191,13.6364],[-4.7191,13.6365],[-4.7177,13.6417],[-4.7152,13.6472],[-4.7118,13.6526],[-4.7077,13.6579],[-4.7033,13.6631],[-4.6986,13.6681],[-4.6938,13.6731],[-4.6888,13.6779],[-4.6837,13.6826],[-4.6785,13.6873],[-4.6733,13.6919],[-4.668,13.6965],[-4.6627,13.7011],[-4.6573,13.7056],[-4.652,13.7101],[-4.6466,13.7145],[-4.6411,13.719],[-4.6357,13.7234],[-4.6302,13.7278],[-4.6248,13.7322],[-4.6193,13.7366],[-4.6138,13.7409],[-4.6083,13.7453],[-4.6028,13.7497],[-4.5973,13.754],[-4.5918,13.7584],[-4.5863,13.7628],[-4.5808,13.7671],[-4.5754,13.7715],[-4.5699,13.7759],[-4.5644,13.7803],[-4.5589,13.7847],[-4.5535,13.7891],[-4.5481,13.7935],[-4.5426,13.798],[-4.5372,13.8025],[-4.5319,13.807],[-4.5266,13.8116],[-4.5213,13.8161],[-4.516,13.8207],[-4.5107,13.8254],[-4.5054,13.83],[-4.5002,13.8346],[-4.495,13.8393],[-4.4898,13.8441],[-4.4847,13.8489],[-4.4796,13.8537],[-4.4744,13.8585],[-4.4693,13.8633],[-4.4642,13.8681],[-4.4591,13.8729],[-4.4541,13.8778],[-4.449,13.8826],[-4.444,13.8875],[-4.439,13.8924],[-4.434,13.8973],[-4.429,13.9023],[-4.4241,13.9073],[-4.4192,13.9123],[-4.4143,13.9173],[-4.4094,13.9224],[-4.4046,13.9275],[-4.3998,13.9326],[-4.3951,13.9377],[-4.3904,13.9429],[-4.3857,13.9481],[-4.381,13.9534],[-4.3764,13.9587],[-4.3719,13.964],[-4.3674,13.9693],[-4.3629,13.9747],[-4.3585,13.9802],[-4.3541,13.9856],[-4.3498,13.9912],[-4.3455,13.9967],[-4.3413,14.0023],[-4.3372,14.0079],[-4.333,14.0136],[-4.329,14.0193],[-4.325,14.0251],[-4.321,14.0308],[-4.3171,14.0366],[-4.3132,14.0424],[-4.3093,14.0483],[-4.3056,14.0542],[-4.3019,14.0601],[-4.2983,14.0661],[-4.2947,14.0722],[-4.2912,14.0782],[-4.2878,14.0843],[-4.2844,14.0904],[-4.281,14.0966],[-4.2777,14.1028],[-4.2744,14.109],[-4.2712,14.1152],[-4.2681,14.1214],[-4.2649,14.1277],[-4.2618,14.134],[-4.2588,14.1403],[-4.2558,14.1466],[-4.2528,14.1529],[-4.2498,14.1593],[-4.2469,14.1656],[-4.244,14.172],[-4.2412,14.1784],[-4.2383,14.1848],[-4.2355,14.1912],[-4.2328,14.1977],[-4.23,14.2041],[-4.2273,14.2105],[-4.2246,14.217],[-4.2219,14.2235],[-4.2192,14.2299],[-4.2166,14.2364],[-4.214,14.2429],[-4.2114,14.2494],[-4.2088,14.2559],[-4.2062,14.2624],[-4.2037,14.2689],[-4.2011,14.2755],[-4.1986,14.282],[-4.1961,14.2885],[-4.1936,14.2951],[-4.1911,14.3016],[-4.1887,14.3082],[-4.1862,14.3147],[-4.1837,14.3213],[-4.1813,14.3278],[-4.1788,14.3344],[-4.1764,14.3409],[-4.1741,14.3475],[-4.1718,14.3542],[-4.1696,14.3608],[-4.1675,14.3675],[-4.1655,14.3742],[-4.1637,14.3809],[-4.162,14.3877],[-4.1604,14.3945],[-4.159,14.4014],[-4.1576,14.4082],[-4.1564,14.4151],[-4.1552,14.422],[-4.1541,14.4289],[-4.1531,14.4358],[-4.1521,14.4427],[-4.1512,14.4497],[-4.1503,14.4566],[-4.1494,14.4636],[-4.1486,14.4705],[-4.1478,14.4774],[-4.147,14.4844],[-4.1462,14.4913],[-4.1453,14.4983],[-4.1445,14.5052],[-4.1436,14.5122],[-4.1427,14.5191],[-4.1417,14.526],[-4.1407,14.533],[-4.1396,14.5399],[-4.1385,14.5468],[-4.1372,14.5536],[-4.1359,14.5605],[-4.1345,14.5674],[-4.1329,14.5742],[-4.1312,14.581],[-4.1294,14.5877],[-4.1275,14.5944],[-4.1254,14.6011],[-4.1232,14.6077],[-4.1208,14.6142],[-4.1182,14.6207],[-4.1154,14.6271],[-4.1125,14.6334],[-4.1093,14.6396],[-4.106,14.6458],[-4.1025,14.6518],[-4.0987,14.6576],[-4.0948,14.6634],[-4.0908,14.669],[-4.0865,14.6745],[-4.0821,14.6799],[-4.0775,14.6851],[-4.0727,14.6902],[-4.0678,14.6952],[-4.0627,14.7],[-4.0576,14.7046],[-4.0523,14.7092],[-4.0469,14.7136],[-4.0413,14.7179],[-4.0357,14.7221],[-4.03,14.7261],[-4.0243,14.7301],[-4.0184,14.7339],[-4.0125,14.7377],[-4.0065,14.7414],[-4.0005,14.745],[-3.9944,14.7485],[-3.9883,14.7519],[-3.9822,14.7553],[-3.976,14.7586],[-3.9698,14.7618],[-3.9635,14.765],[-3.9572,14.7681],[-3.9509,14.7712],[-3.9446,14.7742],[-3.9382,14.7772],[-3.9319,14.7802],[-3.9255,14.7831],[-3.9191,14.786],[-3.9127,14.7889],[-3.9063,14.7917],[-3.8998,14.7946],[-3.8934,14.7973],[-3.8869,14.8001],[-3.8805,14.8029],[-3.874,14.8057],[-3.8676,14.8084],[-3.8611,14.8111],[-3.8546,14.8139],[-3.8481,14.8166],[-3.8417,14.8193],[-3.8352,14.8221],[-3.8287,14.8248],[-3.8223,14.8275],[-3.8158,14.8303],[-3.8093,14.8331],[-3.8029,14.8358],[-3.7964,14.8386],[-3.79,14.8414],[-3.7836,14.8443],[-3.7771,14.8471],[-3.7707,14.85],[-3.7643,14.8529],[-3.758,14.8559],[-3.7516,14.8588],[-3.7453,14.8618],[-3.7389,14.8649],[-3.7326,14.868],[-3.7263,14.8711],[-3.7201,14.8743],[-3.7139,14.8775],[-3.7077,14.8808],[-3.7015,14.8842],[-3.6954,14.8877],[-3.6894,14.8913],[-3.6833,14.8948],[-3.6774,14.8985],[-3.6714,14.9022],[-3.6655,14.9059],[-3.6596,14.9098],[-3.6537,14.9136],[-3.6479,14.9175],[-3.642,14.9214],[-3.6362,14.9253],[-3.6305,14.9293],[-3.6247,14.9333],[-3.619,14.9374],[-3.6133,14.9415],[-3.6077,14.9456],[-3.602,14.9498],[-3.5964,14.954],[-3.5908,14.9582],[-3.5852,14.9625],[-3.5796,14.9667],[-3.5741,14.971],[-3.5686,14.9753],[-3.563,14.9797],[-3.5575,14.984],[-3.552,14.9883],[-3.5465,14.9927],[-3.541,14.9971],[-3.5355,15.0015],[-3.5301,15.0058],[-3.5246,15.0102],[-3.5191,15.0146],[-3.5136,15.019],[-3.5082,15.0234],[-3.5027,15.0278],[-3.4972,15.0322],[-3.4918,15.0366],[-3.4863,15.041],[-3.4808,15.0453],[-3.4753,15.0497],[-3.4698,15.0541],[-3.4643,15.0584],[-3.4587,15.0627],[-3.4532,15.067],[-3.4476,15.0713],[-3.4421,15.0756],[-3.4365,15.0798],[-3.4308,15.084],[-3.4252,15.0881],[-3.4195,15.0923],[-3.4138,15.0964],[-3.4081,15.1004],[-3.4023,15.1044],[-3.3965,15.1083],[-3.3907,15.1121],[-3.3847,15.1159],[-3.3788,15.1196],[-3.3728,15.1232],[-3.3667,15.1266],[-3.3606,15.1299],[-3.3543,15.1331],[-3.348,15.136],[-3.3417,15.1387],[-3.3352,15.1412],[-3.3287,15.1433],[-3.3221,15.145],[-3.3155,15.1463],[-3.309,15.1472],[-3.3025,15.1476],[-3.2961,15.1476],[-3.2899,15.1471],[-3.2838,15.1462],[-3.2779,15.145],[-3.272,15.1434],[-3.2663,15.1415],[-3.2606,15.1394],[-3.2551,15.1369],[-3.2496,15.1341],[-3.2442,15.131],[-3.2388,15.1276],[-3.2335,15.1239],[-3.2283,15.12],[-3.2232,15.1158],[-3.2182,15.1114],[-3.2132,15.1068],[-3.2083,15.1021],[-3.2034,15.0972],[-3.1985,15.0923],[-3.1937,15.0873],[-3.1888,15.0823],[-3.1838,15.0774],[-3.1788,15.0725],[-3.1737,15.0677],[-3.1685,15.063],[-3.1631,15.0586],[-3.1578,15.0541],[-3.1525,15.0496],[-3.1472,15.0451],[-3.1419,15.0406],[-3.1366,15.0361],[-3.1312,15.0317],[-3.1259,15.0272],[-3.1205,15.0228],[-3.115,15.0185],[-3.1095,15.0142],[-3.1039,15.01],[-3.0983,15.0059],[-3.0925,15.002],[-3.0866,14.9982],[-3.0806,14.9945],[-3.0745,14.9911],[-3.0683,14.9878],[-3.0621,14.9845],[-3.0559,14.9812],[-3.0497,14.978],[-3.0434,14.9748],[-3.0372,14.9717],[-3.0309,14.9686],[-3.0246,14.9656],[-3.0182,14.9626],[-3.0119,14.9598],[-3.0054,14.957],[-2.999,14.9543],[-2.9925,14.9517],[-2.986,14.9492],[-2.9794,14.9468],[-2.9728,14.9445],[-2.9662,14.9424],[-2.9595,14.9404],[-2.9528,14.9385],[-2.946,14.9368],[-2.9392,14.9352],[-2.9324,14.9337],[-2.9255,14.9323],[-2.9186,14.9311],[-2.9117,14.93],[-2.9048,14.929],[-2.8978,14.9281],[-2.8908,14.9273],[-2.8839,14.9266],[-2.8769,14.926],[-2.8699,14.9254],[-2.8629,14.9249],[-2.8559,14.9245],[-2.8489,14.9242],[-2.8418,14.9239],[-2.8348,14.9236],[-2.8278,14.9235],[-2.8208,14.9234],[-2.8137,14.9233],[-2.8067,14.9233],[-2.7997,14.9233],[-2.7927,14.9234],[-2.7856,14.9235],[-2.7786,14.9237],[-2.7716,14.9239],[-2.7646,14.9241],[-2.7575,14.9243],[-2.7505,14.9246],[-2.7435,14.9249],[-2.7365,14.9253],[-2.7294,14.9257],[-2.7224,14.926],[-2.7154,14.9265],[-2.7084,14.9269],[-2.7014,14.9274],[-2.6944,14.9278],[-2.6874,14.9283],[-2.6803,14.9288],[-2.6733,14.9294],[-2.6663,14.9299],[-2.6593,14.9305],[-2.6523,14.931],[-2.6453,14.9316],[-2.6383,14.9322],[-2.6313,14.9328],[-2.6243,14.9335],[-2.6173,14.9341],[-2.6103,14.9347],[-2.6033,14.9354],[-2.5963,14.936],[-2.5893,14.9367],[-2.5823,14.9374],[-2.5753,14.9381],[-2.5683,14.9388],[-2.5613,14.9395],[-2.5543,14.9403],[-2.5473,14.941],[-2.5403,14.9418],[-2.5333,14.9426],[-2.5264,14.9433],[-2.5194,14.9442],[-2.5124,14.945],[-2.5054,14.9458],[-2.4984,14.9467],[-2.4915,14.9476],[-2.4845,14.9485],[-2.4775,14.9494],[-2.4705,14.9504],[-2.4636,14.9513],[-2.4566,14.9523],[-2.4497,14.9533],[-2.4427,14.9544],[-2.4358,14.9554],[-2.4288,14.9565],[-2.4219,14.9576],[-2.4149,14.9587],[-2.408,14.9599],[-2.4011,14.9611],[-2.3942,14.9623],[-2.3872,14.9636],[-2.3803,14.9648],[-2.3734,14.9662],[-2.3665,14.9675],[-2.3596,14.9689],[-2.3527,14.9703],[-2.3459,14.9717],[-2.339,14.9732],[-2.3321,14.9747],[-2.3253,14.9762],[-2.3184,14.9778],[-2.3116,14.9794],[-2.3047,14.9811],[-2.2979,14.9828],[-2.2911,14.9845],[-2.2843,14.9863],[-2.2775,14.9881],[-2.2707,14.9899],[-2.264,14.9918],[-2.2572,14.9938],[-2.2505,14.9959],[-2.2438,14.9981],[-2.2372,15.0003],[-2.2305,15.0025],[-2.2239,15.0048],[-2.2172,15.0071],[-2.2106,15.0094],[-2.204,15.0118],[-2.1974,15.0142],[-2.1908,15.0167],[-2.1843,15.0192],[-2.1777,15.0217],[-2.1712,15.0243],[-2.1647,15.027],[-2.1582,15.0297],[-2.1518,15.0324],[-2.1453,15.0352],[-2.1389,15.0381],[-2.1325,15.0409],[-2.1261,15.0438],[-2.1197,15.0468],[-2.1133,15.0497],[-2.107,15.0527],[-2.1007,15.0558],[-2.0943,15.0589],[-2.088,15.062],[-2.0818,15.0651],[-2.0755,15.0683],[-2.0692,15.0714],[-2.063,15.0746],[-2.0567,15.0779],[-2.0505,15.0811],[-2.0443,15.0844],[-2.0381,15.0877],[-2.0319,15.091],[-2.0257,15.0944],[-2.0196,15.0977],[-2.0134,15.1011],[-2.0072,15.1045],[-2.0011,15.1079],[-1.9949,15.1113],[-1.9888,15.1147],[-1.9827,15.1181],[-1.9766,15.1215],[-1.9704,15.125],[-1.9643,15.1284],[-1.9582,15.1319],[-1.9521,15.1354],[-1.946,15.1389],[-1.94,15.1425],[-1.934,15.1462],[-1.9281,15.1499],[-1.9223,15.1538],[-1.9165,15.1578],[-1.9108,15.1619],[-1.9052,15.1661],[-1.8996,15.1704],[-1.8941,15.1747],[-1.8887,15.1791],[-1.8832,15.1836],[-1.8779,15.1881],[-1.8725,15.1926],[-1.8672,15.1972],[-1.8619,15.2018],[-1.8566,15.2064],[-1.8514,15.211],[-1.8461,15.2157],[-1.8409,15.2203],[-1.8356,15.225],[-1.8303,15.2296],[-1.8251,15.2343],[-1.8198,15.2389],[-1.8145,15.2434],[-1.8091,15.248],[-1.8038,15.2525],[-1.7984,15.257],[-1.7929,15.2614],[-1.7874,15.2658],[-1.7819,15.2701],[-1.7763,15.2743],[-1.7706,15.2784],[-1.7649,15.2825],[-1.7591,15.2865],[-1.7533,15.2903],[-1.7473,15.294],[-1.7413,15.2977],[-1.7352,15.3011],[-1.7291,15.3045],[-1.7229,15.3076],[-1.7166,15.3107],[-1.7102,15.3135],[-1.7037,15.3162],[-1.6972,15.3187],[-1.6906,15.3209],[-1.6839,15.3229],[-1.6772,15.3247],[-1.6705,15.3263],[-1.6637,15.3278],[-1.6568,15.329],[-1.6499,15.3301],[-1.643,15.331],[-1.6361,15.3316],[-1.6291,15.332],[-1.6221,15.3322],[-1.6151,15.3323],[-1.6081,15.3323],[-1.6011,15.3321],[-1.5941,15.3318],[-1.5871,15.3313],[-1.5801,15.3308],[-1.5731,15.3301],[-1.5662,15.3294],[-1.5592,15.3285],[-1.5522,15.3276],[-1.5453,15.3266],[-1.5383,15.3256],[-1.5314,15.3245],[-1.5245,15.3233],[-1.5176,15.3221],[-1.5106,15.3209],[-1.5037,15.3196],[-1.4968,15.3183],[-1.4899,15.3169],[-1.483,15.3156],[-1.4761,15.3142],[-1.4693,15.3128],[-1.4624,15.3114],[-1.4555,15.31],[-1.4486,15.3087],[-1.4417,15.3073],[-1.4348,15.3059],[-1.4279,15.3045],[-1.421,15.3032],[-1.4141,15.3019],[-1.4072,15.3006],[-1.4003,15.2993],[-1.3934,15.2981],[-1.3864,15.2969],[-1.3795,15.2958],[-1.3725,15.2947],[-1.3656,15.2937],[-1.3586,15.2928],[-1.3517,15.2919],[-1.3447,15.2911],[-1.3377,15.2903],[-1.3308,15.2896],[-1.3238,15.2889],[-1.3168,15.2882],[-1.3098,15.2875],[-1.3028,15.2868],[-1.2958,15.2862],[-1.2888,15.2856],[-1.2818,15.2851],[-1.2748,15.2847],[-1.2677,15.2842],[-1.2607,15.2839],[-1.2537,15.2836],[-1.2467,15.2833],[-1.2396,15.283],[-1.2326,15.2826],[-1.2256,15.2823],[-1.2186,15.2819],[-1.2116,15.2816],[-1.2045,15.2813],[-1.1975,15.2809],[-1.1905,15.2806],[-1.1835,15.2803],[-1.1764,15.28],[-1.1694,15.2797],[-1.1624,15.2794],[-1.1554,15.2792],[-1.1483,15.279],[-1.1413,15.2788],[-1.1343,15.2786],[-1.1273,15.2785],[-1.1202,15.2784],[-1.1132,15.2783],[-1.1062,15.2783],[-1.0992,15.2783],[-1.0921,15.2784],[-1.0851,15.2785],[-1.0781,15.2787],[-1.0711,15.2789],[-1.064,15.2792],[-1.057,15.2795],[-1.05,15.2799],[-1.043,15.2804],[-1.036,15.2809],[-1.029,15.2815],[-1.022,15.2821],[-1.015,15.2829],[-1.0081,15.2837],[-1.0011,15.2846],[-0.9941,15.2856],[-0.9872,15.2866],[-0.9803,15.2877],[-0.9734,15.289],[-0.9665,15.2903],[-0.9596,15.2917],[-0.9527,15.2931],[-0.9459,15.2947],[-0.939,15.2963],[-0.9322,15.298],[-0.9254,15.2998],[-0.9187,15.3016],[-0.9119,15.3036],[-0.9052,15.3056],[-0.8985,15.3077],[-0.8918,15.3098],[-0.8851,15.312],[-0.8785,15.3143],[-0.8719,15.3166],[-0.8653,15.319],[-0.8587,15.3215],[-0.8521,15.324],[-0.8456,15.3265],[-0.839,15.3291],[-0.8325,15.3318],[-0.826,15.3345],[-0.8196,15.3372],[-0.8131,15.34],[-0.8067,15.3428],[-0.8003,15.3457],[-0.7939,15.3486],[-0.7875,15.3515],[-0.7811,15.3544],[-0.7748,15.3574],[-0.7684,15.3604],[-0.7621,15.3635],[-0.7558,15.3666],[-0.7495,15.3697],[-0.7432,15.3728],[-0.7369,15.3759],[-0.7306,15.3791],[-0.7244,15.3823],[-0.7181,15.3855],[-0.7119,15.3887],[-0.7056,15.3919],[-0.6994,15.3952],[-0.6932,15.3985],[-0.687,15.4017],[-0.6808,15.405],[-0.6746,15.4083],[-0.6684,15.4117],[-0.6622,15.415],[-0.656,15.4183],[-0.6498,15.4216],[-0.6437,15.425],[-0.6375,15.4283],[-0.6313,15.4317],[-0.6252,15.435],[-0.619,15.4384],[-0.6128,15.4418],[-0.6067,15.4451],[-0.6005,15.4485],[-0.5943,15.4518],[-0.5881,15.4552],[-0.582,15.4585],[-0.5758,15.4619],[-0.5696,15.4652],[-0.5634,15.4685],[-0.5573,15.4719],[-0.5511,15.4752],[-0.5449,15.4786],[-0.5388,15.4821],[-0.5327,15.4855],[-0.5266,15.489],[-0.5206,15.4926],[-0.5146,15.4962],[-0.5086,15.4999],[-0.5027,15.5037],[-0.4968,15.5075],[-0.4909,15.5113],[-0.485,15.5151],[-0.4792,15.519],[-0.4733,15.523],[-0.4675,15.5269],[-0.4618,15.5309],[-0.456,15.5349],[-0.4503,15.5389],[-0.4445,15.543],[-0.4388,15.5471],[-0.4331,15.5512],[-0.4274,15.5552],[-0.4217,15.5594],[-0.416,15.5635],[-0.4103,15.5676],[-0.4046,15.5717],[-0.399,15.5758],[-0.3933,15.5799],[-0.3876,15.584],[-0.3819,15.5881],[-0.3762,15.5922],[-0.3705,15.5963],[-0.3647,15.6003],[-0.359,15.6044],[-0.3532,15.6084],[-0.3475,15.6124],[-0.3417,15.6164],[-0.3359,15.6203],[-0.33,15.6242],[-0.3242,15.6281],[-0.3183,15.6319],[-0.3124,15.6357],[-0.3065,15.6395],[-0.3005,15.6432],[-0.2945,15.6469],[-0.2885,15.6505],[-0.2825,15.6541],[-0.2764,15.6576],[-0.2703,15.6611],[-0.2642,15.6645],[-0.258,15.6679],[-0.2518,15.6712],[-0.2456,15.6744],[-0.2393,15.6776],[-0.2331,15.6807],[-0.2267,15.6838],[-0.2204,15.6867],[-0.214,15.6897],[-0.2076,15.6925],[-0.2011,15.6953],[-0.1946,15.6979],[-0.1881,15.7005],[-0.1815,15.7031],[-0.175,15.7055],[-0.1684,15.7079],[-0.1617,15.7102],[-0.1551,15.7125],[-0.1484,15.7147],[-0.1417,15.7168],[-0.135,15.7189],[-0.1283,15.7209],[-0.1216,15.7229],[-0.1148,15.7248],[-0.108,15.7267],[-0.1012,15.7285],[-0.0944,15.7303],[-0.0876,15.732],[-0.0808,15.7337],[-0.074,15.7354],[-0.0671,15.737],[-0.0603,15.7386],[-0.0534,15.7401],[-0.0466,15.7417],[-0.0397,15.7431],[-0.0328,15.7446],[-0.026,15.746],[-0.0191,15.7474],[-0.0122,15.7488],[-0.0053,15.7502],[0.0016,15.7515],[0.0085,15.7528],[0.0154,15.7541],[0.0223,15.7554],[0.0293,15.7566],[0.0362,15.7579],[0.0431,15.7591],[0.05,15.7603],[0.0569,15.7615],[0.0639,15.7627],[0.0708,15.7639],[0.0777,15.7651],[0.0847,15.7663],[0.0916,15.7674],[0.0985,15.7686],[0.1055,15.7697],[0.1124,15.7709],[0.1193,15.772],[0.1263,15.7732],[0.1332,15.7743],[0.1401,15.7755],[0.1471,15.7766],[0.154,15.7778],[0.161,15.7789],[0.1679,15.7801],[0.1748,15.7813],[0.1818,15.7824],[0.1887,15.7836],[0.1956,15.7848],[0.2025,15.786],[0.2095,15.7872],[0.2164,15.7884],[0.2233,15.7897],[0.2302,15.7909],[0.2371,15.7922],[0.2441,15.7934],[0.251,15.7947],[0.2579,15.7961],[0.2648,15.7974],[0.2717,15.7987],[0.2786,15.8001],[0.2855,15.8015],[0.2923,15.8029],[0.2992,15.8044],[0.3061,15.8058],[0.313,15.8073],[0.3198,15.8088],[0.3267,15.8104],[0.3335,15.812],[0.3404,15.8136],[0.3472,15.8152],[0.354,15.8168],[0.3609,15.8185],[0.3677,15.8201],[0.3745,15.8218],[0.3814,15.8234],[0.3882,15.8251],[0.395,15.8267],[0.4019,15.8284],[0.4087,15.83],[0.4156,15.8316],[0.4224,15.8332],[0.4293,15.8348],[0.4361,15.8363],[0.443,15.8379],[0.4498,15.8394],[0.4567,15.8409],[0.4636,15.8424],[0.4704,15.8439],[0.4773,15.8454],[0.4842,15.8469],[0.491,15.8483],[0.4979,15.8498],[0.5048,15.8513],[0.5117,15.8527],[0.5186,15.8542],[0.5254,15.8556],[0.5323,15.8571],[0.5392,15.8586],[0.5461,15.86],[0.5529,15.8615],[0.5598,15.863],[0.5667,15.8645],[0.5735,15.8659],[0.5804,15.8674],[0.5873,15.8689],[0.5941,15.8705],[0.601,15.872],[0.6079,15.8735],[0.6147,15.8751],[0.6216,15.8767],[0.6284,15.8782],[0.6353,15.8799],[0.6421,15.8815],[0.6489,15.8831],[0.6558,15.8848],[0.6626,15.8865],[0.6694,15.8882],[0.6762,15.89],[0.683,15.8917],[0.6898,15.8935],[0.6966,15.8954],[0.7033,15.8972],[0.7101,15.8991],[0.7169,15.9011],[0.7236,15.9031],[0.7303,15.9051],[0.7371,15.9071],[0.7438,15.9092],[0.7504,15.9114],[0.7571,15.9136],[0.7638,15.9158],[0.7704,15.9181],[0.777,15.9205],[0.7836,15.9229],[0.7902,15.9254],[0.7967,15.9279],[0.8033,15.9306],[0.8098,15.9332],[0.8162,15.936],[0.8226,15.9388],[0.829,15.9418],[0.8354,15.9448],[0.8417,15.9478],[0.8479,15.951],[0.8541,15.9543],[0.8603,15.9577],[0.8664,15.9612],[0.8724,15.9648],[0.8784,15.9685],[0.8842,15.9724],[0.89,15.9763],[0.8957,15.9805],[0.9012,15.9847],[0.9067,15.9891],[0.912,15.9937],[0.9173,15.9984],[0.9224,16.0032],[0.9273,16.0081],[0.9322,16.0132],[0.9369,16.0183],[0.9415,16.0236],[0.946,16.029],[0.9504,16.0345],[0.9546,16.0401],[0.9588,16.0457],[0.9628,16.0515],[0.9666,16.0573],[0.9704,16.0632],[0.9741,16.0692],[0.9776,16.0752],[0.981,16.0813],[0.9844,16.0875],[0.9876,16.0937],[0.9908,16.0999],[0.9938,16.1062],[0.9968,16.1126],[0.9997,16.1189],[1.0025,16.1253],[1.0053,16.1318],[1.008,16.1382],[1.0106,16.1447],[1.0131,16.1512],[1.0157,16.1577],[1.0181,16.1643],[1.0205,16.1708],[1.0229,16.1774],[1.0252,16.184],[1.0276,16.1906],[1.0298,16.1972],[1.0321,16.2038],[1.0343,16.2104],[1.0365,16.2171],[1.0388,16.2237],[1.041,16.2303],[1.0432,16.237],[1.0454,16.2436],[1.0476,16.2502],[1.0498,16.2569],[1.052,16.2635],[1.0543,16.2701],[1.0566,16.2767],[1.0588,16.2834],[1.0612,16.29],[1.0635,16.2965],[1.0659,16.3031],[1.0684,16.3097],[1.0709,16.3162],[1.0734,16.3227],[1.076,16.3292],[1.0787,16.3357],[1.0814,16.3421],[1.0842,16.3486],[1.0869,16.355],[1.0896,16.3615],[1.0924,16.3679],[1.095,16.3744],[1.0977,16.3808],[1.1003,16.3873],[1.1029,16.3938],[1.1054,16.4003],[1.108,16.4069],[1.1105,16.4134],[1.113,16.4199],[1.1154,16.4265],[1.1179,16.433],[1.1203,16.4396],[1.1227,16.4462],[1.1251,16.4527],[1.1275,16.4593],[1.1299,16.4659],[1.1323,16.4725],[1.1346,16.4791],[1.1369,16.4857],[1.1393,16.4923],[1.1416,16.4989],[1.1439,16.5055],[1.1462,16.5121],[1.1485,16.5187],[1.1507,16.5253],[1.153,16.5319],[1.1553,16.5386],[1.1576,16.5452],[1.1599,16.5518],[1.1621,16.5584],[1.1644,16.565],[1.1667,16.5716],[1.1689,16.5783],[1.1712,16.5849],[1.1735,16.5915],[1.1758,16.5981],[1.1781,16.6047],[1.1804,16.6113],[1.1827,16.6179],[1.185,16.6245],[1.1874,16.6311],[1.1897,16.6377],[1.1921,16.6443],[1.1945,16.6509],[1.1969,16.6575],[1.1993,16.664],[1.2017,16.6706],[1.2042,16.6771],[1.2067,16.6837],[1.2092,16.6902],[1.2117,16.6967],[1.2143,16.7033],[1.2169,16.7097],[1.2195,16.7162],[1.2222,16.7227],[1.2249,16.7291],[1.2277,16.7356],[1.2306,16.742],[1.2335,16.7483],[1.2365,16.7546],[1.2395,16.761],[1.2426,16.7673],[1.2457,16.7735],[1.2489,16.7798],[1.2521,16.786],[1.2554,16.7922],[1.2587,16.7983],[1.2621,16.8045],[1.2655,16.8106],[1.2689,16.8167],[1.2724,16.8227],[1.276,16.8288],[1.2795,16.8348],[1.2831,16.8408],[1.2867,16.8468],[1.2904,16.8528],[1.294,16.8588],[1.2977,16.8647],[1.3014,16.8707],[1.305,16.8767],[1.3087,16.8826],[1.3124,16.8886],[1.316,16.8946],[1.3196,16.9006],[1.3232,16.9066],[1.3268,16.9126],[1.3304,16.9186],[1.3339,16.9247],[1.3373,16.9308],[1.3407,16.9369],[1.344,16.9431],[1.3473,16.9492],[1.3505,16.9555],[1.3537,16.9617],[1.3567,16.968],[1.3597,16.9743],[1.3626,16.9807],[1.3654,16.987],[1.3682,16.9934],[1.3709,16.9999],[1.3736,17.0063],[1.3762,17.0128],[1.3787,17.0193],[1.3811,17.0258],[1.3835,17.0323],[1.3859,17.0388],[1.3881,17.0454],[1.3904,17.0519],[1.3926,17.0585],[1.3947,17.0651],[1.3968,17.0717],[1.3989,17.0783],[1.401,17.0849],[1.4031,17.0915],[1.4051,17.0981],[1.4071,17.1047],[1.4091,17.1113],[1.4112,17.1179],[1.4132,17.1245],[1.4152,17.1311],[1.4173,17.1377],[1.4193,17.1443],[1.4214,17.1509],[1.4235,17.1575],[1.4257,17.1641],[1.4279,17.1707],[1.4301,17.1772],[1.4323,17.1838],[1.4347,17.1903],[1.437,17.1969],[1.4394,17.2034],[1.4419,17.2099],[1.4445,17.2163],[1.4471,17.2228],[1.4498,17.2292],[1.4526,17.2356],[1.4555,17.242],[1.4584,17.2483],[1.4615,17.2546],[1.4646,17.2608],[1.4677,17.267],[1.471,17.2732],[1.4743,17.2794],[1.4778,17.2855],[1.4813,17.2915],[1.4849,17.2975],[1.4886,17.3035],[1.4923,17.3094],[1.4961,17.3153],[1.5,17.3211],[1.5039,17.3269],[1.5079,17.3327],[1.5119,17.3384],[1.5159,17.3442],[1.52,17.3499],[1.5241,17.3555],[1.5282,17.3612],[1.5324,17.3668],[1.5366,17.3725],[1.5408,17.3781],[1.5449,17.3837],[1.5491,17.3893],[1.5533,17.3949],[1.5575,17.4005],[1.5617,17.4062],[1.5659,17.4118],[1.5701,17.4174],[1.5742,17.4231],[1.5784,17.4287],[1.5825,17.4344],[1.5865,17.4401],[1.5906,17.4458],[1.5946,17.4516],[1.5986,17.4573],[1.6025,17.4632],[1.6063,17.469],[1.6102,17.4749],[1.6139,17.4808],[1.6176,17.4867],[1.6212,17.4927],[1.6248,17.4988],[1.6283,17.5048],[1.6316,17.511],[1.635,17.5171],[1.6382,17.5234],[1.6414,17.5296],[1.6445,17.5359],[1.6475,17.5422],[1.6505,17.5485],[1.6534,17.5549],[1.6563,17.5613],[1.6591,17.5677],[1.6618,17.5741],[1.6646,17.5806],[1.6673,17.587],[1.6699,17.5935],[1.6726,17.6],[1.6752,17.6065],[1.6778,17.6129],[1.6804,17.6194],[1.683,17.6259],[1.6856,17.6324],[1.6882,17.6389],[1.6908,17.6454],[1.6935,17.6519],[1.6961,17.6584],[1.6988,17.6649],[1.7015,17.6713],[1.7043,17.6777],[1.707,17.6842],[1.7099,17.6906],[1.7127,17.697],[1.7156,17.7033],[1.7186,17.7097],[1.7216,17.716],[1.7247,17.7223],[1.7278,17.7285],[1.731,17.7348],[1.7343,17.741],[1.7376,17.7472],[1.7409,17.7533],[1.7444,17.7594],[1.7479,17.7654],[1.7515,17.7715],[1.7551,17.7774],[1.7588,17.7834],[1.7626,17.7893],[1.7664,17.7951],[1.7703,17.801],[1.7742,17.8068],[1.7781,17.8126],[1.7821,17.8184],[1.7861,17.8241],[1.7901,17.8298],[1.7942,17.8355],[1.7983,17.8412],[1.8024,17.8469],[1.8065,17.8525],[1.8107,17.8581],[1.8148,17.8638],[1.819,17.8694],[1.8232,17.875],[1.8274,17.8805],[1.8316,17.8861],[1.8359,17.8917],[1.8401,17.8972],[1.8443,17.9028],[1.8486,17.9084],[1.8528,17.9139],[1.8571,17.9195],[1.8613,17.925],[1.8656,17.9305],[1.8699,17.9361],[1.8741,17.9416],[1.8784,17.9472],[1.8826,17.9527],[1.8868,17.9583],[1.8911,17.9639],[1.8953,17.9694],[1.8995,17.975],[1.9037,17.9806],[1.9079,17.9862],[1.912,17.9918],[1.9162,17.9974],[1.9203,18.003],[1.9245,18.0087],[1.9286,18.0143],[1.9327,18.02],[1.9367,18.0256],[1.9408,18.0313],[1.9448,18.0371],[1.9488,18.0428],[1.9528,18.0485],[1.9567,18.0543],[1.9606,18.0601],[1.9645,18.0659],[1.9683,18.0717],[1.9721,18.0776],[1.9759,18.0835],[1.9796,18.0894],[1.9834,18.0952],[1.9872,18.1011],[1.991,18.107],[1.9948,18.1128],[1.9986,18.1187],[2.0023,18.1246],[2.0061,18.1305],[2.0098,18.1363],[2.0135,18.1422],[2.0173,18.1481],[2.021,18.1541],[2.0247,18.16],[2.0284,18.1659],[2.0321,18.1718],[2.0357,18.1778],[2.0394,18.1837],[2.043,18.1896],[2.0467,18.1956],[2.0503,18.2016],[2.0539,18.2075],[2.0575,18.2135],[2.0611,18.2195],[2.0647,18.2255],[2.0683,18.2315],[2.0718,18.2375],[2.0754,18.2435],[2.0789,18.2495],[2.0824,18.2555],[2.0859,18.2616],[2.0894,18.2676],[2.0929,18.2737],[2.0963,18.2797],[2.0997,18.2858],[2.1031,18.2919],[2.1065,18.298],[2.1099,18.3041],[2.1132,18.3102],[2.1166,18.3164],[2.1199,18.3225],[2.1231,18.3287],[2.1264,18.3349],[2.1296,18.3411],[2.1328,18.3473],[2.1359,18.3535],[2.139,18.3597],[2.1421,18.366],[2.1451,18.3723],[2.1481,18.3786],[2.1511,18.385],[2.1539,18.3913],[2.1567,18.3977],[2.1595,18.4041],[2.1621,18.4106],[2.1647,18.4171],[2.167,18.4237],[2.1691,18.4304],[2.171,18.4371],[2.1727,18.4439],[2.1742,18.4507],[2.1754,18.4576],[2.1764,18.4645],[2.177,18.4715],[2.1774,18.4785],[2.1773,18.4854],[2.177,18.4924],[2.1763,18.4993],[2.1754,18.5061],[2.1744,18.513],[2.1731,18.5198],[2.1718,18.5266],[2.1705,18.5334],[2.1692,18.5403],[2.168,18.5472],[2.1668,18.5541],[2.1656,18.5609],[2.1642,18.5678],[2.1626,18.5746],[2.161,18.5814],[2.1592,18.5881],[2.1574,18.5949],[2.1556,18.6016],[2.1539,18.6083],[2.152,18.615],[2.15,18.6217],[2.1479,18.6283],[2.1456,18.6349],[2.1433,18.6415],[2.1409,18.6481],[2.1385,18.6547],[2.1361,18.6612],[2.1337,18.6678],[2.1313,18.6744],[2.1291,18.681],[2.127,18.6877],[2.1249,18.6943],[2.1231,18.7011],[2.1214,18.7078],[2.12,18.7146],[2.1188,18.7215],[2.1177,18.7284],[2.1167,18.7353],[2.1159,18.7422],[2.1153,18.7492],[2.1147,18.7561],[2.1143,18.7631],[2.114,18.7701],[2.1137,18.7771],[2.1135,18.7841],[2.1133,18.791],[2.1132,18.798],[2.1131,18.805],[2.1131,18.812],[2.1131,18.819],[2.1131,18.826],[2.1131,18.833],[2.1131,18.84],[2.1132,18.847],[2.1132,18.854],[2.1132,18.861],[2.1132,18.868],[2.1133,18.875],[2.1133,18.882],[2.1132,18.889],[2.1132,18.896],[2.1131,18.903],[2.1131,18.91],[2.1129,18.9169],[2.1128,18.9239],[2.1126,18.9309],[2.1124,18.9379],[2.1121,18.9449],[2.1118,18.9519],[2.1114,18.9589],[2.1109,18.9658],[2.1104,18.9728],[2.1099,18.9798],[2.1092,18.9867],[2.1084,18.9937],[2.1075,19.0006],[2.1066,19.0075],[2.1055,19.0145],[2.1044,19.0213],[2.1031,19.0282],[2.1018,19.0351],[2.1003,19.0419],[2.0988,19.0487],[2.0972,19.0555],[2.0955,19.0623],[2.0937,19.0691],[2.0919,19.0758],[2.09,19.0826],[2.0881,19.0893],[2.0862,19.0961],[2.0843,19.1028],[2.0823,19.1095],[2.0804,19.1162],[2.0785,19.1229],[2.0765,19.1297],[2.0747,19.1364],[2.0728,19.1432],[2.071,19.1499],[2.0693,19.1567],[2.0676,19.1635],[2.066,19.1703],[2.0644,19.1771],[2.063,19.1839],[2.0616,19.1908],[2.0604,19.1977],[2.0592,19.2046],[2.0582,19.2115],[2.0573,19.2184],[2.0566,19.2253],[2.0559,19.2323],[2.0554,19.2393],[2.0551,19.2462],[2.0549,19.2532],[2.0549,19.2602],[2.0549,19.2672],[2.0552,19.2742],[2.0555,19.2812],[2.0561,19.2881],[2.0568,19.2951],[2.0576,19.302],[2.0586,19.309],[2.0596,19.3159],[2.0607,19.3228],[2.0619,19.3297],[2.0631,19.3366],[2.0644,19.3434],[2.0658,19.3503],[2.0672,19.3572],[2.0687,19.364],[2.0703,19.3708],[2.0719,19.3776],[2.0735,19.3844],[2.0751,19.3912],[2.0768,19.398],[2.0786,19.4048],[2.0803,19.4116],[2.0821,19.4183],[2.0838,19.4251],[2.0856,19.4319],[2.0874,19.4386],[2.0893,19.4454],[2.0911,19.4521],[2.0929,19.4589],[2.0947,19.4657],[2.0965,19.4724],[2.0983,19.4792],[2.1001,19.4859],[2.1019,19.4927],[2.1037,19.4995],[2.1054,19.5062],[2.1072,19.513],[2.1089,19.5198],[2.1105,19.5266],[2.1122,19.5334],[2.1138,19.5402],[2.1154,19.547],[2.1169,19.5538],[2.1184,19.5607],[2.1198,19.5675],[2.1212,19.5744],[2.1225,19.5812],[2.1238,19.5881],[2.125,19.595],[2.1262,19.6019],[2.1273,19.6088],[2.1284,19.6157],[2.1294,19.6226],[2.1302,19.6295],[2.131,19.6365],[2.1318,19.6434],[2.1324,19.6504],[2.1331,19.6574],[2.1336,19.6643],[2.1342,19.6713],[2.1347,19.6783],[2.1351,19.6853],[2.1356,19.6923],[2.136,19.6992],[2.1363,19.7062],[2.1367,19.7132],[2.137,19.7202],[2.1373,19.7272],[2.1376,19.7342],[2.1379,19.7412],[2.1382,19.7481],[2.1385,19.7551],[2.1387,19.7621],[2.139,19.7691],[2.1393,19.7761],[2.1395,19.7831],[2.1398,19.7901],[2.1401,19.7971],[2.1404,19.8041],[2.1407,19.811],[2.141,19.818],[2.1414,19.825],[2.1418,19.832],[2.1422,19.839],[2.1426,19.846],[2.1431,19.8529],[2.1437,19.8599],[2.1442,19.8669],[2.1449,19.8739],[2.1455,19.8808],[2.1463,19.8878],[2.1471,19.8947],[2.148,19.9017],[2.149,19.9086],[2.15,19.9155],[2.1512,19.9224],[2.1525,19.9293],[2.1539,19.9361],[2.1555,19.9429],[2.1572,19.9497],[2.159,19.9565],[2.161,19.9632],[2.1631,19.9699],[2.1654,19.9765],[2.1679,19.983],[2.1706,19.9895],[2.1735,19.9959],[2.1765,20.0022],[2.1798,20.0084],[2.1832,20.0145],[2.1867,20.0205],[2.1904,20.0265],[2.1943,20.0323],[2.1983,20.0381],[2.2023,20.0438],[2.2065,20.0494],[2.2107,20.055],[2.215,20.0606],[2.2193,20.0661],[2.2236,20.0716],[2.2279,20.0772],[2.2321,20.0827],[2.2363,20.0883],[2.2405,20.094],[2.2445,20.0997],[2.2484,20.1055],[2.2522,20.1114],[2.2559,20.1174],[2.2593,20.1235],[2.2626,20.1297],[2.2658,20.1359],[2.2689,20.1422],[2.2717,20.1486],[2.2745,20.155],[2.2771,20.1615],[2.2798,20.168],[2.2823,20.1745],[2.2849,20.181],[2.2873,20.1876],[2.2898,20.1941],[2.2922,20.2007],[2.2946,20.2073],[2.2969,20.2139],[2.2993,20.2205],[2.3016,20.2271],[2.3039,20.2337],[2.3061,20.2403],[2.3084,20.2469],[2.3106,20.2535],[2.3128,20.2602],[2.315,20.2668],[2.3172,20.2735],[2.3194,20.2801],[2.3216,20.2868],[2.3237,20.2935],[2.3258,20.3001],[2.3279,20.3068],[2.33,20.3135],[2.3321,20.3202],[2.3342,20.3268],[2.3362,20.3335]]},\"properties\":{\"i\":4,\"source\":3541,\"mouth\":2562,\"discharge\":83,\"length\":410.15,\"width\":1.92,\"widthFactor\":3,\"sourceWidth\":0.8,\"parent\":1,\"cells\":[3541,3459,3378,3299,3300,3301,3302,3304,3221,3140,3059,2975,2894,2808,2725,2643,2562,2472],\"basin\":1,\"name\":\"Waldbron\",\"type\":\"River\",\"points\":[[791.02,870.46],[806.59,856.34],[814.86,833.34],[842.67,816.43],[856.23,824.55],[880.43,822.06],[900.51,810.33],[926.71,811.44],[953.66,796.84],[991.83,786.98],[1003.76,759.78],[1012.07,741.22],[1022.29,722.95],[1036.96,699.81],[1035.26,688.75],[1033.06,669.51],[1036.71,644.92],[1043.1,631.3]],\"id\":\"river4\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[-0.3163,12.7654],[-0.316,12.7657],[-0.3152,12.7667],[-0.3139,12.7687],[-0.3136,12.7728],[-0.3166,12.779],[-0.3196,12.7853],[-0.3226,12.7916],[-0.3254,12.798],[-0.3283,12.8044],[-0.3311,12.8107],[-0.3339,12.8172],[-0.3366,12.8236],[-0.3393,12.83],[-0.342,12.8365],[-0.3447,12.8429],[-0.3474,12.8494],[-0.35,12.8559],[-0.3526,12.8624],[-0.3553,12.8688],[-0.3579,12.8753],[-0.3605,12.8818],[-0.3631,12.8883],[-0.3657,12.8948],[-0.3683,12.9013],[-0.3709,12.9078],[-0.3734,12.9143],[-0.376,12.9208],[-0.3786,12.9273],[-0.3812,12.9338],[-0.3838,12.9403],[-0.3864,12.9468],[-0.389,12.9534],[-0.3916,12.9599],[-0.3942,12.9663],[-0.3968,12.9728],[-0.3994,12.9793],[-0.402,12.9858],[-0.4047,12.9923],[-0.4073,12.9988],[-0.41,13.0053],[-0.4127,13.0117],[-0.4154,13.0182],[-0.4181,13.0246],[-0.4208,13.0311],[-0.4236,13.0375],[-0.4264,13.0439],[-0.4292,13.0503],[-0.4321,13.0567],[-0.435,13.0631],[-0.4378,13.0695],[-0.4407,13.0758],[-0.4437,13.0822],[-0.4467,13.0885],[-0.4498,13.0948],[-0.4529,13.1011],[-0.456,13.1073],[-0.4592,13.1136],[-0.4624,13.1198],[-0.4656,13.126],[-0.4689,13.1322],[-0.4723,13.1383],[-0.4757,13.1445],[-0.4791,13.1506],[-0.4826,13.1567],[-0.4861,13.1627],[-0.4896,13.1688],[-0.4932,13.1748],[-0.4967,13.1808],[-0.5003,13.1868],[-0.504,13.1928],[-0.5076,13.1988],[-0.5113,13.2048],[-0.515,13.2107],[-0.5187,13.2167],[-0.5224,13.2226],[-0.5261,13.2286],[-0.5298,13.2345],[-0.5335,13.2405],[-0.5372,13.2464],[-0.5409,13.2523],[-0.5446,13.2583],[-0.5483,13.2642],[-0.552,13.2702],[-0.5557,13.2761],[-0.5594,13.2821],[-0.563,13.2881],[-0.5667,13.2941],[-0.5703,13.3001],[-0.5739,13.3061],[-0.5774,13.3121],[-0.581,13.3181],[-0.5845,13.3242],[-0.588,13.3303],[-0.5914,13.3364],[-0.5948,13.3425],[-0.5982,13.3486],[-0.6015,13.3548],[-0.6048,13.361],[-0.608,13.3672],[-0.6112,13.3734],[-0.6143,13.3797],[-0.6173,13.386],[-0.6203,13.3923],[-0.6232,13.3987],[-0.626,13.4051],[-0.6288,13.4115],[-0.6315,13.4179],[-0.6342,13.4244],[-0.6368,13.4309],[-0.6393,13.4374],[-0.6418,13.444],[-0.6443,13.4505],[-0.6467,13.4571],[-0.6491,13.4637],[-0.6514,13.4703],[-0.6537,13.4769],[-0.656,13.4835],[-0.6582,13.4901],[-0.6604,13.4968],[-0.6626,13.5034],[-0.6647,13.5101],[-0.6669,13.5167],[-0.669,13.5234],[-0.6711,13.5301],[-0.6731,13.5368],[-0.6752,13.5435],[-0.6773,13.5501],[-0.6793,13.5568],[-0.6814,13.5635],[-0.6834,13.5702],[-0.6855,13.5769],[-0.6876,13.5836],[-0.6896,13.5903],[-0.6917,13.597],[-0.6938,13.6036],[-0.6959,13.6103],[-0.698,13.617],[-0.7001,13.6236],[-0.7023,13.6303],[-0.7045,13.637],[-0.7067,13.6436],[-0.7089,13.6502],[-0.7112,13.6568],[-0.7135,13.6635],[-0.7158,13.67],[-0.7182,13.6766],[-0.7206,13.6832],[-0.723,13.6897],[-0.7255,13.6963],[-0.7281,13.7028],[-0.7307,13.7093],[-0.7333,13.7158],[-0.736,13.7222],[-0.7388,13.7287],[-0.7416,13.735],[-0.7446,13.7414],[-0.7476,13.7477],[-0.7507,13.754],[-0.7538,13.7602],[-0.7571,13.7664],[-0.7605,13.7725],[-0.7639,13.7786],[-0.7674,13.7847],[-0.771,13.7907],[-0.7746,13.7967],[-0.7783,13.8026],[-0.782,13.8086],[-0.7858,13.8145],[-0.7896,13.8203],[-0.7935,13.8262],[-0.7974,13.832],[-0.8013,13.8378],[-0.8052,13.8436],[-0.8091,13.8494],[-0.8131,13.8552],[-0.817,13.861],[-0.821,13.8668],[-0.8249,13.8726],[-0.8289,13.8784],[-0.8328,13.8842],[-0.8367,13.89],[-0.8406,13.8958],[-0.8445,13.9016],[-0.8484,13.9075],[-0.8522,13.9134],[-0.856,13.9193],[-0.8597,13.9252],[-0.8634,13.9311],[-0.867,13.9371],[-0.8705,13.9432],[-0.874,13.9492],[-0.8774,13.9554],[-0.8808,13.9615],[-0.884,13.9677],[-0.8871,13.974],[-0.8901,13.9803],[-0.893,13.9867],[-0.8957,13.9931],[-0.8983,13.9996],[-0.9007,14.0061],[-0.903,14.0128],[-0.905,14.0194],[-0.9069,14.0262],[-0.9085,14.0329],[-0.9099,14.0398],[-0.9111,14.0467],[-0.912,14.0536],[-0.9126,14.0605],[-0.913,14.0675],[-0.913,14.0744],[-0.9127,14.0814],[-0.9122,14.0884],[-0.9114,14.0953],[-0.9105,14.1022],[-0.9093,14.1091],[-0.9079,14.116],[-0.9064,14.1228],[-0.9046,14.1296],[-0.9027,14.1363],[-0.9007,14.143],[-0.8985,14.1496],[-0.8962,14.1562],[-0.8938,14.1628],[-0.8913,14.1694],[-0.8887,14.1759],[-0.8861,14.1823],[-0.8833,14.1888],[-0.8805,14.1952],[-0.8777,14.2016],[-0.8748,14.208],[-0.8718,14.2143],[-0.8689,14.2206],[-0.8659,14.227],[-0.8629,14.2333],[-0.8598,14.2396],[-0.8568,14.2459],[-0.8538,14.2522],[-0.8508,14.2586],[-0.8478,14.2649],[-0.8448,14.2712],[-0.8419,14.2776],[-0.839,14.2839],[-0.8361,14.2903],[-0.8333,14.2967],[-0.8306,14.3032],[-0.8279,14.3097],[-0.8253,14.3161],[-0.8227,14.3227],[-0.8203,14.3292],[-0.818,14.3358],[-0.8158,14.3425],[-0.8137,14.3492],[-0.8118,14.3559],[-0.81,14.3626],[-0.8083,14.3694],[-0.8068,14.3762],[-0.8054,14.3831],[-0.8042,14.39],[-0.8031,14.3969],[-0.8022,14.4038],[-0.8014,14.4108],[-0.8007,14.4177],[-0.8001,14.4247],[-0.7997,14.4317],[-0.7993,14.4386],[-0.7991,14.4456],[-0.7989,14.4526],[-0.7987,14.4596],[-0.7987,14.4666],[-0.7986,14.4736],[-0.7986,14.4806],[-0.7986,14.4876],[-0.7986,14.4946],[-0.7987,14.5016],[-0.7987,14.5086],[-0.7987,14.5156],[-0.7987,14.5226],[-0.7986,14.5296],[-0.7985,14.5366],[-0.7983,14.5436],[-0.7981,14.5505],[-0.7978,14.5575],[-0.7974,14.5645],[-0.7969,14.5715],[-0.7963,14.5785],[-0.7956,14.5854],[-0.7947,14.5924],[-0.7937,14.5993],[-0.7925,14.6062],[-0.7912,14.6131],[-0.7897,14.6199],[-0.788,14.6267],[-0.7862,14.6334],[-0.7841,14.6401],[-0.7818,14.6467],[-0.7793,14.6533],[-0.7766,14.6597],[-0.7737,14.6661],[-0.7706,14.6723],[-0.7672,14.6785],[-0.7637,14.6845],[-0.7599,14.6904],[-0.7559,14.6962],[-0.7516,14.7017],[-0.7472,14.7072],[-0.7426,14.7125],[-0.7379,14.7177],[-0.7331,14.7228],[-0.7281,14.7277],[-0.7231,14.7326],[-0.7179,14.7374],[-0.7127,14.742],[-0.7074,14.7466],[-0.702,14.7511],[-0.6966,14.7555],[-0.691,14.7599],[-0.6855,14.7641],[-0.6799,14.7683],[-0.6742,14.7725],[-0.6685,14.7766],[-0.6628,14.7806],[-0.657,14.7846],[-0.6512,14.7885],[-0.6453,14.7924],[-0.6394,14.7963],[-0.6336,14.8001],[-0.6276,14.8039],[-0.6217,14.8076],[-0.6157,14.8113],[-0.6098,14.815],[-0.6038,14.8187],[-0.5978,14.8223],[-0.5918,14.8259],[-0.5857,14.8295],[-0.5797,14.8331],[-0.5737,14.8367],[-0.5676,14.8403],[-0.5616,14.8438],[-0.5555,14.8474],[-0.5495,14.8509],[-0.5434,14.8545],[-0.5373,14.858],[-0.5313,14.8616],[-0.5252,14.8651],[-0.5192,14.8687],[-0.5131,14.8722],[-0.5071,14.8758],[-0.501,14.8794],[-0.495,14.883],[-0.489,14.8866],[-0.483,14.8902],[-0.477,14.8939],[-0.471,14.8976],[-0.465,14.9013],[-0.4591,14.905],[-0.4531,14.9087],[-0.4472,14.9125],[-0.4413,14.9163],[-0.4354,14.9202],[-0.4296,14.924],[-0.4238,14.928],[-0.418,14.9319],[-0.4122,14.9359],[-0.4065,14.94],[-0.4008,14.9441],[-0.3951,14.9483],[-0.3895,14.9525],[-0.384,14.9568],[-0.3785,14.9612],[-0.3731,14.9656],[-0.3677,14.9701],[-0.3623,14.9746],[-0.357,14.9792],[-0.3517,14.9838],[-0.3464,14.9884],[-0.3411,14.993],[-0.3359,14.9977],[-0.3307,15.0024],[-0.3255,15.0071],[-0.3203,15.0118],[-0.3152,15.0166],[-0.31,15.0214],[-0.3049,15.0262],[-0.2998,15.031],[-0.2947,15.0358],[-0.2897,15.0407],[-0.2846,15.0455],[-0.2796,15.0504],[-0.2745,15.0553],[-0.2695,15.0602],[-0.2645,15.0651],[-0.2595,15.07],[-0.2545,15.0749],[-0.2495,15.0798],[-0.2445,15.0847],[-0.2395,15.0897],[-0.2345,15.0946],[-0.2295,15.0995],[-0.2245,15.1045],[-0.2195,15.1094],[-0.2146,15.1143],[-0.2096,15.1192],[-0.2046,15.1242],[-0.1996,15.1291],[-0.1946,15.134],[-0.1895,15.1389],[-0.1845,15.1438],[-0.1795,15.1487],[-0.1745,15.1535],[-0.1694,15.1584],[-0.1643,15.1632],[-0.1592,15.1681],[-0.1541,15.1729],[-0.149,15.1777],[-0.1439,15.1825],[-0.1387,15.1872],[-0.1336,15.1919],[-0.1284,15.1966],[-0.1231,15.2013],[-0.1179,15.206],[-0.1126,15.2106],[-0.1073,15.2151],[-0.1019,15.2197],[-0.0965,15.2242],[-0.0911,15.2286],[-0.0857,15.233],[-0.0802,15.2374],[-0.0746,15.2417],[-0.069,15.2459],[-0.0634,15.2501],[-0.0577,15.2542],[-0.0519,15.2582],[-0.0461,15.2622],[-0.0403,15.266],[-0.0344,15.2698],[-0.0284,15.2735],[-0.0224,15.2771],[-0.0163,15.2806],[-0.0102,15.284],[-0.004,15.2874],[0.0022,15.2906],[0.0085,15.2937],[0.0149,15.2967],[0.0212,15.2997],[0.0277,15.3025],[0.0341,15.3053],[0.0406,15.3079],[0.0472,15.3105],[0.0537,15.3129],[0.0603,15.3153],[0.067,15.3177],[0.0736,15.3199],[0.0803,15.3221],[0.087,15.3242],[0.0937,15.3263],[0.1004,15.3283],[0.1072,15.3303],[0.1139,15.3323],[0.1207,15.3342],[0.1274,15.3361],[0.1342,15.3381],[0.141,15.34],[0.1477,15.3419],[0.1545,15.3439],[0.1612,15.3459],[0.1679,15.3479],[0.1746,15.35],[0.1813,15.3521],[0.188,15.3543],[0.1946,15.3566],[0.2013,15.3589],[0.2079,15.3614],[0.2144,15.3639],[0.2209,15.3665],[0.2274,15.3693],[0.2338,15.372],[0.2402,15.3749],[0.2466,15.3778],[0.253,15.3808],[0.2593,15.3839],[0.2656,15.387],[0.2718,15.3902],[0.2781,15.3934],[0.2843,15.3967],[0.2905,15.3999],[0.2967,15.4032],[0.3029,15.4065],[0.3091,15.4098],[0.3153,15.4132],[0.3214,15.4166],[0.3276,15.42],[0.3337,15.4234],[0.3398,15.4268],[0.3459,15.4303],[0.352,15.4338],[0.3581,15.4373],[0.3642,15.4409],[0.3702,15.4444],[0.3762,15.448],[0.3823,15.4517],[0.3883,15.4553],[0.3942,15.459],[0.4002,15.4627],[0.4062,15.4664],[0.4121,15.4702],[0.418,15.4739],[0.4239,15.4777],[0.4298,15.4815],[0.4357,15.4854],[0.4415,15.4893],[0.4474,15.4932],[0.4532,15.4971],[0.459,15.501],[0.4648,15.505],[0.4705,15.509],[0.4763,15.5131],[0.482,15.5171],[0.4877,15.5212],[0.4934,15.5253],[0.4991,15.5294],[0.5047,15.5337],[0.5103,15.5379],[0.5159,15.5422],[0.5214,15.5465],[0.5269,15.5508],[0.5324,15.5552],[0.5379,15.5596],[0.5433,15.564],[0.5487,15.5685],[0.5541,15.573],[0.5595,15.5775],[0.5648,15.582],[0.5701,15.5866],[0.5754,15.5912],[0.5807,15.5959],[0.5859,15.6005],[0.5911,15.6052],[0.5963,15.6099],[0.6015,15.6147],[0.6067,15.6194],[0.6118,15.6242],[0.6169,15.629],[0.622,15.6339],[0.627,15.6387],[0.6321,15.6436],[0.6371,15.6485],[0.6421,15.6534],[0.647,15.6584],[0.652,15.6634],[0.6569,15.6683],[0.6618,15.6734],[0.6667,15.6784],[0.6716,15.6834],[0.6764,15.6885],[0.6812,15.6936],[0.6861,15.6987],[0.6908,15.7038],[0.6956,15.709],[0.7003,15.7141],[0.7051,15.7193],[0.7098,15.7245],[0.7145,15.7297],[0.7191,15.735],[0.7238,15.7402],[0.7284,15.7454],[0.7331,15.7506],[0.7378,15.7559],[0.7423,15.7612],[0.7469,15.7666],[0.7514,15.7719],[0.7559,15.7773],[0.7603,15.7827],[0.7647,15.7882],[0.7691,15.7936],[0.7735,15.7991],[0.7779,15.8046],[0.7822,15.8101],[0.7866,15.8156],[0.7909,15.8211],[0.7952,15.8267],[0.7995,15.8322],[0.8037,15.8378],[0.808,15.8433],[0.8122,15.8489],[0.8164,15.8545],[0.8207,15.8601],[0.8249,15.8657],[0.8291,15.8713],[0.8333,15.8769],[0.8374,15.8825],[0.8416,15.8882],[0.8458,15.8938],[0.8499,15.8995],[0.8541,15.9051],[0.8582,15.9108],[0.8624,15.9164],[0.8665,15.9221],[0.8706,15.9278],[0.8747,15.9334],[0.8788,15.9391],[0.8829,15.9448],[0.887,15.9505],[0.891,15.9562],[0.8951,15.9619],[0.8992,15.9676],[0.9032,15.9733],[0.9073,15.979],[0.9113,15.9848]]},\"properties\":{\"i\":5,\"source\":3632,\"mouth\":3222,\"discharge\":221,\"length\":152.07,\"width\":1.8,\"widthFactor\":3,\"sourceWidth\":0.6,\"parent\":5,\"cells\":[3632,3548,3466,3384,3305,3222,3140],\"basin\":5,\"name\":\"Orzartallen\",\"type\":\"River\",\"points\":[[948.73,902.49],[937.92,879.45],[927.58,855.84],[933.06,833.01],[958.62,812.48],[977.9,803],[992.5,786.7]],\"id\":\"river5\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[-13.1794,34.1031],[-13.1794,34.1031],[-13.1793,34.1031],[-13.1793,34.1031],[-13.1793,34.1031],[-13.1793,34.1031],[-13.1793,34.1031],[-13.1793,34.1031],[-13.1793,34.1031],[-13.1793,34.1031],[-13.1793,34.103],[-13.1793,34.103],[-13.1792,34.103],[-13.1792,34.103],[-13.1792,34.103],[-13.1792,34.103],[-13.1791,34.103],[-13.1791,34.103],[-13.1791,34.1029],[-13.1791,34.1029],[-13.179,34.1029],[-13.179,34.1029],[-13.179,34.1029],[-13.1789,34.1028],[-13.1789,34.1028],[-13.1788,34.1028],[-13.1788,34.1028],[-13.1787,34.1028],[-13.1787,34.1027],[-13.1787,34.1027],[-13.1786,34.1027],[-13.1785,34.1026],[-13.1785,34.1026],[-13.1784,34.1026],[-13.1775,34.0976],[-13.1775,34.0916],[-13.1782,34.0851],[-13.1796,34.0786],[-13.1812,34.072],[-13.1832,34.0655],[-13.1853,34.0589],[-13.1876,34.0524],[-13.19,34.0459],[-13.1925,34.0394],[-13.195,34.033],[-13.1976,34.0265],[-13.2003,34.0201],[-13.203,34.0137],[-13.2058,34.0073],[-13.2086,34.0009],[-13.2114,33.9945],[-13.2143,33.9882],[-13.2172,33.9818],[-13.2201,33.9754],[-13.223,33.9691],[-13.2259,33.9628],[-13.2289,33.9564],[-13.2319,33.9501],[-13.2349,33.9438],[-13.2379,33.9375],[-13.2409,33.9312],[-13.2439,33.9249],[-13.247,33.9186],[-13.25,33.9123],[-13.2531,33.906],[-13.2561,33.8997],[-13.2592,33.8934],[-13.2623,33.8871],[-13.2654,33.8808],[-13.2685,33.8745],[-13.2715,33.8682],[-13.2746,33.862],[-13.2777,33.8557],[-13.2808,33.8494],[-13.2839,33.8431],[-13.287,33.8369],[-13.2901,33.8306],[-13.2932,33.8243],[-13.2964,33.818],[-13.2995,33.8118],[-13.3026,33.8055],[-13.3058,33.7993],[-13.3089,33.793],[-13.312,33.7867],[-13.3152,33.7805],[-13.3183,33.7742],[-13.3214,33.7679],[-13.3246,33.7617],[-13.3277,33.7554],[-13.3308,33.7492],[-13.334,33.7429],[-13.3371,33.7366],[-13.3402,33.7304],[-13.3434,33.7241],[-13.3465,33.7178],[-13.3496,33.7116],[-13.3527,33.7053],[-13.3559,33.699],[-13.359,33.6928],[-13.3621,33.6865],[-13.3652,33.6803],[-13.3684,33.674],[-13.3715,33.6677],[-13.3746,33.6615],[-13.3777,33.6552],[-13.3808,33.6489],[-13.384,33.6427],[-13.3871,33.6364],[-13.3902,33.6301],[-13.3933,33.6239],[-13.3964,33.6176],[-13.3995,33.6113],[-13.4027,33.605],[-13.4058,33.5988],[-13.4089,33.5925],[-13.412,33.5862],[-13.4151,33.58],[-13.4182,33.5737],[-13.4213,33.5674],[-13.4244,33.5611],[-13.4275,33.5549],[-13.4306,33.5486],[-13.4337,33.5423],[-13.4368,33.536],[-13.4399,33.5298],[-13.443,33.5235],[-13.4461,33.5172],[-13.4492,33.5109],[-13.4523,33.5046],[-13.4554,33.4984],[-13.4584,33.4921],[-13.4615,33.4858],[-13.4646,33.4795],[-13.4677,33.4732],[-13.4708,33.4669],[-13.4738,33.4606],[-13.4769,33.4543],[-13.48,33.4481],[-13.483,33.4418],[-13.4861,33.4355],[-13.4891,33.4292],[-13.4922,33.4229],[-13.4952,33.4166],[-13.4983,33.4103],[-13.5013,33.4039],[-13.5043,33.3976],[-13.5074,33.3913],[-13.5104,33.385],[-13.5135,33.3787],[-13.5165,33.3724],[-13.5195,33.3661],[-13.5225,33.3598],[-13.5255,33.3535],[-13.5286,33.3471],[-13.5316,33.3408],[-13.5346,33.3345],[-13.5376,33.3282],[-13.5406,33.3218],[-13.5436,33.3155],[-13.5466,33.3092],[-13.5496,33.3029],[-13.5525,33.2965],[-13.5555,33.2902],[-13.5585,33.2839],[-13.5615,33.2775],[-13.5645,33.2712],[-13.5675,33.2649],[-13.5704,33.2585],[-13.5734,33.2522],[-13.5764,33.2458],[-13.5794,33.2395],[-13.5824,33.2332],[-13.5853,33.2268],[-13.5883,33.2205],[-13.5913,33.2142],[-13.5943,33.2078],[-13.5972,33.2015],[-13.6002,33.1952],[-13.6032,33.1888],[-13.6062,33.1825],[-13.6092,33.1762],[-13.6122,33.1698],[-13.6151,33.1635],[-13.6181,33.1572],[-13.6211,33.1508],[-13.6241,33.1445],[-13.6271,33.1382],[-13.6301,33.1318],[-13.6331,33.1255],[-13.636,33.1192],[-13.639,33.1128],[-13.6419,33.1065],[-13.6449,33.1001],[-13.6479,33.0938],[-13.6509,33.0874],[-13.6538,33.0811],[-13.6568,33.0748],[-13.6598,33.0685],[-13.6628,33.0621],[-13.6658,33.0558],[-13.6688,33.0495],[-13.6718,33.0432],[-13.6748,33.0368],[-13.6778,33.0305],[-13.6808,33.0242],[-13.6839,33.0179],[-13.6869,33.0116],[-13.6899,33.0053],[-13.6929,32.999],[-13.696,32.9927],[-13.699,32.9864],[-13.7021,32.98],[-13.7051,32.9737],[-13.7082,32.9674],[-13.7112,32.9612],[-13.7143,32.9549],[-13.7173,32.9486],[-13.7204,32.9423],[-13.7234,32.936],[-13.7265,32.9297],[-13.7296,32.9234],[-13.7326,32.9171],[-13.7357,32.9108],[-13.7388,32.9045],[-13.7418,32.8982],[-13.7449,32.8919],[-13.748,32.8857],[-13.751,32.8794],[-13.7541,32.8731],[-13.7572,32.8668],[-13.7602,32.8605],[-13.7633,32.8542],[-13.7664,32.8479],[-13.7694,32.8416],[-13.7725,32.8353],[-13.7756,32.829],[-13.7786,32.8228],[-13.7817,32.8165],[-13.7847,32.8102],[-13.7878,32.8039],[-13.7908,32.7976],[-13.7939,32.7913],[-13.7969,32.785],[-13.7999,32.7786],[-13.803,32.7723],[-13.806,32.766],[-13.809,32.7597],[-13.812,32.7534],[-13.815,32.7471],[-13.818,32.7408],[-13.821,32.7344],[-13.824,32.7281],[-13.827,32.7218],[-13.83,32.7154],[-13.833,32.7091],[-13.836,32.7028],[-13.8389,32.6964],[-13.8419,32.6901],[-13.8449,32.6837],[-13.8478,32.6774],[-13.8508,32.6711],[-13.8538,32.6647],[-13.8567,32.6584],[-13.8597,32.652],[-13.8626,32.6457],[-13.8655,32.6393],[-13.8685,32.633],[-13.8715,32.6266],[-13.8745,32.6203],[-13.8774,32.614],[-13.8804,32.6076],[-13.8834,32.6013],[-13.8864,32.595],[-13.8894,32.5886],[-13.8923,32.5823],[-13.8953,32.576],[-13.8983,32.5696],[-13.9013,32.5633],[-13.9042,32.557],[-13.9072,32.5506],[-13.9102,32.5443],[-13.9132,32.5379],[-13.9161,32.5316],[-13.9191,32.5253],[-13.9221,32.5189],[-13.925,32.5126],[-13.928,32.5063],[-13.9309,32.4999],[-13.9339,32.4936],[-13.9368,32.4872],[-13.9398,32.4809],[-13.9427,32.4745],[-13.9456,32.4682],[-13.9486,32.4618],[-13.9515,32.4555],[-13.9544,32.4491],[-13.9573,32.4427],[-13.9602,32.4364],[-13.9631,32.43],[-13.966,32.4236],[-13.9689,32.4173],[-13.9717,32.4109],[-13.9746,32.4045],[-13.9775,32.3981],[-13.9803,32.3917],[-13.9831,32.3853],[-13.986,32.3789],[-13.9888,32.3725],[-13.9916,32.3661],[-13.9944,32.3597],[-13.9972,32.3533],[-13.9999,32.3469],[-14.0027,32.3405],[-14.0054,32.334],[-14.0082,32.3276],[-14.0109,32.3211],[-14.0136,32.3147],[-14.0163,32.3082],[-14.019,32.3018],[-14.0217,32.2953],[-14.0244,32.2889],[-14.027,32.2824],[-14.0296,32.2759],[-14.0323,32.2694],[-14.0349,32.2629],[-14.0375,32.2564],[-14.04,32.2499],[-14.0426,32.2434],[-14.0452,32.2369],[-14.0477,32.2304],[-14.0502,32.2239],[-14.0527,32.2173],[-14.0552,32.2108],[-14.0577,32.2042],[-14.0603,32.1977],[-14.0628,32.1912],[-14.0653,32.1847],[-14.0678,32.1782],[-14.0704,32.1716],[-14.0729,32.1651],[-14.0754,32.1586],[-14.0779,32.152],[-14.0804,32.1455],[-14.0829,32.139],[-14.0854,32.1324],[-14.0879,32.1259],[-14.0904,32.1194],[-14.0929,32.1128],[-14.0955,32.1063],[-14.098,32.0998],[-14.1005,32.0932],[-14.103,32.0867],[-14.1055,32.0802],[-14.1079,32.0736],[-14.1104,32.0671],[-14.1129,32.0605],[-14.1154,32.054],[-14.1178,32.0474],[-14.1203,32.0409],[-14.1227,32.0343],[-14.1252,32.0278],[-14.1276,32.0212],[-14.13,32.0146],[-14.1324,32.0081],[-14.1348,32.0015],[-14.1372,31.9949],[-14.1396,31.9883],[-14.142,31.9818],[-14.1444,31.9752],[-14.1467,31.9686],[-14.1491,31.962],[-14.1515,31.9554],[-14.1538,31.9488],[-14.1561,31.9422],[-14.1584,31.9356],[-14.1608,31.929],[-14.1631,31.9224],[-14.1654,31.9158],[-14.1676,31.9092],[-14.1699,31.9026],[-14.1722,31.8959],[-14.1745,31.8893],[-14.1767,31.8827],[-14.179,31.8761],[-14.1812,31.8694],[-14.1834,31.8628],[-14.1856,31.8562],[-14.1878,31.8495],[-14.19,31.8429],[-14.1922,31.8362],[-14.1944,31.8296],[-14.1966,31.8229],[-14.1987,31.8163],[-14.2009,31.8096],[-14.203,31.803],[-14.2052,31.7963],[-14.2073,31.7896],[-14.2094,31.783],[-14.2115,31.7763],[-14.2137,31.7696],[-14.2157,31.7629],[-14.2178,31.7563],[-14.2199,31.7496],[-14.222,31.7429],[-14.2241,31.7362],[-14.2261,31.7295],[-14.2282,31.7228],[-14.2302,31.7161],[-14.2322,31.7094],[-14.2342,31.7027],[-14.2363,31.696],[-14.2383,31.6893],[-14.2403,31.6826],[-14.2423,31.6759],[-14.2443,31.6692],[-14.2463,31.6625],[-14.2483,31.6558],[-14.2503,31.6491],[-14.2523,31.6424],[-14.2542,31.6357],[-14.2562,31.629],[-14.2581,31.6223],[-14.2601,31.6155],[-14.262,31.6088],[-14.264,31.6021],[-14.2659,31.5954],[-14.2678,31.5887],[-14.2697,31.5819],[-14.2716,31.5752],[-14.2735,31.5685],[-14.2754,31.5617],[-14.2773,31.555],[-14.2792,31.5483],[-14.2811,31.5415],[-14.283,31.5348],[-14.2848,31.5281],[-14.2867,31.5213],[-14.2886,31.5146],[-14.2904,31.5078],[-14.2923,31.5011],[-14.2941,31.4943],[-14.2959,31.4876],[-14.2978,31.4808],[-14.2996,31.4741],[-14.3014,31.4673],[-14.3032,31.4606],[-14.305,31.4538],[-14.3068,31.4471],[-14.3086,31.4403],[-14.3104,31.4335],[-14.3122,31.4268],[-14.314,31.42],[-14.3158,31.4133],[-14.3175,31.4065],[-14.3193,31.3997],[-14.3211,31.393],[-14.3228,31.3862],[-14.3245,31.3794],[-14.3262,31.3726],[-14.3279,31.3658],[-14.3296,31.359],[-14.3312,31.3522],[-14.3329,31.3454],[-14.3346,31.3387],[-14.3362,31.3319],[-14.3379,31.3251],[-14.3395,31.3183],[-14.3411,31.3115],[-14.3427,31.3047],[-14.3444,31.2978],[-14.346,31.291],[-14.3476,31.2842],[-14.3492,31.2774],[-14.3507,31.2706],[-14.3523,31.2638],[-14.3539,31.257],[-14.3555,31.2502],[-14.357,31.2433],[-14.3586,31.2365],[-14.3601,31.2297],[-14.3617,31.2229],[-14.3632,31.216],[-14.3647,31.2092],[-14.3663,31.2024],[-14.3678,31.1956],[-14.3693,31.1887],[-14.3708,31.1819],[-14.3723,31.1751],[-14.3738,31.1682],[-14.3753,31.1614],[-14.3768,31.1546],[-14.3783,31.1477],[-14.3798,31.1409],[-14.3813,31.1341],[-14.3827,31.1272],[-14.3842,31.1204],[-14.3857,31.1136],[-14.3871,31.1067],[-14.3886,31.0999],[-14.3901,31.093],[-14.3915,31.0862],[-14.393,31.0793],[-14.3944,31.0725],[-14.3959,31.0657],[-14.3973,31.0588],[-14.3987,31.052],[-14.4002,31.0451],[-14.4016,31.0383],[-14.4031,31.0314],[-14.4045,31.0246],[-14.4059,31.0177],[-14.4074,31.0109],[-14.4088,31.004],[-14.4102,30.9972],[-14.4116,30.9904],[-14.4131,30.9835],[-14.4145,30.9767],[-14.4159,30.9698],[-14.4173,30.963],[-14.4188,30.9561],[-14.4202,30.9493],[-14.4216,30.9424],[-14.423,30.9356],[-14.4244,30.9287],[-14.4258,30.9219],[-14.4271,30.915],[-14.4285,30.9081],[-14.4299,30.9013],[-14.4312,30.8944],[-14.4326,30.8876],[-14.4339,30.8807],[-14.4353,30.8739],[-14.4366,30.867],[-14.438,30.8601],[-14.4393,30.8533],[-14.4406,30.8464],[-14.442,30.8396],[-14.4433,30.8327],[-14.4446,30.8258],[-14.4459,30.819],[-14.4473,30.8121],[-14.4486,30.8053],[-14.4499,30.7984],[-14.4512,30.7916],[-14.4525,30.7847],[-14.4539,30.7778],[-14.4552,30.771],[-14.4565,30.7641],[-14.4578,30.7573],[-14.4591,30.7504],[-14.4604,30.7436],[-14.4618,30.7367],[-14.4631,30.7299],[-14.4644,30.723],[-14.4657,30.7162],[-14.4671,30.7093],[-14.4684,30.7025],[-14.4697,30.6956],[-14.4711,30.6888],[-14.4724,30.6819],[-14.4737,30.6751],[-14.4751,30.6682],[-14.4764,30.6614],[-14.4778,30.6546],[-14.4792,30.6477],[-14.4806,30.6409],[-14.482,30.6341],[-14.4833,30.6272],[-14.4848,30.6204],[-14.4862,30.6136],[-14.4876,30.6068],[-14.489,30.6],[-14.4904,30.5931],[-14.4918,30.5863],[-14.4933,30.5795],[-14.4947,30.5727],[-14.4961,30.5659],[-14.4976,30.559],[-14.499,30.5522],[-14.5005,30.5454],[-14.5019,30.5386],[-14.5034,30.5318],[-14.5049,30.525],[-14.5063,30.5182],[-14.5078,30.5114],[-14.5093,30.5046],[-14.5108,30.4978],[-14.5123,30.491],[-14.5138,30.4842],[-14.5153,30.4774],[-14.5169,30.4706],[-14.5184,30.4638],[-14.5199,30.457],[-14.5215,30.4502],[-14.523,30.4434],[-14.5246,30.4366],[-14.5261,30.4298],[-14.5277,30.423],[-14.5293,30.4162],[-14.5309,30.4094],[-14.5325,30.4026],[-14.5341,30.3958],[-14.5357,30.3891],[-14.5373,30.3823],[-14.5389,30.3755],[-14.5406,30.3687],[-14.5422,30.3619],[-14.5439,30.3552],[-14.5455,30.3484],[-14.5472,30.3416],[-14.5489,30.3349],[-14.5505,30.3281],[-14.5522,30.3213],[-14.5539,30.3145],[-14.5557,30.3078],[-14.5574,30.301],[-14.5591,30.2943],[-14.5609,30.2875],[-14.5626,30.2807],[-14.5644,30.274],[-14.5661,30.2672],[-14.5679,30.2605],[-14.5697,30.2537],[-14.5715,30.247],[-14.5733,30.2402],[-14.5751,30.2335],[-14.5769,30.2267],[-14.5788,30.22],[-14.5806,30.2133],[-14.5825,30.2065],[-14.5843,30.1998],[-14.5862,30.1931],[-14.588,30.1863],[-14.5899,30.1796],[-14.5917,30.1728],[-14.5936,30.1661],[-14.5955,30.1594],[-14.5974,30.1527],[-14.5993,30.1459],[-14.6012,30.1392],[-14.6031,30.1325],[-14.605,30.1258],[-14.607,30.119],[-14.6089,30.1123],[-14.6109,30.1056],[-14.6128,30.0989],[-14.6148,30.0922],[-14.6167,30.0855],[-14.6187,30.0788],[-14.6207,30.0721],[-14.6227,30.0653],[-14.6247,30.0586],[-14.6267,30.0519],[-14.6287,30.0452],[-14.6307,30.0385],[-14.6327,30.0318],[-14.6347,30.0251],[-14.6367,30.0184],[-14.6387,30.0117],[-14.6408,30.005],[-14.6428,29.9984],[-14.6448,29.9917],[-14.6469,29.985],[-14.6489,29.9783],[-14.6509,29.9716],[-14.653,29.9649],[-14.655,29.9582],[-14.6571,29.9515],[-14.6591,29.9448],[-14.6612,29.9381],[-14.6632,29.9314],[-14.6653,29.9248],[-14.6674,29.9181],[-14.6694,29.9114],[-14.6715,29.9047],[-14.6735,29.898],[-14.6756,29.8913],[-14.6777,29.8846],[-14.6797,29.8779],[-14.6818,29.8713],[-14.6839,29.8646],[-14.6859,29.8579],[-14.688,29.8512],[-14.69,29.8445],[-14.6921,29.8378],[-14.6942,29.8311],[-14.6962,29.8245],[-14.6983,29.8178],[-14.7003,29.8111],[-14.7024,29.8044],[-14.7044,29.7977],[-14.7065,29.791],[-14.7085,29.7843],[-14.7105,29.7776],[-14.7126,29.7709],[-14.7146,29.7642],[-14.7166,29.7575],[-14.7186,29.7508],[-14.7206,29.7441],[-14.7226,29.7374],[-14.7246,29.7307],[-14.7266,29.724],[-14.7286,29.7173],[-14.7306,29.7106],[-14.7326,29.7039],[-14.7346,29.6972],[-14.7366,29.6904],[-14.7386,29.6837],[-14.7406,29.677],[-14.7425,29.6703],[-14.7445,29.6636],[-14.7465,29.6569],[-14.7485,29.6502],[-14.7504,29.6435],[-14.7524,29.6367],[-14.7544,29.63],[-14.7563,29.6233],[-14.7583,29.6166],[-14.7603,29.6099],[-14.7622,29.6032],[-14.7641,29.5964],[-14.7661,29.5897],[-14.768,29.583],[-14.77,29.5763],[-14.7719,29.5695],[-14.7738,29.5628],[-14.7757,29.5561],[-14.7777,29.5494],[-14.7796,29.5426],[-14.7815,29.5359],[-14.7834,29.5292],[-14.7853,29.5224],[-14.7872,29.5157],[-14.7891,29.509],[-14.791,29.5022],[-14.7929,29.4955],[-14.7947,29.4887],[-14.7966,29.482],[-14.7985,29.4753],[-14.8003,29.4685],[-14.8022,29.4618],[-14.804,29.455],[-14.8059,29.4483],[-14.8077,29.4415],[-14.8095,29.4348],[-14.8114,29.428],[-14.8132,29.4212],[-14.815,29.4145],[-14.8168,29.4077],[-14.8186,29.401],[-14.8204,29.3942],[-14.8222,29.3874],[-14.8239,29.3807],[-14.8257,29.3739],[-14.8275,29.3671],[-14.8292,29.3604],[-14.831,29.3536],[-14.8327,29.3468],[-14.8345,29.34],[-14.8362,29.3332],[-14.838,29.3265],[-14.8397,29.3197],[-14.8414,29.3129],[-14.8431,29.3061],[-14.8449,29.2994],[-14.8466,29.2926],[-14.8483,29.2858],[-14.85,29.279],[-14.8517,29.2722],[-14.8534,29.2654],[-14.855,29.2586],[-14.8567,29.2518],[-14.8584,29.245],[-14.8601,29.2383],[-14.8617,29.2315],[-14.8634,29.2247],[-14.865,29.2179],[-14.8667,29.2111],[-14.8683,29.2043],[-14.87,29.1975],[-14.8716,29.1907],[-14.8732,29.1839],[-14.8749,29.1771],[-14.8765,29.1703],[-14.8781,29.1635],[-14.8797,29.1566],[-14.8813,29.1498],[-14.883,29.143],[-14.8846,29.1362],[-14.8862,29.1294],[-14.8878,29.1226],[-14.8894,29.1158],[-14.891,29.109],[-14.8926,29.1022],[-14.8941,29.0954],[-14.8957,29.0886],[-14.8973,29.0818],[-14.8989,29.0749],[-14.9005,29.0681],[-14.902,29.0613],[-14.9036,29.0545],[-14.9052,29.0477],[-14.9068,29.0409],[-14.9083,29.0341],[-14.9099,29.0272],[-14.9115,29.0204],[-14.913,29.0136],[-14.9146,29.0068],[-14.9162,29],[-14.9177,28.9932],[-14.9193,28.9863],[-14.9208,28.9795],[-14.9224,28.9727],[-14.9239,28.9659],[-14.9255,28.9591],[-14.9271,28.9523],[-14.9286,28.9454],[-14.9302,28.9386],[-14.9317,28.9318],[-14.9333,28.925],[-14.9348,28.9182],[-14.9364,28.9114],[-14.9379,28.9045],[-14.9395,28.8977],[-14.9411,28.8909],[-14.9426,28.8841],[-14.9442,28.8773],[-14.9458,28.8705],[-14.9473,28.8637],[-14.9489,28.8569],[-14.9505,28.85],[-14.9521,28.8432],[-14.9536,28.8364],[-14.9552,28.8296],[-14.9568,28.8228],[-14.9584,28.816],[-14.96,28.8092],[-14.9615,28.8024],[-14.9631,28.7956],[-14.9647,28.7888],[-14.9663,28.782],[-14.9679,28.7751],[-14.9695,28.7683],[-14.9711,28.7615],[-14.9727,28.7547],[-14.9743,28.7479],[-14.9759,28.7411],[-14.9775,28.7343],[-14.9791,28.7275],[-14.9807,28.7207],[-14.9823,28.7139],[-14.984,28.7071],[-14.9856,28.7003],[-14.9872,28.6935],[-14.9888,28.6867],[-14.9904,28.6799],[-14.9921,28.6731],[-14.9937,28.6663],[-14.9953,28.6595],[-14.9969,28.6527],[-14.9986,28.6459],[-15.0002,28.6391],[-15.0019,28.6323],[-15.0035,28.6255],[-15.0051,28.6187],[-15.0068,28.6119],[-15.0084,28.6051],[-15.0101,28.5983],[-15.0117,28.5915],[-15.0134,28.5847],[-15.015,28.578],[-15.0167,28.5712],[-15.0183,28.5644],[-15.02,28.5576],[-15.0216,28.5508],[-15.0233,28.544],[-15.025,28.5372],[-15.0266,28.5304],[-15.0283,28.5236],[-15.03,28.5168],[-15.0317,28.51],[-15.0333,28.5032],[-15.035,28.4964],[-15.0367,28.4896],[-15.0384,28.4829],[-15.0401,28.4761],[-15.0418,28.4693],[-15.0435,28.4625],[-15.0452,28.4557],[-15.0469,28.4489],[-15.0486,28.4421],[-15.0504,28.4354],[-15.0521,28.4286],[-15.0538,28.4218],[-15.0555,28.415],[-15.0573,28.4082],[-15.059,28.4015],[-15.0607,28.3947],[-15.0625,28.3879],[-15.0642,28.3811],[-15.0659,28.3743],[-15.0677,28.3676],[-15.0694,28.3608],[-15.0711,28.354],[-15.0729,28.3472],[-15.0746,28.3405],[-15.0763,28.3337],[-15.0781,28.3269],[-15.0798,28.3201],[-15.0815,28.3134],[-15.0833,28.3066],[-15.085,28.2998],[-15.0868,28.2931],[-15.0886,28.2863],[-15.0904,28.2795],[-15.0921,28.2728],[-15.0939,28.266],[-15.0956,28.2592],[-15.0974,28.2525],[-15.0991,28.2457],[-15.1009,28.2389],[-15.1026,28.2322],[-15.1044,28.2254],[-15.1061,28.2186],[-15.1078,28.2119],[-15.1096,28.2051],[-15.1113,28.1983],[-15.113,28.1915],[-15.1147,28.1848],[-15.1164,28.178],[-15.1181,28.1712],[-15.1198,28.1645],[-15.1215,28.1577],[-15.1232,28.1509],[-15.1249,28.1441],[-15.1266,28.1374],[-15.1283,28.1306],[-15.1299,28.1238],[-15.1316,28.117],[-15.1333,28.1102],[-15.1349,28.1035],[-15.1366,28.0967],[-15.1382,28.0899],[-15.1399,28.0831],[-15.1415,28.0763],[-15.1432,28.0695],[-15.1448,28.0628],[-15.1464,28.056],[-15.148,28.0492],[-15.1496,28.0424],[-15.1512,28.0356],[-15.1528,28.0288],[-15.1544,28.022],[-15.156,28.0152],[-15.1576,28.0084],[-15.1592,28.0016],[-15.1607,27.9948],[-15.1623,27.988],[-15.1638,27.9812],[-15.1654,27.9744],[-15.1669,27.9676],[-15.1684,27.9608],[-15.17,27.9539],[-15.1715,27.9471],[-15.173,27.9403],[-15.1745,27.9335],[-15.176,27.9267],[-15.1775,27.9198],[-15.1789,27.913],[-15.1804,27.9062],[-15.1819,27.8993],[-15.1833,27.8925],[-15.1848,27.8857],[-15.1862,27.8788],[-15.1877,27.872],[-15.1891,27.8651],[-15.1905,27.8583],[-15.1919,27.8514],[-15.1933,27.8446],[-15.1947,27.8377],[-15.1961,27.8309],[-15.1975,27.824],[-15.1989,27.8172],[-15.2003,27.8103],[-15.2016,27.8035],[-15.203,27.7966],[-15.2044,27.7898],[-15.2058,27.7829],[-15.2071,27.776],[-15.2085,27.7692],[-15.2099,27.7623],[-15.2112,27.7555],[-15.2126,27.7486],[-15.214,27.7417],[-15.2154,27.7349],[-15.2167,27.728],[-15.2181,27.7212],[-15.2195,27.7143],[-15.2209,27.7074],[-15.2223,27.7006],[-15.2237,27.6937],[-15.2251,27.6869],[-15.2265,27.68],[-15.228,27.6732],[-15.2294,27.6664],[-15.2309,27.6595],[-15.2324,27.6527],[-15.2339,27.6458],[-15.2354,27.639],[-15.2369,27.6322],[-15.2384,27.6254],[-15.2399,27.6185],[-15.2414,27.6117],[-15.2429,27.6049],[-15.2444,27.598],[-15.246,27.5912],[-15.2475,27.5844],[-15.249,27.5776],[-15.2506,27.5708],[-15.2521,27.5639],[-15.2537,27.5571],[-15.2553,27.5503],[-15.2568,27.5435],[-15.2584,27.5367],[-15.26,27.5299],[-15.2615,27.5231],[-15.2631,27.5163],[-15.2647,27.5095],[-15.2663,27.5026],[-15.2679,27.4958],[-15.2695,27.489],[-15.2711,27.4822],[-15.2727,27.4754],[-15.2743,27.4686],[-15.2759,27.4618],[-15.2775,27.455],[-15.2792,27.4482],[-15.2808,27.4414],[-15.2824,27.4346],[-15.284,27.4278],[-15.2857,27.4211],[-15.2873,27.4143],[-15.289,27.4075],[-15.2906,27.4007],[-15.2923,27.3939],[-15.2939,27.3871],[-15.2956,27.3803],[-15.2972,27.3735],[-15.2989,27.3667],[-15.3006,27.3599],[-15.3022,27.3531],[-15.3039,27.3463],[-15.3056,27.3395],[-15.3073,27.3328],[-15.3089,27.326],[-15.3106,27.3192],[-15.3123,27.3124],[-15.314,27.3056],[-15.3157,27.2988],[-15.3174,27.292],[-15.3191,27.2852],[-15.3208,27.2785],[-15.3225,27.2717],[-15.3242,27.2649],[-15.3259,27.2581],[-15.3276,27.2513],[-15.3293,27.2445],[-15.331,27.2378],[-15.3327,27.231],[-15.3345,27.2242],[-15.3362,27.2174],[-15.3379,27.2106],[-15.3396,27.2038],[-15.3413,27.197],[-15.343,27.1903],[-15.3447,27.1835],[-15.3464,27.1767],[-15.3481,27.1699],[-15.3498,27.1631],[-15.3515,27.1563],[-15.3532,27.1495],[-15.3548,27.1427],[-15.3565,27.136],[-15.3582,27.1292],[-15.3598,27.1224],[-15.3615,27.1156],[-15.3632,27.1088],[-15.3649,27.102],[-15.3666,27.0952],[-15.3683,27.0884],[-15.37,27.0817],[-15.3717,27.0749],[-15.3734,27.0681],[-15.3751,27.0613],[-15.3768,27.0545],[-15.3785,27.0477],[-15.3802,27.041],[-15.3819,27.0342],[-15.3836,27.0274],[-15.3852,27.0206],[-15.3869,27.0138],[-15.3886,27.007],[-15.3902,27.0002],[-15.3919,26.9935],[-15.3936,26.9867],[-15.3952,26.9799],[-15.3968,26.9731],[-15.3985,26.9663],[-15.4001,26.9595],[-15.4017,26.9527],[-15.4033,26.9459],[-15.405,26.9391],[-15.4066,26.9323],[-15.4082,26.9255],[-15.4097,26.9187],[-15.4113,26.9119],[-15.4129,26.9051],[-15.4145,26.8983],[-15.416,26.8915],[-15.4176,26.8847],[-15.4191,26.8779],[-15.4207,26.871],[-15.4222,26.8642],[-15.4238,26.8574],[-15.4253,26.8506],[-15.4268,26.8438],[-15.4283,26.8369],[-15.4298,26.8301],[-15.4313,26.8233],[-15.4328,26.8165],[-15.4342,26.8096],[-15.4357,26.8028],[-15.4372,26.796],[-15.4386,26.7891],[-15.4401,26.7823],[-15.4415,26.7755],[-15.4429,26.7686],[-15.4443,26.7618],[-15.4457,26.7549],[-15.4471,26.7481],[-15.4485,26.7412],[-15.4499,26.7344],[-15.4513,26.7275],[-15.4527,26.7207],[-15.454,26.7138],[-15.4554,26.707],[-15.4567,26.7001],[-15.458,26.6932],[-15.4594,26.6864],[-15.4607,26.6795],[-15.462,26.6727],[-15.4634,26.6658],[-15.4647,26.6589],[-15.4661,26.6521],[-15.4674,26.6452],[-15.4688,26.6384],[-15.4701,26.6315],[-15.4714,26.6246],[-15.4727,26.6178],[-15.4741,26.6109],[-15.4754,26.604],[-15.4767,26.5972],[-15.478,26.5903],[-15.4793,26.5834],[-15.4806,26.5765],[-15.4819,26.5697],[-15.4832,26.5628],[-15.4845,26.5559],[-15.4858,26.5491],[-15.487,26.5422],[-15.4883,26.5353],[-15.4896,26.5284],[-15.4908,26.5215],[-15.4921,26.5147],[-15.4933,26.5078],[-15.4946,26.5009],[-15.4958,26.494],[-15.497,26.4871],[-15.4983,26.4802],[-15.4995,26.4733],[-15.5007,26.4665],[-15.5019,26.4596],[-15.5031,26.4527],[-15.5043,26.4458],[-15.5055,26.4389],[-15.5067,26.432],[-15.5079,26.4251],[-15.5091,26.4182],[-15.5103,26.4113],[-15.5114,26.4044],[-15.5126,26.3975],[-15.5138,26.3906],[-15.5149,26.3837],[-15.5161,26.3768],[-15.5173,26.3699],[-15.5184,26.363],[-15.5196,26.3561],[-15.5207,26.3492],[-15.5219,26.3423],[-15.523,26.3354],[-15.5242,26.3285],[-15.5253,26.3216],[-15.5264,26.3147],[-15.5276,26.3078],[-15.5287,26.3009],[-15.5298,26.294],[-15.531,26.2871],[-15.5321,26.2802],[-15.5332,26.2733],[-15.5344,26.2664],[-15.5355,26.2595],[-15.5366,26.2526],[-15.5377,26.2457],[-15.5388,26.2388],[-15.54,26.2319],[-15.5411,26.225],[-15.5422,26.2181],[-15.5433,26.2112],[-15.5444,26.2043],[-15.5456,26.1974],[-15.5467,26.1904],[-15.5478,26.1835],[-15.5489,26.1766],[-15.55,26.1697],[-15.5511,26.1628],[-15.5522,26.1559],[-15.5534,26.149],[-15.5545,26.1421],[-15.5556,26.1352],[-15.5567,26.1283],[-15.5578,26.1214],[-15.5589,26.1145],[-15.56,26.1076],[-15.5611,26.1007],[-15.5622,26.0937],[-15.5633,26.0868],[-15.5644,26.0799],[-15.5655,26.073],[-15.5666,26.0661],[-15.5677,26.0592],[-15.5688,26.0523],[-15.5698,26.0454],[-15.5709,26.0385],[-15.572,26.0316],[-15.5731,26.0246],[-15.5742,26.0177],[-15.5753,26.0108],[-15.5764,26.0039],[-15.5775,25.997],[-15.5785,25.9901],[-15.5796,25.9832],[-15.5807,25.9763],[-15.5818,25.9694],[-15.5829,25.9624],[-15.5839,25.9555],[-15.585,25.9486],[-15.5861,25.9417],[-15.5872,25.9348],[-15.5883,25.9279],[-15.5893,25.921],[-15.5904,25.9141],[-15.5915,25.9071],[-15.5925,25.9002],[-15.5936,25.8933],[-15.5947,25.8864],[-15.5957,25.8795],[-15.5968,25.8726],[-15.5979,25.8657],[-15.5989,25.8587],[-15.6,25.8518],[-15.6011,25.8449],[-15.6021,25.838],[-15.6032,25.8311],[-15.6042,25.8242],[-15.6053,25.8173],[-15.6063,25.8103],[-15.6074,25.8034],[-15.6085,25.7965],[-15.6095,25.7896],[-15.6106,25.7827],[-15.6116,25.7758],[-15.6127,25.7688],[-15.6137,25.7619],[-15.6147,25.755],[-15.6158,25.7481],[-15.6168,25.7412],[-15.6179,25.7343],[-15.6189,25.7273],[-15.62,25.7204],[-15.621,25.7135],[-15.622,25.7066],[-15.6231,25.6997],[-15.6241,25.6927],[-15.6251,25.6858],[-15.6262,25.6789],[-15.6272,25.672],[-15.6282,25.6651],[-15.6292,25.6581],[-15.6303,25.6512],[-15.6313,25.6443],[-15.6323,25.6374],[-15.6333,25.6305],[-15.6343,25.6235],[-15.6353,25.6166],[-15.6364,25.6097],[-15.6374,25.6028],[-15.6384,25.5959],[-15.6394,25.5889],[-15.6404,25.582],[-15.6414,25.5751],[-15.6424,25.5682],[-15.6434,25.5612],[-15.6444,25.5543],[-15.6454,25.5474],[-15.6464,25.5405],[-15.6474,25.5335],[-15.6484,25.5266],[-15.6494,25.5197],[-15.6504,25.5128],[-15.6514,25.5058],[-15.6523,25.4989],[-15.6533,25.492],[-15.6543,25.4851],[-15.6553,25.4781],[-15.6563,25.4712],[-15.6572,25.4643],[-15.6582,25.4574],[-15.6592,25.4504],[-15.6601,25.4435],[-15.6611,25.4366],[-15.6621,25.4296],[-15.663,25.4227],[-15.664,25.4158],[-15.665,25.4089],[-15.6659,25.4019],[-15.6669,25.395],[-15.6678,25.3881],[-15.6688,25.3811],[-15.6697,25.3742],[-15.6706,25.3673],[-15.6716,25.3603],[-15.6725,25.3534],[-15.6735,25.3465],[-15.6744,25.3395],[-15.6753,25.3326],[-15.6762,25.3257],[-15.6772,25.3187],[-15.6781,25.3118],[-15.6791,25.3049],[-15.68,25.298],[-15.681,25.291],[-15.682,25.2841],[-15.6829,25.2772],[-15.6839,25.2702],[-15.6848,25.2633],[-15.6858,25.2564],[-15.6868,25.2495],[-15.6877,25.2425],[-15.6887,25.2356],[-15.6897,25.2287],[-15.6907,25.2217],[-15.6916,25.2148],[-15.6926,25.2079],[-15.6936,25.201],[-15.6946,25.194],[-15.6955,25.1871],[-15.6965,25.1802],[-15.6975,25.1733],[-15.6985,25.1663],[-15.6995,25.1594],[-15.7005,25.1525],[-15.7014,25.1456],[-15.7024,25.1386],[-15.7034,25.1317],[-15.7044,25.1248],[-15.7054,25.1178],[-15.7064,25.1109],[-15.7073,25.104],[-15.7083,25.0971],[-15.7093,25.0901],[-15.7103,25.0832],[-15.7113,25.0763],[-15.7123,25.0694],[-15.7132,25.0624],[-15.7142,25.0555],[-15.7152,25.0486],[-15.7162,25.0417],[-15.7172,25.0347],[-15.7181,25.0278],[-15.7191,25.0209],[-15.7201,25.014],[-15.7211,25.007],[-15.7221,25.0001],[-15.723,24.9932],[-15.724,24.9862],[-15.725,24.9793],[-15.7259,24.9724],[-15.7269,24.9655],[-15.7279,24.9585],[-15.7289,24.9516],[-15.7298,24.9447],[-15.7308,24.9378],[-15.7317,24.9308],[-15.7327,24.9239],[-15.7337,24.917],[-15.7346,24.91],[-15.7356,24.9031],[-15.7365,24.8962],[-15.7375,24.8893],[-15.7385,24.8823],[-15.7394,24.8754],[-15.7404,24.8685],[-15.7414,24.8615],[-15.7423,24.8546],[-15.7433,24.8477],[-15.7443,24.8408],[-15.7453,24.8338],[-15.7462,24.8269],[-15.7472,24.82],[-15.7482,24.813],[-15.7492,24.8061],[-15.7501,24.7992],[-15.7511,24.7923],[-15.7521,24.7853],[-15.7531,24.7784],[-15.754,24.7715],[-15.755,24.7646],[-15.756,24.7576],[-15.757,24.7507],[-15.7579,24.7438],[-15.7589,24.7368],[-15.7599,24.7299],[-15.7608,24.723],[-15.7618,24.7161],[-15.7628,24.7091],[-15.7638,24.7022],[-15.7647,24.6953],[-15.7657,24.6884],[-15.7666,24.6814],[-15.7676,24.6745],[-15.7686,24.6676],[-15.7695,24.6606],[-15.7705,24.6537],[-15.7714,24.6468],[-15.7724,24.6398],[-15.7733,24.6329],[-15.7743,24.626],[-15.7752,24.6191],[-15.7762,24.6121],[-15.7771,24.6052],[-15.778,24.5983],[-15.779,24.5913],[-15.7799,24.5844],[-15.7808,24.5775],[-15.7818,24.5705],[-15.7827,24.5636],[-15.7836,24.5567],[-15.7845,24.5497],[-15.7854,24.5428],[-15.7863,24.5358],[-15.7872,24.5289],[-15.7881,24.522],[-15.789,24.515],[-15.7899,24.5081],[-15.7908,24.5012],[-15.7916,24.4942],[-15.7925,24.4873],[-15.7934,24.4803],[-15.7942,24.4734],[-15.7951,24.4665],[-15.796,24.4595],[-15.7968,24.4526],[-15.7976,24.4456],[-15.7985,24.4387],[-15.7993,24.4317],[-15.8001,24.4248],[-15.8009,24.4178],[-15.8017,24.4109],[-15.8025,24.404],[-15.8033,24.397],[-15.8041,24.3901],[-15.8049,24.3831],[-15.8057,24.3762],[-15.8064,24.3692],[-15.8072,24.3623],[-15.8079,24.3553],[-15.8087,24.3483],[-15.8094,24.3414],[-15.8101,24.3344],[-15.8108,24.3275],[-15.8115,24.3205],[-15.8122,24.3136],[-15.8129,24.3066],[-15.8136,24.2997],[-15.8142,24.2927],[-15.8149,24.2857],[-15.8155,24.2788],[-15.8161,24.2718],[-15.8167,24.2648],[-15.8173,24.2579],[-15.8179,24.2509],[-15.8185,24.244],[-15.819,24.237],[-15.8196,24.23],[-15.8201,24.2231],[-15.8206,24.2161],[-15.8211,24.2091],[-15.8216,24.2022],[-15.8221,24.1952],[-15.8225,24.1882],[-15.823,24.1812],[-15.8234,24.1743],[-15.8238,24.1673],[-15.8241,24.1603],[-15.8245,24.1534],[-15.8248,24.1464],[-15.8251,24.1394],[-15.8254,24.1325],[-15.8257,24.1255],[-15.8259,24.1185],[-15.8261,24.1115],[-15.8263,24.1046],[-15.8265,24.0976],[-15.8266,24.0906],[-15.8267,24.0837],[-15.8268,24.0767],[-15.8268,24.0698],[-15.8268,24.0628],[-15.8268,24.0558],[-15.8267,24.0489],[-15.8266,24.0419],[-15.8265,24.035],[-15.8263,24.0281],[-15.8261,24.0211],[-15.8258,24.0142],[-15.8255,24.0073],[-15.8252,24.0003],[-15.8248,23.9934],[-15.8243,23.9865],[-15.8239,23.9796],[-15.8233,23.9727],[-15.8228,23.9659],[-15.8221,23.959],[-15.8215,23.9521],[-15.8207,23.9453],[-15.82,23.9385],[-15.8192,23.9316],[-15.8183,23.9248],[-15.8173,23.918],[-15.8164,23.9113],[-15.8153,23.9045],[-15.8142,23.8977],[-15.8131,23.891],[-15.8119,23.8843],[-15.8106,23.8776],[-15.8093,23.871],[-15.8079,23.8643],[-15.8065,23.8577],[-15.805,23.8511],[-15.8034,23.8445],[-15.8018,23.838],[-15.8002,23.8314],[-15.7984,23.8249],[-15.7967,23.8184],[-15.7948,23.812],[-15.7929,23.8055],[-15.791,23.7991],[-15.789,23.7927],[-15.787,23.7864],[-15.7848,23.78],[-15.7827,23.7737],[-15.7805,23.7674],[-15.7782,23.7611],[-15.7759,23.7549],[-15.7735,23.7486],[-15.7711,23.7424],[-15.7687,23.7362],[-15.7661,23.73],[-15.7635,23.7239],[-15.7608,23.7177],[-15.7581,23.7116],[-15.7553,23.7055],[-15.7525,23.6993],[-15.7496,23.6932],[-15.7467,23.6872],[-15.7437,23.6811],[-15.7406,23.675],[-15.7375,23.669],[-15.7343,23.6629],[-15.7311,23.6569],[-15.7278,23.6509],[-15.7244,23.6449],[-15.721,23.6389],[-15.7175,23.6329],[-15.7139,23.6269],[-15.7103,23.621],[-15.7066,23.6151],[-15.7028,23.6092],[-15.699,23.6034],[-15.6951,23.5976],[-15.6911,23.5918],[-15.6871,23.5861],[-15.683,23.5804],[-15.6789,23.5747],[-15.6747,23.5691],[-15.6705,23.5636],[-15.6662,23.5581],[-15.6618,23.5526],[-15.6574,23.5473],[-15.653,23.5419],[-15.6485,23.5366],[-15.644,23.5314],[-15.6395,23.5262],[-15.6349,23.521],[-15.6304,23.5158],[-15.6258,23.5107],[-15.6212,23.5055],[-15.6167,23.5004],[-15.6122,23.4952],[-15.6076,23.4901],[-15.6031,23.4849],[-15.5987,23.4796],[-15.5942,23.4744],[-15.5898,23.4691],[-15.5855,23.4637],[-15.5812,23.4583],[-15.5769,23.4528],[-15.5727,23.4473],[-15.5686,23.4417],[-15.5645,23.436],[-15.5605,23.4303],[-15.5566,23.4245],[-15.5528,23.4186],[-15.549,23.4127],[-15.5453,23.4068],[-15.5417,23.4008],[-15.538,23.3948],[-15.5344,23.3888],[-15.5309,23.3828],[-15.5274,23.3767],[-15.5239,23.3707],[-15.5204,23.3646],[-15.5169,23.3585],[-15.5134,23.3525],[-15.51,23.3464],[-15.5065,23.3403],[-15.503,23.3343],[-15.4996,23.3282],[-15.4961,23.3222],[-15.4926,23.3162],[-15.4891,23.3101],[-15.4855,23.3042],[-15.4819,23.2982],[-15.4783,23.2923],[-15.4746,23.2863],[-15.4709,23.2805],[-15.4671,23.2746],[-15.4633,23.2688],[-15.4594,23.2631],[-15.4555,23.2573],[-15.4515,23.2516],[-15.4474,23.246],[-15.4433,23.2404],[-15.439,23.2349],[-15.4347,23.2294],[-15.4303,23.224],[-15.4259,23.2187],[-15.4213,23.2134],[-15.4167,23.2082],[-15.412,23.2031],[-15.4072,23.198],[-15.4023,23.193],[-15.3973,23.1881],[-15.3922,23.1833],[-15.3871,23.1786],[-15.3819,23.1739],[-15.3766,23.1693],[-15.3712,23.1649],[-15.3657,23.1605],[-15.3602,23.1562],[-15.3546,23.1519],[-15.3489,23.1478],[-15.3432,23.1438],[-15.3374,23.1398],[-15.3315,23.136],[-15.3256,23.1323],[-15.3196,23.1286],[-15.3136,23.125],[-15.3075,23.1215],[-15.3014,23.1181],[-15.2952,23.1147],[-15.289,23.1114],[-15.2828,23.1081],[-15.2765,23.105],[-15.2702,23.1018],[-15.2639,23.0988],[-15.2576,23.0958],[-15.2512,23.0928],[-15.2448,23.0899],[-15.2384,23.0871],[-15.2319,23.0843],[-15.2255,23.0815],[-15.219,23.0788],[-15.2125,23.0761],[-15.206,23.0735],[-15.1995,23.0709],[-15.1929,23.0683],[-15.1863,23.0658],[-15.1798,23.0633],[-15.1732,23.0609],[-15.1666,23.0585],[-15.16,23.0561],[-15.1534,23.0537],[-15.1467,23.0514],[-15.1401,23.0491],[-15.1335,23.0468],[-15.1268,23.0445],[-15.1201,23.0423],[-15.1135,23.0401],[-15.1068,23.0379],[-15.1001,23.0357],[-15.0934,23.0336],[-15.0867,23.0315],[-15.08,23.0294],[-15.0733,23.0273],[-15.0666,23.0253],[-15.0598,23.0232],[-15.0531,23.0212],[-15.0464,23.0192],[-15.0396,23.0172],[-15.0329,23.0152],[-15.0261,23.0132],[-15.0194,23.0113],[-15.0126,23.0094],[-15.0059,23.0074],[-14.9991,23.0055],[-14.9923,23.0036],[-14.9856,23.0018],[-14.9788,22.9999],[-14.972,22.998],[-14.9652,22.9962],[-14.9584,22.9943],[-14.9517,22.9925],[-14.9449,22.9907],[-14.9381,22.9889],[-14.9313,22.9871],[-14.9245,22.9853],[-14.9177,22.9835],[-14.9109,22.9817],[-14.9041,22.98],[-14.8973,22.9782],[-14.8905,22.9764],[-14.8837,22.9747],[-14.8769,22.9729],[-14.8701,22.9712],[-14.8633,22.9694],[-14.8564,22.9677],[-14.8496,22.966],[-14.8428,22.9642],[-14.836,22.9625],[-14.8292,22.9608],[-14.8224,22.9591],[-14.8156,22.9574],[-14.8087,22.9557],[-14.8019,22.9539],[-14.7951,22.9522],[-14.7883,22.9505],[-14.7815,22.9488],[-14.7747,22.9471],[-14.7678,22.9454],[-14.761,22.9437],[-14.7542,22.9419],[-14.7474,22.9402],[-14.7406,22.9385],[-14.7338,22.9368],[-14.7269,22.9351],[-14.7201,22.9333],[-14.7133,22.9316],[-14.7065,22.9299],[-14.6997,22.9281],[-14.6929,22.9264],[-14.6861,22.9247],[-14.6793,22.9229],[-14.6725,22.9211],[-14.6657,22.9194],[-14.6589,22.9176],[-14.6521,22.9158],[-14.6453,22.9141],[-14.6385,22.9123],[-14.6317,22.9105],[-14.6249,22.9086],[-14.6181,22.9068],[-14.6113,22.905],[-14.6045,22.9031],[-14.5977,22.9013],[-14.591,22.8994],[-14.5842,22.8975],[-14.5774,22.8957],[-14.5707,22.8938],[-14.5639,22.8919],[-14.5571,22.8899],[-14.5504,22.888],[-14.5436,22.8861],[-14.5369,22.8841],[-14.5301,22.8822],[-14.5234,22.8802],[-14.5166,22.8782],[-14.5099,22.8762],[-14.5031,22.8743],[-14.4964,22.8723],[-14.4896,22.8703],[-14.4829,22.8683],[-14.4762,22.8663],[-14.4694,22.8643],[-14.4627,22.8623],[-14.456,22.8603],[-14.4492,22.8583],[-14.4425,22.8563],[-14.4358,22.8542],[-14.429,22.8522],[-14.4223,22.8502],[-14.4156,22.8482],[-14.4088,22.8462],[-14.4021,22.8442],[-14.3954,22.8421],[-14.3886,22.8401],[-14.3819,22.8381],[-14.3752,22.8361],[-14.3684,22.8341],[-14.3617,22.8321],[-14.355,22.8301],[-14.3482,22.828],[-14.3415,22.826],[-14.3348,22.824],[-14.328,22.822],[-14.3213,22.82],[-14.3145,22.818],[-14.3078,22.8161],[-14.3011,22.8141],[-14.2943,22.8121],[-14.2876,22.8101],[-14.2808,22.8081],[-14.2741,22.8062],[-14.2673,22.8042],[-14.2606,22.8023],[-14.2538,22.8003],[-14.2471,22.7984],[-14.2403,22.7965],[-14.2335,22.7946],[-14.2268,22.7926],[-14.22,22.7907],[-14.2132,22.7888],[-14.2065,22.787],[-14.1997,22.7851],[-14.1929,22.7832],[-14.1861,22.7814],[-14.1794,22.7795],[-14.1726,22.7777],[-14.1658,22.7759],[-14.159,22.774],[-14.1522,22.7722],[-14.1454,22.7705],[-14.1386,22.7687],[-14.1318,22.7669],[-14.125,22.7652],[-14.1182,22.7634],[-14.1114,22.7617],[-14.1046,22.76],[-14.0977,22.7583],[-14.0909,22.7566],[-14.0841,22.755],[-14.0773,22.7533],[-14.0704,22.7517],[-14.0636,22.7501],[-14.0567,22.7485],[-14.0499,22.7469],[-14.043,22.7453],[-14.0362,22.7438],[-14.0293,22.7422],[-14.0225,22.7407],[-14.0156,22.7392],[-14.0087,22.7377],[-14.0018,22.7363],[-13.995,22.7349],[-13.9881,22.7334],[-13.9812,22.732],[-13.9743,22.7307],[-13.9674,22.7293],[-13.9605,22.728],[-13.9536,22.7267],[-13.9467,22.7254],[-13.9398,22.7241],[-13.9328,22.7229],[-13.9259,22.7216],[-13.919,22.7204],[-13.9121,22.7193],[-13.9051,22.7181],[-13.8982,22.717],[-13.8913,22.7159],[-13.8843,22.7148],[-13.8774,22.7138],[-13.8704,22.7127],[-13.8635,22.7117],[-13.8565,22.7108],[-13.8495,22.7098],[-13.8426,22.7089],[-13.8356,22.708],[-13.8286,22.7071],[-13.8216,22.7063],[-13.8147,22.7055],[-13.8077,22.7047],[-13.8007,22.7039],[-13.7937,22.7032],[-13.7867,22.7025],[-13.7797,22.7018],[-13.7727,22.7011],[-13.7657,22.7005],[-13.7587,22.6999],[-13.7517,22.6992],[-13.7447,22.6986],[-13.7377,22.6981],[-13.7307,22.6975],[-13.7237,22.697],[-13.7167,22.6965],[-13.7097,22.696],[-13.7027,22.6956],[-13.6957,22.6951],[-13.6886,22.6947],[-13.6816,22.6943],[-13.6746,22.694],[-13.6676,22.6936],[-13.6606,22.6933],[-13.6535,22.693],[-13.6465,22.6927],[-13.6395,22.6925],[-13.6325,22.6923],[-13.6254,22.692],[-13.6184,22.6918],[-13.6114,22.6917],[-13.6044,22.6915],[-13.5973,22.6913],[-13.5903,22.6912],[-13.5833,22.6911],[-13.5762,22.691],[-13.5692,22.691],[-13.5622,22.6909],[-13.5552,22.6909],[-13.5481,22.6908],[-13.5411,22.6908],[-13.5341,22.6908],[-13.527,22.6908],[-13.52,22.6909],[-13.513,22.6909],[-13.506,22.691],[-13.4989,22.6911],[-13.4919,22.6912],[-13.4849,22.6913],[-13.4778,22.6914],[-13.4708,22.6915],[-13.4638,22.6917],[-13.4568,22.6918],[-13.4497,22.692],[-13.4427,22.6922],[-13.4357,22.6923],[-13.4286,22.6925],[-13.4216,22.6927],[-13.4146,22.693],[-13.4076,22.6932],[-13.4005,22.6934],[-13.3935,22.6937],[-13.3865,22.6939],[-13.3795,22.6942],[-13.3724,22.6945],[-13.3654,22.6947],[-13.3584,22.695],[-13.3514,22.6953],[-13.3443,22.6956],[-13.3373,22.6959],[-13.3303,22.6962],[-13.3233,22.6966],[-13.3162,22.6969],[-13.3092,22.6972],[-13.3022,22.6976],[-13.2952,22.6979],[-13.2881,22.6982],[-13.2811,22.6986],[-13.2741,22.6989],[-13.2671,22.6993],[-13.2601,22.6997],[-13.253,22.7],[-13.246,22.7004],[-13.239,22.7008],[-13.232,22.7011],[-13.2249,22.7015],[-13.2179,22.7019],[-13.2109,22.7023],[-13.2039,22.7026],[-13.1969,22.703],[-13.1898,22.7034],[-13.1828,22.7038],[-13.1758,22.7042],[-13.1688,22.7045],[-13.1618,22.7049],[-13.1547,22.7053],[-13.1477,22.7057],[-13.1407,22.706],[-13.1337,22.7064],[-13.1267,22.7068],[-13.1196,22.7072],[-13.1126,22.7075],[-13.1056,22.7079],[-13.0986,22.7082],[-13.0916,22.7086],[-13.0845,22.709],[-13.0775,22.7093],[-13.0705,22.7097],[-13.0635,22.71],[-13.0564,22.7103],[-13.0494,22.7107],[-13.0424,22.711],[-13.0354,22.7113],[-13.0283,22.7117],[-13.0213,22.712],[-13.0143,22.7123],[-13.0073,22.7127],[-13.0003,22.713],[-12.9932,22.7133],[-12.9862,22.7136],[-12.9792,22.7139],[-12.9722,22.7142],[-12.9651,22.7145],[-12.9581,22.7148],[-12.9511,22.7151],[-12.9441,22.7154],[-12.937,22.7157],[-12.93,22.716],[-12.923,22.7163],[-12.916,22.7166],[-12.9089,22.7168],[-12.9019,22.7171],[-12.8949,22.7174],[-12.8879,22.7177],[-12.8808,22.7179],[-12.8738,22.7182],[-12.8668,22.7185],[-12.8597,22.7188],[-12.8527,22.7191],[-12.8457,22.7193],[-12.8387,22.7196],[-12.8316,22.7199],[-12.8246,22.7202],[-12.8176,22.7205],[-12.8106,22.7208],[-12.8035,22.721],[-12.7965,22.7213],[-12.7895,22.7216],[-12.7825,22.7219],[-12.7754,22.7222],[-12.7684,22.7225],[-12.7614,22.7228],[-12.7544,22.7231],[-12.7473,22.7234],[-12.7403,22.7237],[-12.7333,22.724],[-12.7263,22.7244],[-12.7192,22.7247],[-12.7122,22.725],[-12.7052,22.7253],[-12.6982,22.7257],[-12.6912,22.726],[-12.6841,22.7263],[-12.6771,22.7267],[-12.6701,22.727],[-12.6631,22.7274],[-12.656,22.7277],[-12.649,22.7281],[-12.642,22.7285],[-12.635,22.7288],[-12.628,22.7292],[-12.6209,22.7296],[-12.6139,22.73],[-12.6069,22.7304],[-12.5999,22.7308],[-12.5929,22.7312],[-12.5858,22.7316],[-12.5788,22.732],[-12.5718,22.7324],[-12.5648,22.7329],[-12.5578,22.7333],[-12.5507,22.7337],[-12.5437,22.7342],[-12.5367,22.7347],[-12.5297,22.7351],[-12.5227,22.7356],[-12.5157,22.7361],[-12.5087,22.7366],[-12.5016,22.7371],[-12.4946,22.7376],[-12.4876,22.7381],[-12.4806,22.7386],[-12.4736,22.7392],[-12.4666,22.7397],[-12.4596,22.7403],[-12.4526,22.7409],[-12.4456,22.7414],[-12.4386,22.742],[-12.4316,22.7426],[-12.4246,22.7432],[-12.4176,22.7438],[-12.4106,22.7445],[-12.4036,22.7451],[-12.3966,22.7458],[-12.3896,22.7464],[-12.3826,22.7471],[-12.3756,22.7478],[-12.3686,22.7485],[-12.3616,22.7492],[-12.3546,22.75],[-12.3476,22.7507],[-12.3406,22.7515],[-12.3336,22.7523],[-12.3267,22.753],[-12.3197,22.7539],[-12.3127,22.7547],[-12.3057,22.7555],[-12.2987,22.7564],[-12.2918,22.7572],[-12.2848,22.7581],[-12.2778,22.759],[-12.2709,22.76],[-12.2639,22.7609],[-12.257,22.7619],[-12.25,22.7629],[-12.243,22.7639],[-12.2361,22.7649],[-12.2291,22.7659],[-12.2222,22.767],[-12.2153,22.768],[-12.2083,22.7691],[-12.2014,22.7702],[-12.1945,22.7713],[-12.1875,22.7725],[-12.1806,22.7736],[-12.1737,22.7748],[-12.1668,22.776],[-12.1598,22.7772],[-12.1529,22.7785],[-12.146,22.7797],[-12.1391,22.781],[-12.1322,22.7823],[-12.1253,22.7836],[-12.1184,22.7849],[-12.1115,22.7862],[-12.1046,22.7876],[-12.0977,22.789],[-12.0909,22.7904],[-12.084,22.7918],[-12.0771,22.7932],[-12.0702,22.7947],[-12.0634,22.7961],[-12.0565,22.7976],[-12.0497,22.7991],[-12.0428,22.8006],[-12.0359,22.8021],[-12.0291,22.8037],[-12.0223,22.8052],[-12.0154,22.8068],[-12.0086,22.8084],[-12.0018,22.81],[-11.9949,22.8116],[-11.9881,22.8133],[-11.9813,22.8149],[-11.9745,22.8166],[-11.9677,22.8183],[-11.9608,22.82],[-11.954,22.8218],[-11.9472,22.8235],[-11.9404,22.8253],[-11.9336,22.827],[-11.9269,22.8288],[-11.9201,22.8306],[-11.9133,22.8324],[-11.9065,22.8342],[-11.8997,22.836],[-11.8929,22.8379],[-11.8862,22.8397],[-11.8794,22.8416],[-11.8726,22.8435],[-11.8659,22.8454],[-11.8591,22.8473],[-11.8524,22.8492],[-11.8456,22.8511],[-11.8388,22.853],[-11.8321,22.8549],[-11.8253,22.8569],[-11.8186,22.8588],[-11.8118,22.8608],[-11.8051,22.8627],[-11.7983,22.8647],[-11.7916,22.8666],[-11.7849,22.8686],[-11.7781,22.8706],[-11.7714,22.8726],[-11.7647,22.8746],[-11.7579,22.8766],[-11.7512,22.8786],[-11.7445,22.8806],[-11.7377,22.8826],[-11.731,22.8846],[-11.7243,22.8866],[-11.7175,22.8886],[-11.7108,22.8907],[-11.7041,22.8927],[-11.6973,22.8947],[-11.6906,22.8967],[-11.6839,22.8988],[-11.6771,22.9008],[-11.6704,22.9028],[-11.6637,22.9048],[-11.657,22.9069],[-11.6502,22.909],[-11.6435,22.9111],[-11.6368,22.9132],[-11.6302,22.9153],[-11.6235,22.9175],[-11.6168,22.9198],[-11.6102,22.922],[-11.6035,22.9243],[-11.5969,22.9266],[-11.5903,22.9289],[-11.5836,22.9312],[-11.577,22.9336],[-11.5704,22.9359],[-11.5638,22.9383],[-11.5572,22.9407],[-11.5506,22.9432],[-11.5441,22.9456],[-11.5375,22.948],[-11.5309,22.9505],[-11.5244,22.953],[-11.5178,22.9555],[-11.5113,22.958],[-11.5047,22.9605],[-11.4982,22.963],[-11.4916,22.9655],[-11.4851,22.968],[-11.4786,22.9705],[-11.472,22.9731],[-11.4655,22.9756],[-11.459,22.9782],[-11.4524,22.9807],[-11.4459,22.9832],[-11.4394,22.9858],[-11.4328,22.9883],[-11.4263,22.9909],[-11.4198,22.9935],[-11.4133,22.9961],[-11.4068,22.9987],[-11.4003,23.0014],[-11.3939,23.0042],[-11.3874,23.0069],[-11.381,23.0097],[-11.3745,23.0125],[-11.3681,23.0153],[-11.3617,23.0182],[-11.3553,23.021],[-11.3488,23.0239],[-11.3424,23.0268],[-11.3361,23.0297],[-11.3297,23.0326],[-11.3233,23.0356],[-11.3169,23.0385],[-11.3105,23.0415],[-11.3042,23.0444],[-11.2978,23.0474],[-11.2914,23.0504],[-11.2851,23.0533],[-11.2787,23.0563],[-11.2723,23.0592],[-11.266,23.0622],[-11.2596,23.0651],[-11.2532,23.0681],[-11.2469,23.071],[-11.2405,23.0739],[-11.2341,23.0768],[-11.2277,23.0796],[-11.2213,23.0825],[-11.2149,23.0853],[-11.2085,23.0881],[-11.2021,23.0909],[-11.1956,23.0936],[-11.1892,23.0963],[-11.1827,23.099],[-11.1762,23.1016],[-11.1698,23.1042],[-11.1633,23.1068],[-11.1567,23.1093],[-11.1502,23.1118],[-11.1437,23.1142],[-11.1371,23.1166],[-11.1305,23.1189],[-11.1239,23.1212],[-11.1173,23.1234],[-11.1107,23.1255],[-11.104,23.1276],[-11.0974,23.1296],[-11.0907,23.1316],[-11.084,23.1335],[-11.0772,23.1353],[-11.0705,23.137],[-11.0637,23.1387],[-11.0569,23.1403],[-11.0501,23.1418],[-11.0433,23.1432],[-11.0364,23.1445],[-11.0296,23.1457],[-11.0227,23.1468],[-11.0158,23.1479],[-11.0089,23.1488],[-11.002,23.1497],[-10.995,23.1504],[-10.9881,23.151],[-10.9811,23.1516],[-10.9742,23.152],[-10.9672,23.1523],[-10.9602,23.1524],[-10.9533,23.1525],[-10.9463,23.1524],[-10.9393,23.1523],[-10.9323,23.152],[-10.9253,23.1517],[-10.9184,23.1512],[-10.9114,23.1506],[-10.9044,23.15],[-10.8975,23.1492],[-10.8905,23.1483],[-10.8836,23.1474],[-10.8767,23.1463],[-10.8697,23.1451],[-10.8628,23.1439],[-10.856,23.1427],[-10.8491,23.1413],[-10.8422,23.1398],[-10.8354,23.1382],[-10.8286,23.1366],[-10.8217,23.1349],[-10.815,23.1331],[-10.8082,23.1313],[-10.8014,23.1293],[-10.7947,23.1273],[-10.788,23.1253],[-10.7813,23.1232],[-10.7746,23.121],[-10.7679,23.1188],[-10.7613,23.1165],[-10.7547,23.1142],[-10.7481,23.1118],[-10.7415,23.1094],[-10.7349,23.1069],[-10.7283,23.1044],[-10.7218,23.1018],[-10.7153,23.0992],[-10.7087,23.0966],[-10.7022,23.0939],[-10.6958,23.0912],[-10.6893,23.0885],[-10.6828,23.0857],[-10.6764,23.0829],[-10.67,23.08],[-10.6636,23.0772],[-10.6572,23.0743],[-10.6508,23.0713],[-10.6444,23.0684],[-10.638,23.0654],[-10.6317,23.0624],[-10.6254,23.0594],[-10.619,23.0563],[-10.6127,23.0533],[-10.6064,23.0502],[-10.6001,23.0471],[-10.5938,23.044],[-10.5875,23.0408],[-10.5812,23.0377],[-10.575,23.0345],[-10.5687,23.0313],[-10.5625,23.0281],[-10.5562,23.0249],[-10.55,23.0217],[-10.5437,23.0184],[-10.5375,23.0152],[-10.5313,23.0119],[-10.5251,23.0087],[-10.5189,23.0054],[-10.5127,23.0021],[-10.5065,22.9988],[-10.5003,22.9955],[-10.4941,22.9922],[-10.4879,22.9889],[-10.4817,22.9856],[-10.4755,22.9823],[-10.4693,22.9789],[-10.4631,22.9756],[-10.4569,22.9723],[-10.4508,22.9689],[-10.4446,22.9656],[-10.4384,22.9623],[-10.4322,22.9589],[-10.426,22.9556],[-10.4199,22.9523],[-10.4137,22.9489],[-10.4075,22.9456],[-10.4013,22.9422],[-10.3952,22.9389],[-10.389,22.9356],[-10.3828,22.9323],[-10.3766,22.9289],[-10.3704,22.9256],[-10.3642,22.9223],[-10.358,22.919],[-10.3518,22.9157],[-10.3456,22.9124],[-10.3394,22.9092],[-10.3332,22.9059],[-10.327,22.9026],[-10.3207,22.8994],[-10.3145,22.8961],[-10.3083,22.8929],[-10.302,22.8897],[-10.2958,22.8865],[-10.2895,22.8833],[-10.2833,22.8801],[-10.277,22.8769],[-10.2707,22.8738],[-10.2644,22.8706],[-10.2581,22.8675],[-10.2518,22.8644],[-10.2455,22.8613],[-10.2392,22.8583],[-10.2329,22.8552],[-10.2265,22.8522],[-10.2202,22.8492],[-10.2138,22.8462],[-10.2075,22.8432],[-10.2011,22.8403],[-10.1947,22.8374],[-10.1883,22.8345],[-10.1819,22.8316],[-10.1755,22.8288],[-10.169,22.826],[-10.1626,22.8232],[-10.1561,22.8204],[-10.1496,22.8177],[-10.1431,22.815],[-10.1366,22.8124],[-10.1301,22.8098],[-10.1235,22.8073],[-10.117,22.8047],[-10.1105,22.8021],[-10.1039,22.7996],[-10.0974,22.797],[-10.0908,22.7945],[-10.0843,22.7919],[-10.0777,22.7894],[-10.0712,22.7868],[-10.0646,22.7843],[-10.0581,22.7818],[-10.0515,22.7793],[-10.0449,22.7767],[-10.0384,22.7742],[-10.0318,22.7717],[-10.0252,22.7692],[-10.0187,22.7667],[-10.0121,22.7642],[-10.0055,22.7617],[-9.999,22.7592],[-9.9924,22.7567],[-9.9858,22.7542],[-9.9793,22.7518],[-9.9727,22.7493],[-9.9661,22.7468],[-9.9595,22.7443],[-9.953,22.7418],[-9.9464,22.7394],[-9.9398,22.7369],[-9.9332,22.7344],[-9.9266,22.732],[-9.9201,22.7295],[-9.9135,22.727],[-9.9069,22.7246],[-9.9003,22.7221],[-9.8937,22.7197],[-9.8872,22.7172],[-9.8806,22.7147],[-9.874,22.7123],[-9.8674,22.7098],[-9.8608,22.7074],[-9.8542,22.705],[-9.8476,22.7025],[-9.841,22.7001],[-9.8345,22.6976],[-9.8279,22.6952],[-9.8213,22.6928],[-9.8147,22.6903],[-9.8081,22.6879],[-9.8015,22.6855],[-9.7949,22.683],[-9.7883,22.6806],[-9.7817,22.6782],[-9.7751,22.6757],[-9.7685,22.6733],[-9.7619,22.6709],[-9.7553,22.6685],[-9.7487,22.666],[-9.7421,22.6636],[-9.7356,22.6612],[-9.729,22.6588],[-9.7224,22.6564],[-9.7158,22.6539],[-9.7092,22.6515],[-9.7026,22.6491],[-9.696,22.6467],[-9.6894,22.6443],[-9.6828,22.6419],[-9.6762,22.6395],[-9.6696,22.6371],[-9.663,22.6347],[-9.6563,22.6322],[-9.6497,22.6298],[-9.6431,22.6274],[-9.6365,22.625],[-9.6299,22.6226],[-9.6233,22.6202],[-9.6167,22.6178],[-9.6101,22.6154],[-9.6035,22.613],[-9.5969,22.6106],[-9.5903,22.6082],[-9.5837,22.6058],[-9.5771,22.6034],[-9.5705,22.6011],[-9.5639,22.5987],[-9.5573,22.5963],[-9.5507,22.5939],[-9.5441,22.5915],[-9.5375,22.5891],[-9.5308,22.5867],[-9.5242,22.5843],[-9.5176,22.5819],[-9.511,22.5795],[-9.5044,22.5772],[-9.4978,22.5748],[-9.4912,22.5724],[-9.4846,22.57],[-9.478,22.5676],[-9.4714,22.5652],[-9.4647,22.5629],[-9.4581,22.5605],[-9.4515,22.5581],[-9.4449,22.5557],[-9.4383,22.5534],[-9.4317,22.551],[-9.4251,22.5486],[-9.4185,22.5462],[-9.4118,22.5439],[-9.4052,22.5415],[-9.3986,22.5391],[-9.392,22.5367],[-9.3854,22.5344],[-9.3788,22.532],[-9.3721,22.5296],[-9.3655,22.5273],[-9.3589,22.5249],[-9.3523,22.5226],[-9.3457,22.5202],[-9.3391,22.5178]]},\"properties\":{\"i\":6,\"source\":474,\"mouth\":1955,\"discharge\":2,\"length\":643.67,\"width\":13.52,\"widthFactor\":20,\"sourceWidth\":1,\"parent\":6,\"cells\":[474,693,839,1058,1276,1422,1572,1955,2037,2126,2129,2045,2135],\"basin\":6,\"name\":\"Northern Tributary\",\"type\":\"Tributary\",\"points\":[[496.72,132.73],[471.9,181.8],[456.41,217.57],[444,270.8],[427.42,332.55],[417.1,376.5],[408,417.2],[397,504.1],[415.1,531.4],[469.1,546.7],[526.9,544.3],[571.6,530.6],[628.1,553.4]],\"id\":\"river6\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[-14.9244,13.4078],[-14.9244,13.4078],[-14.9243,13.4078],[-14.9243,13.4078],[-14.9242,13.4079],[-14.924,13.408],[-14.9239,13.4081],[-14.9237,13.4082],[-14.9235,13.4083],[-14.9232,13.4085],[-14.923,13.4087],[-14.9226,13.4089],[-14.9222,13.4092],[-14.9218,13.4095],[-14.9213,13.4099],[-14.9207,13.4103],[-14.92,13.4108],[-14.9192,13.4115],[-14.9182,13.4124],[-14.9169,13.4137],[-14.9152,13.4161],[-14.9162,13.4212],[-14.9195,13.4274],[-14.9228,13.4336],[-14.9261,13.4398],[-14.9294,13.446],[-14.9327,13.4521],[-14.936,13.4583],[-14.9392,13.4645],[-14.9425,13.4707],[-14.9458,13.4769],[-14.9491,13.4831],[-14.9523,13.4893],[-14.9556,13.4955],[-14.9588,13.5017],[-14.9621,13.5079],[-14.9653,13.5141],[-14.9686,13.5203],[-14.9718,13.5265],[-14.9751,13.5327],[-14.9783,13.5389],[-14.9816,13.5451],[-14.9848,13.5513],[-14.9881,13.5575],[-14.9913,13.5637],[-14.9945,13.5699],[-14.9978,13.5761],[-15.001,13.5823],[-15.0042,13.5885],[-15.0075,13.5947],[-15.0107,13.6009],[-15.0139,13.6072],[-15.0172,13.6134],[-15.0204,13.6196],[-15.0236,13.6258],[-15.0268,13.632],[-15.03,13.6382],[-15.0333,13.6445],[-15.0365,13.6507],[-15.0397,13.6569],[-15.0429,13.6631],[-15.0461,13.6693],[-15.0493,13.6756],[-15.0525,13.6818],[-15.0558,13.688],[-15.059,13.6942],[-15.0622,13.7004],[-15.0654,13.7067],[-15.0686,13.7129],[-15.0718,13.7191],[-15.075,13.7253],[-15.0782,13.7316],[-15.0814,13.7378],[-15.0846,13.744],[-15.0878,13.7502],[-15.091,13.7565],[-15.0942,13.7627],[-15.0974,13.7689],[-15.1006,13.7751],[-15.1038,13.7814],[-15.107,13.7876],[-15.1102,13.7938],[-15.1134,13.8001],[-15.1166,13.8063],[-15.1198,13.8125],[-15.123,13.8187],[-15.1262,13.825],[-15.1294,13.8312],[-15.1326,13.8374],[-15.1358,13.8437],[-15.139,13.8499],[-15.1422,13.8561],[-15.1454,13.8623],[-15.1486,13.8686],[-15.1518,13.8748],[-15.155,13.881],[-15.1582,13.8873],[-15.1614,13.8935],[-15.1646,13.8997],[-15.1678,13.906],[-15.171,13.9122],[-15.1742,13.9184],[-15.1774,13.9246],[-15.1806,13.9309],[-15.1838,13.9371],[-15.187,13.9433],[-15.1902,13.9496],[-15.1934,13.9558],[-15.1966,13.962],[-15.1998,13.9683],[-15.203,13.9745],[-15.2062,13.9807],[-15.2094,13.9869],[-15.2126,13.9932],[-15.2158,13.9994],[-15.219,14.0056],[-15.2222,14.0119],[-15.2254,14.0181],[-15.2286,14.0243],[-15.2318,14.0305],[-15.235,14.0368],[-15.2382,14.043],[-15.2414,14.0492],[-15.2446,14.0554],[-15.2478,14.0617],[-15.251,14.0679],[-15.2542,14.0741],[-15.2574,14.0803],[-15.2606,14.0866],[-15.2639,14.0928],[-15.2671,14.099],[-15.2703,14.1052],[-15.2735,14.1114],[-15.2767,14.1177],[-15.2799,14.1239],[-15.2832,14.1301],[-15.2864,14.1363],[-15.2896,14.1425],[-15.2928,14.1487],[-15.296,14.155],[-15.2993,14.1612],[-15.3025,14.1674],[-15.3057,14.1736],[-15.309,14.1798],[-15.3122,14.186],[-15.3154,14.1922],[-15.3187,14.1984],[-15.3219,14.2047],[-15.3251,14.2109],[-15.3284,14.2171],[-15.3316,14.2233],[-15.3349,14.2295],[-15.3381,14.2357],[-15.3414,14.2419],[-15.3447,14.2481],[-15.3479,14.2543],[-15.3512,14.2605],[-15.3545,14.2666],[-15.3578,14.2728],[-15.3611,14.279],[-15.3644,14.2852],[-15.3677,14.2913],[-15.371,14.2975],[-15.3744,14.3036],[-15.3777,14.3098],[-15.3811,14.3159],[-15.3844,14.3221],[-15.3878,14.3282],[-15.3912,14.3343],[-15.3946,14.3405],[-15.398,14.3466],[-15.4014,14.3527],[-15.4048,14.3588],[-15.4082,14.365],[-15.4116,14.3711],[-15.415,14.3772],[-15.4184,14.3833],[-15.4219,14.3894],[-15.4253,14.3955],[-15.4288,14.4015],[-15.4322,14.4076],[-15.4357,14.4137],[-15.4392,14.4198],[-15.4427,14.4259],[-15.4461,14.4319],[-15.4496,14.438],[-15.4531,14.4441],[-15.4566,14.4501],[-15.4601,14.4562],[-15.4636,14.4622],[-15.4672,14.4683],[-15.4707,14.4743],[-15.4742,14.4804],[-15.4778,14.4864],[-15.4813,14.4925],[-15.4848,14.4985],[-15.4884,14.5045],[-15.492,14.5105],[-15.4955,14.5166],[-15.4991,14.5226],[-15.5027,14.5286],[-15.5063,14.5346],[-15.5099,14.5406],[-15.5136,14.5466],[-15.5172,14.5525],[-15.5209,14.5585],[-15.5245,14.5645],[-15.5282,14.5705],[-15.5318,14.5764],[-15.5355,14.5824],[-15.5392,14.5883],[-15.5429,14.5943],[-15.5466,14.6002],[-15.5503,14.6062],[-15.554,14.6121],[-15.5577,14.6181],[-15.5614,14.624],[-15.5652,14.6299],[-15.5689,14.6358],[-15.5726,14.6418],[-15.5764,14.6477],[-15.5801,14.6536],[-15.5839,14.6595],[-15.5876,14.6654],[-15.5914,14.6713],[-15.5951,14.6773],[-15.5989,14.6832],[-15.6027,14.6891],[-15.6064,14.695],[-15.6102,14.7009],[-15.614,14.7068],[-15.6178,14.7127],[-15.6215,14.7186],[-15.6253,14.7245],[-15.6291,14.7304],[-15.6329,14.7363],[-15.6367,14.7422],[-15.6405,14.7481],[-15.6442,14.754],[-15.648,14.7598],[-15.6518,14.7657],[-15.6556,14.7716],[-15.6594,14.7775],[-15.6631,14.7834],[-15.6669,14.7893],[-15.6707,14.7952],[-15.6745,14.8011],[-15.6782,14.807],[-15.682,14.8129],[-15.6858,14.8189],[-15.6895,14.8248],[-15.6933,14.8307],[-15.6971,14.8366],[-15.7008,14.8425],[-15.7046,14.8484],[-15.7083,14.8543],[-15.712,14.8603],[-15.7158,14.8662],[-15.7195,14.8721],[-15.7232,14.878],[-15.7269,14.884],[-15.7307,14.8899],[-15.7344,14.8959],[-15.7381,14.9018],[-15.7418,14.9078],[-15.7454,14.9137],[-15.7491,14.9197],[-15.7528,14.9256],[-15.7565,14.9316],[-15.7601,14.9376],[-15.7638,14.9436],[-15.7674,14.9495],[-15.771,14.9555],[-15.7746,14.9615],[-15.7783,14.9675],[-15.7819,14.9735],[-15.7855,14.9795],[-15.789,14.9855],[-15.7926,14.9916],[-15.7962,14.9976],[-15.7997,15.0036],[-15.8033,15.0097],[-15.8068,15.0157],[-15.8103,15.0218],[-15.8138,15.0278],[-15.8173,15.0339],[-15.8208,15.04],[-15.8243,15.046],[-15.8277,15.0521],[-15.8312,15.0582],[-15.8346,15.0643],[-15.838,15.0704],[-15.8414,15.0765],[-15.8448,15.0827],[-15.8482,15.0888],[-15.8515,15.0949],[-15.8549,15.1011],[-15.8582,15.1072],[-15.8615,15.1134],[-15.8648,15.1196],[-15.8681,15.1257],[-15.8714,15.1319],[-15.8746,15.1381],[-15.8778,15.1443],[-15.8811,15.1505],[-15.8843,15.1567],[-15.8874,15.163],[-15.8906,15.1692],[-15.8938,15.1754],[-15.8969,15.1817],[-15.9,15.188],[-15.9031,15.1942],[-15.9062,15.2005],[-15.9092,15.2068],[-15.9123,15.2131],[-15.9153,15.2194],[-15.9183,15.2257],[-15.9213,15.232],[-15.9242,15.2384],[-15.9272,15.2447],[-15.9301,15.2511],[-15.933,15.2574],[-15.9359,15.2638],[-15.9387,15.2702],[-15.9416,15.2765],[-15.9444,15.2829],[-15.9472,15.2893],[-15.9499,15.2958],[-15.9527,15.3022],[-15.9554,15.3086],[-15.9581,15.3151],[-15.9608,15.3215],[-15.9635,15.328],[-15.9661,15.3344],[-15.9688,15.3409],[-15.9714,15.3474],[-15.974,15.3539],[-15.9765,15.3604],[-15.979,15.3669],[-15.9816,15.3734],[-15.9841,15.3799],[-15.9865,15.3864],[-15.989,15.393],[-15.9914,15.3995],[-15.9938,15.4061],[-15.9962,15.4127],[-15.9986,15.4192],[-16.0009,15.4258],[-16.0032,15.4324],[-16.0055,15.439],[-16.0078,15.4456],[-16.0101,15.4522],[-16.0123,15.4588],[-16.0145,15.4654],[-16.0167,15.4721],[-16.0189,15.4787],[-16.021,15.4854],[-16.0232,15.492],[-16.0253,15.4987],[-16.0274,15.5053],[-16.0294,15.512],[-16.0315,15.5187],[-16.0335,15.5254],[-16.0355,15.5321],[-16.0375,15.5388],[-16.0395,15.5455],[-16.0414,15.5522],[-16.0433,15.5589],[-16.0452,15.5656],[-16.047,15.5724],[-16.0489,15.5791],[-16.0507,15.5859],[-16.0525,15.5926],[-16.0543,15.5994],[-16.0561,15.6061],[-16.0578,15.6129],[-16.0596,15.6197],[-16.0613,15.6264],[-16.063,15.6332],[-16.0646,15.64],[-16.0663,15.6468],[-16.0679,15.6536],[-16.0696,15.6604],[-16.0712,15.6672],[-16.0728,15.674],[-16.0743,15.6808],[-16.0759,15.6876],[-16.0774,15.6945],[-16.079,15.7013],[-16.0805,15.7081],[-16.082,15.7149],[-16.0835,15.7218],[-16.0849,15.7286],[-16.0864,15.7355],[-16.0878,15.7423],[-16.0892,15.7491],[-16.0906,15.756],[-16.092,15.7628],[-16.0934,15.7697],[-16.0948,15.7766],[-16.0962,15.7834],[-16.0975,15.7903],[-16.0988,15.7971],[-16.1002,15.804],[-16.1015,15.8109],[-16.1028,15.8178],[-16.1041,15.8246],[-16.1053,15.8315],[-16.1066,15.8384],[-16.1078,15.8453],[-16.1091,15.8521],[-16.1103,15.859],[-16.1115,15.8659],[-16.1128,15.8728],[-16.114,15.8797],[-16.1151,15.8866],[-16.1163,15.8935],[-16.1175,15.9004],[-16.1187,15.9073],[-16.1198,15.9142],[-16.121,15.9211],[-16.1221,15.928],[-16.1232,15.9349],[-16.1244,15.9418],[-16.1255,15.9487],[-16.1266,15.9556],[-16.1277,15.9625],[-16.1288,15.9694],[-16.1298,15.9763],[-16.1309,15.9832],[-16.132,15.9901],[-16.133,15.9971],[-16.1341,16.004],[-16.1351,16.0109],[-16.1362,16.0178],[-16.1372,16.0247],[-16.1383,16.0316],[-16.1393,16.0386],[-16.1403,16.0455],[-16.1413,16.0524],[-16.1423,16.0593],[-16.1433,16.0663],[-16.1443,16.0732],[-16.1453,16.0801],[-16.1463,16.087],[-16.1473,16.094],[-16.1483,16.1009],[-16.1492,16.1078],[-16.1502,16.1147],[-16.1512,16.1217],[-16.1522,16.1286],[-16.1531,16.1355],[-16.1541,16.1425],[-16.155,16.1494],[-16.156,16.1563],[-16.1569,16.1632],[-16.1579,16.1702],[-16.1588,16.1771],[-16.1598,16.184],[-16.1607,16.191],[-16.1616,16.1979],[-16.1626,16.2048],[-16.1635,16.2118],[-16.1645,16.2187],[-16.1654,16.2256],[-16.1663,16.2326],[-16.1672,16.2395],[-16.1682,16.2464],[-16.1691,16.2534],[-16.17,16.2603],[-16.171,16.2672],[-16.1719,16.2742],[-16.1728,16.2811],[-16.1737,16.288],[-16.1747,16.295],[-16.1756,16.3019],[-16.1765,16.3088],[-16.1775,16.3158],[-16.1784,16.3227],[-16.1793,16.3296],[-16.1802,16.3366],[-16.1812,16.3435],[-16.1821,16.3504],[-16.183,16.3574],[-16.184,16.3643],[-16.1849,16.3712],[-16.1859,16.3782],[-16.1868,16.3851],[-16.1878,16.392],[-16.1887,16.399],[-16.1897,16.4059],[-16.1906,16.4128],[-16.1916,16.4197],[-16.1925,16.4267],[-16.1935,16.4336],[-16.1945,16.4405],[-16.1954,16.4475],[-16.1964,16.4544],[-16.1974,16.4613],[-16.1984,16.4682],[-16.1994,16.4752],[-16.2003,16.4821],[-16.2013,16.489],[-16.2023,16.4959],[-16.2033,16.5028],[-16.2044,16.5098],[-16.2054,16.5167],[-16.2064,16.5236],[-16.2074,16.5305],[-16.2085,16.5374],[-16.2095,16.5444],[-16.2105,16.5513],[-16.2116,16.5582],[-16.2126,16.5651],[-16.2137,16.572],[-16.2148,16.5789],[-16.2158,16.5858],[-16.2169,16.5928],[-16.218,16.5997],[-16.2191,16.6066],[-16.2202,16.6135],[-16.2213,16.6204],[-16.2225,16.6273],[-16.2236,16.6342],[-16.2247,16.6411],[-16.2259,16.648],[-16.227,16.6549],[-16.2282,16.6618],[-16.2294,16.6687],[-16.2305,16.6756],[-16.2317,16.6824],[-16.233,16.6893],[-16.2342,16.6962],[-16.2354,16.7031],[-16.2367,16.71],[-16.2379,16.7169],[-16.2392,16.7237],[-16.2405,16.7306],[-16.2418,16.7375],[-16.2431,16.7444],[-16.2444,16.7512],[-16.2457,16.7581],[-16.247,16.765],[-16.2483,16.7718],[-16.2497,16.7787],[-16.251,16.7855],[-16.2524,16.7924],[-16.2538,16.7993],[-16.2551,16.8061],[-16.2565,16.813],[-16.2579,16.8198],[-16.2593,16.8267],[-16.2607,16.8335],[-16.2622,16.8404],[-16.2636,16.8472],[-16.265,16.854],[-16.2665,16.8609],[-16.268,16.8677],[-16.2694,16.8746],[-16.2709,16.8814],[-16.2724,16.8882],[-16.2739,16.8951],[-16.2754,16.9019],[-16.277,16.9087],[-16.2785,16.9155],[-16.28,16.9223],[-16.2816,16.9292],[-16.2831,16.936],[-16.2847,16.9428],[-16.2862,16.9496],[-16.2878,16.9564],[-16.2894,16.9633],[-16.291,16.9701],[-16.2926,16.9769],[-16.2942,16.9837],[-16.2958,16.9905],[-16.2974,16.9973],[-16.2991,17.0041],[-16.3007,17.0109],[-16.3024,17.0177],[-16.304,17.0245],[-16.3057,17.0313],[-16.3074,17.0381],[-16.309,17.0448],[-16.3107,17.0516],[-16.3124,17.0584],[-16.3141,17.0652],[-16.3158,17.072],[-16.3175,17.0788],[-16.3193,17.0856],[-16.321,17.0923],[-16.3227,17.0991],[-16.3245,17.1059],[-16.3262,17.1127],[-16.3279,17.1194],[-16.3297,17.1262],[-16.3315,17.133],[-16.3332,17.1398],[-16.335,17.1465],[-16.3368,17.1533],[-16.3385,17.1601],[-16.3403,17.1668],[-16.3421,17.1736],[-16.3439,17.1804],[-16.3457,17.1871],[-16.3475,17.1939],[-16.3493,17.2006],[-16.3511,17.2074],[-16.3529,17.2142],[-16.3547,17.2209],[-16.3565,17.2277],[-16.3583,17.2344],[-16.3601,17.2412],[-16.3619,17.248],[-16.3637,17.2547],[-16.3656,17.2615],[-16.3674,17.2682],[-16.3692,17.275],[-16.371,17.2817],[-16.3728,17.2885],[-16.3747,17.2952],[-16.3765,17.302],[-16.3783,17.3088],[-16.3801,17.3155],[-16.382,17.3223],[-16.3838,17.329],[-16.3856,17.3358],[-16.3874,17.3425],[-16.3893,17.3493],[-16.3911,17.356],[-16.3929,17.3628],[-16.3947,17.3696],[-16.3965,17.3763],[-16.3984,17.3831],[-16.4002,17.3898],[-16.402,17.3966],[-16.4038,17.4033],[-16.4056,17.4101],[-16.4074,17.4169],[-16.4092,17.4236],[-16.411,17.4304],[-16.4128,17.4371],[-16.4146,17.4439],[-16.4164,17.4507],[-16.4182,17.4574],[-16.42,17.4642],[-16.4218,17.471],[-16.4236,17.4777],[-16.4253,17.4845],[-16.4271,17.4913],[-16.4289,17.498],[-16.4306,17.5048],[-16.4324,17.5116],[-16.4341,17.5184],[-16.4359,17.5251],[-16.4376,17.5319],[-16.4393,17.5387],[-16.4411,17.5455],[-16.4428,17.5523],[-16.4445,17.559],[-16.4462,17.5658],[-16.4479,17.5726],[-16.4496,17.5794],[-16.4513,17.5862],[-16.453,17.593],[-16.4547,17.5998],[-16.4564,17.6066],[-16.458,17.6134],[-16.4597,17.6201],[-16.4613,17.6269],[-16.463,17.6337],[-16.4646,17.6406],[-16.4662,17.6474],[-16.4678,17.6542],[-16.4694,17.661],[-16.471,17.6678],[-16.4726,17.6746],[-16.4742,17.6814],[-16.4758,17.6882],[-16.4774,17.695],[-16.4789,17.7019],[-16.4805,17.7087],[-16.482,17.7155],[-16.4835,17.7223],[-16.485,17.7292],[-16.4865,17.736],[-16.488,17.7428],[-16.4895,17.7497],[-16.491,17.7565],[-16.4924,17.7634],[-16.4939,17.7702],[-16.4953,17.777],[-16.4967,17.7839],[-16.4982,17.7907],[-16.4996,17.7976],[-16.5009,17.8044],[-16.5023,17.8113],[-16.5037,17.8182],[-16.505,17.825],[-16.5064,17.8319],[-16.5077,17.8388],[-16.509,17.8456],[-16.5103,17.8525],[-16.5116,17.8594],[-16.5129,17.8662],[-16.5142,17.8731],[-16.5154,17.88],[-16.5167,17.8869],[-16.5179,17.8938],[-16.5191,17.9007],[-16.5203,17.9076],[-16.5215,17.9144],[-16.5226,17.9213],[-16.5238,17.9282],[-16.5249,17.9351],[-16.526,17.942],[-16.5271,17.9489],[-16.5282,17.9559],[-16.5293,17.9628],[-16.5303,17.9697],[-16.5314,17.9766],[-16.5324,17.9835],[-16.5334,17.9904],[-16.5344,17.9973],[-16.5354,18.0043],[-16.5364,18.0112],[-16.5373,18.0181],[-16.5382,18.0251],[-16.5391,18.032],[-16.54,18.0389],[-16.5409,18.0459],[-16.5418,18.0528],[-16.5426,18.0597],[-16.5434,18.0667],[-16.5442,18.0736],[-16.545,18.0806],[-16.5457,18.0875],[-16.5465,18.0945],[-16.5472,18.1014],[-16.5479,18.1084],[-16.5486,18.1153],[-16.5492,18.1223],[-16.5499,18.1293],[-16.5505,18.1362],[-16.5511,18.1432],[-16.5517,18.1501],[-16.5523,18.1571],[-16.5529,18.1641],[-16.5534,18.171],[-16.5539,18.178],[-16.5544,18.185],[-16.5549,18.192],[-16.5554,18.1989],[-16.5559,18.2059],[-16.5563,18.2129],[-16.5567,18.2199],[-16.5572,18.2268],[-16.5575,18.2338],[-16.5579,18.2408],[-16.5583,18.2478],[-16.5586,18.2548],[-16.5589,18.2617],[-16.5593,18.2687],[-16.5595,18.2757],[-16.5598,18.2827],[-16.5601,18.2897],[-16.5603,18.2967],[-16.5605,18.3037],[-16.5608,18.3107],[-16.5609,18.3176],[-16.5611,18.3246],[-16.5613,18.3316],[-16.5614,18.3386],[-16.5615,18.3456],[-16.5617,18.3526],[-16.5618,18.3596],[-16.5618,18.3666],[-16.5619,18.3736],[-16.562,18.3806],[-16.562,18.3876],[-16.562,18.3946],[-16.562,18.4015],[-16.562,18.4085],[-16.562,18.4155],[-16.562,18.4225],[-16.5619,18.4295],[-16.5619,18.4365],[-16.5618,18.4435],[-16.5617,18.4505],[-16.5616,18.4575],[-16.5615,18.4645],[-16.5613,18.4715],[-16.5612,18.4785],[-16.5611,18.4855],[-16.5609,18.4924],[-16.5607,18.4994],[-16.5605,18.5064],[-16.5603,18.5134],[-16.5601,18.5204],[-16.5599,18.5274],[-16.5597,18.5344],[-16.5594,18.5414],[-16.5592,18.5484],[-16.5589,18.5554],[-16.5586,18.5624],[-16.5583,18.5693],[-16.558,18.5763],[-16.5577,18.5833],[-16.5574,18.5903],[-16.5571,18.5973],[-16.5568,18.6043],[-16.5564,18.6113],[-16.5561,18.6182],[-16.5557,18.6252],[-16.5553,18.6322],[-16.5549,18.6392],[-16.5545,18.6462],[-16.5541,18.6532],[-16.5537,18.6602],[-16.5533,18.6671],[-16.5529,18.6741],[-16.5524,18.6811],[-16.552,18.6881],[-16.5515,18.6951],[-16.5511,18.702],[-16.5506,18.709],[-16.5502,18.716],[-16.5497,18.723],[-16.5492,18.7299],[-16.5487,18.7369],[-16.5482,18.7439],[-16.5477,18.7509],[-16.5472,18.7579],[-16.5466,18.7648],[-16.5461,18.7718],[-16.5456,18.7788],[-16.545,18.7858],[-16.5445,18.7927],[-16.5439,18.7997],[-16.5434,18.8067],[-16.5428,18.8136],[-16.5422,18.8206],[-16.5417,18.8276],[-16.5411,18.8346],[-16.5405,18.8415],[-16.5399,18.8485],[-16.5393,18.8555],[-16.5387,18.8624],[-16.5381,18.8694],[-16.5375,18.8764],[-16.5369,18.8833],[-16.5362,18.8903],[-16.5356,18.8973],[-16.535,18.9042],[-16.5344,18.9112],[-16.5337,18.9182],[-16.5331,18.9251],[-16.5324,18.9321],[-16.5318,18.9391],[-16.5311,18.946],[-16.5305,18.953],[-16.5298,18.96],[-16.5292,18.9669],[-16.5285,18.9739],[-16.5278,18.9809],[-16.5272,18.9878],[-16.5265,18.9948],[-16.5258,19.0017],[-16.5252,19.0087],[-16.5245,19.0157],[-16.5238,19.0226],[-16.5231,19.0296],[-16.5224,19.0366],[-16.5218,19.0435],[-16.5211,19.0505],[-16.5204,19.0574],[-16.5197,19.0644],[-16.519,19.0714],[-16.5183,19.0783],[-16.5176,19.0853],[-16.5169,19.0922],[-16.5162,19.0992],[-16.5155,19.1062],[-16.5148,19.1131],[-16.5141,19.1201],[-16.5135,19.127],[-16.5128,19.134],[-16.5121,19.141],[-16.5114,19.1479],[-16.5107,19.1549],[-16.51,19.1618],[-16.5093,19.1688],[-16.5086,19.1758],[-16.5079,19.1827],[-16.5072,19.1897],[-16.5065,19.1966],[-16.5058,19.2036],[-16.5051,19.2106],[-16.5044,19.2175],[-16.5037,19.2245],[-16.503,19.2314],[-16.5024,19.2384],[-16.5017,19.2454],[-16.501,19.2523],[-16.5003,19.2593],[-16.4996,19.2662],[-16.499,19.2732],[-16.4983,19.2802],[-16.4976,19.2871],[-16.4969,19.2941],[-16.4963,19.301],[-16.4956,19.308],[-16.4949,19.315],[-16.4943,19.3219],[-16.4936,19.3289],[-16.493,19.3359],[-16.4923,19.3428],[-16.4917,19.3498],[-16.491,19.3567],[-16.4904,19.3637],[-16.4897,19.3707],[-16.4891,19.3776],[-16.4885,19.3846],[-16.4879,19.3916],[-16.4872,19.3985],[-16.4866,19.4055],[-16.486,19.4125],[-16.4854,19.4194],[-16.4848,19.4264],[-16.4842,19.4334],[-16.4836,19.4403],[-16.483,19.4473],[-16.4824,19.4543],[-16.4818,19.4612],[-16.4813,19.4682],[-16.4807,19.4752],[-16.4801,19.4821],[-16.4796,19.4891],[-16.479,19.4961],[-16.4785,19.503],[-16.4779,19.51],[-16.4774,19.517],[-16.4769,19.524],[-16.4764,19.5309],[-16.4758,19.5379],[-16.4753,19.5449],[-16.4748,19.5519],[-16.4743,19.5588],[-16.4739,19.5658],[-16.4734,19.5728],[-16.4729,19.5797],[-16.4724,19.5867],[-16.472,19.5937],[-16.4715,19.6007],[-16.4711,19.6077],[-16.4706,19.6146],[-16.4702,19.6216],[-16.4698,19.6286],[-16.4694,19.6356],[-16.469,19.6425],[-16.4686,19.6495],[-16.4682,19.6565],[-16.4678,19.6635],[-16.4674,19.6705],[-16.467,19.6774],[-16.4667,19.6844],[-16.4663,19.6914],[-16.4659,19.6984],[-16.4656,19.7054],[-16.4653,19.7123],[-16.4649,19.7193],[-16.4646,19.7263],[-16.4643,19.7333],[-16.464,19.7403],[-16.4636,19.7473],[-16.4633,19.7543],[-16.463,19.7612],[-16.4628,19.7682],[-16.4625,19.7752],[-16.4622,19.7822],[-16.4619,19.7892],[-16.4617,19.7962],[-16.4614,19.8031],[-16.4612,19.8101],[-16.4609,19.8171],[-16.4607,19.8241],[-16.4605,19.8311],[-16.4603,19.8381],[-16.46,19.8451],[-16.4598,19.8521],[-16.4596,19.8591],[-16.4594,19.866],[-16.4593,19.873],[-16.4591,19.88],[-16.4589,19.887],[-16.4587,19.894],[-16.4585,19.901],[-16.4584,19.908],[-16.4582,19.915],[-16.4581,19.922],[-16.4579,19.929],[-16.4578,19.9359],[-16.4576,19.9429],[-16.4575,19.9499],[-16.4574,19.9569],[-16.4572,19.9639],[-16.4571,19.9709],[-16.457,19.9779],[-16.4569,19.9849],[-16.4568,19.9919],[-16.4567,19.9989],[-16.4566,20.0059],[-16.4565,20.0129],[-16.4564,20.0198],[-16.4563,20.0268],[-16.4562,20.0338],[-16.4561,20.0408],[-16.456,20.0478],[-16.4559,20.0548],[-16.4558,20.0618],[-16.4558,20.0688],[-16.4557,20.0758],[-16.4556,20.0828],[-16.4556,20.0898],[-16.4555,20.0968],[-16.4554,20.1038],[-16.4554,20.1107],[-16.4553,20.1177],[-16.4553,20.1247],[-16.4552,20.1317],[-16.4552,20.1387],[-16.4551,20.1457],[-16.4551,20.1527],[-16.455,20.1597],[-16.455,20.1667],[-16.455,20.1737],[-16.4549,20.1807],[-16.4549,20.1877],[-16.4549,20.1947],[-16.4548,20.2017],[-16.4548,20.2086],[-16.4548,20.2156],[-16.4548,20.2226],[-16.4547,20.2296],[-16.4547,20.2366],[-16.4547,20.2436],[-16.4547,20.2506],[-16.4546,20.2576],[-16.4546,20.2646],[-16.4546,20.2716],[-16.4546,20.2786],[-16.4546,20.2856],[-16.4546,20.2926],[-16.4546,20.2996],[-16.4545,20.3066],[-16.4545,20.3136],[-16.4545,20.3205],[-16.4545,20.3275],[-16.4545,20.3345],[-16.4545,20.3415],[-16.4545,20.3485],[-16.4545,20.3555],[-16.4545,20.3625],[-16.4544,20.3695],[-16.4544,20.3765],[-16.4544,20.3835],[-16.4544,20.3905],[-16.4544,20.3975],[-16.4544,20.4045],[-16.4544,20.4115],[-16.4544,20.4185],[-16.4544,20.4255],[-16.4544,20.4325],[-16.4544,20.4394],[-16.4543,20.4464],[-16.4543,20.4534],[-16.4543,20.4604],[-16.4543,20.4674],[-16.4543,20.4744],[-16.4543,20.4814],[-16.4543,20.4884],[-16.4542,20.4954],[-16.4542,20.5024],[-16.4542,20.5094],[-16.4542,20.5164],[-16.4542,20.5234],[-16.4542,20.5304],[-16.4541,20.5374],[-16.4541,20.5444],[-16.4541,20.5514],[-16.454,20.5583],[-16.454,20.5653],[-16.454,20.5723],[-16.454,20.5793],[-16.4539,20.5863],[-16.4539,20.5933],[-16.4538,20.6003],[-16.4538,20.6073],[-16.4538,20.6143],[-16.4537,20.6213],[-16.4537,20.6283],[-16.4536,20.6353],[-16.4536,20.6423],[-16.4535,20.6493],[-16.4534,20.6563],[-16.4534,20.6633],[-16.4533,20.6703],[-16.4533,20.6772],[-16.4532,20.6842],[-16.4531,20.6912],[-16.453,20.6982],[-16.453,20.7052],[-16.4529,20.7122],[-16.4528,20.7192],[-16.4527,20.7262],[-16.4526,20.7332],[-16.4525,20.7402],[-16.4524,20.7472],[-16.4523,20.7542],[-16.4522,20.7612],[-16.4521,20.7682],[-16.452,20.7752],[-16.4518,20.7822],[-16.4517,20.7891],[-16.4516,20.7961],[-16.4514,20.8031],[-16.4513,20.8101],[-16.4511,20.8171],[-16.451,20.8241],[-16.4508,20.8311],[-16.4507,20.8381],[-16.4505,20.8451],[-16.4503,20.8521],[-16.4502,20.8591],[-16.45,20.8661],[-16.4498,20.8731],[-16.4496,20.8801],[-16.4494,20.887],[-16.4492,20.894],[-16.449,20.901],[-16.4487,20.908],[-16.4485,20.915],[-16.4483,20.922],[-16.448,20.929],[-16.4478,20.936],[-16.4475,20.943],[-16.4472,20.95],[-16.447,20.957],[-16.4467,20.9639],[-16.4464,20.9709],[-16.4461,20.9779],[-16.4458,20.9849],[-16.4455,20.9919],[-16.4451,20.9989],[-16.4448,21.0059],[-16.4444,21.0129],[-16.4441,21.0198],[-16.4437,21.0268],[-16.4433,21.0338],[-16.443,21.0408],[-16.4426,21.0478],[-16.4421,21.0548],[-16.4417,21.0617],[-16.4413,21.0687],[-16.4408,21.0757],[-16.4404,21.0827],[-16.4399,21.0897],[-16.4394,21.0966],[-16.4389,21.1036],[-16.4384,21.1106],[-16.4379,21.1176],[-16.4373,21.1245],[-16.4368,21.1315],[-16.4362,21.1385],[-16.4356,21.1455],[-16.435,21.1524],[-16.4344,21.1594],[-16.4338,21.1663],[-16.4331,21.1733],[-16.4325,21.1803],[-16.4318,21.1872],[-16.4311,21.1942],[-16.4304,21.2012],[-16.4297,21.2081],[-16.4289,21.2151],[-16.4282,21.222],[-16.4274,21.229],[-16.4266,21.2359],[-16.4257,21.2429],[-16.4249,21.2498],[-16.424,21.2567],[-16.4231,21.2637],[-16.4222,21.2706],[-16.4213,21.2775],[-16.4203,21.2845],[-16.4193,21.2914],[-16.4183,21.2983],[-16.4173,21.3052],[-16.4163,21.3121],[-16.4152,21.319],[-16.4141,21.3259],[-16.4129,21.3328],[-16.4118,21.3397],[-16.4106,21.3466],[-16.4094,21.3535],[-16.4081,21.3604],[-16.4069,21.3672],[-16.4056,21.3741],[-16.4043,21.381],[-16.4029,21.3878],[-16.4015,21.3947],[-16.4001,21.4015],[-16.3986,21.4084],[-16.3971,21.4152],[-16.3956,21.422],[-16.3941,21.4288],[-16.3925,21.4356],[-16.3909,21.4424],[-16.3893,21.4492],[-16.3876,21.456],[-16.3859,21.4628],[-16.3842,21.4696],[-16.3824,21.4763],[-16.3806,21.4831],[-16.3788,21.4898],[-16.3769,21.4966],[-16.375,21.5033],[-16.3731,21.51],[-16.3712,21.5167],[-16.3692,21.5234],[-16.3672,21.5301],[-16.3651,21.5368],[-16.3631,21.5435],[-16.361,21.5502],[-16.3589,21.5568],[-16.3567,21.5635],[-16.3545,21.5701],[-16.3523,21.5768],[-16.3501,21.5834],[-16.3478,21.59],[-16.3455,21.5966],[-16.3432,21.6032],[-16.3409,21.6098],[-16.3385,21.6164],[-16.3361,21.623],[-16.3337,21.6295],[-16.3313,21.6361],[-16.3288,21.6426],[-16.3264,21.6492],[-16.3239,21.6557],[-16.3213,21.6623],[-16.3188,21.6688],[-16.3163,21.6753],[-16.3137,21.6818],[-16.3111,21.6883],[-16.3085,21.6948],[-16.3059,21.7013],[-16.3033,21.7078],[-16.3007,21.7143],[-16.2981,21.7208],[-16.2954,21.7273],[-16.2928,21.7338],[-16.2901,21.7402],[-16.2875,21.7467],[-16.2848,21.7532],[-16.2821,21.7597],[-16.2795,21.7661],[-16.2768,21.7726],[-16.2741,21.7791],[-16.2715,21.7855],[-16.2688,21.792],[-16.2662,21.7985],[-16.2635,21.8049],[-16.2609,21.8114],[-16.2583,21.8179],[-16.2557,21.8244],[-16.2531,21.8309],[-16.2505,21.8373],[-16.2479,21.8438],[-16.2453,21.8503],[-16.2428,21.8568],[-16.2403,21.8633],[-16.2378,21.8698],[-16.2353,21.8764],[-16.2328,21.8829],[-16.2304,21.8894],[-16.2279,21.896],[-16.2255,21.9025],[-16.2232,21.9091],[-16.2208,21.9156],[-16.2185,21.9222],[-16.2162,21.9288],[-16.214,21.9354],[-16.2117,21.942],[-16.2095,21.9486],[-16.2073,21.9552],[-16.2052,21.9618],[-16.2031,21.9685],[-16.201,21.9751],[-16.1989,21.9817],[-16.1969,21.9884],[-16.1948,21.9951],[-16.1929,22.0018],[-16.1909,22.0084],[-16.189,22.0151],[-16.1871,22.0218],[-16.1852,22.0286],[-16.1834,22.0353],[-16.1816,22.042],[-16.1798,22.0488],[-16.178,22.0555],[-16.1763,22.0623],[-16.1746,22.069],[-16.1729,22.0758],[-16.1713,22.0826],[-16.1696,22.0894],[-16.168,22.0962],[-16.1664,22.1029],[-16.1648,22.1097],[-16.1632,22.1165],[-16.1617,22.1233],[-16.1601,22.1302],[-16.1586,22.137],[-16.1571,22.1438],[-16.1556,22.1506],[-16.1541,22.1574],[-16.1526,22.1643],[-16.1512,22.1711],[-16.1497,22.1779],[-16.1483,22.1848],[-16.1469,22.1916],[-16.1455,22.1984],[-16.1441,22.2053],[-16.1427,22.2121],[-16.1413,22.219],[-16.1399,22.2258],[-16.1385,22.2327],[-16.1372,22.2395],[-16.1358,22.2464],[-16.1344,22.2532],[-16.1331,22.2601],[-16.1317,22.2669],[-16.1304,22.2738],[-16.129,22.2807],[-16.1277,22.2875],[-16.1263,22.2944],[-16.125,22.3012],[-16.1237,22.3081],[-16.1223,22.315],[-16.121,22.3218],[-16.1196,22.3287],[-16.1183,22.3355],[-16.1169,22.3424],[-16.1156,22.3493],[-16.1142,22.3561],[-16.1129,22.363],[-16.1115,22.3698],[-16.1101,22.3767],[-16.1088,22.3835],[-16.1074,22.3904],[-16.106,22.3973],[-16.1046,22.4041],[-16.1032,22.411],[-16.1018,22.4178],[-16.1003,22.4247],[-16.0989,22.4315],[-16.0974,22.4383],[-16.096,22.4452],[-16.0945,22.452],[-16.093,22.4589],[-16.0915,22.4657],[-16.09,22.4725],[-16.0884,22.4793],[-16.0869,22.4862],[-16.0853,22.493],[-16.0837,22.4998],[-16.0821,22.5066],[-16.0804,22.5134],[-16.0788,22.5202],[-16.0771,22.527],[-16.0754,22.5338],[-16.0736,22.5405],[-16.0719,22.5473],[-16.07,22.5541],[-16.0682,22.5608],[-16.0663,22.5676],[-16.0644,22.5743],[-16.0625,22.581],[-16.0605,22.5877],[-16.0585,22.5944],[-16.0564,22.6011],[-16.0543,22.6078],[-16.0521,22.6144],[-16.0499,22.621],[-16.0476,22.6276],[-16.0453,22.6342],[-16.0429,22.6408],[-16.0404,22.6473],[-16.0379,22.6538],[-16.0353,22.6603],[-16.0326,22.6667],[-16.0298,22.6731],[-16.027,22.6795],[-16.0241,22.6858],[-16.0211,22.6921],[-16.018,22.6984],[-16.0149,22.7045],[-16.0116,22.7107],[-16.0082,22.7167],[-16.0047,22.7227],[-16.0011,22.7286],[-15.9974,22.7345],[-15.9936,22.7402],[-15.9897,22.7459],[-15.9857,22.7515],[-15.9816,22.757],[-15.9773,22.7625],[-15.9729,22.7678],[-15.9684,22.773],[-15.9637,22.7781],[-15.9589,22.783],[-15.9539,22.7878],[-15.9488,22.7924],[-15.9435,22.7969],[-15.9381,22.8013],[-15.9325,22.8055],[-15.9268,22.8095],[-15.9209,22.8133],[-15.9149,22.8169],[-15.9088,22.8203],[-15.9025,22.8234],[-15.8962,22.8264],[-15.8897,22.8291],[-15.8831,22.8316],[-15.8765,22.8339],[-15.8698,22.836],[-15.8631,22.838],[-15.8563,22.8398],[-15.8495,22.8414],[-15.8427,22.843],[-15.8359,22.8444],[-15.8291,22.8458],[-15.8223,22.8472],[-15.8154,22.8485],[-15.8086,22.8499],[-15.8018,22.8512],[-15.795,22.8527],[-15.7882,22.8542],[-15.7814,22.8557],[-15.7746,22.8574],[-15.7679,22.8593],[-15.7611,22.8613],[-15.7545,22.8634],[-15.7479,22.8658],[-15.7413,22.8683],[-15.7349,22.8711],[-15.7285,22.874],[-15.7222,22.8772],[-15.7161,22.8806],[-15.71,22.8841],[-15.7039,22.8877],[-15.698,22.8914],[-15.6921,22.8953],[-15.6863,22.8992],[-15.6805,22.9032],[-15.6748,22.9071],[-15.669,22.9111],[-15.6633,22.9152],[-15.6575,22.9192],[-15.6518,22.9233],[-15.6461,22.9274],[-15.6404,22.9315],[-15.6347,22.9356],[-15.629,22.9397],[-15.6234,22.9438],[-15.6177,22.948],[-15.612,22.9521],[-15.6064,22.9563],[-15.6008,22.9605],[-15.5951,22.9647],[-15.5895,22.9689],[-15.5839,22.9731],[-15.5783,22.9773],[-15.5727,22.9815],[-15.5671,22.9857],[-15.5615,22.99],[-15.5559,22.9942],[-15.5503,22.9985],[-15.5447,23.0027],[-15.5391,23.007],[-15.5336,23.0112],[-15.528,23.0155],[-15.5224,23.0198],[-15.5169,23.0241],[-15.5113,23.0284],[-15.5058,23.0327],[-15.5002,23.037],[-15.4947,23.0413],[-15.4891,23.0456],[-15.4836,23.0499],[-15.4781,23.0542],[-15.4726,23.0585],[-15.467,23.0629],[-15.4615,23.0672],[-15.456,23.0715],[-15.4505,23.0759],[-15.445,23.0802],[-15.4395,23.0846]]},\"properties\":{\"i\":7,\"source\":3522,\"mouth\":2037,\"discharge\":3,\"length\":376.91,\"width\":10.06,\"widthFactor\":20,\"sourceWidth\":1,\"parent\":7,\"cells\":[3522,3192,2774,2354,2122,2037],\"basin\":7,\"name\":\"Southern Tributary\",\"type\":\"Tributary\",\"points\":[[431.61,883.16],[391.02,807.06],[371.37,708.45],[376.1,597.7],[390.9,545.8],[411.14,533]],\"id\":\"river7\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[1.9361,30.9814],[1.9361,30.9814],[1.9361,30.9814],[1.9361,30.9814],[1.9361,30.9814],[1.9361,30.9814],[1.9362,30.9814],[1.9362,30.9815],[1.9362,30.9815],[1.9362,30.9815],[1.9363,30.9815],[1.9363,30.9815],[1.9363,30.9815],[1.9364,30.9816],[1.9364,30.9816],[1.9377,30.9812],[1.9429,30.9787],[1.948,30.9749],[1.9529,30.9705],[1.9576,30.9656],[1.9622,30.9605],[1.9666,30.9552],[1.9709,30.9498],[1.9751,30.9443],[1.9792,30.9387],[1.9833,30.933],[1.9873,30.9273],[1.9913,30.9216],[1.9953,30.9159],[1.9992,30.9101],[2.003,30.9043],[2.0069,30.8984],[2.0107,30.8926],[2.0145,30.8867],[2.0183,30.8808],[2.0221,30.875],[2.0259,30.869],[2.0296,30.8631],[2.0334,30.8572],[2.0371,30.8513],[2.0408,30.8454],[2.0445,30.8394],[2.0482,30.8335],[2.0519,30.8275],[2.0556,30.8216],[2.0593,30.8156],[2.0629,30.8096],[2.0666,30.8037],[2.0703,30.7977],[2.074,30.7918],[2.0776,30.7858],[2.0813,30.7798],[2.085,30.7739],[2.0887,30.7679],[2.0923,30.7619],[2.096,30.756],[2.0997,30.75],[2.1034,30.7441],[2.1071,30.7381],[2.1109,30.7322],[2.1147,30.7264],[2.1185,30.7205],[2.1223,30.7146],[2.1262,30.7088],[2.1301,30.7029],[2.1339,30.6971],[2.1378,30.6913],[2.1418,30.6855],[2.1457,30.6797],[2.1496,30.674],[2.1536,30.6682],[2.1576,30.6624],[2.1615,30.6567],[2.1655,30.651],[2.1695,30.6452],[2.1736,30.6395],[2.1776,30.6338],[2.1816,30.6281],[2.1857,30.6224],[2.1897,30.6167],[2.1938,30.611],[2.1978,30.6054],[2.2019,30.5997],[2.206,30.594],[2.2101,30.5884],[2.2142,30.5827],[2.2183,30.5771],[2.2224,30.5714],[2.2266,30.5658],[2.2307,30.5602],[2.2349,30.5546],[2.2391,30.549],[2.2434,30.5434],[2.2476,30.5379],[2.2519,30.5323],[2.2562,30.5268],[2.2605,30.5213],[2.2648,30.5158],[2.2692,30.5103],[2.2735,30.5048],[2.2779,30.4993],[2.2822,30.4938],[2.2866,30.4883],[2.2909,30.4828],[2.2953,30.4773],[2.2996,30.4718],[2.304,30.4663],[2.3083,30.4608],[2.3126,30.4553],[2.3169,30.4498],[2.3213,30.4442],[2.3255,30.4387],[2.3298,30.4331],[2.3341,30.4276],[2.3383,30.422],[2.3425,30.4164],[2.3466,30.4108],[2.3508,30.4052],[2.3549,30.3995],[2.359,30.3938],[2.363,30.3881],[2.367,30.3824],[2.3709,30.3767],[2.3748,30.3709],[2.3787,30.3651],[2.3824,30.3592],[2.3861,30.3534],[2.3898,30.3475],[2.3934,30.3416],[2.3969,30.3356],[2.4003,30.3296],[2.4036,30.3236],[2.4068,30.3175],[2.41,30.3114],[2.413,30.3053],[2.416,30.2991],[2.4188,30.293],[2.4216,30.2867],[2.4243,30.2805],[2.4269,30.2743],[2.4294,30.268],[2.4318,30.2617],[2.4341,30.2554],[2.4363,30.2491],[2.4385,30.2427],[2.4405,30.2363],[2.4425,30.23],[2.4444,30.2235],[2.4462,30.2171],[2.448,30.2107],[2.4496,30.2042],[2.4512,30.1978],[2.4528,30.1913],[2.4542,30.1847],[2.4556,30.1782],[2.4569,30.1717],[2.4581,30.1651],[2.4593,30.1585],[2.4604,30.1518],[2.4614,30.1452],[2.4623,30.1385],[2.4632,30.1318],[2.464,30.1251],[2.4648,30.1183],[2.4654,30.1116],[2.4661,30.1048],[2.4666,30.098],[2.4671,30.0911],[2.4675,30.0843],[2.4679,30.0774],[2.4682,30.0705],[2.4685,30.0636],[2.4688,30.0566],[2.469,30.0497],[2.4691,30.0427],[2.4693,30.0358],[2.4694,30.0288],[2.4695,30.0218],[2.4696,30.0148],[2.4697,30.0078],[2.4698,30.0008],[2.4699,29.9938],[2.47,29.9868],[2.4701,29.9799],[2.4703,29.9729],[2.4705,29.9659],[2.4705,29.9589],[2.4705,29.9519],[2.4704,29.9449],[2.4703,29.9379],[2.4701,29.931],[2.4698,29.924],[2.4695,29.917],[2.4692,29.91],[2.4689,29.903],[2.4685,29.896],[2.4681,29.8891],[2.4676,29.8821],[2.4672,29.8751],[2.4667,29.8681],[2.4663,29.8612],[2.4658,29.8542],[2.4654,29.8472],[2.465,29.8402],[2.4645,29.8333],[2.4641,29.8263],[2.4638,29.8193],[2.4634,29.8123],[2.4631,29.8053],[2.4629,29.7983],[2.4627,29.7913],[2.4625,29.7844],[2.4624,29.7774],[2.4624,29.7704],[2.4625,29.7634],[2.4626,29.7564],[2.4628,29.7494],[2.4631,29.7424],[2.4634,29.7354],[2.4639,29.7284],[2.4645,29.7215],[2.465,29.7145],[2.4656,29.7075],[2.4662,29.7006],[2.4667,29.6936],[2.4674,29.6867],[2.468,29.6797],[2.4686,29.6728],[2.4693,29.6659],[2.4701,29.659],[2.4709,29.6521],[2.4717,29.6452],[2.4726,29.6384],[2.4736,29.6316],[2.4746,29.6248],[2.4757,29.6181],[2.4769,29.6113],[2.4782,29.6046],[2.4796,29.598],[2.481,29.5914],[2.4825,29.5848],[2.4842,29.5783],[2.4859,29.5718],[2.4877,29.5654],[2.4897,29.559],[2.4917,29.5527],[2.4939,29.5465],[2.4961,29.5403],[2.4984,29.5341],[2.5008,29.528],[2.5034,29.5219],[2.506,29.5159],[2.5088,29.51],[2.5116,29.5041],[2.5145,29.4982],[2.5176,29.4924],[2.5207,29.4867],[2.524,29.481],[2.5273,29.4753],[2.5308,29.4697],[2.5344,29.4642],[2.5381,29.4587],[2.5419,29.4533],[2.5458,29.4479],[2.5498,29.4426],[2.554,29.4373],[2.5582,29.4321],[2.5626,29.427],[2.5671,29.4219],[2.5717,29.4169],[2.5764,29.412],[2.5812,29.4072],[2.5861,29.4024],[2.5912,29.3977],[2.5963,29.3931],[2.6015,29.3886],[2.6068,29.3842],[2.6122,29.3798],[2.6177,29.3756],[2.6232,29.3713],[2.6288,29.3672],[2.6344,29.3631],[2.6401,29.3591],[2.6459,29.3551],[2.6516,29.3512],[2.6575,29.3474],[2.6633,29.3436],[2.6692,29.3398],[2.6752,29.3361],[2.6811,29.3325],[2.6871,29.3288],[2.6932,29.3253],[2.6992,29.3217],[2.7053,29.3182],[2.7114,29.3147],[2.7175,29.3113],[2.7236,29.3079],[2.7298,29.3045],[2.7359,29.3011],[2.7421,29.2978],[2.7483,29.2945],[2.7545,29.2912],[2.7607,29.288],[2.7669,29.2847],[2.7732,29.2815],[2.7794,29.2783],[2.7857,29.2751],[2.7919,29.272],[2.7982,29.2688],[2.8045,29.2657],[2.8108,29.2625],[2.8171,29.2594],[2.8234,29.2563],[2.8297,29.2532],[2.836,29.2501],[2.8423,29.247],[2.8486,29.244],[2.8549,29.2409],[2.8613,29.2378],[2.8676,29.2348],[2.8739,29.2317],[2.8802,29.2286],[2.8865,29.2256],[2.8929,29.2225],[2.8992,29.2194],[2.9055,29.2164],[2.9118,29.2133],[2.9181,29.2102],[2.9244,29.2071],[2.9307,29.204],[2.937,29.2009],[2.9433,29.1978],[2.9496,29.1947],[2.9559,29.1916],[2.9623,29.1886],[2.9686,29.1855],[2.9749,29.1825],[2.9813,29.1795],[2.9876,29.1765],[2.994,29.1736],[3.0004,29.1706],[3.0068,29.1677],[3.0132,29.1648],[3.0196,29.1619],[3.0259,29.1589],[3.0323,29.1561],[3.0388,29.1532],[3.0452,29.1503],[3.0516,29.1474],[3.058,29.1445],[3.0644,29.1417],[3.0708,29.1388],[3.0772,29.1359],[3.0836,29.133],[3.09,29.1302],[3.0964,29.1273],[3.1028,29.1244],[3.1092,29.1214],[3.1156,29.1186],[3.122,29.1157],[3.1284,29.1129],[3.1348,29.1101],[3.1413,29.1073],[3.1477,29.1046],[3.1542,29.1018],[3.1607,29.0991],[3.1672,29.0964],[3.1737,29.0937],[3.1802,29.091],[3.1867,29.0884],[3.1932,29.0857],[3.1997,29.0831],[3.2062,29.0805],[3.2127,29.0778],[3.2192,29.0752],[3.2258,29.0726],[3.2323,29.07],[3.2388,29.0674],[3.2453,29.0648],[3.2518,29.0622],[3.2584,29.0596],[3.2649,29.0569],[3.2714,29.0543],[3.2779,29.0517],[3.2844,29.0491],[3.2909,29.0464],[3.2974,29.0438],[3.3039,29.0411],[3.3104,29.0384],[3.3169,29.0357],[3.3234,29.033],[3.3299,29.0302],[3.3363,29.0275],[3.3428,29.0247],[3.3492,29.0219],[3.3556,29.0191],[3.362,29.0162],[3.3684,29.0133],[3.3748,29.0104],[3.3811,29.0074],[3.3874,29.0044],[3.3937,29.0013],[3.4,28.9982],[3.4062,28.9951],[3.4125,28.9919],[3.4186,28.9886],[3.4248,28.9853],[3.4309,28.9819],[3.4369,28.9785],[3.4429,28.9749],[3.4488,28.9713],[3.4547,28.9677],[3.4605,28.9639],[3.4662,28.96],[3.4718,28.956],[3.4773,28.952],[3.4827,28.9478],[3.488,28.9436],[3.4932,28.9392],[3.4983,28.9347],[3.5032,28.9302],[3.508,28.9256],[3.5127,28.9209],[3.5172,28.9161],[3.5217,28.9112],[3.526,28.9063],[3.5301,28.9012],[3.5342,28.8962],[3.5381,28.891],[3.5419,28.8858],[3.5457,28.8806],[3.5493,28.8753],[3.5528,28.8699],[3.5562,28.8645],[3.5595,28.859],[3.5628,28.8534],[3.5659,28.8478],[3.569,28.8421],[3.572,28.8364],[3.5749,28.8306],[3.5778,28.8247],[3.5806,28.8187],[3.5833,28.8127],[3.5859,28.8066],[3.5885,28.8005],[3.5911,28.7942],[3.5935,28.788],[3.596,28.7816],[3.5984,28.7752],[3.6008,28.7688],[3.6032,28.7623],[3.6055,28.7558],[3.6078,28.7493],[3.6102,28.7427],[3.6125,28.7362],[3.6149,28.7296],[3.6173,28.723],[3.6197,28.7165],[3.6221,28.7099],[3.6245,28.7033],[3.6269,28.6967],[3.6293,28.6902],[3.6316,28.6836],[3.6339,28.677],[3.6362,28.6705],[3.6385,28.6639],[3.6408,28.6574],[3.6431,28.6508],[3.6454,28.6443],[3.6477,28.6377],[3.65,28.6312],[3.6523,28.6247],[3.6546,28.6182],[3.6569,28.6117],[3.6593,28.6052],[3.6616,28.5987],[3.664,28.5922],[3.6664,28.5857],[3.6689,28.5792],[3.6714,28.5728],[3.6739,28.5663],[3.6765,28.5599],[3.6792,28.5535],[3.6818,28.547],[3.6846,28.5406],[3.6874,28.5343],[3.6903,28.5279],[3.6932,28.5216],[3.6962,28.5153],[3.6993,28.509],[3.7024,28.5027],[3.7055,28.4965],[3.7087,28.4902],[3.7118,28.4839],[3.715,28.4777],[3.7181,28.4714],[3.7213,28.4652],[3.7244,28.4589],[3.7276,28.4527],[3.7307,28.4464],[3.7338,28.4401],[3.7368,28.4339],[3.7398,28.4276],[3.7428,28.4213],[3.7457,28.4149],[3.7486,28.4086],[3.7514,28.4023],[3.7541,28.3959],[3.7568,28.3895],[3.7594,28.3832],[3.7619,28.3768],[3.7644,28.3704],[3.7668,28.3639],[3.7692,28.3575],[3.7714,28.3511],[3.7737,28.3447],[3.7758,28.3382],[3.7779,28.3318],[3.78,28.3253],[3.782,28.3188],[3.7839,28.3124],[3.7859,28.3059],[3.7878,28.2994],[3.7896,28.2929],[3.7915,28.2864],[3.7933,28.2799],[3.7951,28.2734],[3.797,28.2669],[3.7988,28.2603],[3.8006,28.2538],[3.8025,28.2472],[3.8044,28.2406],[3.8062,28.234],[3.8081,28.2274],[3.8101,28.2207],[3.812,28.2141],[3.814,28.2074],[3.816,28.2008],[3.818,28.1941],[3.82,28.1874],[3.8218,28.1806],[3.8236,28.1739],[3.8253,28.1671],[3.8269,28.1603],[3.8285,28.1535],[3.8299,28.1466],[3.8314,28.1398],[3.8327,28.1329],[3.834,28.1261],[3.8353,28.1192],[3.8365,28.1123],[3.8377,28.1055],[3.8389,28.0986],[3.84,28.0917],[3.8412,28.0849],[3.8423,28.078],[3.8434,28.0712],[3.8445,28.0643],[3.8457,28.0575],[3.8468,28.0507],[3.848,28.0439],[3.8493,28.0371],[3.8505,28.0303],[3.8519,28.0235],[3.8533,28.0168],[3.8548,28.01],[3.8563,28.0033],[3.858,27.9966],[3.8597,27.99],[3.8616,27.9834],[3.8636,27.9768],[3.8658,27.9702],[3.868,27.9637],[3.8705,27.9573],[3.8731,27.9509],[3.8758,27.9446],[3.8785,27.9383],[3.8814,27.932],[3.8843,27.9258],[3.8873,27.9197],[3.8903,27.9137],[3.8935,27.9077],[3.8967,27.9017],[3.9,27.8959],[3.9033,27.89],[3.9067,27.8843],[3.9102,27.8786],[3.9138,27.8729],[3.9174,27.8673],[3.9211,27.8618],[3.9249,27.8563],[3.9287,27.8508],[3.9326,27.8454],[3.9366,27.8401],[3.9407,27.8348],[3.9448,27.8295],[3.949,27.8243],[3.9533,27.8192],[3.9577,27.8141],[3.9622,27.809],[3.9667,27.804],[3.9714,27.7991],[3.9761,27.7942],[3.981,27.7894],[3.986,27.7847],[3.991,27.7801],[3.9962,27.7755],[4.0015,27.771],[4.0068,27.7666],[4.0123,27.7623],[4.0178,27.758],[4.0233,27.7538],[4.029,27.7497],[4.0347,27.7456],[4.0404,27.7416],[4.0462,27.7377],[4.0521,27.7339],[4.0581,27.7302],[4.0641,27.7266],[4.0701,27.7231],[4.0762,27.7196],[4.0824,27.7162],[4.0885,27.7129],[4.0948,27.7097],[4.101,27.7065],[4.1073,27.7034],[4.1136,27.7003],[4.1199,27.6972],[4.1262,27.6942],[4.1326,27.6912],[4.1389,27.6882],[4.1453,27.6853],[4.1516,27.6823],[4.158,27.6794],[4.1643,27.6764],[4.1707,27.6734],[4.177,27.6704],[4.1834,27.6674],[4.1897,27.6645],[4.1961,27.6616],[4.2025,27.6587],[4.2089,27.6558],[4.2153,27.6529],[4.2217,27.6501],[4.2281,27.6472],[4.2346,27.6444],[4.241,27.6415],[4.2474,27.6387],[4.2539,27.6359],[4.2603,27.6331],[4.2667,27.6303],[4.2732,27.6275],[4.2796,27.6247],[4.286,27.6218],[4.2925,27.619],[4.2989,27.6162],[4.3053,27.6133],[4.3117,27.6104],[4.3181,27.6076],[4.3245,27.6047],[4.3309,27.6018],[4.3373,27.5988],[4.3437,27.5959],[4.35,27.593],[4.3564,27.59],[4.3628,27.587],[4.3691,27.584],[4.3755,27.581],[4.3818,27.578],[4.3882,27.575],[4.3945,27.572],[4.4008,27.569],[4.4072,27.566],[4.4135,27.5629],[4.4198,27.5599],[4.4262,27.5568],[4.4325,27.5538],[4.4388,27.5507],[4.4451,27.5477],[4.4515,27.5446],[4.4578,27.5416],[4.4641,27.5385],[4.4705,27.5355],[4.4768,27.5325],[4.4831,27.5294],[4.4895,27.5264],[4.4958,27.5234],[4.5022,27.5204],[4.5085,27.5174],[4.5149,27.5145],[4.5213,27.5115],[4.5277,27.5086],[4.5341,27.5057],[4.5404,27.5028],[4.5469,27.4999],[4.5533,27.497],[4.5597,27.4942],[4.5661,27.4914],[4.5726,27.4886],[4.5791,27.4859],[4.5855,27.4831],[4.592,27.4805],[4.5985,27.4779],[4.6051,27.4754],[4.6117,27.4729],[4.6183,27.4705],[4.6249,27.4682],[4.6315,27.4659],[4.6381,27.4637],[4.6448,27.4615],[4.6515,27.4594],[4.6582,27.4574],[4.6649,27.4553],[4.6716,27.4534],[4.6783,27.4514],[4.685,27.4495],[4.6918,27.4476],[4.6985,27.4458],[4.7053,27.444],[4.712,27.4422],[4.7188,27.4404],[4.7256,27.4386],[4.7324,27.4369],[4.7392,27.4353],[4.746,27.4337],[4.7528,27.4321],[4.7597,27.4305],[4.7665,27.429],[4.7734,27.4275],[4.7803,27.426],[4.7871,27.4244],[4.794,27.4229],[4.8008,27.4214],[4.8077,27.4198],[4.8145,27.4182],[4.8214,27.4165],[4.8282,27.4149],[4.835,27.4131],[4.8417,27.4113],[4.8485,27.4094],[4.8552,27.4074],[4.8619,27.4054],[4.8685,27.4032],[4.8751,27.401],[4.8816,27.3986],[4.888,27.3961],[4.8944,27.3935],[4.9007,27.3908],[4.9069,27.3879],[4.913,27.385],[4.9191,27.3819],[4.925,27.3787],[4.9309,27.3754],[4.9366,27.372],[4.9423,27.3684],[4.9478,27.3648],[4.9533,27.3611],[4.9586,27.3572],[4.9639,27.3533],[4.9691,27.3492],[4.9742,27.3451],[4.9792,27.3409],[4.9841,27.3366],[4.989,27.3322],[4.9937,27.3277],[4.9984,27.3231],[5.0031,27.3185],[5.0076,27.3137],[5.0121,27.3089],[5.0165,27.3039],[5.0208,27.2989],[5.025,27.2937],[5.0292,27.2885],[5.0333,27.2831],[5.0373,27.2777],[5.0411,27.2721],[5.0449,27.2664],[5.0486,27.2607],[5.0523,27.2549],[5.0558,27.249],[5.0593,27.243],[5.0627,27.237],[5.0661,27.231],[5.0695,27.2249],[5.0727,27.2187],[5.076,27.2126],[5.0792,27.2064],[5.0824,27.2002],[5.0856,27.194],[5.0888,27.1877],[5.0919,27.1815],[5.0951,27.1752],[5.0982,27.169],[5.1014,27.1627],[5.1046,27.1565],[5.1077,27.1503],[5.111,27.1441],[5.1142,27.1379],[5.1175,27.1317],[5.1207,27.1255],[5.1239,27.1192],[5.127,27.113],[5.1301,27.1067],[5.1332,27.1004],[5.1362,27.0942],[5.1392,27.0878],[5.1422,27.0815],[5.1452,27.0752],[5.1481,27.0689],[5.1511,27.0625],[5.154,27.0562],[5.157,27.0498],[5.1599,27.0435],[5.1629,27.0372],[5.1658,27.0308],[5.1688,27.0245],[5.1718,27.0182],[5.1748,27.0119],[5.1779,27.0056],[5.181,26.9993],[5.1841,26.993],[5.1873,26.9868],[5.1905,26.9806],[5.1938,26.9744],[5.1971,26.9682],[5.2005,26.9621],[5.2039,26.956],[5.2074,26.95],[5.211,26.944],[5.2147,26.938],[5.2184,26.9321],[5.2222,26.9262],[5.2259,26.9203],[5.2297,26.9144],[5.2335,26.9085],[5.2372,26.9026],[5.241,26.8968],[5.2448,26.891],[5.2487,26.8851],[5.2525,26.8794],[5.2564,26.8736],[5.2603,26.8679],[5.2642,26.8622],[5.2682,26.8565],[5.2722,26.8509],[5.2762,26.8453],[5.2803,26.8398],[5.2844,26.8343],[5.2886,26.8288],[5.2928,26.8234],[5.2971,26.8181],[5.3014,26.8128],[5.3059,26.8076],[5.3103,26.8024],[5.3149,26.7973],[5.3195,26.7923],[5.3242,26.7874],[5.329,26.7825],[5.3338,26.7777],[5.3388,26.773],[5.3438,26.7683],[5.3488,26.7637],[5.354,26.7592],[5.3592,26.7547],[5.3645,26.7504],[5.3699,26.7461],[5.3753,26.7419],[5.3808,26.7377],[5.3864,26.7337],[5.3921,26.7297],[5.3978,26.7258],[5.4036,26.722],[5.4094,26.7182],[5.4153,26.7146],[5.4213,26.711],[5.4273,26.7075],[5.4334,26.704],[5.4395,26.7007],[5.4456,26.6974],[5.4518,26.6941],[5.458,26.6909],[5.4642,26.6877],[5.4705,26.6846],[5.4768,26.6816],[5.4831,26.6786],[5.4895,26.6757],[5.4959,26.6728],[5.5023,26.67],[5.5087,26.6672],[5.5152,26.6645],[5.5217,26.6618],[5.5282,26.6591],[5.5347,26.6565],[5.5412,26.6539],[5.5477,26.6514],[5.5543,26.6489],[5.5609,26.6464],[5.5675,26.6439],[5.574,26.6415],[5.5806,26.6391],[5.5873,26.6368],[5.5939,26.6344],[5.6005,26.6321],[5.6071,26.6298],[5.6138,26.6275],[5.6204,26.6253],[5.6271,26.623],[5.6338,26.6208],[5.6404,26.6186],[5.6471,26.6164],[5.6538,26.6142],[5.6605,26.6121],[5.6672,26.6099],[5.6739,26.6078],[5.6806,26.6057],[5.6873,26.6036],[5.694,26.6015],[5.7007,26.5994],[5.7074,26.5973],[5.7141,26.5953],[5.7209,26.5932],[5.7276,26.5912],[5.7343,26.5891],[5.741,26.5871],[5.7478,26.5851],[5.7545,26.583],[5.7612,26.581],[5.7679,26.579],[5.7747,26.577],[5.7814,26.5749],[5.7881,26.5729],[5.7949,26.5709],[5.8016,26.5689],[5.8083,26.5669],[5.8151,26.5649],[5.8218,26.5629],[5.8285,26.5608],[5.8353,26.5588],[5.842,26.5568],[5.8487,26.5547],[5.8555,26.5527],[5.8622,26.5507],[5.8689,26.5486],[5.8756,26.5466],[5.8823,26.5445],[5.8891,26.5424],[5.8958,26.5403],[5.9025,26.5382],[5.9092,26.5361],[5.9158,26.5339],[5.9225,26.5318],[5.9292,26.5296],[5.9359,26.5274],[5.9426,26.5252],[5.9493,26.523],[5.9559,26.5208],[5.9626,26.5186],[5.9692,26.5163],[5.9759,26.5141],[5.9825,26.5118],[5.9892,26.5095],[5.9958,26.5072],[6.0025,26.5049],[6.0091,26.5026],[6.0157,26.5003],[6.0223,26.4979],[6.0289,26.4955],[6.0356,26.4931],[6.0422,26.4907],[6.0488,26.4883],[6.0554,26.4859],[6.062,26.4835],[6.0686,26.4811],[6.0752,26.4787],[6.0817,26.4762],[6.0883,26.4738],[6.0949,26.4714],[6.1015,26.4689],[6.1081,26.4665],[6.1147,26.4641],[6.1213,26.4616],[6.1279,26.4592],[6.1345,26.4568],[6.1411,26.4544],[6.1477,26.452],[6.1543,26.4496],[6.1609,26.4472],[6.1675,26.4448],[6.1741,26.4424],[6.1807,26.4401],[6.1874,26.4377],[6.194,26.4354],[6.2006,26.4331],[6.2073,26.4308],[6.2139,26.4285],[6.2206,26.4262],[6.2272,26.424],[6.2339,26.4218],[6.2405,26.4196],[6.2472,26.4174],[6.2539,26.4153],[6.2606,26.4131],[6.2673,26.4111],[6.274,26.409],[6.2808,26.407],[6.2875,26.405],[6.2942,26.403],[6.301,26.4011],[6.3077,26.3992],[6.3145,26.3974],[6.3213,26.3956],[6.3281,26.3938],[6.3349,26.3921],[6.3417,26.3905],[6.3486,26.3889],[6.3554,26.3874],[6.3623,26.3859],[6.3691,26.3845],[6.376,26.3832],[6.3829,26.3819],[6.3898,26.3807],[6.3967,26.3796],[6.4037,26.3785],[6.4106,26.3776],[6.4176,26.3767],[6.4245,26.376],[6.4315,26.3753],[6.4384,26.3748],[6.4454,26.3744],[6.4524,26.3741],[6.4594,26.3739],[6.4664,26.3739],[6.4733,26.374],[6.4803,26.3742],[6.4873,26.3745],[6.4942,26.3751],[6.5012,26.3758],[6.5081,26.3766],[6.515,26.3776],[6.5218,26.3788],[6.5287,26.3802],[6.5355,26.3818],[6.5422,26.3834],[6.5489,26.3853],[6.5556,26.3873],[6.5622,26.3895],[6.5688,26.3918],[6.5753,26.3944],[6.5818,26.3971],[6.5881,26.3999],[6.5944,26.403],[6.6007,26.4061],[6.6069,26.4095],[6.613,26.4129],[6.619,26.4165],[6.6249,26.4203],[6.6308,26.4241],[6.6365,26.4281],[6.6423,26.4322],[6.6479,26.4364],[6.6535,26.4406],[6.659,26.445],[6.6644,26.4494],[6.6698,26.4539],[6.6751,26.4585],[6.6803,26.4632],[6.6855,26.4679],[6.6907,26.4726],[6.6958,26.4775],[6.7008,26.4823],[6.7059,26.4872],[6.7109,26.4921],[6.7158,26.4971],[6.7208,26.502],[6.7257,26.507],[6.7306,26.512],[6.7355,26.517],[6.7404,26.5221],[6.7452,26.5271],[6.7501,26.5322],[6.755,26.5372],[6.7598,26.5422],[6.7647,26.5473],[6.7696,26.5523],[6.7745,26.5573],[6.7795,26.5622],[6.7844,26.5672],[6.7894,26.5721],[6.7944,26.577],[6.7995,26.5819],[6.8046,26.5867],[6.8097,26.5915],[6.8149,26.5962],[6.8201,26.6009],[6.8254,26.6055],[6.8307,26.6101],[6.8361,26.6146],[6.8415,26.6191],[6.8468,26.6237],[6.852,26.6283],[6.8572,26.6331],[6.8622,26.638],[6.8672,26.6429],[6.8721,26.648],[6.8769,26.6531],[6.8817,26.6582],[6.8864,26.6634],[6.891,26.6686],[6.8956,26.6739],[6.9002,26.6792],[6.9047,26.6846],[6.9092,26.69],[6.9136,26.6954],[6.918,26.7008],[6.9224,26.7063],[6.9268,26.7118],[6.9311,26.7172],[6.9355,26.7227],[6.9398,26.7283],[6.9441,26.7338],[6.9484,26.7393],[6.9527,26.7448],[6.957,26.7503],[6.9613,26.7558],[6.9656,26.7614],[6.97,26.7668],[6.9743,26.7723],[6.9787,26.7778],[6.9831,26.7832],[6.9875,26.7887],[6.992,26.7941],[6.9965,26.7994],[7.0011,26.8047],[7.0057,26.81],[7.0103,26.8153],[7.0151,26.8205],[7.0198,26.8256],[7.0247,26.8306],[7.0297,26.8356],[7.0347,26.8405],[7.0398,26.8452],[7.0451,26.8499],[7.0505,26.8544],[7.0559,26.8587],[7.0616,26.8629],[7.0673,26.8669],[7.0732,26.8706],[7.0792,26.8741],[7.0853,26.8773],[7.0916,26.8802],[7.0979,26.8828],[7.1044,26.885],[7.1109,26.8868],[7.1174,26.8883],[7.124,26.8894],[7.1306,26.8902],[7.1372,26.8907],[7.1437,26.8909],[7.1503,26.8907],[7.1568,26.8903],[7.1634,26.8896],[7.1699,26.8885],[7.1764,26.8873],[7.1829,26.8857],[7.1893,26.8838],[7.1957,26.8816],[7.202,26.8792],[7.2083,26.8766],[7.2145,26.8737],[7.2206,26.8707],[7.2267,26.8675],[7.2327,26.8641],[7.2387,26.8607],[7.2446,26.857],[7.2504,26.8533],[7.2562,26.8495],[7.2619,26.8456],[7.2676,26.8416],[7.2733,26.8375],[7.2789,26.8334],[7.2844,26.8292],[7.2899,26.825],[7.2954,26.8207],[7.3009,26.8163],[7.3064,26.8119],[7.3118,26.8075],[7.3172,26.8031],[7.3225,26.7986],[7.3279,26.7941],[7.3333,26.7896],[7.3386,26.785],[7.3439,26.7805],[7.3492,26.7759],[7.3546,26.7714],[7.3599,26.7668],[7.3652,26.7622],[7.3705,26.7576],[7.3758,26.7531],[7.3811,26.7485],[7.3865,26.744],[7.3918,26.7394],[7.3972,26.7349],[7.4025,26.7304],[7.4079,26.7259],[7.4133,26.7214],[7.4188,26.717],[7.4242,26.7126],[7.4297,26.7082],[7.4352,26.7038],[7.4407,26.6995],[7.4463,26.6953],[7.4519,26.6911],[7.4575,26.6869],[7.4632,26.6828],[7.4688,26.6786],[7.4744,26.6744],[7.48,26.6701],[7.4856,26.6659],[7.4911,26.6617],[7.4967,26.6574],[7.5023,26.6532],[7.5079,26.6489],[7.5135,26.6447],[7.5191,26.6404],[7.5246,26.6362],[7.5303,26.632],[7.5359,26.6278],[7.5415,26.6236],[7.5471,26.6194],[7.5528,26.6152],[7.5585,26.6111],[7.5642,26.607],[7.5699,26.603],[7.5756,26.5989],[7.5814,26.5949],[7.5872,26.591],[7.593,26.5871],[7.5988,26.5831],[7.6046,26.5791],[7.6104,26.5751],[7.6161,26.5711],[7.6218,26.5671],[7.6276,26.563],[7.6333,26.5589],[7.639,26.5548],[7.6447,26.5507],[7.6504,26.5466],[7.6561,26.5425],[7.6618,26.5384],[7.6674,26.5343],[7.6731,26.5302],[7.6788,26.5261],[7.6845,26.5221],[7.6902,26.518],[7.696,26.5139],[7.7017,26.5099],[7.7074,26.5059],[7.7132,26.5019],[7.7189,26.498],[7.7247,26.494],[7.7305,26.4901],[7.7364,26.4863],[7.7422,26.4824],[7.7481,26.4787],[7.754,26.4749],[7.7599,26.4713],[7.7659,26.4676],[7.7719,26.4641],[7.7779,26.4606],[7.784,26.4572],[7.7901,26.4538],[7.7962,26.4506],[7.8024,26.4474],[7.8086,26.4443],[7.8149,26.4413],[7.8212,26.4385],[7.8276,26.4357],[7.834,26.4331],[7.8404,26.4307],[7.8469,26.4283],[7.8535,26.4262],[7.8601,26.4242],[7.8667,26.4224],[7.8734,26.4208],[7.8801,26.4194],[7.8869,26.4183],[7.8937,26.4173],[7.9005,26.4167],[7.9073,26.4162],[7.9141,26.4161],[7.921,26.4162],[7.9278,26.4166],[7.9347,26.4172],[7.9415,26.4181],[7.9483,26.4193],[7.955,26.4208],[7.9617,26.4226],[7.9684,26.4247],[7.9749,26.427],[7.9814,26.4296],[7.9878,26.4324],[7.9942,26.4354],[8.0004,26.4387],[8.0065,26.442],[8.0126,26.4456],[8.0185,26.4493],[8.0244,26.4531],[8.0302,26.4571],[8.0359,26.4612],[8.0415,26.4654],[8.0471,26.4697],[8.0526,26.474],[8.058,26.4785],[8.0634,26.483],[8.0687,26.4876],[8.0739,26.4922],[8.0791,26.4969],[8.0843,26.5017],[8.0894,26.5065],[8.0945,26.5113],[8.0995,26.5162],[8.1045,26.5211],[8.1094,26.5261],[8.1143,26.5311],[8.1192,26.5361],[8.1241,26.5412],[8.1289,26.5462],[8.1338,26.5513],[8.1385,26.5564],[8.1433,26.5615],[8.1481,26.5667],[8.1528,26.5718],[8.1576,26.577],[8.1623,26.5822],[8.167,26.5874],[8.1717,26.5926],[8.1764,26.5978],[8.1811,26.603],[8.1858,26.6082],[8.1905,26.6134],[8.1952,26.6186],[8.1999,26.6238],[8.2046,26.629],[8.2093,26.6341],[8.214,26.6393],[8.2188,26.6445],[8.2235,26.6497],[8.2283,26.6548],[8.233,26.6599],[8.2378,26.6651],[8.2427,26.6702],[8.2475,26.6752],[8.2523,26.6803],[8.2572,26.6853],[8.2621,26.6903],[8.2671,26.6953],[8.2721,26.7003],[8.2771,26.7052],[8.2821,26.71],[8.2872,26.7148],[8.2923,26.7197],[8.2973,26.7246],[8.3023,26.7295],[8.3072,26.7345],[8.312,26.7396],[8.3167,26.7448],[8.3213,26.7501],[8.3258,26.7555],[8.3302,26.761],[8.3345,26.7665],[8.3387,26.7721],[8.3428,26.7777],[8.3469,26.7834],[8.3509,26.7891],[8.3549,26.7949],[8.3588,26.8007],[8.3626,26.8066],[8.3664,26.8124],[8.3702,26.8183],[8.3739,26.8242],[8.3775,26.8302],[8.3812,26.8361],[8.3848,26.8421],[8.3884,26.8481],[8.392,26.8541],[8.3955,26.8601],[8.3991,26.8661],[8.4026,26.8721],[8.4061,26.8781],[8.4097,26.8841],[8.4132,26.8901],[8.4167,26.8961],[8.4203,26.9022],[8.4238,26.9081],[8.4274,26.9141],[8.431,26.9201],[8.4346,26.9261],[8.4382,26.932],[8.4419,26.9379],[8.4456,26.9438],[8.4494,26.9497],[8.4532,26.9556],[8.4571,26.9614],[8.461,26.9671],[8.465,26.9729],[8.4691,26.9785],[8.4733,26.9842],[8.4775,26.9897],[8.4819,26.9952],[8.4864,27.0006],[8.491,27.0058],[8.4958,27.011],[8.5007,27.016],[8.5058,27.0208],[8.5111,27.0254],[8.5165,27.0298],[8.5221,27.0339],[8.5279,27.0377],[8.5339,27.0412],[8.54,27.0443],[8.5462,27.047],[8.5525,27.0493],[8.5588,27.0513],[8.5652,27.0529],[8.5716,27.0541],[8.578,27.0551],[8.5844,27.0558],[8.5908,27.0562],[8.5972,27.0563],[8.6036,27.0562],[8.61,27.0558],[8.6164,27.0552],[8.6227,27.0543],[8.6291,27.0532],[8.6355,27.0519],[8.6418,27.0503],[8.6481,27.0485],[8.6544,27.0465],[8.6607,27.0442],[8.6669,27.0417],[8.6731,27.039],[8.6792,27.0361],[8.6852,27.033],[8.6912,27.0297],[8.6971,27.0262],[8.703,27.0226],[8.7088,27.0188],[8.7145,27.0149],[8.7202,27.0109],[8.7258,27.0068],[8.7313,27.0027],[8.7368,26.9984],[8.7423,26.9941],[8.7476,26.9896],[8.753,26.9852],[8.7583,26.9806],[8.7635,26.976],[8.7687,26.9714],[8.7739,26.9667],[8.779,26.9619],[8.7841,26.9572],[8.7892,26.9523],[8.7942,26.9475],[8.7992,26.9426],[8.8042,26.9377],[8.8091,26.9327],[8.8141,26.9277],[8.8189,26.9227],[8.8238,26.9177],[8.8287,26.9126],[8.8335,26.9075],[8.8383,26.9025],[8.8431,26.8973],[8.8478,26.8922],[8.8526,26.887],[8.8573,26.8819],[8.862,26.8767],[8.8667,26.8715],[8.8714,26.8663],[8.876,26.861],[8.8807,26.8558],[8.8853,26.8505],[8.8899,26.8453],[8.8946,26.84],[8.8992,26.8347],[8.9038,26.8294],[8.9083,26.8241],[8.9129,26.8188],[8.9175,26.8135],[8.922,26.8082],[8.9266,26.8028],[8.9311,26.7975],[8.9357,26.7922],[8.9402,26.7868],[8.9447,26.7815],[8.9492,26.7761],[8.9538,26.7707],[8.9583,26.7654],[8.9628,26.76],[8.9673,26.7546],[8.9718,26.7493],[8.9763,26.7439],[8.9808,26.7385],[8.9852,26.7331],[8.9897,26.7277],[8.9942,26.7223],[8.9987,26.717],[9.0032,26.7116],[9.0077,26.7062],[9.0122,26.7008],[9.0167,26.6954],[9.0212,26.69],[9.0256,26.6847],[9.0301,26.6793],[9.0346,26.6739],[9.0391,26.6685],[9.0436,26.6632],[9.0481,26.6578],[9.0526,26.6524],[9.0572,26.6471],[9.0617,26.6417],[9.0662,26.6363],[9.0707,26.631],[9.0753,26.6256],[9.0798,26.6203],[9.0843,26.615],[9.0889,26.6096],[9.0935,26.6043],[9.098,26.599],[9.1026,26.5937],[9.1072,26.5884],[9.1118,26.5831],[9.1164,26.5778],[9.121,26.5726],[9.1257,26.5673],[9.1303,26.5621],[9.135,26.5568],[9.1396,26.5516],[9.1443,26.5464],[9.149,26.5412],[9.1537,26.536],[9.1584,26.5308],[9.1632,26.5256],[9.1679,26.5205],[9.1727,26.5154],[9.1775,26.5103],[9.1823,26.5051],[9.1871,26.5],[9.1918,26.4949],[9.1966,26.4898],[9.2014,26.4847],[9.2062,26.4795],[9.211,26.4744],[9.2157,26.4693],[9.2205,26.4642],[9.2253,26.459],[9.2301,26.4539],[9.2348,26.4488],[9.2396,26.4436],[9.2444,26.4385],[9.2492,26.4334],[9.254,26.4283],[9.2588,26.4232],[9.2636,26.4181],[9.2684,26.413],[9.2732,26.4079],[9.2781,26.4028],[9.2829,26.3977],[9.2877,26.3926],[9.2926,26.3876],[9.2975,26.3825],[9.3023,26.3775],[9.3072,26.3725],[9.3121,26.3674],[9.3169,26.3624],[9.3218,26.3573],[9.3266,26.3522],[9.3314,26.3471],[9.3362,26.342],[9.3411,26.3369],[9.3458,26.3318],[9.3506,26.3267],[9.3554,26.3216],[9.3602,26.3164],[9.365,26.3113],[9.3697,26.3061],[9.3745,26.301],[9.3793,26.2958],[9.384,26.2907],[9.3888,26.2855],[9.3935,26.2804],[9.3982,26.2752],[9.403,26.27],[9.4077,26.2649],[9.4125,26.2597],[9.4172,26.2545],[9.4219,26.2494],[9.4267,26.2442],[9.4314,26.239],[9.4361,26.2338],[9.4409,26.2287],[9.4456,26.2235],[9.4503,26.2183],[9.455,26.2131],[9.4598,26.208],[9.4645,26.2028],[9.4693,26.1976],[9.474,26.1925],[9.4787,26.1873],[9.4835,26.1821],[9.4882,26.177],[9.493,26.1718],[9.4977,26.1667],[9.5025,26.1615],[9.5073,26.1564],[9.512,26.1513],[9.5168,26.1461],[9.5216,26.141],[9.5264,26.1359],[9.5312,26.1308],[9.536,26.1257],[9.5408,26.1206],[9.5456,26.1155],[9.5504,26.1104],[9.5553,26.1053],[9.5601,26.1003],[9.565,26.0952],[9.5698,26.0902],[9.5747,26.0851],[9.5796,26.0801],[9.5845,26.0751],[9.5894,26.0701],[9.5943,26.0651],[9.5993,26.0601],[9.6042,26.0552],[9.6092,26.0502],[9.6141,26.0453],[9.6191,26.0404],[9.6241,26.0355],[9.6291,26.0306],[9.6342,26.0257],[9.6392,26.0208],[9.6443,26.016],[9.6494,26.0112],[9.6545,26.0064],[9.6596,26.0016],[9.6648,25.9969],[9.6699,25.9922],[9.6751,25.9875],[9.6803,25.9828],[9.6856,25.9782],[9.6908,25.9736],[9.6961,25.969],[9.7014,25.9644],[9.7068,25.9599],[9.7122,25.9554],[9.7176,25.951],[9.723,25.9466],[9.7285,25.9422],[9.734,25.9379],[9.7395,25.9337],[9.7451,25.9295],[9.7507,25.9253],[9.7563,25.9212],[9.762,25.9172],[9.7677,25.9132],[9.7735,25.9093],[9.7793,25.9054],[9.7851,25.9017],[9.791,25.898],[9.797,25.8944],[9.8029,25.8909],[9.809,25.8875],[9.8151,25.8842],[9.8212,25.8811],[9.8274,25.878],[9.8337,25.8751],[9.8399,25.8724],[9.8463,25.8698],[9.8527,25.8674],[9.8591,25.8651],[9.8656,25.8629],[9.8721,25.861],[9.8786,25.8592],[9.8851,25.8575],[9.8917,25.8561],[9.8984,25.8548],[9.905,25.8537],[9.9117,25.8528],[9.9184,25.8521],[9.9251,25.8516],[9.9318,25.8513],[9.9385,25.8512],[9.9453,25.8513],[9.952,25.8516],[9.9588,25.8522],[9.9656,25.853],[9.9723,25.854],[9.9791,25.8553],[9.9858,25.8568],[9.9924,25.8585],[9.9991,25.8605],[10.0056,25.8627],[10.0121,25.8651],[10.0186,25.8677],[10.025,25.8705],[10.0313,25.8735],[10.0375,25.8767],[10.0437,25.8801],[10.0497,25.8835],[10.0557,25.8872],[10.0616,25.891],[10.0675,25.8948],[10.0733,25.8988],[10.0789,25.9029],[10.0846,25.9071],[10.0901,25.9114],[10.0956,25.9158],[10.1011,25.9202],[10.1065,25.9247],[10.1118,25.9293],[10.1171,25.9339],[10.1223,25.9385],[10.1275,25.9432],[10.1327,25.948],[10.1378,25.9528],[10.1429,25.9576],[10.1479,25.9624],[10.1529,25.9673],[10.158,25.9722],[10.1629,25.9771],[10.1679,25.9821],[10.1729,25.987],[10.1778,25.992],[10.1827,25.997],[10.1877,26.0019],[10.1926,26.0069],[10.1975,26.0119],[10.2024,26.0169],[10.2073,26.0219],[10.2122,26.0268],[10.2172,26.0318],[10.2221,26.0368],[10.2271,26.0417],[10.232,26.0466],[10.237,26.0515],[10.242,26.0564],[10.2471,26.0613],[10.2521,26.0661],[10.2572,26.0709],[10.2624,26.0757],[10.2675,26.0804],[10.2727,26.0851],[10.278,26.0898],[10.2832,26.0944],[10.2886,26.0989],[10.2939,26.1034],[10.2994,26.1078],[10.3049,26.1122],[10.3104,26.1165],[10.3161,26.1207],[10.3217,26.1248],[10.3275,26.1288],[10.3332,26.1329],[10.3389,26.137],[10.3446,26.141],[10.3503,26.1451],[10.356,26.1492],[10.3617,26.1533],[10.3674,26.1575],[10.373,26.1616],[10.3787,26.1657],[10.3844,26.1699],[10.39,26.1741],[10.3957,26.1782],[10.4013,26.1824],[10.4069,26.1866],[10.4126,26.1908],[10.4182,26.195],[10.4238,26.1992],[10.4295,26.2034],[10.4351,26.2076],[10.4407,26.2118],[10.4463,26.216],[10.4519,26.2202],[10.4575,26.2244],[10.4631,26.2287],[10.4687,26.2329],[10.4743,26.2372],[10.4799,26.2414],[10.4855,26.2456],[10.491,26.2499],[10.4966,26.2542],[10.5022,26.2584],[10.5078,26.2627],[10.5133,26.2669],[10.5189,26.2712],[10.5245,26.2755],[10.5301,26.2798],[10.5356,26.284],[10.5412,26.2883],[10.5467,26.2926],[10.5523,26.2969],[10.5578,26.3012],[10.5634,26.3055],[10.569,26.3098],[10.5745,26.314],[10.58,26.3183],[10.5856,26.3226],[10.5911,26.3269],[10.5967,26.3313],[10.6022,26.3356],[10.6078,26.3399],[10.6133,26.3442],[10.6188,26.3485],[10.6244,26.3528],[10.6299,26.3571],[10.6354,26.3614],[10.641,26.3658],[10.6465,26.3701],[10.652,26.3744],[10.6575,26.3788],[10.663,26.3831],[10.6686,26.3874],[10.6741,26.3917],[10.6796,26.3961],[10.6851,26.4004],[10.6906,26.4048],[10.6961,26.4091],[10.7016,26.4135],[10.7072,26.4178],[10.7127,26.4222],[10.7182,26.4265],[10.7237,26.4309],[10.7292,26.4352],[10.7347,26.4396],[10.7402,26.4439]]},\"properties\":{\"i\":8,\"source\":943,\"mouth\":1620,\"discharge\":10,\"length\":459.05,\"width\":2.43,\"widthFactor\":5,\"sourceWidth\":1,\"parent\":8,\"cells\":[943,1089,1161,1237,1385,1385,1458,1460,1535,1612,1539,1615,1541,1694,1620],\"basin\":8,\"name\":\"Ironwood\",\"type\":\"River\",\"points\":[[1028.05,247.09],[1047.5,277.5],[1049.6,305.42],[1085.9,324.6],[1095.3,346.3],[1099.1,363],[1113.6,371.4],[1137.5,380.5],[1151.1,402.7],[1191.16,415.57],[1214.04,396.75],[1241.82,414.14],[1266.9,390.8],[1311.4,434.3],[1341.88,413.02]],\"id\":\"river8\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[6.3975,30.6191],[6.3975,30.6191],[6.3975,30.6191],[6.3975,30.6191],[6.3975,30.6191],[6.3981,30.6178],[6.3993,30.6121],[6.3995,30.6057],[6.399,30.599],[6.3982,30.5923],[6.397,30.5855],[6.3957,30.5788],[6.3942,30.572],[6.3926,30.5653],[6.3909,30.5586],[6.3891,30.5518],[6.3873,30.5451],[6.3854,30.5384],[6.3835,30.5317],[6.3815,30.525],[6.3795,30.5183],[6.3774,30.5117],[6.3754,30.505],[6.3733,30.4983],[6.3711,30.4917],[6.369,30.485],[6.3669,30.4784],[6.3647,30.4717],[6.3625,30.4651],[6.3603,30.4585],[6.3581,30.4518],[6.3558,30.4452],[6.3536,30.4386],[6.3514,30.4319],[6.3491,30.4253],[6.3468,30.4187],[6.3446,30.4121],[6.3423,30.4055],[6.34,30.3989],[6.3377,30.3922],[6.3354,30.3856],[6.3331,30.379],[6.3308,30.3724],[6.3285,30.3658],[6.3262,30.3592],[6.3239,30.3526],[6.3216,30.346],[6.3193,30.3394],[6.3169,30.3328],[6.3146,30.3262],[6.3123,30.3196],[6.31,30.313],[6.3077,30.3064],[6.3053,30.2998],[6.303,30.2932],[6.3007,30.2866],[6.2984,30.28],[6.2961,30.2734],[6.2938,30.2667],[6.2915,30.2601],[6.2892,30.2535],[6.2869,30.2469],[6.2846,30.2403],[6.2823,30.2337],[6.28,30.2271],[6.2777,30.2205],[6.2755,30.2138],[6.2732,30.2072],[6.271,30.2006],[6.2687,30.1939],[6.2665,30.1873],[6.2643,30.1807],[6.2621,30.174],[6.2599,30.1674],[6.2576,30.1608],[6.2554,30.1541],[6.2531,30.1475],[6.2508,30.1409],[6.2486,30.1343],[6.2463,30.1277],[6.2441,30.121],[6.2418,30.1144],[6.2396,30.1078],[6.2373,30.1011],[6.2351,30.0945],[6.2328,30.0879],[6.2305,30.0813],[6.2283,30.0747],[6.226,30.0681],[6.2237,30.0614],[6.2213,30.0548],[6.219,30.0482],[6.2167,30.0416],[6.2144,30.035],[6.212,30.0284],[6.2097,30.0218],[6.2074,30.0152],[6.205,30.0086],[6.2027,30.002],[6.2003,29.9955],[6.198,29.9889],[6.1957,29.9823],[6.1934,29.9757],[6.191,29.969],[6.1887,29.9624],[6.1864,29.9558],[6.1841,29.9492],[6.1818,29.9426],[6.1795,29.936],[6.1773,29.9294],[6.175,29.9228],[6.1728,29.9161],[6.1705,29.9095],[6.1683,29.9029],[6.1661,29.8962],[6.1639,29.8896],[6.1618,29.8829],[6.1596,29.8762],[6.1575,29.8696],[6.1554,29.8629],[6.1533,29.8562],[6.1513,29.8495],[6.1493,29.8428],[6.1473,29.8361],[6.1453,29.8294],[6.1434,29.8227],[6.1415,29.816],[6.1396,29.8092],[6.1378,29.8025],[6.136,29.7957],[6.1343,29.7889],[6.1326,29.7821],[6.131,29.7753],[6.1294,29.7685],[6.1279,29.7617],[6.1264,29.7549],[6.125,29.748],[6.1237,29.7412],[6.1224,29.7343],[6.1213,29.7274],[6.1202,29.7205],[6.1192,29.7136],[6.1183,29.7067],[6.1175,29.6997],[6.1169,29.6928],[6.1163,29.6858],[6.1159,29.6789],[6.1157,29.6719],[6.1156,29.665],[6.1158,29.658],[6.1161,29.6511],[6.1166,29.6442],[6.1173,29.6373],[6.1183,29.6304],[6.1195,29.6236],[6.121,29.6169],[6.1228,29.6103],[6.1249,29.6037],[6.1273,29.5972],[6.1301,29.5909],[6.1331,29.5847],[6.1365,29.5786],[6.1402,29.5728],[6.1442,29.5671],[6.1484,29.5616],[6.153,29.5563],[6.1577,29.5512],[6.1628,29.5463],[6.168,29.5416],[6.1734,29.5371],[6.1789,29.5329],[6.1846,29.5288],[6.1904,29.5248],[6.1964,29.5211],[6.2024,29.5175],[6.2085,29.514],[6.2146,29.5106],[6.2209,29.5073],[6.2271,29.5042],[6.2334,29.5011],[6.2398,29.4981],[6.2461,29.4951],[6.2525,29.4922],[6.2589,29.4893],[6.2654,29.4865],[6.2718,29.4837],[6.2782,29.4808],[6.2846,29.478],[6.2911,29.4752],[6.2975,29.4723],[6.3039,29.4694],[6.3102,29.4665],[6.3166,29.4635],[6.3229,29.4604],[6.3292,29.4572],[6.3354,29.454],[6.3416,29.4506],[6.3477,29.4472],[6.3537,29.4436],[6.3597,29.4399],[6.3658,29.4364],[6.372,29.4331],[6.3783,29.43],[6.3846,29.427],[6.391,29.4242],[6.3975,29.4215],[6.4041,29.4189],[6.4107,29.4164],[6.4173,29.4141],[6.4239,29.4118],[6.4306,29.4096],[6.4373,29.4074],[6.444,29.4053],[6.4507,29.4032],[6.4574,29.4012],[6.4641,29.3991],[6.4709,29.3971],[6.4776,29.3951],[6.4843,29.3931],[6.491,29.391],[6.4977,29.3889],[6.5044,29.3868],[6.5111,29.3846],[6.5178,29.3824],[6.5244,29.38],[6.531,29.3776],[6.5376,29.3751],[6.5441,29.3725],[6.5505,29.3697],[6.5569,29.3667],[6.5632,29.3636],[6.5694,29.3603],[6.5755,29.3568],[6.5814,29.3531],[6.5872,29.3491],[6.5928,29.3449],[6.5981,29.3404],[6.6032,29.3357],[6.608,29.3306],[6.6124,29.3253],[6.6166,29.3198],[6.6204,29.314],[6.6239,29.3081],[6.627,29.3019],[6.6297,29.2955],[6.6321,29.289],[6.6341,29.2824],[6.6357,29.2757],[6.6371,29.2689],[6.6382,29.262],[6.639,29.2551],[6.6396,29.2482],[6.64,29.2413],[6.6402,29.2343],[6.6402,29.2273],[6.6401,29.2204],[6.6398,29.2134],[6.6394,29.2064],[6.639,29.1995],[6.6384,29.1925],[6.6377,29.1856],[6.637,29.1786],[6.6361,29.1717],[6.6353,29.1647],[6.6343,29.1578],[6.6334,29.1509],[6.6324,29.144],[6.6313,29.1371],[6.6302,29.1302],[6.6291,29.1233],[6.628,29.1164],[6.6269,29.1095],[6.6257,29.1026],[6.6246,29.0957],[6.6235,29.0888],[6.6223,29.0818],[6.6212,29.0749],[6.6201,29.068],[6.619,29.0611],[6.618,29.0542],[6.6169,29.0473],[6.6159,29.0404],[6.615,29.0334],[6.6141,29.0265],[6.6133,29.0196],[6.6125,29.0126],[6.6118,29.0057],[6.6111,28.9987],[6.6106,28.9917],[6.6101,28.9848],[6.6097,28.9778],[6.6094,28.9708],[6.6091,28.9638],[6.6089,28.9568],[6.6086,28.9499],[6.6084,28.9429],[6.6083,28.9359],[6.6081,28.9289],[6.6081,28.9219],[6.608,28.9149],[6.6081,28.9079],[6.6081,28.9009],[6.6081,28.8939],[6.6081,28.8869],[6.6081,28.8799],[6.608,28.8729],[6.608,28.8659],[6.6079,28.8589],[6.6079,28.852],[6.6078,28.845],[6.6078,28.838],[6.6077,28.831],[6.6077,28.824],[6.6076,28.817],[6.6076,28.81],[6.6076,28.803],[6.6076,28.796],[6.6076,28.789],[6.6077,28.782],[6.6078,28.775],[6.6079,28.768],[6.608,28.761],[6.6082,28.754],[6.6084,28.7471],[6.6086,28.7401],[6.6089,28.7331],[6.6092,28.7261],[6.6096,28.7191],[6.6101,28.7121],[6.6106,28.7052],[6.6111,28.6982],[6.6118,28.6912],[6.6125,28.6843],[6.6133,28.6773],[6.6142,28.6704],[6.6153,28.6635],[6.6164,28.6566],[6.6176,28.6497],[6.619,28.6429],[6.6206,28.6361],[6.6223,28.6293],[6.6242,28.6226],[6.6263,28.6159],[6.6286,28.6094],[6.6312,28.6029],[6.634,28.5965],[6.6372,28.5904],[6.6408,28.5844],[6.6447,28.5786],[6.649,28.5732],[6.6537,28.568],[6.6587,28.5632],[6.6641,28.5588],[6.6698,28.5547],[6.6758,28.551],[6.6819,28.5476],[6.6883,28.5447],[6.6948,28.542],[6.7014,28.5397],[6.7081,28.5376],[6.7149,28.5358],[6.7218,28.5343],[6.7287,28.5329],[6.7356,28.5317],[6.7425,28.5307],[6.7495,28.5299],[6.7565,28.5291],[6.7635,28.5285],[6.7705,28.528],[6.7775,28.5275],[6.7845,28.5272],[6.7915,28.5268],[6.7985,28.5265],[6.8055,28.5263],[6.8125,28.5261],[6.8195,28.5258],[6.8266,28.5256],[6.8336,28.5254],[6.8406,28.5251],[6.8476,28.5248],[6.8546,28.5244],[6.8617,28.524],[6.8687,28.5235],[6.8757,28.5229],[6.8827,28.5222],[6.8897,28.5216],[6.8967,28.521],[6.9037,28.5204],[6.9107,28.5199],[6.9177,28.5195],[6.9247,28.5192],[6.9317,28.5191],[6.9387,28.5191],[6.9457,28.5192],[6.9527,28.5194],[6.9598,28.5198],[6.9668,28.5202],[6.9738,28.5207],[6.9808,28.5212],[6.9878,28.5218],[6.9948,28.5225],[7.0018,28.5231],[7.0088,28.5238],[7.0158,28.5244],[7.0228,28.5251],[7.0298,28.5257],[7.0368,28.5263],[7.0438,28.5268],[7.0508,28.5273],[7.0578,28.5276],[7.0649,28.5279],[7.0719,28.5281],[7.0789,28.5282],[7.086,28.5281],[7.093,28.5278],[7.1,28.5274],[7.107,28.5267],[7.114,28.5259],[7.1209,28.5248],[7.1278,28.5234],[7.1346,28.5218],[7.1414,28.5199],[7.1481,28.5177],[7.1546,28.5152],[7.161,28.5123],[7.1673,28.5091],[7.1734,28.5057],[7.1794,28.5021],[7.1853,28.4982],[7.191,28.4942],[7.1966,28.49],[7.2021,28.4856],[7.2075,28.4811],[7.2128,28.4765],[7.218,28.4718],[7.2231,28.467],[7.2282,28.4621],[7.2332,28.4572],[7.2381,28.4522],[7.2429,28.4471],[7.2477,28.442],[7.2525,28.4369],[7.2572,28.4317],[7.2619,28.4265],[7.2666,28.4213],[7.2713,28.4161],[7.276,28.4108],[7.2806,28.4056],[7.2853,28.4004],[7.29,28.3952],[7.2947,28.3899],[7.2994,28.3847],[7.3041,28.3796],[7.3089,28.3744],[7.3137,28.3693],[7.3185,28.3643],[7.3234,28.3593],[7.3284,28.3543],[7.3334,28.3494],[7.3385,28.3446],[7.3437,28.3399],[7.349,28.3352],[7.3543,28.3307],[7.3597,28.3262],[7.3652,28.3219],[7.3708,28.3176],[7.3765,28.3135],[7.3822,28.3095],[7.3881,28.3056],[7.3941,28.3019],[7.4001,28.2984],[7.4062,28.2949],[7.4124,28.2916],[7.4186,28.2883],[7.4249,28.2851],[7.4312,28.282],[7.4375,28.279],[7.4438,28.276],[7.4502,28.273],[7.4566,28.2701],[7.463,28.2672],[7.4694,28.2644],[7.4758,28.2615],[7.4822,28.2587],[7.4886,28.2558],[7.495,28.2529],[7.5014,28.25],[7.5078,28.2471],[7.5142,28.2441],[7.5205,28.2411],[7.5268,28.238],[7.5331,28.2348],[7.5393,28.2315],[7.5454,28.2281],[7.5515,28.2246],[7.5575,28.2209],[7.5634,28.2171],[7.5691,28.213],[7.5746,28.2088],[7.5799,28.2043],[7.5849,28.1995],[7.5895,28.1944],[7.5937,28.189],[7.5973,28.1834],[7.6005,28.1776],[7.6031,28.1717],[7.6053,28.1656],[7.607,28.1595],[7.6083,28.1532],[7.6091,28.1468],[7.6095,28.1404],[7.6095,28.1339],[7.609,28.1274],[7.6081,28.1208],[7.6069,28.1142],[7.6054,28.1076],[7.6036,28.1011],[7.6015,28.0946],[7.5993,28.0881],[7.5968,28.0817],[7.5942,28.0753],[7.5915,28.0689],[7.5886,28.0626],[7.5857,28.0563],[7.5826,28.0501],[7.5795,28.0438],[7.5764,28.0376],[7.5732,28.0314],[7.5699,28.0252],[7.5666,28.0191],[7.5634,28.0129],[7.5601,28.0067],[7.5568,28.0006],[7.5535,27.9944],[7.5502,27.9882],[7.547,27.982],[7.5438,27.9757],[7.5406,27.9695],[7.5375,27.9632],[7.5345,27.9569],[7.5316,27.9506],[7.5287,27.9442],[7.5259,27.9378],[7.5233,27.9314],[7.5206,27.9249],[7.5179,27.9185],[7.5151,27.9121],[7.5124,27.9057],[7.5097,27.8992],[7.507,27.8928],[7.5043,27.8864],[7.5016,27.8799],[7.4989,27.8734],[7.4963,27.867],[7.4938,27.8605],[7.4912,27.8539],[7.4888,27.8474],[7.4864,27.8408],[7.4841,27.8342],[7.4819,27.8275],[7.4797,27.8209],[7.4775,27.8142],[7.4753,27.8076],[7.4731,27.801],[7.4708,27.7944],[7.4685,27.7877],[7.4663,27.7811],[7.464,27.7745],[7.4618,27.7679],[7.4596,27.7613],[7.4574,27.7546],[7.4552,27.748],[7.4531,27.7413],[7.4511,27.7347],[7.449,27.728],[7.4471,27.7213],[7.4452,27.7146],[7.4434,27.7079],[7.4417,27.7012],[7.44,27.6944],[7.4385,27.6877],[7.4371,27.6809],[7.4359,27.6741],[7.4348,27.6672],[7.4339,27.6604],[7.4332,27.6536],[7.4327,27.6467],[7.4325,27.6399],[7.4326,27.6331],[7.4331,27.6263],[7.4339,27.6196],[7.4351,27.613],[7.4368,27.6065],[7.4389,27.6001],[7.4415,27.594],[7.4447,27.588],[7.4483,27.5824],[7.4525,27.577],[7.4572,27.572],[7.4624,27.5674],[7.4679,27.5631],[7.4737,27.5592],[7.4797,27.5557],[7.4859,27.5524],[7.4923,27.5494],[7.4987,27.5467],[7.5053,27.5442],[7.5119,27.5419],[7.5186,27.5397],[7.5254,27.5377],[7.5321,27.5358],[7.5389,27.5341],[7.5457,27.5324],[7.5526,27.5308],[7.5595,27.5293],[7.5663,27.5279],[7.5732,27.5265],[7.5801,27.5252],[7.587,27.5239],[7.5939,27.5227],[7.6009,27.5215],[7.6078,27.5203],[7.6147,27.5192],[7.6216,27.518],[7.6286,27.5169],[7.6355,27.5157],[7.6424,27.5146],[7.6494,27.5134],[7.6563,27.5123],[7.6632,27.5111],[7.6701,27.5098],[7.6771,27.5086],[7.684,27.5072],[7.6909,27.5059],[7.6977,27.5044],[7.7046,27.5029],[7.7115,27.5015],[7.7184,27.5001],[7.7252,27.4987],[7.7321,27.4973],[7.739,27.4961],[7.746,27.495],[7.7529,27.494],[7.7599,27.4931],[7.7669,27.4922],[7.7739,27.4915],[7.7809,27.4908],[7.7879,27.4903],[7.7949,27.4897],[7.8019,27.4893],[7.8089,27.4888],[7.8159,27.4884],[7.8229,27.488],[7.83,27.4876],[7.837,27.4873],[7.844,27.4869],[7.851,27.4865],[7.858,27.4861],[7.8651,27.4856],[7.8721,27.4851],[7.8791,27.4846],[7.8861,27.484],[7.8931,27.4833],[7.9001,27.4825],[7.907,27.4817],[7.914,27.4807],[7.9209,27.4796],[7.9279,27.4785],[7.9348,27.4772],[7.9417,27.4757],[7.9485,27.4742],[7.9553,27.4724],[7.9621,27.4706],[7.9688,27.4686],[7.9755,27.4664],[7.9822,27.4641],[7.9887,27.4616],[7.9952,27.4589],[8.0016,27.456],[8.008,27.4531],[8.0143,27.45],[8.0205,27.4467],[8.0267,27.4434],[8.0328,27.4399],[8.0389,27.4364],[8.0449,27.4327],[8.0508,27.429],[8.0567,27.4252],[8.0625,27.4213],[8.0683,27.4173],[8.0741,27.4133],[8.0798,27.4092],[8.0855,27.4051],[8.0911,27.4009],[8.0968,27.3967],[8.1023,27.3925],[8.1079,27.3882],[8.1134,27.3839],[8.1189,27.3795],[8.1244,27.3752],[8.1299,27.3708],[8.1354,27.3664],[8.1408,27.3619],[8.1462,27.3575],[8.1517,27.3531],[8.1571,27.3486],[8.1625,27.3441],[8.1679,27.3397],[8.1733,27.3352],[8.1787,27.3307],[8.1842,27.3263],[8.1896,27.3218],[8.195,27.3174],[8.2004,27.313],[8.2059,27.3085],[8.2114,27.3041],[8.2168,27.2997],[8.2223,27.2954],[8.2278,27.291],[8.2334,27.2867],[8.2389,27.2824],[8.2445,27.2782],[8.2501,27.274],[8.2558,27.2698],[8.2614,27.2656],[8.2671,27.2616],[8.2729,27.2575],[8.2786,27.2535],[8.2845,27.2496],[8.2903,27.2457],[8.2962,27.2419],[8.3021,27.2381],[8.3081,27.2344],[8.314,27.2307],[8.32,27.227],[8.326,27.2234],[8.3321,27.2198],[8.3381,27.2163],[8.3442,27.2127],[8.3503,27.2092],[8.3564,27.2057],[8.3625,27.2022],[8.3686,27.1988],[8.3747,27.1953],[8.3808,27.1919],[8.387,27.1885],[8.3931,27.1851],[8.3993,27.1817],[8.4054,27.1783],[8.4116,27.175],[8.4178,27.1716],[8.4239,27.1683],[8.4301,27.1649],[8.4363,27.1616],[8.4425,27.1583],[8.4487,27.155],[8.4549,27.1517],[8.4611,27.1484],[8.4673,27.1451],[8.4735,27.1419],[8.4798,27.1386],[8.486,27.1354],[8.4922,27.1321],[8.4984,27.1289],[8.5047,27.1256],[8.5109,27.1224],[8.5172,27.1192],[8.5234,27.116],[8.5296,27.1128],[8.5359,27.1096],[8.5422,27.1064],[8.5484,27.1032],[8.5547,27.1],[8.5609,27.0968],[8.5672,27.0937],[8.5735,27.0905],[8.5797,27.0873],[8.586,27.0842],[8.5923,27.081],[8.5986,27.0779],[8.6049,27.0748],[8.6112,27.0716],[8.6174,27.0685]]},\"properties\":{\"i\":9,\"source\":1024,\"mouth\":1465,\"discharge\":52,\"length\":195.73,\"width\":1.19,\"widthFactor\":2,\"sourceWidth\":1,\"parent\":8,\"cells\":[1024,1168,1243,1316,1317,1391,1464,1465,1541],\"basin\":8,\"name\":\"Ironwood\",\"type\":\"Fork\",\"points\":[[1188.87,263.1],[1177.5,299.36],[1195.6,310.7],[1196.2,336.7],[1214.4,339],[1230.7,351.6],[1224.5,372],[1244.4,376.8],[1266.6,390.8]],\"id\":\"river9\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[8.1503,12.3379],[8.1505,12.3377],[8.1512,12.3371],[8.1526,12.336],[8.1552,12.3345],[8.1599,12.3348],[8.1662,12.3378],[8.1726,12.3407],[8.1789,12.3436],[8.1853,12.3464],[8.1918,12.3492],[8.1982,12.3519],[8.2046,12.3547],[8.2111,12.3574],[8.2176,12.3601],[8.2241,12.3627],[8.2306,12.3654],[8.2371,12.368],[8.2436,12.3706],[8.2501,12.3732],[8.2566,12.3758],[8.2631,12.3784],[8.2697,12.381],[8.2762,12.3835],[8.2827,12.3861],[8.2893,12.3886],[8.2958,12.3912],[8.3024,12.3937],[8.3089,12.3962],[8.3155,12.3988],[8.322,12.4013],[8.3286,12.4038],[8.3351,12.4063],[8.3417,12.4088],[8.3483,12.4113],[8.3548,12.4139],[8.3614,12.4164],[8.3679,12.4189],[8.3745,12.4214],[8.3811,12.4239],[8.3876,12.4264],[8.3942,12.429],[8.4007,12.4315],[8.4073,12.434],[8.4138,12.4365],[8.4204,12.4391],[8.4269,12.4416],[8.4335,12.4442],[8.44,12.4467],[8.4466,12.4493],[8.4531,12.4519],[8.4596,12.4544],[8.4662,12.457],[8.4727,12.4597],[8.4792,12.4623],[8.4857,12.4649],[8.4922,12.4676],[8.4987,12.4702],[8.5052,12.4729],[8.5117,12.4756],[8.5182,12.4784],[8.5246,12.4811],[8.5311,12.4839],[8.5376,12.4866],[8.544,12.4893],[8.5505,12.4921],[8.557,12.4948],[8.5634,12.4976],[8.5699,12.5004],[8.5763,12.5031],[8.5828,12.5059],[8.5893,12.5086],[8.5958,12.5113],[8.6023,12.514],[8.6087,12.5167],[8.6152,12.5194],[8.6217,12.5221],[8.6282,12.5248],[8.6347,12.5275],[8.6412,12.5302],[8.6477,12.5329],[8.6541,12.5356],[8.6606,12.5383],[8.6671,12.5411],[8.6736,12.5438],[8.68,12.5465],[8.6865,12.5493],[8.693,12.552],[8.6994,12.5548],[8.7059,12.5576],[8.7123,12.5603],[8.7188,12.5631],[8.7252,12.566],[8.7316,12.5688],[8.7381,12.5717],[8.7445,12.5745],[8.7509,12.5774],[8.7573,12.5803],[8.7636,12.5833],[8.77,12.5862],[8.7764,12.5892],[8.7827,12.5923],[8.789,12.5953],[8.7953,12.5984],[8.8016,12.6015],[8.8079,12.6046],[8.8142,12.6078],[8.8204,12.6111],[8.8266,12.6143],[8.8328,12.6176],[8.839,12.621],[8.8451,12.6244],[8.8512,12.6278],[8.8573,12.6314],[8.8633,12.6349],[8.8693,12.6386],[8.8753,12.6423],[8.8812,12.646],[8.887,12.6499],[8.8928,12.6538],[8.8986,12.6578],[8.9042,12.6619],[8.9098,12.6662],[8.9153,12.6705],[8.9207,12.675],[8.9259,12.6796],[8.931,12.6843],[8.9359,12.6891],[8.9408,12.6941],[8.9454,12.6992],[8.95,12.7044],[8.9543,12.7098],[8.9585,12.7152],[8.9625,12.7208],[8.9663,12.7265],[8.9699,12.7323],[8.9734,12.7382],[8.9767,12.7442],[8.9797,12.7504],[8.9826,12.7566],[8.9853,12.7629],[8.9878,12.7692],[8.9902,12.7757],[8.9924,12.7822],[8.9944,12.7888],[8.9963,12.7954],[8.9981,12.8021],[8.9997,12.8088],[9.0012,12.8156],[9.0026,12.8224],[9.004,12.8292],[9.0053,12.836],[9.0065,12.8429],[9.0076,12.8497],[9.0087,12.8566],[9.0098,12.8635],[9.0109,12.8704],[9.0119,12.8774],[9.013,12.8843],[9.0141,12.8912],[9.0152,12.8981],[9.0162,12.905],[9.017,12.912],[9.0178,12.9189],[9.0184,12.9259],[9.019,12.9328],[9.0195,12.9398],[9.0199,12.9468],[9.0203,12.9538],[9.0207,12.9607],[9.0211,12.9677],[9.0214,12.9747],[9.0217,12.9816],[9.0221,12.9886],[9.0224,12.9956],[9.0228,13.0025],[9.0233,13.0095],[9.0238,13.0164],[9.0242,13.0233],[9.0245,13.0303],[9.0247,13.0373],[9.0249,13.0443],[9.025,13.0513],[9.025,13.0583],[9.025,13.0653],[9.0251,13.0722],[9.0251,13.0792],[9.0251,13.0862],[9.0251,13.0932],[9.0252,13.1002],[9.0253,13.1071],[9.0255,13.1141],[9.0258,13.121],[9.0261,13.1279],[9.0266,13.1348],[9.0272,13.1417],[9.0279,13.1485],[9.0288,13.1553],[9.0298,13.1621],[9.031,13.1688],[9.0324,13.1754],[9.034,13.182],[9.0357,13.1886],[9.0376,13.195],[9.0397,13.2014],[9.042,13.2077],[9.0445,13.2139],[9.0472,13.2201],[9.0501,13.2261],[9.0532,13.2321],[9.0564,13.238],[9.0599,13.2439],[9.0636,13.2496],[9.0674,13.2552],[9.0715,13.2607],[9.0758,13.2661],[9.0803,13.2713],[9.0849,13.2765],[9.0898,13.2815],[9.0947,13.2864],[9.0997,13.2912],[9.1049,13.2959],[9.1101,13.3005],[9.1155,13.3051],[9.1208,13.3095],[9.1263,13.3139],[9.1318,13.3183],[9.1373,13.3226],[9.1429,13.3268],[9.1485,13.331],[9.1542,13.3352],[9.1598,13.3394],[9.1655,13.3435],[9.1712,13.3476],[9.1769,13.3517],[9.1826,13.3558],[9.1883,13.3599],[9.194,13.3639],[9.1997,13.368],[9.2054,13.3722],[9.2111,13.3763],[9.2167,13.3805],[9.2223,13.3847],[9.2279,13.3889],[9.2335,13.3932],[9.239,13.3975],[9.2444,13.4019],[9.2499,13.4063],[9.2552,13.4108],[9.2604,13.4155],[9.2655,13.4202],[9.2706,13.4249],[9.2756,13.4298],[9.2806,13.4347],[9.2855,13.4396],[9.2904,13.4446],[9.2951,13.4497],[9.2998,13.4548],[9.3045,13.4601],[9.3091,13.4653],[9.3135,13.4707],[9.3179,13.4761],[9.3223,13.4816],[9.3266,13.4871],[9.3308,13.4927],[9.335,13.4983],[9.3392,13.5039],[9.3434,13.5095],[9.3475,13.5152],[9.3516,13.5209],[9.3556,13.5266],[9.3597,13.5323],[9.3638,13.538],[9.3678,13.5437],[9.3719,13.5494],[9.3759,13.5551],[9.38,13.5608],[9.3841,13.5665],[9.3882,13.5722],[9.3924,13.5779],[9.3965,13.5835],[9.4007,13.5891],[9.405,13.5947],[9.4093,13.6002],[9.4136,13.6057],[9.418,13.6111],[9.4225,13.6165],[9.427,13.6218],[9.4316,13.6271],[9.4363,13.6323],[9.4411,13.6374],[9.4459,13.6424],[9.4508,13.6474],[9.4558,13.6522],[9.461,13.657],[9.4661,13.6616],[9.4714,13.6662],[9.4768,13.6706],[9.4822,13.675],[9.4878,13.6792],[9.4934,13.6833],[9.4991,13.6872],[9.505,13.6911],[9.5109,13.6948],[9.5168,13.6983],[9.5229,13.7018],[9.5291,13.705],[9.5354,13.7081],[9.5417,13.7111],[9.5481,13.714],[9.5546,13.7167],[9.5611,13.7193],[9.5676,13.7219],[9.5742,13.7243],[9.5808,13.7266],[9.5874,13.7289],[9.5941,13.7311],[9.6008,13.7332],[9.6075,13.7353],[9.6143,13.7373],[9.621,13.7393],[9.6278,13.7412],[9.6345,13.7431],[9.6413,13.745],[9.6481,13.7468],[9.6549,13.7487],[9.6616,13.7505],[9.6684,13.7524],[9.6752,13.7542],[9.682,13.7561],[9.6888,13.758],[9.6955,13.7599],[9.7023,13.7618],[9.709,13.7638],[9.7157,13.7659],[9.7224,13.7679],[9.7291,13.7701],[9.7358,13.7723],[9.7424,13.7746],[9.749,13.7769],[9.7556,13.7794],[9.7621,13.7819],[9.7686,13.7846],[9.775,13.7874],[9.7814,13.7903],[9.7877,13.7933],[9.7939,13.7964],[9.8001,13.7997],[9.8063,13.803],[9.8124,13.8065],[9.8184,13.8101],[9.8243,13.8138],[9.8302,13.8176],[9.836,13.8216],[9.8417,13.8256],[9.8474,13.8297],[9.853,13.8339],[9.8586,13.8381],[9.8642,13.8424],[9.8697,13.8467],[9.8753,13.851],[9.8807,13.8554],[9.8862,13.8598],[9.8917,13.8642],[9.8972,13.8685],[9.9027,13.8729],[9.9081,13.8773],[9.9137,13.8816],[9.9192,13.8859],[9.9247,13.8902],[9.9303,13.8944],[9.936,13.8986],[9.9416,13.9027],[9.9474,13.9067],[9.9532,13.9107],[9.959,13.9145],[9.965,13.9182],[9.971,13.9218],[9.9771,13.9252],[9.9833,13.9284],[9.9896,13.9314],[9.996,13.9342],[10.0026,13.9367],[10.0092,13.9389],[10.0159,13.9408],[10.0228,13.9423],[10.0297,13.9433],[10.0366,13.9439],[10.0436,13.944],[10.0506,13.9435],[10.0575,13.9426],[10.0644,13.9411],[10.0711,13.9392],[10.0777,13.9368],[10.0842,13.9341],[10.0905,13.931],[10.0966,13.9276],[10.1026,13.924],[10.1085,13.9201],[10.1142,13.916],[10.1198,13.9118],[10.1253,13.9074],[10.1307,13.903],[10.136,13.8984],[10.1412,13.8937],[10.1463,13.8889],[10.1514,13.884],[10.1564,13.8791],[10.1613,13.8741],[10.1662,13.8691],[10.171,13.864],[10.1758,13.8589],[10.1806,13.8538],[10.1853,13.8486],[10.19,13.8434],[10.1947,13.8382],[10.1994,13.8329],[10.204,13.8277],[10.2086,13.8224],[10.2133,13.8171],[10.2179,13.8119],[10.2225,13.8066],[10.2271,13.8013],[10.2318,13.7961],[10.2364,13.7908],[10.241,13.7856],[10.2457,13.7803],[10.2504,13.7751],[10.2551,13.7699],[10.2599,13.7648],[10.2646,13.7596],[10.2695,13.7545],[10.2743,13.7495],[10.2792,13.7444],[10.2841,13.7395],[10.2891,13.7346],[10.2942,13.7297],[10.2993,13.7249],[10.3045,13.7202],[10.3097,13.7155],[10.3151,13.7109],[10.3205,13.7065],[10.3259,13.7021],[10.3314,13.6976],[10.3368,13.6932],[10.3422,13.6887],[10.3475,13.6842],[10.3528,13.6795],[10.3579,13.6748],[10.3631,13.67],[10.3682,13.6652],[10.3732,13.6603],[10.3782,13.6553],[10.3831,13.6504],[10.3881,13.6454],[10.393,13.6404],[10.3978,13.6353],[10.4027,13.6303],[10.4076,13.6252],[10.4124,13.6202],[10.4173,13.6151],[10.4221,13.6101],[10.427,13.605],[10.4319,13.6],[10.4368,13.595],[10.4418,13.5901],[10.4468,13.5852],[10.4518,13.5803],[10.4569,13.5754],[10.462,13.5707],[10.4672,13.5659],[10.4724,13.5613],[10.4778,13.5567],[10.4832,13.5522],[10.4886,13.5478],[10.4942,13.5436],[10.4998,13.5394],[10.5056,13.5353],[10.5114,13.5314],[10.5173,13.5276],[10.5233,13.524],[10.5294,13.5205],[10.5356,13.5172],[10.5419,13.5141],[10.5483,13.5112],[10.5548,13.5085],[10.5613,13.5059],[10.5679,13.5036],[10.5746,13.5015],[10.5814,13.4996],[10.5882,13.4979],[10.5951,13.4965],[10.602,13.4953],[10.6089,13.4942],[10.6159,13.4934],[10.6229,13.4928],[10.6299,13.4925],[10.6369,13.4924],[10.6439,13.4924],[10.6509,13.4927],[10.6579,13.4931],[10.6649,13.4937],[10.6718,13.4945],[10.6788,13.4954],[10.6857,13.4965],[10.6927,13.4977],[10.6996,13.499],[10.7064,13.5004],[10.7133,13.5019],[10.7201,13.5035],[10.727,13.5051],[10.7338,13.5069],[10.7405,13.5087],[10.7473,13.5106],[10.7541,13.5126],[10.7608,13.5146],[10.7675,13.5167],[10.7742,13.5188],[10.7809,13.521],[10.7875,13.5232],[10.7942,13.5255],[10.8008,13.5278],[10.8074,13.5302],[10.814,13.5326],[10.8206,13.5351],[10.8272,13.5376],[10.8337,13.5401],[10.8403,13.5426],[10.8468,13.5452],[10.8533,13.5478],[10.8598,13.5505],[10.8663,13.5531],[10.8728,13.5558],[10.8793,13.5585],[10.8858,13.5612],[10.8922,13.564],[10.8987,13.5668],[10.9051,13.5696],[10.9116,13.5724],[10.918,13.5752],[10.9244,13.5781],[10.9308,13.5809],[10.9373,13.5838],[10.9437,13.5867],[10.9501,13.5896],[10.9564,13.5925],[10.9628,13.5954],[10.9692,13.5983],[10.9756,13.6013],[10.982,13.6042],[10.9883,13.6072],[10.9947,13.6102],[11.0011,13.6132],[11.0074,13.6161],[11.0138,13.6191],[11.0201,13.6221],[11.0265,13.6251],[11.0328,13.6281],[11.0392,13.6311],[11.0455,13.6341],[11.0519,13.6371],[11.0582,13.6402],[11.0646,13.6432],[11.0709,13.6462],[11.0773,13.6492],[11.0836,13.6522],[11.09,13.6552],[11.0963,13.6582],[11.1027,13.6612],[11.109,13.6642],[11.1154,13.6672],[11.1217,13.6702],[11.1281,13.6732],[11.1344,13.6762],[11.1408,13.6791],[11.1472,13.6821],[11.1536,13.6851],[11.1599,13.688],[11.1663,13.6909],[11.1727,13.6939],[11.1791,13.6968],[11.1855,13.6997],[11.1919,13.7026],[11.1983,13.7054],[11.2047,13.7083],[11.2112,13.7111],[11.2176,13.7139],[11.224,13.7168],[11.2304,13.7196],[11.2369,13.7225],[11.2433,13.7254],[11.2497,13.7283],[11.256,13.7312],[11.2624,13.7341],[11.2688,13.7371],[11.2751,13.7401],[11.2815,13.7432],[11.2877,13.7463],[11.294,13.7494],[11.3003,13.7526],[11.3065,13.7559],[11.3127,13.7591],[11.3189,13.7624],[11.3251,13.7658],[11.3312,13.7692],[11.3374,13.7726],[11.3435,13.776],[11.3496,13.7795],[11.3557,13.783],[11.3618,13.7865],[11.3679,13.79],[11.3739,13.7935],[11.38,13.7971],[11.386,13.8007],[11.392,13.8043],[11.398,13.8079],[11.4041,13.8116],[11.4101,13.8152],[11.4161,13.8189],[11.422,13.8225],[11.428,13.8262],[11.434,13.8299],[11.44,13.8336],[11.446,13.8372],[11.4519,13.8409],[11.4579,13.8446],[11.4639,13.8483],[11.4698,13.852],[11.4758,13.8557],[11.4818,13.8594],[11.4878,13.863],[11.4938,13.8667],[11.4998,13.8704],[11.5058,13.874],[11.5118,13.8777],[11.5178,13.8813],[11.5238,13.8849],[11.5298,13.8885],[11.5359,13.8921],[11.5419,13.8957],[11.548,13.8992],[11.554,13.9027],[11.5601,13.9062],[11.5662,13.9097],[11.5723,13.9131],[11.5785,13.9166],[11.5846,13.9199],[11.5908,13.9233],[11.597,13.9266],[11.6032,13.9299],[11.6094,13.9332],[11.6157,13.9364],[11.6219,13.9395],[11.6282,13.9427],[11.6345,13.9457],[11.6408,13.9488],[11.6472,13.9518],[11.6536,13.9547],[11.66,13.9576],[11.6664,13.9604],[11.6729,13.9631],[11.6794,13.9658],[11.6859,13.9685],[11.6924,13.971],[11.699,13.9735],[11.7056,13.9759],[11.7122,13.9783],[11.7188,13.9806],[11.7255,13.9827],[11.7322,13.9848],[11.739,13.9868],[11.7457,13.9888],[11.7525,13.9906],[11.7593,13.9923],[11.7661,13.9939],[11.773,13.9955],[11.7799,13.9969],[11.7868,13.9982],[11.7937,13.9994],[11.8006,14.0005],[11.8076,14.0015],[11.8146,14.0023],[11.8216,14.0029],[11.8286,14.0035],[11.8356,14.004],[11.8426,14.0043],[11.8496,14.0045],[11.8566,14.0046],[11.8636,14.0045],[11.8707,14.0044],[11.8777,14.0041],[11.8847,14.0037],[11.8917,14.0032],[11.8987,14.0027],[11.9057,14.002],[11.9127,14.0012],[11.9197,14.0003],[11.9266,13.9994],[11.9336,13.9983],[11.9405,13.9972],[11.9475,13.996],[11.9544,13.9947],[11.9613,13.9934],[11.9681,13.9919],[11.975,13.9904],[11.9819,13.9889],[11.9887,13.9872],[11.9955,13.9856],[12.0023,13.9838],[12.0091,13.982],[12.0159,13.9801],[12.0227,13.9782],[12.0294,13.9763],[12.0361,13.9743],[12.0429,13.9722],[12.0496,13.9701],[12.0563,13.968],[12.063,13.9658],[12.0696,13.9636],[12.0763,13.9614],[12.0829,13.9591],[12.0896,13.9568],[12.0962,13.9545],[12.1028,13.9521],[12.1094,13.9497],[12.116,13.9473],[12.1226,13.9449],[12.1292,13.9424],[12.1358,13.9399],[12.1424,13.9374],[12.1489,13.9349],[12.1555,13.9324],[12.162,13.9299],[12.1686,13.9273],[12.1751,13.9248],[12.1817,13.9222],[12.1882,13.9196],[12.1947,13.9171],[12.2013,13.9145],[12.2078,13.9119],[12.2143,13.9093],[12.2209,13.9067],[12.2274,13.9041],[12.2339,13.9015],[12.2405,13.8989],[12.247,13.8964],[12.2535,13.8938],[12.2601,13.8912],[12.2666,13.8886],[12.2732,13.8861],[12.2797,13.8836],[12.2863,13.881],[12.2928,13.8785],[12.2994,13.876],[12.306,13.8735],[12.3125,13.8711],[12.3191,13.8686],[12.3257,13.8662],[12.3323,13.8638],[12.3389,13.8614],[12.3456,13.8591],[12.3522,13.8568],[12.3588,13.8545],[12.3655,13.8522],[12.3722,13.85],[12.3788,13.8478],[12.3855,13.8456],[12.3922,13.8435],[12.3989,13.8414],[12.4057,13.8394],[12.4124,13.8374],[12.4191,13.8354],[12.4259,13.8335],[12.4327,13.8317],[12.4395,13.8298],[12.4463,13.8281],[12.4531,13.8264],[12.4599,13.8247],[12.4668,13.8231],[12.4736,13.8215],[12.4805,13.82],[12.4873,13.8185],[12.4942,13.817],[12.5011,13.8157],[12.508,13.8143],[12.5149,13.813],[12.5218,13.8117],[12.5288,13.8105],[12.5357,13.8093],[12.5426,13.8081],[12.5496,13.807],[12.5565,13.8059],[12.5635,13.8048],[12.5704,13.8038],[12.5774,13.8028],[12.5843,13.8018],[12.5913,13.8008],[12.5983,13.7999],[12.6052,13.799],[12.6122,13.7981],[12.6192,13.7972],[12.6262,13.7963],[12.6331,13.7955],[12.6401,13.7947],[12.6471,13.7938],[12.6541,13.793],[12.6611,13.7922],[12.6681,13.7915],[12.675,13.7907],[12.682,13.7899],[12.689,13.7892],[12.696,13.7884],[12.703,13.7876],[12.71,13.7869],[12.717,13.7861],[12.724,13.7854],[12.731,13.7847],[12.738,13.7839],[12.7449,13.7831],[12.7519,13.7824],[12.7589,13.7816],[12.7659,13.7809],[12.7729,13.7801],[12.7799,13.7793],[12.7869,13.7785],[12.7939,13.7777],[12.8008,13.7769],[12.8078,13.776],[12.8148,13.7752],[12.8218,13.7743],[12.8288,13.7734],[12.8357,13.7725],[12.8427,13.7716],[12.8497,13.7707],[12.8566,13.7697],[12.8636,13.7687],[12.8705,13.7677],[12.8775,13.7666],[12.8844,13.7656],[12.8914,13.7644],[12.8983,13.7633],[12.9052,13.7621],[12.9122,13.7609],[12.9191,13.7596],[12.926,13.7584],[12.9329,13.757],[12.9398,13.7556],[12.9467,13.7542],[12.9535,13.7527],[12.9604,13.7512],[12.9673,13.7496],[12.9741,13.748],[12.9809,13.7463],[12.9877,13.7445],[12.9945,13.7427],[13.0013,13.7408],[13.008,13.7389],[13.0148,13.7368],[13.0215,13.7347],[13.0282,13.7326],[13.0348,13.7303],[13.0414,13.728],[13.048,13.7256],[13.0546,13.723],[13.0611,13.7204],[13.0676,13.7177],[13.0741,13.7149],[13.0804,13.712],[13.0868,13.709],[13.0931,13.7059],[13.0993,13.7027],[13.1055,13.6994],[13.1116,13.6959],[13.1176,13.6922],[13.1235,13.6884],[13.1293,13.6845],[13.1351,13.6805],[13.1408,13.6764],[13.1464,13.6722],[13.1519,13.6678],[13.1573,13.6634],[13.1627,13.6589],[13.168,13.6543],[13.1732,13.6496],[13.1783,13.6448],[13.1833,13.6399],[13.1883,13.6349],[13.1932,13.6299],[13.198,13.6248],[13.2027,13.6197],[13.2074,13.6144],[13.212,13.6091],[13.2165,13.6038],[13.221,13.5984],[13.2254,13.5929],[13.2297,13.5874],[13.234,13.5818],[13.2382,13.5762],[13.2423,13.5706],[13.2464,13.5649],[13.2504,13.5592],[13.2544,13.5534],[13.2584,13.5476],[13.2623,13.5418],[13.2661,13.536],[13.2699,13.5301],[13.2737,13.5242],[13.2774,13.5183],[13.2811,13.5123],[13.2848,13.5064],[13.2885,13.5004],[13.2921,13.4944],[13.2957,13.4884],[13.2992,13.4823],[13.3028,13.4763],[13.3063,13.4703],[13.3098,13.4642],[13.3134,13.4581],[13.3168,13.4521],[13.3203,13.446],[13.3238,13.4399],[13.3273,13.4338],[13.3308,13.4278],[13.3343,13.4217],[13.3377,13.4156],[13.3412,13.4095],[13.3447,13.4035],[13.3482,13.3974],[13.3518,13.3914],[13.3553,13.3853],[13.3589,13.3793],[13.3624,13.3733],[13.366,13.3672],[13.3697,13.3613],[13.3733,13.3553],[13.377,13.3493],[13.3807,13.3434],[13.3844,13.3375],[13.3882,13.3316],[13.392,13.3257],[13.3959,13.3198],[13.3998,13.314],[13.4038,13.3082],[13.4077,13.3025],[13.4118,13.2968],[13.4159,13.2911],[13.42,13.2854],[13.4242,13.2798],[13.4285,13.2743],[13.4328,13.2688],[13.4371,13.2632],[13.4415,13.2577],[13.4458,13.2522],[13.4501,13.2467],[13.4545,13.2412],[13.4588,13.2357],[13.4631,13.2302],[13.4674,13.2246],[13.4716,13.219],[13.4757,13.2134],[13.4799,13.2077],[13.484,13.2021],[13.4881,13.1964],[13.4922,13.1907],[13.4962,13.1849],[13.5002,13.1792],[13.5042,13.1734],[13.5082,13.1677],[13.5122,13.1619],[13.5162,13.1561],[13.5201,13.1503],[13.524,13.1446],[13.528,13.1388],[13.5319,13.1329],[13.5358,13.1271],[13.5397,13.1213],[13.5436,13.1155],[13.5475,13.1097],[13.5514,13.1039],[13.5553,13.0981],[13.5593,13.0923],[13.5632,13.0864],[13.5671,13.0806],[13.571,13.0749],[13.575,13.0691],[13.5789,13.0633],[13.5829,13.0575],[13.5869,13.0517],[13.5909,13.046],[13.5949,13.0402],[13.5989,13.0345],[13.603,13.0288],[13.607,13.0231],[13.6111,13.0174],[13.6152,13.0117],[13.6194,13.0061],[13.6236,13.0005],[13.6278,12.9949],[13.632,12.9893],[13.6363,12.9837],[13.6406,12.9782],[13.645,12.9727],[13.6494,12.9673],[13.6538,12.9619],[13.6583,12.9565],[13.6629,12.9511],[13.6675,12.9459],[13.6721,12.9406],[13.6768,12.9354],[13.6816,12.9303],[13.6865,12.9252],[13.6914,12.9202],[13.6964,12.9153],[13.7015,12.9105],[13.7066,12.9057],[13.7119,12.9011],[13.7172,12.8965],[13.7226,12.8921],[13.7282,12.8878],[13.7338,12.8836],[13.7396,12.8796],[13.7454,12.8757],[13.7514,12.8721],[13.7575,12.8686],[13.7637,12.8653],[13.7701,12.8623],[13.7765,12.8595],[13.7831,12.857],[13.7897,12.8548],[13.7965,12.8529],[13.8033,12.8514],[13.8102,12.8501],[13.8172,12.8492],[13.8241,12.8487],[13.8312,12.8485],[13.8382,12.8487],[13.8452,12.8492],[13.8521,12.8499],[13.8591,12.851],[13.8659,12.8523],[13.8728,12.8539],[13.8796,12.8557],[13.8863,12.8577],[13.8929,12.8598],[13.8995,12.8622],[13.9061,12.8647],[13.9126,12.8674],[13.919,12.8702],[13.9253,12.8732],[13.9316,12.8762],[13.9379,12.8794],[13.9441,12.8827],[13.9502,12.8861],[13.9563,12.8895],[13.9624,12.8931],[13.9684,12.8967],[13.9743,12.9004],[13.9803,12.9041],[13.9862,12.908],[13.992,12.9118],[13.9978,12.9158],[14.0036,12.9197],[14.0093,12.9237],[14.015,12.9278],[14.0207,12.9319],[14.0264,12.9361],[14.032,12.9402],[14.0376,12.9444],[14.0432,12.9487],[14.0488,12.9529],[14.0543,12.9572],[14.0599,12.9615],[14.0654,12.9659],[14.0709,12.9702],[14.0764,12.9746],[14.0819,12.979],[14.0873,12.9834],[14.0928,12.9878],[14.0982,12.9922],[14.1037,12.9966],[14.1091,13.0011],[14.1145,13.0055],[14.1199,13.01],[14.1254,13.0144],[14.1308,13.0189],[14.1362,13.0233],[14.1416,13.0278],[14.147,13.0322],[14.1524,13.0367],[14.1579,13.0411],[14.1633,13.0456],[14.1687,13.05],[14.1742,13.0544],[14.1796,13.0588],[14.1851,13.0632],[14.1906,13.0676],[14.1961,13.072],[14.2016,13.0763],[14.2071,13.0807],[14.2127,13.085],[14.2182,13.0892],[14.2238,13.0935],[14.2294,13.0977],[14.235,13.1019],[14.2407,13.1061],[14.2464,13.1102],[14.2521,13.1143],[14.2578,13.1184],[14.2635,13.1225],[14.2691,13.1266],[14.2748,13.1308],[14.2805,13.1349],[14.2861,13.1391],[14.2918,13.1432],[14.2974,13.1473],[14.3031,13.1515],[14.3088,13.1556],[14.3144,13.1598],[14.32,13.164],[14.3256,13.1682],[14.3312,13.1725],[14.3367,13.1768],[14.3422,13.1812],[14.3477,13.1856],[14.3531,13.19],[14.3585,13.1944],[14.364,13.1989],[14.3693,13.2034],[14.3747,13.2079],[14.3801,13.2124],[14.3854,13.217],[14.3907,13.2215],[14.396,13.2261],[14.4013,13.2307],[14.4066,13.2353],[14.4119,13.2399],[14.4172,13.2446],[14.4224,13.2492],[14.4277,13.2539],[14.4329,13.2585],[14.4382,13.2632],[14.4434,13.2679],[14.4486,13.2725],[14.4539,13.2772],[14.4591,13.2819],[14.4643,13.2865],[14.4696,13.2912],[14.4748,13.2959],[14.4801,13.3005],[14.4853,13.3052],[14.4906,13.3099],[14.4958,13.3145],[14.5011,13.3191],[14.5064,13.3238],[14.5116,13.3284],[14.5169,13.333],[14.5222,13.3375],[14.5276,13.3421],[14.5329,13.3466],[14.5383,13.3512],[14.5437,13.3557],[14.5491,13.3601],[14.5545,13.3646],[14.5599,13.369],[14.5654,13.3734],[14.5709,13.3777],[14.5764,13.3821],[14.582,13.3863],[14.5876,13.3906],[14.5932,13.3947],[14.5989,13.3989],[14.6046,13.4029],[14.6103,13.4069],[14.6161,13.4109],[14.622,13.4147],[14.6278,13.4185],[14.6338,13.4222],[14.6398,13.4258],[14.6459,13.4293],[14.652,13.4327],[14.6582,13.4359],[14.6645,13.439],[14.6708,13.4419],[14.6772,13.4447],[14.6837,13.4472],[14.6903,13.4495],[14.6969,13.4516],[14.7037,13.4534],[14.7104,13.4548],[14.7173,13.456],[14.7241,13.4568],[14.731,13.4573],[14.738,13.4574],[14.7449,13.4571],[14.7518,13.4564],[14.7587,13.4553],[14.7655,13.4539],[14.7722,13.452],[14.7788,13.4498],[14.7853,13.4473],[14.7917,13.4444],[14.798,13.4413],[14.8041,13.4379],[14.8101,13.4343],[14.816,13.4304],[14.8217,13.4264],[14.8274,13.4222],[14.8329,13.4178],[14.8383,13.4133],[14.8436,13.4087],[14.8488,13.404],[14.8539,13.3993],[14.859,13.3944],[14.864,13.3895],[14.8689,13.3845],[14.8738,13.3795],[14.8787,13.3745],[14.8835,13.3694],[14.8883,13.3643],[14.8931,13.3592],[14.8978,13.354],[14.9026,13.3489],[14.9073,13.3438],[14.9121,13.3386],[14.9169,13.3335],[14.9217,13.3284],[14.9265,13.3234],[14.9314,13.3183],[14.9363,13.3134],[14.9413,13.3084],[14.9463,13.3035],[14.9514,13.2987],[14.9566,13.294],[14.9618,13.2893],[14.9671,13.2847],[14.9725,13.2803],[14.9781,13.2759],[14.9837,13.2718],[14.9894,13.2677],[14.9953,13.2639],[15.0013,13.2602],[15.0074,13.2567],[15.0135,13.2533],[15.0196,13.2498],[15.0258,13.2464],[15.0319,13.2431],[15.0381,13.2397],[15.0443,13.2364],[15.0505,13.2331],[15.0567,13.2299],[15.0629,13.2266],[15.0692,13.2234],[15.0754,13.2201],[15.0817,13.2169],[15.0879,13.2137],[15.0942,13.2105],[15.1004,13.2074],[15.1067,13.2042],[15.113,13.201],[15.1193,13.1979],[15.1256,13.1948],[15.1319,13.1917],[15.1382,13.1885],[15.1445,13.1854],[15.1508,13.1823],[15.1571,13.1793],[15.1634,13.1762],[15.1697,13.1731],[15.176,13.17],[15.1823,13.167],[15.1887,13.1639],[15.195,13.1609],[15.2013,13.1579],[15.2077,13.1548],[15.214,13.1518],[15.2204,13.1488],[15.2267,13.1458],[15.233,13.1428],[15.2394,13.1398],[15.2458,13.1368],[15.2521,13.1338],[15.2585,13.1308],[15.2648,13.1278],[15.2712,13.1248],[15.2776,13.1219],[15.2839,13.1189],[15.2903,13.1159],[15.2967,13.113],[15.3031,13.1101]]},\"properties\":{\"i\":10,\"source\":3730,\"mouth\":3662,\"discharge\":0,\"length\":322.18,\"width\":0.9,\"widthFactor\":1.5,\"sourceWidth\":1,\"parent\":10,\"cells\":[3730,3649,3566,3567,3486,3569,3489,3574,3658,3577,3662],\"basin\":10,\"name\":\"Muckore\",\"type\":\"River\",\"points\":[[1249,917.25],[1278.1,904.4],[1281.5,885.4],[1297.4,869.1],[1317.5,859.8],[1338.22,875.92],[1380.37,857.68],[1426.17,868.67],[1451.1,898.91],[1483.28,877.17],[1504.28,889.69]],\"id\":\"river10\"}},{\"type\":\"Feature\",\"geometry\":{\"type\":\"LineString\",\"coordinates\":[[10.0406,11.9014],[10.0412,11.9023],[10.0407,11.9074],[10.0397,11.914],[10.0391,11.9207],[10.0387,11.9275],[10.0386,11.9344],[10.0385,11.9413],[10.0386,11.9482],[10.0388,11.9552],[10.0391,11.9621],[10.0394,11.9691],[10.0398,11.976],[10.0403,11.983],[10.0407,11.9899],[10.0413,11.9969],[10.0418,12.0038],[10.0424,12.0108],[10.043,12.0177],[10.0436,12.0247],[10.0443,12.0316],[10.0449,12.0386],[10.0456,12.0456],[10.0463,12.0525],[10.047,12.0595],[10.0477,12.0664],[10.0484,12.0734],[10.0492,12.0803],[10.0499,12.0873],[10.0506,12.0942],[10.0513,12.1012],[10.0521,12.1082],[10.0528,12.1151],[10.0535,12.1221],[10.0542,12.129],[10.0549,12.136],[10.0556,12.1429],[10.0563,12.1499],[10.057,12.1569],[10.0577,12.1638],[10.0583,12.1708],[10.059,12.1778],[10.0596,12.1847],[10.0602,12.1917],[10.0607,12.1987],[10.0613,12.2056],[10.0618,12.2126],[10.0622,12.2196],[10.0626,12.2266],[10.063,12.2336],[10.0632,12.2406],[10.0634,12.2475],[10.0637,12.2545],[10.064,12.2615],[10.0643,12.2685],[10.0647,12.2755],[10.065,12.2825],[10.0654,12.2895],[10.0659,12.2965],[10.0663,12.3034],[10.0667,12.3104],[10.0672,12.3174],[10.0676,12.3244],[10.068,12.3314],[10.0685,12.3383],[10.0689,12.3453],[10.0693,12.3523],[10.0697,12.3593],[10.0701,12.3663],[10.0704,12.3733],[10.0707,12.3802],[10.071,12.3872],[10.0712,12.3942],[10.0715,12.4012],[10.0716,12.4082],[10.0717,12.4152],[10.0718,12.4222],[10.0718,12.4292],[10.0717,12.4362],[10.0716,12.4432],[10.0714,12.4502],[10.0712,12.4572],[10.0708,12.4641],[10.0704,12.4711],[10.0698,12.4781],[10.0692,12.4851],[10.0684,12.492],[10.0676,12.499],[10.0666,12.5059],[10.0655,12.5128],[10.0642,12.5197],[10.0628,12.5265],[10.0613,12.5333],[10.0596,12.5401],[10.0577,12.5468],[10.0557,12.5535],[10.0534,12.5601],[10.0509,12.5666],[10.0483,12.5731],[10.0454,12.5794],[10.0424,12.5857],[10.0392,12.5919],[10.0357,12.598],[10.032,12.6039],[10.0282,12.6098],[10.0242,12.6155],[10.0201,12.6212],[10.0159,12.6267],[10.0115,12.6322],[10.0071,12.6376],[10.0025,12.6429],[9.9978,12.648],[9.993,12.6532],[9.9881,12.6582],[9.9832,12.6632],[9.9782,12.6681],[9.9731,12.6729],[9.968,12.6776],[9.9628,12.6823],[9.9575,12.687],[9.9522,12.6916],[9.9469,12.6961],[9.9415,12.7006],[9.9361,12.7051],[9.9307,12.7095],[9.9252,12.7139],[9.9197,12.7182],[9.9142,12.7225],[9.9086,12.7268],[9.9031,12.7311],[9.8975,12.7354],[9.8919,12.7396],[9.8863,12.7438],[9.8807,12.7481],[9.8751,12.7523],[9.8695,12.7565],[9.8639,12.7607],[9.8583,12.765],[9.8527,12.7692],[9.8471,12.7734],[9.8415,12.7777],[9.8359,12.782],[9.8304,12.7863],[9.8248,12.7905],[9.8192,12.7947],[9.8135,12.7988],[9.8077,12.8028],[9.802,12.8068],[9.7962,12.8108],[9.7903,12.8147],[9.7845,12.8185],[9.7787,12.8224],[9.7728,12.8263],[9.7669,12.83],[9.7609,12.8336],[9.7548,12.8371],[9.7487,12.8406],[9.7426,12.8439],[9.7364,12.8472],[9.7301,12.8504],[9.7238,12.8535],[9.7175,12.8566],[9.7112,12.8597],[9.7049,12.8627],[9.6985,12.8657],[9.6921,12.8687],[9.6858,12.8717],[9.6794,12.8746],[9.673,12.8776],[9.6667,12.8805],[9.6603,12.8835],[9.654,12.8865],[9.6476,12.8895],[9.6413,12.8926],[9.6351,12.8957],[9.6288,12.8989],[9.6226,12.9021],[9.6164,12.9054],[9.6103,12.9088],[9.6042,12.9123],[9.5982,12.916],[9.5923,12.9197],[9.5865,12.9236],[9.5808,12.9276],[9.5752,12.9317],[9.5698,12.9361],[9.5645,12.9407],[9.5594,12.9454],[9.5546,12.9504],[9.55,12.9556],[9.5457,12.9611],[9.5417,12.9668],[9.5382,12.9728],[9.5351,12.979],[9.5324,12.9854],[9.5302,12.9919],[9.5284,12.9987],[9.5271,13.0055],[9.5262,13.0124],[9.5256,13.0193],[9.5255,13.0263],[9.5256,13.0333],[9.526,13.0402],[9.5267,13.0472],[9.5276,13.0541],[9.5288,13.061],[9.5301,13.0679],[9.5316,13.0747],[9.5332,13.0815],[9.535,13.0883],[9.5368,13.095],[9.5388,13.1018],[9.5409,13.1084],[9.5431,13.1151],[9.5454,13.1217],[9.5477,13.1283],[9.5501,13.1349],[9.5525,13.1415],[9.555,13.148],[9.5575,13.1545],[9.5601,13.161],[9.5627,13.1675],[9.5653,13.174],[9.568,13.1805],[9.5706,13.187],[9.5733,13.1934],[9.576,13.1999],[9.5787,13.2064],[9.5814,13.2128],[9.5841,13.2193],[9.5868,13.2257],[9.5895,13.2322],[9.5922,13.2387],[9.5948,13.2451],[9.5975,13.2516],[9.6001,13.2581],[9.6027,13.2646],[9.6052,13.2711],[9.6077,13.2777],[9.6102,13.2842],[9.6126,13.2908],[9.615,13.2974],[9.6173,13.304],[9.6195,13.3106],[9.6217,13.3173],[9.6238,13.3239],[9.6258,13.3306],[9.6277,13.3374],[9.6296,13.3441],[9.6313,13.3509],[9.6328,13.3577],[9.6343,13.3646],[9.6357,13.3714],[9.6371,13.3783],[9.6384,13.3852],[9.6397,13.392],[9.6409,13.3989],[9.6421,13.4058],[9.6433,13.4127],[9.6445,13.4196],[9.6456,13.4265],[9.6468,13.4334],[9.6479,13.4403],[9.649,13.4472],[9.65,13.4541],[9.6511,13.461],[9.6521,13.468],[9.6531,13.4749],[9.6541,13.4818],[9.6551,13.4887],[9.6561,13.4957],[9.6571,13.5026],[9.658,13.5095],[9.659,13.5164],[9.6599,13.5234],[9.6608,13.5303],[9.6618,13.5372],[9.6627,13.5442],[9.6636,13.5511],[9.6644,13.5581],[9.6653,13.565],[9.6662,13.5719],[9.6671,13.5789],[9.6679,13.5858],[9.6688,13.5928],[9.6696,13.5997],[9.6704,13.6067],[9.6713,13.6136],[9.6721,13.6206],[9.6729,13.6275],[9.6737,13.6344],[9.6745,13.6414],[9.6753,13.6483],[9.6761,13.6553],[9.6769,13.6622],[9.6777,13.6692],[9.6784,13.6762],[9.6792,13.6831],[9.68,13.6901],[9.6807,13.697],[9.6815,13.704],[9.6822,13.7109],[9.6829,13.7179],[9.6837,13.7248],[9.6844,13.7318],[9.6851,13.7388],[9.6858,13.7457]]},\"properties\":{\"i\":11,\"source\":3819,\"mouth\":3650,\"discharge\":9,\"length\":76.67,\"width\":0.65,\"widthFactor\":1.2,\"sourceWidth\":1,\"parent\":10,\"cells\":[3819,3734,3650,3567],\"basin\":10,\"name\":\"Tortade\",\"type\":\"River\",\"points\":[[1316.34,932.74],[1317.22,908.64],[1298.83,893.87],[1304.4,866.7]],\"id\":\"river11\"}}]}\n\n//# sourceURL=webpack://innestra/./src/rivers.geojson?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls */ \"./node_modules/three/examples/jsm/controls/OrbitControls.js\");\n/* harmony import */ var three_src_math_mathutils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three/src/math/mathutils */ \"./node_modules/three/src/math/mathutils.js\");\n/* harmony import */ var _cells_geojson__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cells.geojson */ \"./src/cells.geojson\");\n/* harmony import */ var _cells_geojson__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_cells_geojson__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _rivers_geojson__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rivers.geojson */ \"./src/rivers.geojson\");\n/* harmony import */ var _rivers_geojson__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_rivers_geojson__WEBPACK_IMPORTED_MODULE_2__);\n\r\n\r\n\r\n\r\n\r\n\r\nconst camera = new three__WEBPACK_IMPORTED_MODULE_3__.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 1000);\r\ncamera.position.y = 15;\r\ncamera.position.z = 0;\r\n\r\nconst scene = new three__WEBPACK_IMPORTED_MODULE_3__.Scene();\r\n\r\nconst renderer = new three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderer({antialias: true});\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\nrenderer.setAnimationLoop(animation);\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\nconst controls = new three_examples_jsm_controls_OrbitControls__WEBPACK_IMPORTED_MODULE_0__.MapControls( camera, renderer.domElement );\r\n\r\ncontrols.enableDamping = true;\r\ncontrols.dampingFactor = 0.05;\r\n\r\ncontrols.screenSpacePanning = false;\r\n\r\ncontrols.minDistance = 7;\r\ncontrols.maxDistance = 100;\r\n\r\ncontrols.maxPolarAngle = Math.PI / 2;\r\n\r\ncontrols.target.set(0, 0, 0);\r\ncontrols.update();\r\n\r\nlet group = new three__WEBPACK_IMPORTED_MODULE_3__.Group();\r\nlet cellMeshes = [];\r\nlet riverMeshes = [];\r\n\r\nbuildCells();\r\nbuildRivers();\r\n\r\nscene.add(group);\r\n\r\nfunction buildCells() {\r\n    const extrudeSettings = {\r\n        steps: 1,\r\n        depth: 1,\r\n        bevelEnabled: false,\r\n    }\r\n    \r\n    let bounds = {minX: 1000, maxX: 0, minY: 1000, maxY: 0};\r\n    const maxHeight = 6724;\r\n    const heightScale = maxHeight / 2;\r\n\r\n    // peak color: #A71147\r\n    // hill color: #FBF8B0\r\n    // valley color: #69BDA9\r\n    // water: #6B8BBB\r\n\r\n    const peak = new three__WEBPACK_IMPORTED_MODULE_3__.Color(0xA71147);\r\n    const hill = new three__WEBPACK_IMPORTED_MODULE_3__.Color(0xFBF8B0);\r\n    const vall = new three__WEBPACK_IMPORTED_MODULE_3__.Color(0x69BDA9);\r\n    const water = new three__WEBPACK_IMPORTED_MODULE_3__.Color(0x6B8BBB);\r\n    \r\n    // random color variations\r\n    const landVariation = 0.03;\r\n    const waterVariation = 0.04;\r\n\r\n    // const wireframeMaterial = new THREE.MeshBasicMaterial( { color: 0x000000, wireframe: true, transparent: true } );\r\n    const lineMaterial = new three__WEBPACK_IMPORTED_MODULE_3__.LineBasicMaterial( { color: 0xFFFFFF, opacity: 0.2, transparent: true } );\r\n\r\n    for (var i = 0; i < (_cells_geojson__WEBPACK_IMPORTED_MODULE_1___default().features.length); i++) {\r\n        let f = (_cells_geojson__WEBPACK_IMPORTED_MODULE_1___default().features)[i];\r\n        let shape = new three__WEBPACK_IMPORTED_MODULE_3__.Shape();\r\n\r\n        // start at first coordinate\r\n        const coords = f.geometry.coordinates[0];\r\n        const first = coords[0];\r\n        shape.moveTo(first[0], first[1]);\r\n\r\n        // visit rest of coordinates\r\n        for (var j = 1; j < coords.length; j++) {\r\n            const c = coords[j];\r\n            shape.lineTo(c[0], c[1]);\r\n\r\n            // NOTE: last coordinate closes shape on its own\r\n\r\n            // track bounds to center map after\r\n            bounds.minX = Math.min(bounds.minX, c[0]);\r\n            bounds.maxX = Math.max(bounds.maxX, c[0]);\r\n\r\n            bounds.minY = Math.min(bounds.minY, c[1]);\r\n            bounds.maxY = Math.min(bounds.maxY, c[1]);\r\n        }\r\n\r\n        let settings = {\r\n            ...extrudeSettings,\r\n            depth: extrudeSettings.depth + (Math.max(0, f.properties.height) / heightScale),\r\n        }\r\n        // maxHeight = Math.max(maxHeight, f.properties.height);\r\n\r\n        // calculate proper heightmap color\r\n        const percent = f.properties.height / maxHeight;\r\n        let top = hill;\r\n        let bot = vall;\r\n        if (percent > 0.5) {\r\n            top = peak;\r\n            bot = hill;\r\n        }\r\n\r\n        let r;\r\n        if (f.properties.height > 0) {\r\n            // land colors\r\n            r = new three__WEBPACK_IMPORTED_MODULE_3__.Color(\r\n                componentVariation(bot.r + (top.r - bot.r) * percent, landVariation),\r\n                componentVariation(bot.g + (top.g - bot.g) * percent, landVariation),\r\n                componentVariation(bot.b + (top.b - bot.b) * percent, landVariation)\r\n            );\r\n        } else {\r\n            // water colors with random variation\r\n            r = new three__WEBPACK_IMPORTED_MODULE_3__.Color(\r\n                componentVariation(water.r, waterVariation),\r\n                componentVariation(water.g, waterVariation),\r\n                componentVariation(water.b, waterVariation)\r\n            )\r\n        }\r\n        // const r = rgbToHex(i % 256, 255 - (i % 256), 0);\r\n\r\n        // cell geometry\r\n        const mat = new three__WEBPACK_IMPORTED_MODULE_3__.MeshBasicMaterial({color: r});\r\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_3__.ExtrudeGeometry(shape, settings);\r\n\r\n        const cell = new three__WEBPACK_IMPORTED_MODULE_3__.Mesh(geometry, mat);\r\n        group.add(cell);\r\n\r\n        // add border line\r\n        const points = shape.getPoints();\r\n        const geometryPoints = new three__WEBPACK_IMPORTED_MODULE_3__.BufferGeometry().setFromPoints(points);\r\n        //new THREE.LineBasicMaterial( { color: color }\r\n        let wire = new three__WEBPACK_IMPORTED_MODULE_3__.Line(geometryPoints, lineMaterial);\r\n        wire.position.z = settings.depth + 0.01;\r\n        group.add(wire);\r\n\r\n        // add cell reference to array\r\n        cellMeshes.push(cell);\r\n    }\r\n\r\n    // center map position\r\n    group.position.set(-(bounds.minX + bounds.maxX) / 2.0, 0, (bounds.minY + bounds.maxY) / 2.0);\r\n    group.rotation.x = -Math.PI / 2;\r\n}\r\n\r\nfunction buildRivers() {\r\n    for (var i = 0; i < (_rivers_geojson__WEBPACK_IMPORTED_MODULE_2___default().features.length); i++) {\r\n        let f = (_rivers_geojson__WEBPACK_IMPORTED_MODULE_2___default().features)[i];\r\n        const coords = f.geometry.coordinates;\r\n\r\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_3__.BufferGeometry();\r\n\r\n        let vertices = [];\r\n        let normals = [];\r\n\r\n        let p1 = new three__WEBPACK_IMPORTED_MODULE_3__.Vector2();\r\n        let p2 = new three__WEBPACK_IMPORTED_MODULE_3__.Vector2();\r\n        let dir = new three__WEBPACK_IMPORTED_MODULE_3__.Vector2();\r\n        let per = new three__WEBPACK_IMPORTED_MODULE_3__.Vector2();\r\n\r\n        // const startWidth = f.properties.sourceWidth;\r\n        const startWidth = .1;\r\n        const endWidth = startWidth * f.properties.widthFactor;\r\n        console.log('start: ' + startWidth);\r\n        // const endWidth = startWidth * 5;\r\n\r\n        let lastP1, lastP2;\r\n        for (var j = 0; j < coords.length - 1 && j < 4000; j++) {\r\n            const c1 = coords[j];\r\n            const c2 = coords[j + 1];\r\n\r\n            p1.set(c1[0], c1[1]);\r\n            p2.set(c2[0], c2[1]);\r\n\r\n            if (p1.equals(p2)) {\r\n                // points are the same, no triangles to be drawn\r\n                continue;\r\n            }\r\n\r\n            dir = p2.sub(p1);\r\n            per.set(dir.x, -dir.y);\r\n\r\n            // river width scales up to maximum\r\n            const progress = j / coords.length;\r\n            const currentWidth = startWidth + (endWidth - startWidth) * progress;\r\n            per.normalize().multiplyScalar(currentWidth);\r\n\r\n            if (!lastP1 || !lastP2) {\r\n                vertices.push(c1[0] - per.x / 2, c1[1] - per.y / 2, 1.1);\r\n                vertices.push(c1[0] + per.x / 2, c1[1] + per.y / 2, 1.1);\r\n                vertices.push(c2[0] - per.x / 2, c2[1] - per.y / 2, 1.1);\r\n\r\n                vertices.push(c2[0] - per.x / 2, c2[1] - per.y / 2, 1.1);\r\n                vertices.push(c1[0] + per.x / 2, c1[1] + per.y / 2, 1.1);\r\n                vertices.push(c2[0] + per.x / 2, c2[1] + per.y / 2, 1.1);\r\n\r\n                lastP1 = new three__WEBPACK_IMPORTED_MODULE_3__.Vector2(c2[0] - per.x / 2, c2[1] - per.y / 2);\r\n                lastP2 = new three__WEBPACK_IMPORTED_MODULE_3__.Vector2(c2[0] + per.x / 2, c2[1] + per.y / 2);\r\n            } else {\r\n                console.log(lastP1);\r\n                console.log(lastP2);\r\n\r\n                vertices.push(lastP1.x, lastP1.y, 1.1);\r\n                vertices.push(lastP2.x, lastP2.y, 1.1);\r\n                vertices.push(c2[0] - per.x / 2, c2[1] - per.y / 2, 1.1);\r\n\r\n                vertices.push(c2[0] - per.x / 2, c2[1] - per.y / 2, 1.1);\r\n                vertices.push(lastP2.x, lastP2.y, 1.1);\r\n                vertices.push(c2[0] + per.x / 2, c2[1] + per.y / 2, 1.1);\r\n\r\n                lastP1 = new three__WEBPACK_IMPORTED_MODULE_3__.Vector2(c2[0] - per.x / 2, c2[1] - per.y / 2);\r\n                lastP2 = new three__WEBPACK_IMPORTED_MODULE_3__.Vector2(c2[0] + per.x / 2, c2[1] + per.y / 2);\r\n            }\r\n\r\n            \r\n\r\n            normals.push(0, 0, 1);\r\n            normals.push(0, 0, 1);\r\n            normals.push(0, 0, 1);\r\n            normals.push(0, 0, 1);\r\n            normals.push(0, 0, 1);\r\n            normals.push(0, 0, 1);\r\n        }\r\n\r\n        // console.log('vertices length: ' + vertices.length);\r\n        geometry.setAttribute('position', new three__WEBPACK_IMPORTED_MODULE_3__.Float32BufferAttribute(vertices, 3));\r\n        geometry.setAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_3__.Float32BufferAttribute(normals, 3));\r\n\r\n        const riverMaterial = new three__WEBPACK_IMPORTED_MODULE_3__.LineBasicMaterial( { color: 0x6B8BBB } );\r\n        const river = new three__WEBPACK_IMPORTED_MODULE_3__.Line(geometry, riverMaterial);\r\n\r\n        // const riverMaterial = new THREE.MeshBasicMaterial({color: 0x6B8BBB});\r\n        // const river = new THREE.Mesh(geometry, riverMaterial);\r\n\r\n        // const edges = new THREE.EdgesGeometry( geometry );\r\n        // const river = new THREE.LineSegments( edges, new THREE.LineBasicMaterial( { color: 0x000000 } ) );\r\n\r\n        riverMeshes.push(river);\r\n        group.add(river);\r\n\r\n        // TODO: remove\r\n        // break;\r\n    }\r\n}\r\n\r\n// animation\r\nfunction animation(time) {\r\n    // camera.position.y = Math.max(camera.position.y, 0);\r\n    controls.update();\r\n\r\n    renderer.render(scene, camera);\r\n}\r\n\r\n// color helpers\r\nfunction componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n  \r\nfunction rgbToHex(r, g, b) {\r\n    return \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nfunction componentVariation(c, v) {\r\n    return (0,three_src_math_mathutils__WEBPACK_IMPORTED_MODULE_4__.clamp)(c + (Math.random() * v - v / 2), 0, 1);\r\n}\n\n//# sourceURL=webpack://innestra/./src/index.js?");

/***/ }),

/***/ "./node_modules/three/build/three.module.js":
/*!**************************************************!*\
  !*** ./node_modules/three/build/three.module.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ACESFilmicToneMapping\": () => (/* binding */ ACESFilmicToneMapping),\n/* harmony export */   \"AddEquation\": () => (/* binding */ AddEquation),\n/* harmony export */   \"AddOperation\": () => (/* binding */ AddOperation),\n/* harmony export */   \"AdditiveAnimationBlendMode\": () => (/* binding */ AdditiveAnimationBlendMode),\n/* harmony export */   \"AdditiveBlending\": () => (/* binding */ AdditiveBlending),\n/* harmony export */   \"AlphaFormat\": () => (/* binding */ AlphaFormat),\n/* harmony export */   \"AlwaysDepth\": () => (/* binding */ AlwaysDepth),\n/* harmony export */   \"AlwaysStencilFunc\": () => (/* binding */ AlwaysStencilFunc),\n/* harmony export */   \"AmbientLight\": () => (/* binding */ AmbientLight),\n/* harmony export */   \"AmbientLightProbe\": () => (/* binding */ AmbientLightProbe),\n/* harmony export */   \"AnimationClip\": () => (/* binding */ AnimationClip),\n/* harmony export */   \"AnimationLoader\": () => (/* binding */ AnimationLoader),\n/* harmony export */   \"AnimationMixer\": () => (/* binding */ AnimationMixer),\n/* harmony export */   \"AnimationObjectGroup\": () => (/* binding */ AnimationObjectGroup),\n/* harmony export */   \"AnimationUtils\": () => (/* binding */ AnimationUtils),\n/* harmony export */   \"ArcCurve\": () => (/* binding */ ArcCurve),\n/* harmony export */   \"ArrayCamera\": () => (/* binding */ ArrayCamera),\n/* harmony export */   \"ArrowHelper\": () => (/* binding */ ArrowHelper),\n/* harmony export */   \"Audio\": () => (/* binding */ Audio),\n/* harmony export */   \"AudioAnalyser\": () => (/* binding */ AudioAnalyser),\n/* harmony export */   \"AudioContext\": () => (/* binding */ AudioContext),\n/* harmony export */   \"AudioListener\": () => (/* binding */ AudioListener),\n/* harmony export */   \"AudioLoader\": () => (/* binding */ AudioLoader),\n/* harmony export */   \"AxesHelper\": () => (/* binding */ AxesHelper),\n/* harmony export */   \"BackSide\": () => (/* binding */ BackSide),\n/* harmony export */   \"BasicDepthPacking\": () => (/* binding */ BasicDepthPacking),\n/* harmony export */   \"BasicShadowMap\": () => (/* binding */ BasicShadowMap),\n/* harmony export */   \"Bone\": () => (/* binding */ Bone),\n/* harmony export */   \"BooleanKeyframeTrack\": () => (/* binding */ BooleanKeyframeTrack),\n/* harmony export */   \"Box2\": () => (/* binding */ Box2),\n/* harmony export */   \"Box3\": () => (/* binding */ Box3),\n/* harmony export */   \"Box3Helper\": () => (/* binding */ Box3Helper),\n/* harmony export */   \"BoxBufferGeometry\": () => (/* binding */ BoxGeometry),\n/* harmony export */   \"BoxGeometry\": () => (/* binding */ BoxGeometry),\n/* harmony export */   \"BoxHelper\": () => (/* binding */ BoxHelper),\n/* harmony export */   \"BufferAttribute\": () => (/* binding */ BufferAttribute),\n/* harmony export */   \"BufferGeometry\": () => (/* binding */ BufferGeometry),\n/* harmony export */   \"BufferGeometryLoader\": () => (/* binding */ BufferGeometryLoader),\n/* harmony export */   \"ByteType\": () => (/* binding */ ByteType),\n/* harmony export */   \"Cache\": () => (/* binding */ Cache),\n/* harmony export */   \"Camera\": () => (/* binding */ Camera),\n/* harmony export */   \"CameraHelper\": () => (/* binding */ CameraHelper),\n/* harmony export */   \"CanvasTexture\": () => (/* binding */ CanvasTexture),\n/* harmony export */   \"CapsuleBufferGeometry\": () => (/* binding */ CapsuleGeometry),\n/* harmony export */   \"CapsuleGeometry\": () => (/* binding */ CapsuleGeometry),\n/* harmony export */   \"CatmullRomCurve3\": () => (/* binding */ CatmullRomCurve3),\n/* harmony export */   \"CineonToneMapping\": () => (/* binding */ CineonToneMapping),\n/* harmony export */   \"CircleBufferGeometry\": () => (/* binding */ CircleGeometry),\n/* harmony export */   \"CircleGeometry\": () => (/* binding */ CircleGeometry),\n/* harmony export */   \"ClampToEdgeWrapping\": () => (/* binding */ ClampToEdgeWrapping),\n/* harmony export */   \"Clock\": () => (/* binding */ Clock),\n/* harmony export */   \"Color\": () => (/* binding */ Color),\n/* harmony export */   \"ColorKeyframeTrack\": () => (/* binding */ ColorKeyframeTrack),\n/* harmony export */   \"ColorManagement\": () => (/* binding */ ColorManagement),\n/* harmony export */   \"CompressedTexture\": () => (/* binding */ CompressedTexture),\n/* harmony export */   \"CompressedTextureLoader\": () => (/* binding */ CompressedTextureLoader),\n/* harmony export */   \"ConeBufferGeometry\": () => (/* binding */ ConeGeometry),\n/* harmony export */   \"ConeGeometry\": () => (/* binding */ ConeGeometry),\n/* harmony export */   \"CubeCamera\": () => (/* binding */ CubeCamera),\n/* harmony export */   \"CubeReflectionMapping\": () => (/* binding */ CubeReflectionMapping),\n/* harmony export */   \"CubeRefractionMapping\": () => (/* binding */ CubeRefractionMapping),\n/* harmony export */   \"CubeTexture\": () => (/* binding */ CubeTexture),\n/* harmony export */   \"CubeTextureLoader\": () => (/* binding */ CubeTextureLoader),\n/* harmony export */   \"CubeUVReflectionMapping\": () => (/* binding */ CubeUVReflectionMapping),\n/* harmony export */   \"CubicBezierCurve\": () => (/* binding */ CubicBezierCurve),\n/* harmony export */   \"CubicBezierCurve3\": () => (/* binding */ CubicBezierCurve3),\n/* harmony export */   \"CubicInterpolant\": () => (/* binding */ CubicInterpolant),\n/* harmony export */   \"CullFaceBack\": () => (/* binding */ CullFaceBack),\n/* harmony export */   \"CullFaceFront\": () => (/* binding */ CullFaceFront),\n/* harmony export */   \"CullFaceFrontBack\": () => (/* binding */ CullFaceFrontBack),\n/* harmony export */   \"CullFaceNone\": () => (/* binding */ CullFaceNone),\n/* harmony export */   \"Curve\": () => (/* binding */ Curve),\n/* harmony export */   \"CurvePath\": () => (/* binding */ CurvePath),\n/* harmony export */   \"CustomBlending\": () => (/* binding */ CustomBlending),\n/* harmony export */   \"CustomToneMapping\": () => (/* binding */ CustomToneMapping),\n/* harmony export */   \"CylinderBufferGeometry\": () => (/* binding */ CylinderGeometry),\n/* harmony export */   \"CylinderGeometry\": () => (/* binding */ CylinderGeometry),\n/* harmony export */   \"Cylindrical\": () => (/* binding */ Cylindrical),\n/* harmony export */   \"Data3DTexture\": () => (/* binding */ Data3DTexture),\n/* harmony export */   \"DataArrayTexture\": () => (/* binding */ DataArrayTexture),\n/* harmony export */   \"DataTexture\": () => (/* binding */ DataTexture),\n/* harmony export */   \"DataTexture2DArray\": () => (/* binding */ DataTexture2DArray),\n/* harmony export */   \"DataTexture3D\": () => (/* binding */ DataTexture3D),\n/* harmony export */   \"DataTextureLoader\": () => (/* binding */ DataTextureLoader),\n/* harmony export */   \"DataUtils\": () => (/* binding */ DataUtils),\n/* harmony export */   \"DecrementStencilOp\": () => (/* binding */ DecrementStencilOp),\n/* harmony export */   \"DecrementWrapStencilOp\": () => (/* binding */ DecrementWrapStencilOp),\n/* harmony export */   \"DefaultLoadingManager\": () => (/* binding */ DefaultLoadingManager),\n/* harmony export */   \"DepthFormat\": () => (/* binding */ DepthFormat),\n/* harmony export */   \"DepthStencilFormat\": () => (/* binding */ DepthStencilFormat),\n/* harmony export */   \"DepthTexture\": () => (/* binding */ DepthTexture),\n/* harmony export */   \"DirectionalLight\": () => (/* binding */ DirectionalLight),\n/* harmony export */   \"DirectionalLightHelper\": () => (/* binding */ DirectionalLightHelper),\n/* harmony export */   \"DiscreteInterpolant\": () => (/* binding */ DiscreteInterpolant),\n/* harmony export */   \"DodecahedronBufferGeometry\": () => (/* binding */ DodecahedronGeometry),\n/* harmony export */   \"DodecahedronGeometry\": () => (/* binding */ DodecahedronGeometry),\n/* harmony export */   \"DoubleSide\": () => (/* binding */ DoubleSide),\n/* harmony export */   \"DstAlphaFactor\": () => (/* binding */ DstAlphaFactor),\n/* harmony export */   \"DstColorFactor\": () => (/* binding */ DstColorFactor),\n/* harmony export */   \"DynamicCopyUsage\": () => (/* binding */ DynamicCopyUsage),\n/* harmony export */   \"DynamicDrawUsage\": () => (/* binding */ DynamicDrawUsage),\n/* harmony export */   \"DynamicReadUsage\": () => (/* binding */ DynamicReadUsage),\n/* harmony export */   \"EdgesGeometry\": () => (/* binding */ EdgesGeometry),\n/* harmony export */   \"EllipseCurve\": () => (/* binding */ EllipseCurve),\n/* harmony export */   \"EqualDepth\": () => (/* binding */ EqualDepth),\n/* harmony export */   \"EqualStencilFunc\": () => (/* binding */ EqualStencilFunc),\n/* harmony export */   \"EquirectangularReflectionMapping\": () => (/* binding */ EquirectangularReflectionMapping),\n/* harmony export */   \"EquirectangularRefractionMapping\": () => (/* binding */ EquirectangularRefractionMapping),\n/* harmony export */   \"Euler\": () => (/* binding */ Euler),\n/* harmony export */   \"EventDispatcher\": () => (/* binding */ EventDispatcher),\n/* harmony export */   \"ExtrudeBufferGeometry\": () => (/* binding */ ExtrudeGeometry),\n/* harmony export */   \"ExtrudeGeometry\": () => (/* binding */ ExtrudeGeometry),\n/* harmony export */   \"FileLoader\": () => (/* binding */ FileLoader),\n/* harmony export */   \"FlatShading\": () => (/* binding */ FlatShading),\n/* harmony export */   \"Float16BufferAttribute\": () => (/* binding */ Float16BufferAttribute),\n/* harmony export */   \"Float32BufferAttribute\": () => (/* binding */ Float32BufferAttribute),\n/* harmony export */   \"Float64BufferAttribute\": () => (/* binding */ Float64BufferAttribute),\n/* harmony export */   \"FloatType\": () => (/* binding */ FloatType),\n/* harmony export */   \"Fog\": () => (/* binding */ Fog),\n/* harmony export */   \"FogExp2\": () => (/* binding */ FogExp2),\n/* harmony export */   \"Font\": () => (/* binding */ Font),\n/* harmony export */   \"FontLoader\": () => (/* binding */ FontLoader),\n/* harmony export */   \"FramebufferTexture\": () => (/* binding */ FramebufferTexture),\n/* harmony export */   \"FrontSide\": () => (/* binding */ FrontSide),\n/* harmony export */   \"Frustum\": () => (/* binding */ Frustum),\n/* harmony export */   \"GLBufferAttribute\": () => (/* binding */ GLBufferAttribute),\n/* harmony export */   \"GLSL1\": () => (/* binding */ GLSL1),\n/* harmony export */   \"GLSL3\": () => (/* binding */ GLSL3),\n/* harmony export */   \"GreaterDepth\": () => (/* binding */ GreaterDepth),\n/* harmony export */   \"GreaterEqualDepth\": () => (/* binding */ GreaterEqualDepth),\n/* harmony export */   \"GreaterEqualStencilFunc\": () => (/* binding */ GreaterEqualStencilFunc),\n/* harmony export */   \"GreaterStencilFunc\": () => (/* binding */ GreaterStencilFunc),\n/* harmony export */   \"GridHelper\": () => (/* binding */ GridHelper),\n/* harmony export */   \"Group\": () => (/* binding */ Group),\n/* harmony export */   \"HalfFloatType\": () => (/* binding */ HalfFloatType),\n/* harmony export */   \"HemisphereLight\": () => (/* binding */ HemisphereLight),\n/* harmony export */   \"HemisphereLightHelper\": () => (/* binding */ HemisphereLightHelper),\n/* harmony export */   \"HemisphereLightProbe\": () => (/* binding */ HemisphereLightProbe),\n/* harmony export */   \"IcosahedronBufferGeometry\": () => (/* binding */ IcosahedronGeometry),\n/* harmony export */   \"IcosahedronGeometry\": () => (/* binding */ IcosahedronGeometry),\n/* harmony export */   \"ImageBitmapLoader\": () => (/* binding */ ImageBitmapLoader),\n/* harmony export */   \"ImageLoader\": () => (/* binding */ ImageLoader),\n/* harmony export */   \"ImageUtils\": () => (/* binding */ ImageUtils),\n/* harmony export */   \"ImmediateRenderObject\": () => (/* binding */ ImmediateRenderObject),\n/* harmony export */   \"IncrementStencilOp\": () => (/* binding */ IncrementStencilOp),\n/* harmony export */   \"IncrementWrapStencilOp\": () => (/* binding */ IncrementWrapStencilOp),\n/* harmony export */   \"InstancedBufferAttribute\": () => (/* binding */ InstancedBufferAttribute),\n/* harmony export */   \"InstancedBufferGeometry\": () => (/* binding */ InstancedBufferGeometry),\n/* harmony export */   \"InstancedInterleavedBuffer\": () => (/* binding */ InstancedInterleavedBuffer),\n/* harmony export */   \"InstancedMesh\": () => (/* binding */ InstancedMesh),\n/* harmony export */   \"Int16BufferAttribute\": () => (/* binding */ Int16BufferAttribute),\n/* harmony export */   \"Int32BufferAttribute\": () => (/* binding */ Int32BufferAttribute),\n/* harmony export */   \"Int8BufferAttribute\": () => (/* binding */ Int8BufferAttribute),\n/* harmony export */   \"IntType\": () => (/* binding */ IntType),\n/* harmony export */   \"InterleavedBuffer\": () => (/* binding */ InterleavedBuffer),\n/* harmony export */   \"InterleavedBufferAttribute\": () => (/* binding */ InterleavedBufferAttribute),\n/* harmony export */   \"Interpolant\": () => (/* binding */ Interpolant),\n/* harmony export */   \"InterpolateDiscrete\": () => (/* binding */ InterpolateDiscrete),\n/* harmony export */   \"InterpolateLinear\": () => (/* binding */ InterpolateLinear),\n/* harmony export */   \"InterpolateSmooth\": () => (/* binding */ InterpolateSmooth),\n/* harmony export */   \"InvertStencilOp\": () => (/* binding */ InvertStencilOp),\n/* harmony export */   \"KeepStencilOp\": () => (/* binding */ KeepStencilOp),\n/* harmony export */   \"KeyframeTrack\": () => (/* binding */ KeyframeTrack),\n/* harmony export */   \"LOD\": () => (/* binding */ LOD),\n/* harmony export */   \"LatheBufferGeometry\": () => (/* binding */ LatheGeometry),\n/* harmony export */   \"LatheGeometry\": () => (/* binding */ LatheGeometry),\n/* harmony export */   \"Layers\": () => (/* binding */ Layers),\n/* harmony export */   \"LessDepth\": () => (/* binding */ LessDepth),\n/* harmony export */   \"LessEqualDepth\": () => (/* binding */ LessEqualDepth),\n/* harmony export */   \"LessEqualStencilFunc\": () => (/* binding */ LessEqualStencilFunc),\n/* harmony export */   \"LessStencilFunc\": () => (/* binding */ LessStencilFunc),\n/* harmony export */   \"Light\": () => (/* binding */ Light),\n/* harmony export */   \"LightProbe\": () => (/* binding */ LightProbe),\n/* harmony export */   \"Line\": () => (/* binding */ Line),\n/* harmony export */   \"Line3\": () => (/* binding */ Line3),\n/* harmony export */   \"LineBasicMaterial\": () => (/* binding */ LineBasicMaterial),\n/* harmony export */   \"LineCurve\": () => (/* binding */ LineCurve),\n/* harmony export */   \"LineCurve3\": () => (/* binding */ LineCurve3),\n/* harmony export */   \"LineDashedMaterial\": () => (/* binding */ LineDashedMaterial),\n/* harmony export */   \"LineLoop\": () => (/* binding */ LineLoop),\n/* harmony export */   \"LineSegments\": () => (/* binding */ LineSegments),\n/* harmony export */   \"LinearEncoding\": () => (/* binding */ LinearEncoding),\n/* harmony export */   \"LinearFilter\": () => (/* binding */ LinearFilter),\n/* harmony export */   \"LinearInterpolant\": () => (/* binding */ LinearInterpolant),\n/* harmony export */   \"LinearMipMapLinearFilter\": () => (/* binding */ LinearMipMapLinearFilter),\n/* harmony export */   \"LinearMipMapNearestFilter\": () => (/* binding */ LinearMipMapNearestFilter),\n/* harmony export */   \"LinearMipmapLinearFilter\": () => (/* binding */ LinearMipmapLinearFilter),\n/* harmony export */   \"LinearMipmapNearestFilter\": () => (/* binding */ LinearMipmapNearestFilter),\n/* harmony export */   \"LinearSRGBColorSpace\": () => (/* binding */ LinearSRGBColorSpace),\n/* harmony export */   \"LinearToneMapping\": () => (/* binding */ LinearToneMapping),\n/* harmony export */   \"Loader\": () => (/* binding */ Loader),\n/* harmony export */   \"LoaderUtils\": () => (/* binding */ LoaderUtils),\n/* harmony export */   \"LoadingManager\": () => (/* binding */ LoadingManager),\n/* harmony export */   \"LoopOnce\": () => (/* binding */ LoopOnce),\n/* harmony export */   \"LoopPingPong\": () => (/* binding */ LoopPingPong),\n/* harmony export */   \"LoopRepeat\": () => (/* binding */ LoopRepeat),\n/* harmony export */   \"LuminanceAlphaFormat\": () => (/* binding */ LuminanceAlphaFormat),\n/* harmony export */   \"LuminanceFormat\": () => (/* binding */ LuminanceFormat),\n/* harmony export */   \"MOUSE\": () => (/* binding */ MOUSE),\n/* harmony export */   \"Material\": () => (/* binding */ Material),\n/* harmony export */   \"MaterialLoader\": () => (/* binding */ MaterialLoader),\n/* harmony export */   \"MathUtils\": () => (/* binding */ MathUtils),\n/* harmony export */   \"Matrix3\": () => (/* binding */ Matrix3),\n/* harmony export */   \"Matrix4\": () => (/* binding */ Matrix4),\n/* harmony export */   \"MaxEquation\": () => (/* binding */ MaxEquation),\n/* harmony export */   \"Mesh\": () => (/* binding */ Mesh),\n/* harmony export */   \"MeshBasicMaterial\": () => (/* binding */ MeshBasicMaterial),\n/* harmony export */   \"MeshDepthMaterial\": () => (/* binding */ MeshDepthMaterial),\n/* harmony export */   \"MeshDistanceMaterial\": () => (/* binding */ MeshDistanceMaterial),\n/* harmony export */   \"MeshLambertMaterial\": () => (/* binding */ MeshLambertMaterial),\n/* harmony export */   \"MeshMatcapMaterial\": () => (/* binding */ MeshMatcapMaterial),\n/* harmony export */   \"MeshNormalMaterial\": () => (/* binding */ MeshNormalMaterial),\n/* harmony export */   \"MeshPhongMaterial\": () => (/* binding */ MeshPhongMaterial),\n/* harmony export */   \"MeshPhysicalMaterial\": () => (/* binding */ MeshPhysicalMaterial),\n/* harmony export */   \"MeshStandardMaterial\": () => (/* binding */ MeshStandardMaterial),\n/* harmony export */   \"MeshToonMaterial\": () => (/* binding */ MeshToonMaterial),\n/* harmony export */   \"MinEquation\": () => (/* binding */ MinEquation),\n/* harmony export */   \"MirroredRepeatWrapping\": () => (/* binding */ MirroredRepeatWrapping),\n/* harmony export */   \"MixOperation\": () => (/* binding */ MixOperation),\n/* harmony export */   \"MultiplyBlending\": () => (/* binding */ MultiplyBlending),\n/* harmony export */   \"MultiplyOperation\": () => (/* binding */ MultiplyOperation),\n/* harmony export */   \"NearestFilter\": () => (/* binding */ NearestFilter),\n/* harmony export */   \"NearestMipMapLinearFilter\": () => (/* binding */ NearestMipMapLinearFilter),\n/* harmony export */   \"NearestMipMapNearestFilter\": () => (/* binding */ NearestMipMapNearestFilter),\n/* harmony export */   \"NearestMipmapLinearFilter\": () => (/* binding */ NearestMipmapLinearFilter),\n/* harmony export */   \"NearestMipmapNearestFilter\": () => (/* binding */ NearestMipmapNearestFilter),\n/* harmony export */   \"NeverDepth\": () => (/* binding */ NeverDepth),\n/* harmony export */   \"NeverStencilFunc\": () => (/* binding */ NeverStencilFunc),\n/* harmony export */   \"NoBlending\": () => (/* binding */ NoBlending),\n/* harmony export */   \"NoColorSpace\": () => (/* binding */ NoColorSpace),\n/* harmony export */   \"NoToneMapping\": () => (/* binding */ NoToneMapping),\n/* harmony export */   \"NormalAnimationBlendMode\": () => (/* binding */ NormalAnimationBlendMode),\n/* harmony export */   \"NormalBlending\": () => (/* binding */ NormalBlending),\n/* harmony export */   \"NotEqualDepth\": () => (/* binding */ NotEqualDepth),\n/* harmony export */   \"NotEqualStencilFunc\": () => (/* binding */ NotEqualStencilFunc),\n/* harmony export */   \"NumberKeyframeTrack\": () => (/* binding */ NumberKeyframeTrack),\n/* harmony export */   \"Object3D\": () => (/* binding */ Object3D),\n/* harmony export */   \"ObjectLoader\": () => (/* binding */ ObjectLoader),\n/* harmony export */   \"ObjectSpaceNormalMap\": () => (/* binding */ ObjectSpaceNormalMap),\n/* harmony export */   \"OctahedronBufferGeometry\": () => (/* binding */ OctahedronGeometry),\n/* harmony export */   \"OctahedronGeometry\": () => (/* binding */ OctahedronGeometry),\n/* harmony export */   \"OneFactor\": () => (/* binding */ OneFactor),\n/* harmony export */   \"OneMinusDstAlphaFactor\": () => (/* binding */ OneMinusDstAlphaFactor),\n/* harmony export */   \"OneMinusDstColorFactor\": () => (/* binding */ OneMinusDstColorFactor),\n/* harmony export */   \"OneMinusSrcAlphaFactor\": () => (/* binding */ OneMinusSrcAlphaFactor),\n/* harmony export */   \"OneMinusSrcColorFactor\": () => (/* binding */ OneMinusSrcColorFactor),\n/* harmony export */   \"OrthographicCamera\": () => (/* binding */ OrthographicCamera),\n/* harmony export */   \"PCFShadowMap\": () => (/* binding */ PCFShadowMap),\n/* harmony export */   \"PCFSoftShadowMap\": () => (/* binding */ PCFSoftShadowMap),\n/* harmony export */   \"PMREMGenerator\": () => (/* binding */ PMREMGenerator),\n/* harmony export */   \"ParametricGeometry\": () => (/* binding */ ParametricGeometry),\n/* harmony export */   \"Path\": () => (/* binding */ Path),\n/* harmony export */   \"PerspectiveCamera\": () => (/* binding */ PerspectiveCamera),\n/* harmony export */   \"Plane\": () => (/* binding */ Plane),\n/* harmony export */   \"PlaneBufferGeometry\": () => (/* binding */ PlaneGeometry),\n/* harmony export */   \"PlaneGeometry\": () => (/* binding */ PlaneGeometry),\n/* harmony export */   \"PlaneHelper\": () => (/* binding */ PlaneHelper),\n/* harmony export */   \"PointLight\": () => (/* binding */ PointLight),\n/* harmony export */   \"PointLightHelper\": () => (/* binding */ PointLightHelper),\n/* harmony export */   \"Points\": () => (/* binding */ Points),\n/* harmony export */   \"PointsMaterial\": () => (/* binding */ PointsMaterial),\n/* harmony export */   \"PolarGridHelper\": () => (/* binding */ PolarGridHelper),\n/* harmony export */   \"PolyhedronBufferGeometry\": () => (/* binding */ PolyhedronGeometry),\n/* harmony export */   \"PolyhedronGeometry\": () => (/* binding */ PolyhedronGeometry),\n/* harmony export */   \"PositionalAudio\": () => (/* binding */ PositionalAudio),\n/* harmony export */   \"PropertyBinding\": () => (/* binding */ PropertyBinding),\n/* harmony export */   \"PropertyMixer\": () => (/* binding */ PropertyMixer),\n/* harmony export */   \"QuadraticBezierCurve\": () => (/* binding */ QuadraticBezierCurve),\n/* harmony export */   \"QuadraticBezierCurve3\": () => (/* binding */ QuadraticBezierCurve3),\n/* harmony export */   \"Quaternion\": () => (/* binding */ Quaternion),\n/* harmony export */   \"QuaternionKeyframeTrack\": () => (/* binding */ QuaternionKeyframeTrack),\n/* harmony export */   \"QuaternionLinearInterpolant\": () => (/* binding */ QuaternionLinearInterpolant),\n/* harmony export */   \"REVISION\": () => (/* binding */ REVISION),\n/* harmony export */   \"RGBADepthPacking\": () => (/* binding */ RGBADepthPacking),\n/* harmony export */   \"RGBAFormat\": () => (/* binding */ RGBAFormat),\n/* harmony export */   \"RGBAIntegerFormat\": () => (/* binding */ RGBAIntegerFormat),\n/* harmony export */   \"RGBA_ASTC_10x10_Format\": () => (/* binding */ RGBA_ASTC_10x10_Format),\n/* harmony export */   \"RGBA_ASTC_10x5_Format\": () => (/* binding */ RGBA_ASTC_10x5_Format),\n/* harmony export */   \"RGBA_ASTC_10x6_Format\": () => (/* binding */ RGBA_ASTC_10x6_Format),\n/* harmony export */   \"RGBA_ASTC_10x8_Format\": () => (/* binding */ RGBA_ASTC_10x8_Format),\n/* harmony export */   \"RGBA_ASTC_12x10_Format\": () => (/* binding */ RGBA_ASTC_12x10_Format),\n/* harmony export */   \"RGBA_ASTC_12x12_Format\": () => (/* binding */ RGBA_ASTC_12x12_Format),\n/* harmony export */   \"RGBA_ASTC_4x4_Format\": () => (/* binding */ RGBA_ASTC_4x4_Format),\n/* harmony export */   \"RGBA_ASTC_5x4_Format\": () => (/* binding */ RGBA_ASTC_5x4_Format),\n/* harmony export */   \"RGBA_ASTC_5x5_Format\": () => (/* binding */ RGBA_ASTC_5x5_Format),\n/* harmony export */   \"RGBA_ASTC_6x5_Format\": () => (/* binding */ RGBA_ASTC_6x5_Format),\n/* harmony export */   \"RGBA_ASTC_6x6_Format\": () => (/* binding */ RGBA_ASTC_6x6_Format),\n/* harmony export */   \"RGBA_ASTC_8x5_Format\": () => (/* binding */ RGBA_ASTC_8x5_Format),\n/* harmony export */   \"RGBA_ASTC_8x6_Format\": () => (/* binding */ RGBA_ASTC_8x6_Format),\n/* harmony export */   \"RGBA_ASTC_8x8_Format\": () => (/* binding */ RGBA_ASTC_8x8_Format),\n/* harmony export */   \"RGBA_BPTC_Format\": () => (/* binding */ RGBA_BPTC_Format),\n/* harmony export */   \"RGBA_ETC2_EAC_Format\": () => (/* binding */ RGBA_ETC2_EAC_Format),\n/* harmony export */   \"RGBA_PVRTC_2BPPV1_Format\": () => (/* binding */ RGBA_PVRTC_2BPPV1_Format),\n/* harmony export */   \"RGBA_PVRTC_4BPPV1_Format\": () => (/* binding */ RGBA_PVRTC_4BPPV1_Format),\n/* harmony export */   \"RGBA_S3TC_DXT1_Format\": () => (/* binding */ RGBA_S3TC_DXT1_Format),\n/* harmony export */   \"RGBA_S3TC_DXT3_Format\": () => (/* binding */ RGBA_S3TC_DXT3_Format),\n/* harmony export */   \"RGBA_S3TC_DXT5_Format\": () => (/* binding */ RGBA_S3TC_DXT5_Format),\n/* harmony export */   \"RGBFormat\": () => (/* binding */ RGBFormat),\n/* harmony export */   \"RGB_ETC1_Format\": () => (/* binding */ RGB_ETC1_Format),\n/* harmony export */   \"RGB_ETC2_Format\": () => (/* binding */ RGB_ETC2_Format),\n/* harmony export */   \"RGB_PVRTC_2BPPV1_Format\": () => (/* binding */ RGB_PVRTC_2BPPV1_Format),\n/* harmony export */   \"RGB_PVRTC_4BPPV1_Format\": () => (/* binding */ RGB_PVRTC_4BPPV1_Format),\n/* harmony export */   \"RGB_S3TC_DXT1_Format\": () => (/* binding */ RGB_S3TC_DXT1_Format),\n/* harmony export */   \"RGFormat\": () => (/* binding */ RGFormat),\n/* harmony export */   \"RGIntegerFormat\": () => (/* binding */ RGIntegerFormat),\n/* harmony export */   \"RawShaderMaterial\": () => (/* binding */ RawShaderMaterial),\n/* harmony export */   \"Ray\": () => (/* binding */ Ray),\n/* harmony export */   \"Raycaster\": () => (/* binding */ Raycaster),\n/* harmony export */   \"RectAreaLight\": () => (/* binding */ RectAreaLight),\n/* harmony export */   \"RedFormat\": () => (/* binding */ RedFormat),\n/* harmony export */   \"RedIntegerFormat\": () => (/* binding */ RedIntegerFormat),\n/* harmony export */   \"ReinhardToneMapping\": () => (/* binding */ ReinhardToneMapping),\n/* harmony export */   \"RepeatWrapping\": () => (/* binding */ RepeatWrapping),\n/* harmony export */   \"ReplaceStencilOp\": () => (/* binding */ ReplaceStencilOp),\n/* harmony export */   \"ReverseSubtractEquation\": () => (/* binding */ ReverseSubtractEquation),\n/* harmony export */   \"RingBufferGeometry\": () => (/* binding */ RingGeometry),\n/* harmony export */   \"RingGeometry\": () => (/* binding */ RingGeometry),\n/* harmony export */   \"SRGBColorSpace\": () => (/* binding */ SRGBColorSpace),\n/* harmony export */   \"Scene\": () => (/* binding */ Scene),\n/* harmony export */   \"ShaderChunk\": () => (/* binding */ ShaderChunk),\n/* harmony export */   \"ShaderLib\": () => (/* binding */ ShaderLib),\n/* harmony export */   \"ShaderMaterial\": () => (/* binding */ ShaderMaterial),\n/* harmony export */   \"ShadowMaterial\": () => (/* binding */ ShadowMaterial),\n/* harmony export */   \"Shape\": () => (/* binding */ Shape),\n/* harmony export */   \"ShapeBufferGeometry\": () => (/* binding */ ShapeGeometry),\n/* harmony export */   \"ShapeGeometry\": () => (/* binding */ ShapeGeometry),\n/* harmony export */   \"ShapePath\": () => (/* binding */ ShapePath),\n/* harmony export */   \"ShapeUtils\": () => (/* binding */ ShapeUtils),\n/* harmony export */   \"ShortType\": () => (/* binding */ ShortType),\n/* harmony export */   \"Skeleton\": () => (/* binding */ Skeleton),\n/* harmony export */   \"SkeletonHelper\": () => (/* binding */ SkeletonHelper),\n/* harmony export */   \"SkinnedMesh\": () => (/* binding */ SkinnedMesh),\n/* harmony export */   \"SmoothShading\": () => (/* binding */ SmoothShading),\n/* harmony export */   \"Source\": () => (/* binding */ Source),\n/* harmony export */   \"Sphere\": () => (/* binding */ Sphere),\n/* harmony export */   \"SphereBufferGeometry\": () => (/* binding */ SphereGeometry),\n/* harmony export */   \"SphereGeometry\": () => (/* binding */ SphereGeometry),\n/* harmony export */   \"Spherical\": () => (/* binding */ Spherical),\n/* harmony export */   \"SphericalHarmonics3\": () => (/* binding */ SphericalHarmonics3),\n/* harmony export */   \"SplineCurve\": () => (/* binding */ SplineCurve),\n/* harmony export */   \"SpotLight\": () => (/* binding */ SpotLight),\n/* harmony export */   \"SpotLightHelper\": () => (/* binding */ SpotLightHelper),\n/* harmony export */   \"Sprite\": () => (/* binding */ Sprite),\n/* harmony export */   \"SpriteMaterial\": () => (/* binding */ SpriteMaterial),\n/* harmony export */   \"SrcAlphaFactor\": () => (/* binding */ SrcAlphaFactor),\n/* harmony export */   \"SrcAlphaSaturateFactor\": () => (/* binding */ SrcAlphaSaturateFactor),\n/* harmony export */   \"SrcColorFactor\": () => (/* binding */ SrcColorFactor),\n/* harmony export */   \"StaticCopyUsage\": () => (/* binding */ StaticCopyUsage),\n/* harmony export */   \"StaticDrawUsage\": () => (/* binding */ StaticDrawUsage),\n/* harmony export */   \"StaticReadUsage\": () => (/* binding */ StaticReadUsage),\n/* harmony export */   \"StereoCamera\": () => (/* binding */ StereoCamera),\n/* harmony export */   \"StreamCopyUsage\": () => (/* binding */ StreamCopyUsage),\n/* harmony export */   \"StreamDrawUsage\": () => (/* binding */ StreamDrawUsage),\n/* harmony export */   \"StreamReadUsage\": () => (/* binding */ StreamReadUsage),\n/* harmony export */   \"StringKeyframeTrack\": () => (/* binding */ StringKeyframeTrack),\n/* harmony export */   \"SubtractEquation\": () => (/* binding */ SubtractEquation),\n/* harmony export */   \"SubtractiveBlending\": () => (/* binding */ SubtractiveBlending),\n/* harmony export */   \"TOUCH\": () => (/* binding */ TOUCH),\n/* harmony export */   \"TangentSpaceNormalMap\": () => (/* binding */ TangentSpaceNormalMap),\n/* harmony export */   \"TetrahedronBufferGeometry\": () => (/* binding */ TetrahedronGeometry),\n/* harmony export */   \"TetrahedronGeometry\": () => (/* binding */ TetrahedronGeometry),\n/* harmony export */   \"TextGeometry\": () => (/* binding */ TextGeometry),\n/* harmony export */   \"Texture\": () => (/* binding */ Texture),\n/* harmony export */   \"TextureLoader\": () => (/* binding */ TextureLoader),\n/* harmony export */   \"TorusBufferGeometry\": () => (/* binding */ TorusGeometry),\n/* harmony export */   \"TorusGeometry\": () => (/* binding */ TorusGeometry),\n/* harmony export */   \"TorusKnotBufferGeometry\": () => (/* binding */ TorusKnotGeometry),\n/* harmony export */   \"TorusKnotGeometry\": () => (/* binding */ TorusKnotGeometry),\n/* harmony export */   \"Triangle\": () => (/* binding */ Triangle),\n/* harmony export */   \"TriangleFanDrawMode\": () => (/* binding */ TriangleFanDrawMode),\n/* harmony export */   \"TriangleStripDrawMode\": () => (/* binding */ TriangleStripDrawMode),\n/* harmony export */   \"TrianglesDrawMode\": () => (/* binding */ TrianglesDrawMode),\n/* harmony export */   \"TubeBufferGeometry\": () => (/* binding */ TubeGeometry),\n/* harmony export */   \"TubeGeometry\": () => (/* binding */ TubeGeometry),\n/* harmony export */   \"UVMapping\": () => (/* binding */ UVMapping),\n/* harmony export */   \"Uint16BufferAttribute\": () => (/* binding */ Uint16BufferAttribute),\n/* harmony export */   \"Uint32BufferAttribute\": () => (/* binding */ Uint32BufferAttribute),\n/* harmony export */   \"Uint8BufferAttribute\": () => (/* binding */ Uint8BufferAttribute),\n/* harmony export */   \"Uint8ClampedBufferAttribute\": () => (/* binding */ Uint8ClampedBufferAttribute),\n/* harmony export */   \"Uniform\": () => (/* binding */ Uniform),\n/* harmony export */   \"UniformsLib\": () => (/* binding */ UniformsLib),\n/* harmony export */   \"UniformsUtils\": () => (/* binding */ UniformsUtils),\n/* harmony export */   \"UnsignedByteType\": () => (/* binding */ UnsignedByteType),\n/* harmony export */   \"UnsignedInt248Type\": () => (/* binding */ UnsignedInt248Type),\n/* harmony export */   \"UnsignedIntType\": () => (/* binding */ UnsignedIntType),\n/* harmony export */   \"UnsignedShort4444Type\": () => (/* binding */ UnsignedShort4444Type),\n/* harmony export */   \"UnsignedShort5551Type\": () => (/* binding */ UnsignedShort5551Type),\n/* harmony export */   \"UnsignedShortType\": () => (/* binding */ UnsignedShortType),\n/* harmony export */   \"VSMShadowMap\": () => (/* binding */ VSMShadowMap),\n/* harmony export */   \"Vector2\": () => (/* binding */ Vector2),\n/* harmony export */   \"Vector3\": () => (/* binding */ Vector3),\n/* harmony export */   \"Vector4\": () => (/* binding */ Vector4),\n/* harmony export */   \"VectorKeyframeTrack\": () => (/* binding */ VectorKeyframeTrack),\n/* harmony export */   \"VideoTexture\": () => (/* binding */ VideoTexture),\n/* harmony export */   \"WebGL1Renderer\": () => (/* binding */ WebGL1Renderer),\n/* harmony export */   \"WebGL3DRenderTarget\": () => (/* binding */ WebGL3DRenderTarget),\n/* harmony export */   \"WebGLArrayRenderTarget\": () => (/* binding */ WebGLArrayRenderTarget),\n/* harmony export */   \"WebGLCubeRenderTarget\": () => (/* binding */ WebGLCubeRenderTarget),\n/* harmony export */   \"WebGLMultipleRenderTargets\": () => (/* binding */ WebGLMultipleRenderTargets),\n/* harmony export */   \"WebGLMultisampleRenderTarget\": () => (/* binding */ WebGLMultisampleRenderTarget),\n/* harmony export */   \"WebGLRenderTarget\": () => (/* binding */ WebGLRenderTarget),\n/* harmony export */   \"WebGLRenderer\": () => (/* binding */ WebGLRenderer),\n/* harmony export */   \"WebGLUtils\": () => (/* binding */ WebGLUtils),\n/* harmony export */   \"WireframeGeometry\": () => (/* binding */ WireframeGeometry),\n/* harmony export */   \"WrapAroundEnding\": () => (/* binding */ WrapAroundEnding),\n/* harmony export */   \"ZeroCurvatureEnding\": () => (/* binding */ ZeroCurvatureEnding),\n/* harmony export */   \"ZeroFactor\": () => (/* binding */ ZeroFactor),\n/* harmony export */   \"ZeroSlopeEnding\": () => (/* binding */ ZeroSlopeEnding),\n/* harmony export */   \"ZeroStencilOp\": () => (/* binding */ ZeroStencilOp),\n/* harmony export */   \"_SRGBAFormat\": () => (/* binding */ _SRGBAFormat),\n/* harmony export */   \"sRGBEncoding\": () => (/* binding */ sRGBEncoding)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2010-2022 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '141';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize$1( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize$1\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] > 65535 ) return true;\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n// JavaScript RGB-to-RGB transforms, defined as\n// FN[InputColorSpace][OutputColorSpace] callback functions.\nconst FN = {\n\t[ SRGBColorSpace ]: { [ LinearSRGBColorSpace ]: SRGBToLinear },\n\t[ LinearSRGBColorSpace ]: { [ SRGBColorSpace ]: LinearToSRGB },\n};\n\nconst ColorManagement = {\n\n\tlegacyMode: true,\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.legacyMode || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tif ( FN[ sourceColorSpace ] && FN[ sourceColorSpace ][ targetColorSpace ] !== undefined ) {\n\n\t\t\tconst fn = FN[ sourceColorSpace ][ targetColorSpace ];\n\n\t\t\tcolor.r = fn( color.r );\n\t\t\tcolor.g = fn( color.g );\n\t\t\tcolor.b = fn( color.b );\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported color space conversion.' );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _rgb = { r: 0, g: 0, b: 0 };\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction toComponents( source, target ) {\n\n\ttarget.r = source.r;\n\ttarget.g = source.g;\n\ttarget.b = source.b;\n\n\treturn target;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\treturn clamp( _rgb.r * 255, 0, 255 ) << 16 ^ clamp( _rgb.g * 255, 0, 255 ) << 8 ^ clamp( _rgb.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tconst r = _rgb.r, g = _rgb.g, b = _rgb.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = LinearSRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\ttarget.r = _rgb.r;\n\t\ttarget.g = _rgb.g;\n\t\ttarget.b = _rgb.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( toComponents( this, _rgb ), colorSpace );\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ _rgb.r } ${ _rgb.g } ${ _rgb.b })`;\n\n\t\t}\n\n\t\treturn `rgb(${( _rgb.r * 255 ) | 0},${( _rgb.g * 255 ) | 0},${( _rgb.b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, depth ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width, height, count, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t if ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\n\n\n\t\t} else {\n\n\t\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\t}\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n\t// @deprecated since r138, 02cf0df1cb4575d5842fef9c85bb5a89fe020d53\n\n\ttoVector3() {\n\n\t\tconsole.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\n\n\t}\n\n}\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatibility if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\t// @deprecated since r131, f5803c62cc4a29d90744e9dc7811d086e354c1d8\n\n\tget vertexTangents() {\n\n\t\tconsole.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n\t\treturn false;\n\n\t}\n\n\tset vertexTangents( value ) {\n\n\t\tconsole.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\n\n\t}\n\n}\n\nMaterial.fromType = function ( /*type*/ ) {\n\n\t// TODO: Behavior added in Materials.js\n\n\treturn null;\n\n};\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t return new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\t// geometry generator parameters\n\n\t\tif ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\nvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = mix(F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence);\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\nconst mat3 XYZ_TO_REC709 = mat3(\\n    3.2404542, -0.9692660,  0.0556434,\\n   -1.5371385,  1.8760108, -0.2040259,\\n   -0.4985314,  0.0415560,  1.0572252\\n);\\nvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n   vec3 sqrtF0 = sqrt( fresnel0 );\\n   return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n}\\nvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n   return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n}\\nfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n   return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n}\\nvec3 evalSensitivity( float OPD, vec3 shift ) {\\n   float phase = 2.0 * PI * OPD * 1.0e-9;\\n   vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n   vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n   vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n   vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( -pow2( phase ) * var );\\n   xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[0] ) * exp( -4.5282e+09 * pow2( phase ) );\\n   xyz /= 1.0685e-7;\\n   vec3 srgb = XYZ_TO_REC709 * xyz;\\n   return srgb;\\n}\\nvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n   vec3 I;\\n   float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n   float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n   float cosTheta2Sq = 1.0 - sinTheta2Sq;\\n   if ( cosTheta2Sq < 0.0 ) {\\n       return vec3( 1.0 );\\n   }\\n   float cosTheta2 = sqrt( cosTheta2Sq );\\n   float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n   float R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n   float R21 = R12;\\n   float T121 = 1.0 - R12;\\n   float phi12 = 0.0;\\n   if ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n   float phi21 = PI - phi12;\\n   vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );   vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n   vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n   vec3 phi23 = vec3( 0.0 );\\n   if ( baseIOR[0] < iridescenceIOR ) phi23[0] = PI;\\n   if ( baseIOR[1] < iridescenceIOR ) phi23[1] = PI;\\n   if ( baseIOR[2] < iridescenceIOR ) phi23[2] = PI;\\n   float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n   vec3 phi = vec3( phi21 ) + phi23;\\n   vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n   vec3 r123 = sqrt( R123 );\\n   vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n   vec3 C0 = R12 + Rs;\\n   I = C0;\\n   vec3 Cm = Rs - T121;\\n   for ( int m = 1; m <= 2; ++m ) {\\n       Cm *= r123;\\n       vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n       I += Cm * Sm;\\n   }\\n   return max( I, vec3( 0.0 ) );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\nfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\nif ( material.iridescenceThickness == 0.0 ) {\\n\\tmaterial.iridescence = 0.0;\\n} else {\\n\\tmaterial.iridescence = saturate( material.iridescence );\\n}\\nif ( material.iridescence > 0.0 ) {\\n\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\\n\\t#endif\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$g,\n\tbackground_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 } // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction denormalize( morph, attribute ) {\n\n\tlet denominator = 1;\n\tconst array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\n\n\tif ( array instanceof Int8Array ) denominator = 127;\n\telse if ( array instanceof Int16Array ) denominator = 32767;\n\telse if ( array instanceof Int32Array ) denominator = 2147483647;\n\telse console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\n\n\tmorph.divideScalar( denominator );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tif ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tif ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tif ( morphColor.normalized === true ) denormalize( morph, morphColor );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyArrayTexture = new DataArrayTexture();\nconst empty3dTexture = new Data3DTexture();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\n\t\tif ( cache.has( material ) === false ) {\n\n\t\t\tcache.set( material, new Set() );\n\n\t\t}\n\n\t\treturn cache.get( material );\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\n\t\tif ( cache.has( code ) === false ) {\n\n\t\t\tconst stage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn cache.get( code );\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 33 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 23 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, physicallyCorrectLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t}\n\n\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) ||\n\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t( material.alphaMap && material.alphaTest > 0 ) ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( source.__currentVersion === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\tif ( source.version !== source.__currentVersion || forceUpload === true ) {\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( source.__currentVersion === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsource.__currentVersion = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else {\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn 6408;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: ( renderer.outputEncoding === sRGBEncoding ) ? 35907 : 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\t// Set foveation to maximum.\n\t\t\t\tthis.setFoveation( 1.0 );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign controllers to available inputSources\n\n\t\t\tfor ( let i = 0; i < inputSources.length; i ++ ) {\n\n\t\t\t\tconst index = inputSources[ i ].handedness === 'right' ? 1 : 0;\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ index ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.position.copy( cameraVR.position );\n\t\t\tcamera.quaternion.copy( cameraVR.quaternion );\n\t\t\tcamera.scale.copy( cameraVR.scale );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\treturn glProjLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\treturn glBaseLayer.fixedFoveation;\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( foveation ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = foveation;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = inputSources[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.physicallyCorrectLights !== true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t//\n\n\tObject.defineProperties( this, {\n\n\t\t// @deprecated since r136, 0e21088102b4de7e0a0a33140620b7a3424b9e6d\n\n\t\tgammaFactor: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\t\t\t\treturn 2;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector2 = new Vector2();\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.physicallyCorrectLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t} else {\n\n\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tif ( typeof normalized === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, - 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = new Vector3();\nconst _v1$1 = new Vector3();\nconst _normal = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCapsuleBufferGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = 0.0;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst materialLib = {\n\tShadowMaterial,\n\tSpriteMaterial,\n\tRawShaderMaterial,\n\tShaderMaterial,\n\tPointsMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMeshPhongMaterial,\n\tMeshToonMaterial,\n\tMeshNormalMaterial,\n\tMeshLambertMaterial,\n\tMeshDepthMaterial,\n\tMeshDistanceMaterial,\n\tMeshBasicMaterial,\n\tMeshMatcapMaterial,\n\tLineDashedMaterial,\n\tLineBasicMaterial,\n\tMaterial\n};\n\nMaterial.fromType = function ( type ) {\n\n\treturn new materialLib[ type ]();\n\n};\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow Error( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}` );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = Material.fromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: The legacy Geometry type is no longer supported.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = /*@__PURE__*/ new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nclass DataUtils {\n\n\t// float32 to float16\n\n\tstatic toHalfFloat( val ) {\n\n\t\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\t\tval = clamp( val, - 65504, 65504 );\n\n\t\t_floatView[ 0 ] = val;\n\t\tconst f = _uint32View[ 0 ];\n\t\tconst e = ( f >> 23 ) & 0x1ff;\n\t\treturn _baseTable[ e ] + ( ( f & 0x007fffff ) >> _shiftTable[ e ] );\n\n\t}\n\n\t// float16 to float32\n\n\tstatic fromHalfFloat( val ) {\n\n\t\tconst m = val >> 10;\n\t\t_uint32View[ 0 ] = _mantissaTable[ _offsetTable[ m ] + ( val & 0x3ff ) ] + _exponentTable[ m ];\n\t\treturn _floatView[ 0 ];\n\n\t}\n\n}\n\n// float32 to float16 helpers\n\nconst _buffer = new ArrayBuffer( 4 );\nconst _floatView = new Float32Array( _buffer );\nconst _uint32View = new Uint32Array( _buffer );\n\nconst _baseTable = new Uint32Array( 512 );\nconst _shiftTable = new Uint32Array( 512 );\n\nfor ( let i = 0; i < 256; ++ i ) {\n\n\tconst e = i - 127;\n\n\t// very small number (0, -0)\n\n\tif ( e < - 27 ) {\n\n\t\t_baseTable[ i ] = 0x0000;\n\t\t_baseTable[ i | 0x100 ] = 0x8000;\n\t\t_shiftTable[ i ] = 24;\n\t\t_shiftTable[ i | 0x100 ] = 24;\n\n\t\t// small number (denorm)\n\n\t} else if ( e < - 14 ) {\n\n\t\t_baseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t_baseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t_shiftTable[ i ] = - e - 1;\n\t\t_shiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t// normal number\n\n\t} else if ( e <= 15 ) {\n\n\t\t_baseTable[ i ] = ( e + 15 ) << 10;\n\t\t_baseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t_shiftTable[ i ] = 13;\n\t\t_shiftTable[ i | 0x100 ] = 13;\n\n\t\t// large number (Infinity, -Infinity)\n\n\t} else if ( e < 128 ) {\n\n\t\t_baseTable[ i ] = 0x7c00;\n\t\t_baseTable[ i | 0x100 ] = 0xfc00;\n\t\t_shiftTable[ i ] = 24;\n\t\t_shiftTable[ i | 0x100 ] = 24;\n\n\t\t// stay (NaN, Infinity, -Infinity)\n\n\t} else {\n\n\t\t_baseTable[ i ] = 0x7c00;\n\t\t_baseTable[ i | 0x100 ] = 0xfc00;\n\t\t_shiftTable[ i ] = 13;\n\t\t_shiftTable[ i | 0x100 ] = 13;\n\n\t}\n\n}\n\n// float16 to float32 helpers\n\nconst _mantissaTable = new Uint32Array( 2048 );\nconst _exponentTable = new Uint32Array( 64 );\nconst _offsetTable = new Uint32Array( 64 );\n\nfor ( let i = 1; i < 1024; ++ i ) {\n\n\tlet m = i << 13; // zero pad mantissa bits\n\tlet e = 0; // zero exponent\n\n\t// normalized\n\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\tm <<= 1;\n\t\te -= 0x00800000; // decrement exponent\n\n\t}\n\n\tm &= ~ 0x00800000; // clear leading 1 bit\n\te += 0x38800000; // adjust bias\n\n\t_mantissaTable[ i ] = m | e;\n\n}\n\nfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t_mantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n}\n\nfor ( let i = 1; i < 31; ++ i ) {\n\n\t_exponentTable[ i ] = i << 23;\n\n}\n\n_exponentTable[ 31 ] = 0x47800000;\n_exponentTable[ 32 ] = 0x80000000;\nfor ( let i = 33; i < 63; ++ i ) {\n\n\t_exponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n}\n\n_exponentTable[ 63 ] = 0xc7800000;\n\nfor ( let i = 1; i < 64; ++ i ) {\n\n\tif ( i !== 32 ) {\n\n\t\t_offsetTable[ i ] = 1024;\n\n\t}\n\n}\n\n// r133, c5bb5434555a3c3ddd784944a0a124f996fc721b\n\nclass ParametricGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nclass TextGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tconsole.error( 'THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js' );\n\t\tsuper();\n\n\t}\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nfunction FontLoader() {\n\n\tconsole.error( 'THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\n// r133, eb58ff153119090d3bbb24474ea0ffc40c70dc92\n\nfunction Font() {\n\n\tconsole.error( 'THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js' );\n\n}\n\n// r134, d65e0af06644fe5a84a6fc0e372f4318f95a04c0\n\nfunction ImmediateRenderObject() {\n\n\tconsole.error( 'THREE.ImmediateRenderObject has been removed.' );\n\n}\n\n// r138, 48b05d3500acc084df50be9b4c90781ad9b8cb17\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tconsole.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\n\t\tsuper( width, height, options );\n\t\tthis.samples = 4;\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture2DArray extends DataArrayTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\n// r138, f9cd9cab03b7b64244e304900a3a2eeaa3a588ce\n\nclass DataTexture3D extends Data3DTexture {\n\n\tconstructor( data, width, height, depth ) {\n\n\t\tconsole.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\n\t\tsuper( data, width, height, depth );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\n\n\n\n//# sourceURL=webpack://innestra/./node_modules/three/build/three.module.js?");

/***/ }),

/***/ "./node_modules/three/examples/jsm/controls/OrbitControls.js":
/*!*******************************************************************!*\
  !*** ./node_modules/three/examples/jsm/controls/OrbitControls.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MapControls\": () => (/* binding */ MapControls),\n/* harmony export */   \"OrbitControls\": () => (/* binding */ OrbitControls)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE, MIDDLE: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY, RIGHT: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE, TWO: three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion().setFromUnitVectors( object.up, new three__WEBPACK_IMPORTED_MODULE_0__.Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\t\t\tconst lastQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new three__WEBPACK_IMPORTED_MODULE_0__.Spherical();\n\t\tconst sphericalDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst rotateEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst rotateDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\n\t\tconst panStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst panEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst panDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\n\t\tconst dollyStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst dollyEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst dollyDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN;\n\t\tthis.touches.TWO = three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\n\n\n\n//# sourceURL=webpack://innestra/./node_modules/three/examples/jsm/controls/OrbitControls.js?");

/***/ }),

/***/ "./node_modules/three/src/math/mathutils.js":
/*!**************************************************!*\
  !*** ./node_modules/three/src/math/mathutils.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEG2RAD\": () => (/* binding */ DEG2RAD),\n/* harmony export */   \"RAD2DEG\": () => (/* binding */ RAD2DEG),\n/* harmony export */   \"ceilPowerOfTwo\": () => (/* binding */ ceilPowerOfTwo),\n/* harmony export */   \"clamp\": () => (/* binding */ clamp),\n/* harmony export */   \"damp\": () => (/* binding */ damp),\n/* harmony export */   \"degToRad\": () => (/* binding */ degToRad),\n/* harmony export */   \"denormalize\": () => (/* binding */ denormalize),\n/* harmony export */   \"euclideanModulo\": () => (/* binding */ euclideanModulo),\n/* harmony export */   \"floorPowerOfTwo\": () => (/* binding */ floorPowerOfTwo),\n/* harmony export */   \"generateUUID\": () => (/* binding */ generateUUID),\n/* harmony export */   \"inverseLerp\": () => (/* binding */ inverseLerp),\n/* harmony export */   \"isPowerOfTwo\": () => (/* binding */ isPowerOfTwo),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"mapLinear\": () => (/* binding */ mapLinear),\n/* harmony export */   \"normalize\": () => (/* binding */ normalize),\n/* harmony export */   \"pingpong\": () => (/* binding */ pingpong),\n/* harmony export */   \"radToDeg\": () => (/* binding */ radToDeg),\n/* harmony export */   \"randFloat\": () => (/* binding */ randFloat),\n/* harmony export */   \"randFloatSpread\": () => (/* binding */ randFloatSpread),\n/* harmony export */   \"randInt\": () => (/* binding */ randInt),\n/* harmony export */   \"seededRandom\": () => (/* binding */ seededRandom),\n/* harmony export */   \"setQuaternionFromProperEuler\": () => (/* binding */ setQuaternionFromProperEuler),\n/* harmony export */   \"smootherstep\": () => (/* binding */ smootherstep),\n/* harmony export */   \"smoothstep\": () => (/* binding */ smoothstep)\n/* harmony export */ });\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\n\n\n\n\n\n//# sourceURL=webpack://innestra/./node_modules/three/src/math/mathutils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;